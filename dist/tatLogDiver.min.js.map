{"version":3,"sources":["webpack:///tatLogDiver.min.js","webpack:///webpack/bootstrap 3807bfb294e1c3ddde6e","webpack:///./src/util/util.js","webpack:///./src/tatLogDiver/tatLogDiver-Graph.js","webpack:///./src/tatLogDiver/tatLogDiver-HJN.js","webpack:///./src/tatLogDiver/tatLogDiver-Init.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./src/timeSeries/timeSeries-Tat.js","webpack:///./src/timeSeries/timeSeries-MappedETat.js","webpack:///./src/timeSeries/timeSeries-ETat.js","webpack:///./src/timeSeries/timeSeries-Cash.js","webpack:///./src/simulator/simulator-VirtualSystem.js","webpack:///./src/tatLogDiver/tatLogDiver-MenuConfigDetailGraph.js","webpack:///./src/tatLogDiver/tatLogDiver.js","webpack:///./libs/dygraph.css?0b95","webpack:///./libs/dygraph.css","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/tatLogDiver/tatLogDiver.css?871f","webpack:///./src/tatLogDiver/tatLogDiver.css","webpack:///./src/util/util-TouchPanel.js","webpack:///./src/util/util-string.js","webpack:///./src/util/util-Random.js","webpack:///./src/util/util-setZeroTimeout.js","webpack:///./src/util/util-Logger.js","webpack:///./src/util/util-copyToClipboard.js","webpack:///./src/util/util-binarySearch.js","webpack:///./src/util/util-Heap.js","webpack:///./src/util/util-Element.js","webpack:///./src/util/config/util-Config.js","webpack:///./src/timeSeries/timeSeries-FileParser.js","webpack:///./src/timeSeries/timeSeries-MenuConfigFile.js","webpack:///./src/simulator/simulator-VirtualApp.js","webpack:///./src/simulator/simulator-VirtualResource.js","webpack:///./src/simulator/simulator-VirtualSystemByJson.js","webpack:///./src/simulator/simulator-MenuConfig.js","webpack:///./src/tatLogDiver/tatLogDiver-Menu.js","webpack:///./src/timeSeries/timeSeries-MenuConfigFilter.js","webpack:///./src/tatLogDiver/tatLogDiver-Copyright.js","webpack:///./src/tatLogDiver/tatLogDiver-Plot.js","webpack:///./src/tatLogDiver/tatLogDiver-Usage.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__util_TouchPanel_js__","__WEBPACK_IMPORTED_MODULE_1__util_string_js__","__WEBPACK_IMPORTED_MODULE_2__util_Random_js__","__WEBPACK_IMPORTED_MODULE_4__util_setZeroTimeout_js__","__WEBPACK_IMPORTED_MODULE_5__util_Logger_js__","__WEBPACK_IMPORTED_MODULE_6__util_copyToClipboard_js__","__WEBPACK_IMPORTED_MODULE_7__util_binarySearch_js__","__WEBPACK_IMPORTED_MODULE_8__util_Heap_js__","__WEBPACK_IMPORTED_MODULE_9__util_Element_js__","__WEBPACK_IMPORTED_MODULE_10__config_config_js__","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Uint8Array","indexOf","target","index","undefined","last","this","slice","begin","end","subarray","Array","findIndex","predicate","TypeError","value","list","length","thisArg","arguments","find","Graph","chartIdName","globalName","config","seriesSet","isMain","SERIESES","HJN","Tat","CONC","N","process","visiblity","renderer","CTPS","ETPS","STAT","ETAT","EMPS","EAPS","height","isVisiblity","fileParser","__WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__","windowId","document","getElementById","menuId","menuPlaceOnId","chartId","dyData","dySeries","scale","graph","cTpsUnit","UNIT_CTPS","labels","j","key","order","color","attr","seriesConfig","strokeWidth","drawPoints","connectSeparatedPoints","stepPlot","fillGraph","axis","push","__WEBPACK_IMPORTED_MODULE_0__util_util_js__","__WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Menu_js__","__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_Init_js__","DrawCallback","g","is_initial","setText","id","val","onchange","syncMode","Filter","getValueByKey","chart","chartD","xAxisRange","yAxisRange","toPrecision","init","that","serieses","divLegend","formName","htmlText","ckBox","innerHTML","destroy","window","addEventListener","resize","bind","resizes","getElementsByClassName","onClickSetVisibility","ck","elements","checked","setVisibility","dWidth","parentNode","clientWidth","width","innerWidth","style","Math","floor","innerHeight","setSeriesSet","tat","getSeriesSet","getCTpsUnit","forEach","e","update","xAxisLabelFormatter","gran","opts","isTop","format","diffTime","yAxisLabelFormatter","range","yAxisRanges","diff","ceil","days","time","drawHighlightPointCallback","ctx","cx","cy","r","idx","drawTatLine","x","y","heigth","tXs","toDomXCoord","tXe","tY","toDomYCoord","drawLine","drawPoint","plots","lineDashSegments","beginPath","lineWidth","lineCap","strokeStyle","setLineDash","moveTo","lineTo","stroke","fillStyle","arc","PI","fill","text","round","replace","textAlign","fillText","rawData_","eTat","sTat","eTatIdx","getRecordAsText","tatMap","trans","search","clearRect","canvas","setIndexByName_","highlightCallback","pts","row","seriesName","hoverXY","pointClickCallback","event","annotation","Plot","PointClickCallback","annotationClickHandler","annotationDblClickHandler","PointDblClickCallback","xy","minX","cols","updateOptions","file","resetZoom","xRangeMin","MIN_VALUE","xRangeMax","MAX_VALUE","xRangeUnit","DetailGraph","getConfig","detailRangePlus","detailRangeMinus","detailRangeUnit","detailDateTime","CYCLE","dt","xVal","firstRow","xyData","yVal","some","lastRow","ShowLogText","visibility","inputs","Dygraph","title","titleHeight","legend","showLabelsOnHighlight","labelsSeparateLines","axes","axisLabelFormatter","axisLabelWidth","independentTicks","logscale","y2","drawGrid","gridLinePattern","includeZero","axisLineColor","gridLineColor","pointSize","ylabel","y2label","highlightCircleSize","drawCallback","highlightSeriesOpts","series","labelsKMB","interactionModel","mousedown","defaultInteractionModel","willDestroyContextMyself","dblclick","animatedZooms","DispatchEventTouchToMouse","canvas_","canvas_ctx_","showBalloon","cTps","ann","xval","shortText","anns","ctps","maxX","List","label","tpsPlot","ready","setAnnotations","legendFormatter","data","getStyle","html","Date","xHTML","isVisible","yHTML","labelHTML","isHighlighted","menuOpenCsv","evt","file_list","files","FileReader","menuSaveConfig","fileName","save","HJN.Plot.List","HJN.Config.File","Config","File","__config","HJN.Config.Filter","json","JSON","stringify","menuDownloadBlob","menuBuffToBlob","menuLoadConfig","funcOnloadend","isSameType","sample","obj","toString","readyState","DONE","filesArrayBuffer","result","buf","String","fromCharCode","apply","alert","jsonObj","parse","conf","_config_File","confD","tmpPlots","Render","ShowBalloon","size","msg","ShowText","reader","onloadend","readAsArrayBuffer","console","error","menuFilterApply","ChartShow","eTatOriginal","menuFilterReset","reset","menuSimulatorSimulate","ResetTimestamp","menuSimulatorEditor","divSimulator","divSimulatorEditor","clientHeight","menuDownloadImg","getElementsByTagName","dataurl","toDataURL","bin","atob","split","buffer","charCodeAt","blob","Blob","type","menuDownloadCsv","bom","csv","join","menuDownloadLog","pos","eTatCsv","separator","message","sort","a","b","maxSize","reduce","byteLength","buff","offset","set","fileIdx","min","len","buff2","menuDownloadConc","plot","radio","arrayBuffer","navigator","msSaveBlob","msSaveOrOpenBlob","href","URL","createObjectURL","addIcon_ZoomReset","divChart","idName","input","div","parentElement","removeChild","createElement","insertBefore","firstChild","__WEBPACK_IMPORTED_MODULE_1__simulator_VirtualApp_js__","__WEBPACK_IMPORTED_MODULE_2__simulator_VirtualResource_js__","__WEBPACK_IMPORTED_MODULE_3__simulator_VirtualSystemByJson_js__","__WEBPACK_IMPORTED_MODULE_4__simulator_MenuConfig_js__","__WEBPACK_IMPORTED_MODULE_0__timeSeries_Tat_js__","__WEBPACK_IMPORTED_MODULE_1__timeSeries_ETat_js__","__WEBPACK_IMPORTED_MODULE_2__timeSeries_FileParser_js__","__WEBPACK_IMPORTED_MODULE_3__timeSeries_MenuConfigFile_js__","__WEBPACK_IMPORTED_MODULE_4__timeSeries_MenuConfigFilter_js__","__WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_Tat_js__","chartName","timer","setValueByKey","Init","__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__","__WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Copyright_js__","Version","html_chart","body","html_nav","ResetStyle","dropFieldName","ShowLogTextInit","__WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__","__WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__","__WEBPACK_IMPORTED_MODULE_8__tatLogDiver_MenuConfigDetailGraph_js__","__WEBPACK_IMPORTED_MODULE_6__tatLogDiver_Graph_js__","DropField","GetConfig","getFunctionByKey","enableDraggableClass","CreateSampleTatLogAndChartShow","jsonText","GetJsonConfig","Execute","showLogForUpperGraph","showLogForLowerGraph","__WEBPACK_IMPORTED_MODULE_5__tatLogDiver_Usage_js__","isInit","SetStyles","bottom","left","top","createFilter","filter","ChartRegistDetail","synchronize","selection","zoom","element","preventDefault","data_transfer","dataTransfer","types","filesIdx","textArray","isNewETAT","getTatLogArray","concat","date","isError","getterOfLine","createGetterOfLine","getterOfXY","createGetterOfXY","line","next","isEoF","ByInterval","array","sTatIdx","err","lastModifiedDate","toLocaleString","maxY","maxYIdx","unit","cTpsIdx","conc","SetDetailDateTime","GetSliderRangedEtat","Add","rangeTagPlus","rangeTagMinus","rangeTagUnit","rangeCycle","eTatDetail","sliceByRangeUnit","ShowDialog","iHtml","w","h","createDialog","Usage","TopHtml","Copyright","getAboutText","cssWithMappingToString","item","useSourceMap","content","cssMapping","btoa","sourceMapping","toComment","sources","map","source","sourceRoot","sourceMap","unescape","encodeURIComponent","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","base","css","media","part","insertStyleElement","getElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","appendChild","before","removeStyleElement","splice","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","el","keys","setAttribute","remove","transform","singleton","styleIndex","singletonCounter","applyToSingletonTag","revokeObjectURL","updateLink","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","oldSrc","isOldIE","fn","memo","all","selector","styleTarget","HTMLIFrameElement","contentDocument","head","querySelector","DEBUG","newList","mayRemove","textStore","replacement","Boolean","createSeries","__WEBPACK_IMPORTED_MODULE_2__timeSeries_ETat_js__","tpsN","detailN","toSeriesArray","eTps","eMps","eAps","floorTime","t","cycle","dFrom","dTo","num","maxTat","aveTmp","concTmp","concNum","del","XSec","YMax","YNext","cTpsUnits","concTerm","getElementsByName","lastChild","max","MappedETat","_tatMap","MappedArray","_getKey","_abscissa","_conf","ms","step","_row","start","term","rowLv","e2","from","to","cap","_map","_arr","abscissa","eTatArr","boxNum","k","arr","getKey","isMappedMap","valueOf","_createMappedMappedArray","_createMappedArray","mKey","has","keyValue","indexes","idxArr","lastIndexOf","ETat","__WEBPACK_IMPORTED_MODULE_0__timeSeries_MappedETat_js__","cash","__WEBPACK_IMPORTED_MODULE_1__timeSeries_Cash_js__","rangeUnit","TimeSeries","getRangedCash","setRangedCash","Cash","_cash","_ranges","_size","_arg2arr","args","getCash","lastTime","count","setCash","cashVal","__WEBPACK_IMPORTED_MODULE_0__simulator_js__","__WEBPACK_IMPORTED_MODULE_1__util_util_js__","VirtualSystem","resourcesJson","log","_resources","_log","_start","_end","_simulator","getTime","_now","thread","timeout","q","qWait","debug","setClients","userName","model","baseModel","getModel","holds","tatMin","sequence","times","thinkTimeMin","thinkTime","vApp","exponential","setEvent","removeEvent","execute","events","pop","_finish","getResouce","note","hold","free","resources","tran","holding","reverse","MenuConfigDetailGraph","func_D","clearTimeout","setTimeout","rangePlus","rangeMinus","__WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__","number","startTag","option","def","endTag","__WEBPACK_IMPORTED_MODULE_0__libs_dygraph_css__","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_css__","__WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Init_js__","eve","hmr","locals","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","trim","$1","test","newUrl","__WEBPACK_IMPORTED_MODULE_0__util_js__","TouchPanel","average","_average","detectDeviceType","_deviceType","changedTouches","removeEventListener","isTouchableDevice","isStopTouch","touchHandler","ev","__TOUCH_TYPES","touchstart","touchmove","touchend","__TOUCH_INPUTS","INPUT","TEXTAREA","SELECT","OPTION","textarea","select","bSame","__ajqmeclk","touches","oEv","getAttribute","tagName","touch","tmpClientX","clientX","tmpClientY","clientY","startTouch","abs","newEvent","createEvent","initMouseEvent","screenX","screenY","dispatchEvent","stopImmediatePropagation","stopPropagation","DateToString","S2D","D2S","N2S","S2N","str","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","YYYY","parseInt","substr","MM","DD","hh","mm","sec","ss","ppp","match","NaN","ds","isLocal","minus","ret","datetime","getTimezoneOffset","Intl","NumberFormat","sub","eval","Random","uniform","random","poisson","lambda","xp","exp","global","handleMessage","messageName","timeouts","shift","postMessage","attachEvent","Logger","mode","_mode","_logText","_timestamp","_logtime","ts","isSameline","lastTimestamp","iHtmlBody","ShowIHtmlBody","elementId","copyToClipboard","innerText","copy2Clipboard","userAgent","editable","contentEditable","readOnly","createRange","selectNodeContents","getSelection","removeAllRanges","addRange","setSelectionRange","execCommand","func","low","high","isEqual","middle","valMiddle","tmp","Heap","delFunc","_func","node","_delFunc","_heap","_upHeap","_downHeap","_del","_deletable","_deleteMap","Element","_element","_wrapper","position","setStyles","background","pointer-events","elementMove","dragStart","draggingMove","dragEndMove","elementUpper","draggingUpper","dragEndUpper","elementBottom","draggingBottom","dragEndBottom","elementLeft","draggingLeft","dragEndLeft","elementRight","draggingRight","dragEndRight","elementUpperLeft","draggingUpperLeft","dragEndUpperLeft","elementUpperRight","draggingUpperRight","dragEndUpperRight","elementBottomLeft","draggingBottomLeft","dragEndBottomLeft","elementBottomRight","draggingBottomRight","dragEndBottomRight","dragging","posX","posY","dragEnd","styleD","pageX","pageY","grandparent","offsetLeft","offsetTop","defaultView","getComputedStyle","marginLeft","getPropertyValue","marginTop","hjnDrag","classList","add","isPassive","isSupportsPassive","passive","supportsPassive","opt","handler","multiply","drag","makeMoveable","makeResizable","children","border","z-index","makeRemovable","htmlFor","right","addHandleElement","cursor","className","__WEBPACK_IMPORTED_MODULE_0__util_Config_js__","prefix","ol","_globalName","globalConfig","_prefix","_pre","_ols","_ole","_html","_nameHtml","_name","_onFunctions","__keyConfig","on","funcId","getFunctionById","cKey","keyConfig","getObjctById","getFunction","setFunction","getHtml","nDown","nUp","attribute","labeledForm","typedAttribute","pLabel","sLabel","check","cssClass","classStr","reverseList","reverseVal","_tag","getKeyConfig","getOptionKey","onFunc","_keyConf","v","fieldId","Util","setSelector","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__","FileParser","GetterOfLine","maxLength","confLF","confF_TIME_FROM","confF_TIME_TO","confF_TIME","isNaN","confF_TAT_FROM","confF_TAT_TO","confF_TAT","confF_TEXT","confF_TEXT_LEN","confF_TEXT_POS","confF_TEXT_COL","confF_TEXT_REG","RegExp","confF_IS","confF_SEP","_isIn","colPos","GetterOfXY","confSEP","confTIME_COL","confTIME_POS","confTIME_LEN","confTIME_FORM","confTIME_YMD","paseDateConf","isYMD","confTIME_UNIT","confTAT_COL","confTAT_POS","confTAT_LEN","confTAT_FORM","confTAT_UNIT","confENDIAN","isLittle","ArrayBuffer","DataView","setUint32","Uint32Array","dateAndValue","parseNumber","pm","pow","_parseLong","getUint32","reduceRight","posMax","sep","nextPos","arrX","strX","arrY","strY","history","timeStr","sequenceIdx","status","sequenceTime","MenuConfigFile","VirtualApp","_userName","_sequence","_times","_thinkTime","_thinkTimeMin","_baseMessage","_message","_history","_startTime","_sequenceTime","_sequenceIdx","logger","logLv","isLog","resource","highText","errCode","_holdHeap","_holdingQty","user","resourceText","_waitHeap","logText","modify","deleted","startTime","addHistory","getAmount","system","seq","tatAdd","setSequenceTime","abend","holdedResource","logID","logMesseage","isHolding","abendTime","release","holdings","forceTime","now","nextTime","VirtualResource","holdCapacity","waitCapacity","queueWait","_system","_waitTimeout","_waitCapacity","_holdTimeout","_holdCapacity","_isScheduled","_interval","queuedTime","app","apps","holdTimeoutTime","nextWaitTimeout","nextHoldTimeout","amount","vApps","marginQty","addQty","__WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__","virtualSystemByJson","vSys","models","clients","cStart","cEnd","MenuConfig","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Init_js__","func_S_SIMU_000","func_S_SIMU_001","Menu","getAccordionTag","labelText","isChecked","getInputTag","arg","menuLabel","getATag","preLabel","funcName","getFuncTag","getAlertTag","strFuncName","dialogId","divMenuId","divMenu","accordion","_id","Simulator","jsonEditor","__WEBPACK_IMPORTED_MODULE_1__simulator_simulator_js__","chartDownloadUl","chartViewUl","menuHelpUsage","menuHelpAbout","MenuConfigFilter","func_F_SYNC_UPPER","func_F_SYNC_DETAIL","url","getGitHubHTML","getJSDocHTML","getHtmlHTML","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__","point","yval","valueArray","optionKey","adjustPlotToY","toX","maxTime","concMax","rangePlusTag","rangeMinusTag","rangeUnitTag","divCheckedPlots","CheckBox","CheckRadio"],"mappings":"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","file":"tatLogDiver.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 14);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_TouchPanel_js__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_string_js__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_Random_js__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_addEventListener_js__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_setZeroTimeout_js__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_Logger_js__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_copyToClipboard_js__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__util_binarySearch_js__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__util_Heap_js__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__util_Element_js__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__config_config_js__ = __webpack_require__(30);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_0__util_TouchPanel_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_2__util_Random_js__[\"a\"]; });\n/* unused harmony reexport addEventListener */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return __WEBPACK_IMPORTED_MODULE_4__util_setZeroTimeout_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_5__util_Logger_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return __WEBPACK_IMPORTED_MODULE_6__util_copyToClipboard_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __WEBPACK_IMPORTED_MODULE_7__util_binarySearch_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_8__util_Heap_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_9__util_Element_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_10__config_config_js__[\"a\"]; });\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @namespace Util */\r\n\r\n\r\n\r\n/** ie11 互換用 * */\r\nif(!Number.MAX_SAFE_INTEGER) Number.MAX_SAFE_INTEGER = 9007199254740991; // #59\r\nif(!Number.MIN_SAFE_INTEGER) Number.MIN_SAFE_INTEGER = -9007199254740991;\r\n\r\nif(!Uint8Array.prototype.indexOf){\r\n    Uint8Array.prototype.indexOf = function(target,index){\r\n        index = (index === undefined) ? 0 : index;  // #29\r\n        for(var i = index, last = index + 4096; i < last; i++){ // 暫定：1レコード4KBまでチェック\r\n            if(this[i] === target) return i; \r\n        }\r\n        return -1;\r\n    };\r\n}\r\nif (!Uint8Array.prototype.slice) {  // #29\r\n    Uint8Array.prototype.slice = function(begin, end) {\r\n        return this.subarray(begin, end);\r\n    };\r\n}\r\n// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\r\nif (!Array.prototype.findIndex) {\r\n    Array.prototype.findIndex = function(predicate) {\r\n      if (this === null) throw new TypeError('Array.prototype.findIndex called on null or undefined');\r\n      if (typeof predicate !== 'function') throw new TypeError('predicate must be a function');\r\n      var list = Object(this), length = list.length >>> 0, thisArg = arguments[1], value;\r\n      for (var i = 0; i < length; i++) {\r\n        value = list[i];\r\n        if (predicate.call(thisArg, value, i, list)) return i;\r\n      }\r\n      return -1;\r\n    };\r\n  }\r\n// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\nif (!Array.prototype.find) {\r\n    Array.prototype.find = function(predicate) {\r\n      if (this === null) throw new TypeError('Array.prototype.find called on null or undefined');\r\n      if (typeof predicate !== 'function')  throw new TypeError('predicate must be a function');\r\n      var list = Object(this), length = list.length >>> 0, thisArg = arguments[1], value;\r\n      for (var i = 0; i < length; i++) {\r\n        value = list[i];\r\n        if (predicate.call(thisArg, value, i, list))  return value;\r\n      }\r\n      return undefined;\r\n    };\r\n  }\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Graph;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__simulator_simulator_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Menu_js__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_Init_js__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__ = __webpack_require__(3);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* ******1*********2*********3*********4*********5*********6*********7****** */\r\n\r\n/**\r\n * インスタンス内の定数を設定する。併せて性能対策として頻繁に使うDOM要素を取り込む\r\n *\r\n * @memberof tatLogDiver\r\n * @class Graph\r\n * @classdesc TAT(Turnaround time)ログ分析用グラフ\r\n * @param {string}\r\n *            chartIdName グラフを作成するHTML要素のID\r\n * @param {string}\r\n *            [globalName=\"HJN.chartD\"] グラフのID\r\n * @param {Object}\r\n *            [config] グラフの設定\r\n * @example HJN.chart = new HJN(chartName, \"HJN.chart\"); HJN.chart.init();\r\n *          HJN.chartD = new HJN(chartName + \"Detail\", \"HJN.chartD\");\r\n *          HJN.chartD.init();\r\n */\r\nfunction Graph(chartIdName, globalName, config) {\r\n    /* メンバ変数 */\r\n    this.seriesSet = [];\r\n    this.chartIdName = chartIdName; // arg0 \"chart\",\"chartD\"\r\n    this.globalName = globalName || \"HJN.chartD\"; // arg1\r\n    if (!config) { // arg2\r\n        var isMain = (globalName === \"HJN.chart\") ? true : false;\r\n        config = {\r\n            SERIESES: [ \r\n                { n: HJN.Tat.CONC.N, process: !isMain, visiblity: !isMain, renderer: 'area' },\r\n                { n: HJN.Tat.CTPS.N, process: true,    visiblity: true,    renderer: isMain ? 'scatterplot' : 'bar' },\r\n                { n: HJN.Tat.ETPS.N, process: true,    visiblity: isMain,  renderer: 'line' },\r\n                { n: HJN.Tat.STAT.N, process: !isMain, visiblity: !isMain, renderer: 'scatterplot' },\r\n                { n: HJN.Tat.ETAT.N, process: !isMain, visiblity: !isMain, renderer: 'scatterplot' },\r\n                { n: HJN.Tat.EMPS.N, process: true,    visiblity: true,    renderer: 'line' }, \r\n                { n: HJN.Tat.EAPS.N, process: true,    visiblity: isMain,  renderer: 'line' } ],\r\n            height : 0.40,\r\n            isVisiblity : true\r\n        };\r\n    }\r\n\r\n    // File.Parserを設定する\r\n    this.fileParser = __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"b\" /* FileParser */](); // #24\r\n   \r\n    // グラフ定義領域の宣言\r\n    this.windowId = document.getElementById(\"hjn_chart\");\r\n    this.menuId = document.getElementById(\"hjnBoxBuger\");\r\n    this.menuPlaceOnId = document.getElementById(\"hjnBoxPlaceOn\");\r\n    this.chartId = document.getElementById(this.chartIdName);\r\n    this.dyData = [];\r\n    this.dySeries = {};\r\n\r\n    this.scale = [ null, null ];\r\n    this.graph = null;\r\n    this.cTpsUnit = __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"e\" /* Tat */].UNIT_CTPS[0]; // #75\r\n\r\n    // グラフの設定(処理対象データの設定のみ this.SERIESES[] に取り込む）\r\n    this.SERIESES = [];\r\n    this.labels = [ 'Date' ];\r\n    for (var i = 0, j = 0; i < config.SERIESES.length; i++) {\r\n        if (config.SERIESES[i].process === true) {\r\n            this.SERIESES[j] = {\r\n                key : '',\r\n                name : '',\r\n                visiblity : false,\r\n                renderer : '',\r\n                order : 0,\r\n                scale : 0,\r\n                color : ''\r\n            };\r\n            // 定数(HJN.Tat.seriesConfig)指定項目を設定する\r\n            for ( var attr in HJN.Tat.seriesConfig[i]) {\r\n                this.SERIESES[j][attr] = HJN.Tat.seriesConfig[i][attr];\r\n            }\r\n            // 引数(config)指定項目を設定する\r\n            this.SERIESES[j].visiblity = config.SERIESES[i].visiblity;\r\n            this.SERIESES[j].renderer = config.SERIESES[i].renderer;\r\n\r\n            var renderer = config.SERIESES[i].renderer;\r\n            if (renderer === 'scatterplot') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    drawPoints : true\r\n                };\r\n            } else if (renderer === 'line') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 2.0,\r\n                    connectSeparatedPoints : true,\r\n                    stepPlot : true\r\n                };\r\n            } else if (renderer === 'area') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    stepPlot : true,\r\n                    fillGraph : true\r\n                };\r\n            } else { // if (renderer === 'bar' ) {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    connectSeparatedPoints : true,\r\n                    stepPlot : true,\r\n                    fillGraph : true\r\n                };\r\n            }\r\n            this.dySeries[this.SERIESES[j].key].color = this.SERIESES[j].color;\r\n\r\n            if (this.SERIESES[j].scale === 1) {\r\n                this.dySeries[this.SERIESES[j].key].axis = 'y2';\r\n            }\r\n\r\n            this.labels.push(this.SERIESES[j].key);\r\n            j++;\r\n        }\r\n    }\r\n\r\n    this.height = config.height;\r\n    this.isVisiblity = config.isVisiblity;\r\n};\r\n\r\n/**\r\n * クラス定数\r\n */\r\n// Graph.prototype = {};\r\n\r\n/**\r\n * クラスメソッド：menuのFilterのｘｙ幅指定エリアにグラフのｘｙ幅を設定する<br>\r\n * dygraphのdrawCallbackに設定する関数<br>\r\n * menuのRadio(F_SYNC)選択時に呼び出す関数（このためにクラスメソッド）\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.DrawCallback = function (g, is_initial) { // #50 #51\r\n    // 初期表示時は、メニューを設定しない\r\n    if (is_initial)\r\n        return;\r\n    // Filterメニューで指定されている F_SYNC の状態を取得する\r\n    var syncMode = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].Filter.getValueByKey(\"F_SYNC\"); // #59\r\n    // \"F_SYNC_UPPER\"かつ上段グラフ もしくは、\"F_SYNC_DETAIL\"かつ下段グラフのとき処理する\r\n    if ((syncMode === \"F_SYNC_UPPER\" && g.HJN === HJN.chart)\r\n            || (syncMode === \"F_SYNC_DETAIL\" && g.HJN === HJN.chartD)) {\r\n        // ｘ軸の幅をFilterメニューフェールドに反映する\r\n        setText(\"Filter.F_TIME_FROM\", __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](g.xAxisRange()[0],\r\n                \"yyyy/MM/dd hh:mm:ss.ppp\", true));\r\n        setText(\"Filter.F_TIME_TO\", __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](g.xAxisRange()[1],\r\n                \"yyyy/MM/dd hh:mm:ss.ppp\", true));\r\n        // ｙ軸(右)の幅をFilterメニューフェールドに反映する\r\n        setText(\"Filter.F_TAT_FROM\", +(g.yAxisRange(1)[0].toPrecision(4)));\r\n        setText(\"Filter.F_TAT_TO\", +(g.yAxisRange(1)[1].toPrecision(4)));\r\n    }\r\n\r\n    function setText(id, val) {\r\n        document.getElementById(id).value = val;\r\n        document.getElementById(id).onchange();\r\n    }\r\n};\r\n\r\n/**\r\n * グラフを初期化する\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.init = function () {\r\n    // メニューを作成する\r\n    Object(__WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Menu_js__[\"a\" /* default */])(this);\r\n    // 凡例を作成する\r\n    if (this.isVisiblity)\r\n        addLegend(this);\r\n    // 既にグラフがあるときは削除する\r\n    if (this.graph) {\r\n        this.graph.HJN = null; // （注：循環参照対策\r\n        this.graph.destroy();\r\n    }\r\n    // ウィンドウ枠に合わせて描画領域をリサイズするイベントを登録し、リサイズする\r\n    window.addEventListener(\"resize\", this.resize.bind(this));\r\n    // tablet回転時も、リサイズする #22\r\n    window.addEventListener(\"orientationchange\", this.resize.bind(this));\r\n    var resizes = document.getElementsByClassName(\"hjnResize\");\r\n    for (var i = 0; i < resizes.length; i++) {\r\n        resizes[i].addEventListener(\"change\", this.resize.bind(this)); // メニュ－の開閉\r\n        // #31\r\n    }\r\n\r\n    // legendを追加する（内部関数）\r\n    function addLegend(that) { // arg0 : this\r\n        var chartIdName = that.chartIdName;\r\n        var serieses = that.SERIESES;\r\n        var divLegend = document.getElementById(chartIdName + \"_legend\");\r\n        var formName = chartIdName + \"_LegendForm\";\r\n        var htmlText = '<form name=\"' + formName + '\">';\r\n        for (var i = 0; i < serieses.length; i++) {\r\n            var ckBox = serieses[i].visiblity ? 'checked=\"checked\"' : '';\r\n            htmlText += '<label class=\"legend\" style=\"background:'\r\n                        + serieses[i].color + ';\">' \r\n                    + '<input type=\"checkbox\" '\r\n                        + 'name=\"' + serieses[i].key + '\"' + 'onclick=\"'\r\n                        + that.globalName + '.onClickSetVisibility(' + i + ');\" '\r\n                        + ckBox + '>' \r\n                    + serieses[i].name \r\n                    + '</label><BR>';\r\n        }\r\n        htmlText += '</form>';\r\n        divLegend.innerHTML = htmlText;\r\n    }\r\n};\r\n\r\n/**\r\n * legendの表示指定をグラフに反映する(onclick呼出用）\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {index}\r\n *            i seriesSet配列の設定変更するグラフのインデックス\r\n */\r\nGraph.prototype.onClickSetVisibility = function (i) { //\r\n    var formName = this.chartIdName + \"_LegendForm\";\r\n    var ck = document[formName].elements[i].checked;\r\n    this.graph.setVisibility(i, ck);\r\n};\r\n\r\n/**\r\n * ウィンドウ枠に合わせて描画領域をリサイズする（dygraphは幅は自動、高さは指定）\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.resize = function () {\r\n    // 幅（メニューの状態に合わせて計算） #31\r\n    var dWidth = 0;\r\n    if (this.menuId.checked && !this.menuPlaceOnId.checked) {\r\n        dWidth = this.menuId.parentNode.clientWidth;\r\n    }\r\n    var width = window.innerWidth - dWidth;\r\n    this.windowId.style.width = width + \"px\";\r\n    // 高さ（ウィンドウサイズの比率(this.height)をかけて算出）\r\n    var height = Math.floor(window.innerHeight * this.height);\r\n    this.chartId.style.height = height + \"px\";\r\n\r\n    if (this.graph)\r\n        this.graph.resize(width, height);\r\n    return height;\r\n};\r\n\r\n/**\r\n * seriesSetを取り込む\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Obcjet}\r\n *            [tat] 応答時間(Turnaround time)の時系列データ管理クラス\r\n * @param {array}\r\n *            [seriesSet] tat内の応答時間の時系列データ管理配列\r\n */\r\nGraph.prototype.setSeriesSet = function (tat, seriesSet) { // #30\r\n    if(tat) {\r\n        this.seriesSet = tat.getSeriesSet();\r\n        this.cTpsUnit = tat.getCTpsUnit(); // #75\r\n    }\r\n    if(seriesSet){\r\n        this.seriesSet = seriesSet;\r\n    }\r\n    HJN.Tat.seriesConfig.forEach(function (e) {\r\n        this[e.key] = this.seriesSet[e.N];\r\n    }, this);\r\n};\r\n\r\n\r\n/**\r\n * データを変更し描画する\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {seriesSet}\r\n *            seriesSet dygraph用時系列データ配列\r\n * @param {Integer}\r\n *            n 選択されたグラフのseriesSet配列位置\r\n */\r\nGraph.prototype.update = function (seriesSet, n) {\r\n    // 指定データがあるとき取り込む\r\n    if (seriesSet) this.setSeriesSet(undefined, seriesSet);\r\n    // dygraph用表示データを作成する\r\n    var xy = [[{x:0,y:0}],[{x:0,y:0}],[{x:0,y:0}],[{x:0,y:0}]], // グラフデータの一覧（グラフ１本が配列要素）\r\n        idx = [], // グラフデータの処理中配列位置を保有する配列\r\n        x = [], // グラフデータの処理中配列のｘ(時刻)の値を保有する配列\r\n        row = [], // dygraph１レコードワーク配列：（[x,y0,y1...]の配列）の一レコード分を保持する配列\r\n        minX = 0,\r\n        i = 0; // グラフ番号用ワーク\r\n    // 表示対象データがないとき空データのdygraphを表示する #72\r\n    if (this.seriesSet.length === 0) {\r\n        var cols = [0]; // 日時（ミリ秒）\r\n        for (i = 0; i < this.SERIESES.length; i++) cols[i+1] = null;\r\n        this.dyData = [cols];\r\n        if (this.graph) {\r\n            // 既にグラフがあるときはデータのみ変更する（注：ここでdestroy()すると下段のpointClickCallback時にエラー）\r\n            this.graph.updateOptions( {\r\n                file : this.dyData\r\n            } );\r\n            this.graph.resetZoom(); // #51\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    // xy[] に処理対象seriesを指定する\r\n    for (i = 0; i < this.SERIESES.length; i++) {\r\n        xy[i] = this.seriesSet[this.SERIESES[i].N];\r\n        idx[i] = 0;\r\n    }\r\n    // dygraph表示時間帯を設定する（上段グラフは全期間が処理対象）\r\n    var xRangeMin = Number.MIN_VALUE;\r\n    var xRangeMax = Number.MAX_VALUE;\r\n    var xRangeUnit = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getConfig(\"D_UNIT\"); // #61\r\n    if (HJN.chartD === this) { // 詳細（下段グラフ）のとき画面で指定された期間を設定する // ミリ秒\r\n        var detailRangePlus = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getConfig(\"D_RANGE_PLUS\"); // #27\r\n        var detailRangeMinus = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getConfig(\"D_RANGE_MINUS\");\r\n        var detailRangeUnit = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getConfig(\"D_UNIT\");\r\n        var detailDateTime = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getConfig(\"D_TIME\");\r\n        if ((n === HJN.Tat.ETPS.N || n === HJN.Tat.EMPS.N || n === HJN.Tat.EAPS.N)  // #57\r\n                && xRangeUnit < __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE){ // #61\r\n            var dt = Math.floor(detailDateTime / __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE) * __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE;\r\n            xRangeMin = dt - detailRangeMinus * detailRangeUnit;\r\n            xRangeMax = dt + detailRangePlus * detailRangeUnit;\r\n        } else { // undefined, HJN.Tat.CTPS.N, HJN.Tat.CONC.N,\r\n                    // HJN.Tat.STAT.N, HJN.Tat.ETAT.N\r\n            var dt = Math.floor(detailDateTime / xRangeUnit) * xRangeUnit; // #61\r\n            xRangeMin = dt - detailRangeMinus * detailRangeUnit; // #48\r\n            xRangeMax = dt + detailRangePlus * detailRangeUnit; // #48\r\n        }\r\n    }\r\n\r\n    // dygraph用arrayを空にする\r\n    this.dyData = [];\r\n\r\n    // 指定範囲の先頭が秒単位の端数のとき、dygraph用arrayに、先頭ワークデータを登録する #3\r\n    var xVal = Math.floor(xRangeMin / 1000) * 1000;\r\n    if (Number.MIN_VALUE < xRangeMin && xRangeMin !== xVal) { // 範囲指定（＝下段）\r\n        var firstRow = [ xRangeMin ]; // 先頭はx（時刻）\r\n        xy.forEach(function (xyData, i) {\r\n            // 秒間最大値系のyは最大値or０を、他はnullを設定する\r\n            var yVal = null;\r\n            if (this.SERIESES[i].key === HJN.Tat.CTPS.key) {\r\n                // 始端時刻を含む秒の値（最大値）を、始端時刻にセットする\r\n                var j = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"l\" /* binarySearch */](xVal, xyData, function (e) {\r\n                    return e.x;\r\n                });\r\n                yVal = (0 <= j) ? xyData[j].y : 0;\r\n            }\r\n            firstRow.push(yVal);\r\n        }, this);\r\n        this.dyData.push(firstRow);\r\n    }\r\n\r\n    // dygraph用arrayに表示データを登録する\r\n    while (xy.some(function (e, i) {\r\n        return (idx[i] < e.length);\r\n    })) {\r\n        // dygraph１レコードワーク配列 を空にする\r\n        row = [];\r\n        // dygraph１レコードワーク配列 の先頭に、次に追加するｘ（時刻＝各ｘｙ処理位置が持つｘの最小値）を設定する\r\n        xy.forEach(function (e, i) {\r\n            x[i] = (idx[i] < e.length) ? e[idx[i]].x : Number.MAX_VALUE;\r\n        });\r\n        minX = x[0]; // minX = Math.min.apply(null, x);\r\n        for (i = 1; i < x.length; i++) {\r\n            if (x[i] < minX)\r\n                minX = x[i];\r\n        }\r\n        row.push(minX); // ミリ秒\r\n        // dygraph１レコードワーク配列 の２番目以降に、各ｘｙのｘを設定する\r\n        xy.forEach(function (e, i) {\r\n            if (e.length <= idx[i]) {\r\n                row.push(null); // 末尾を過ぎたｘｙのyはnull\r\n            } else if (e[idx[i]].x === minX) {\r\n                // ｘｙのｘ(e[idx[i]].x)が、出力するｘ(minX)と同じとき、ｙを設定し、ｘｙの処理位置(idx[i])を次に進める\r\n                row.push(e[idx[i]].y);\r\n                idx[i]++;\r\n            } else {\r\n                row.push(null); // xと ｘｙのｘが異なる場合 null\r\n            }\r\n        });\r\n        // dygraph用arrayに、編集したdygraph１レコードワーク配列 を登録する\r\n        if (xRangeMin <= minX && minX <= xRangeMax) {\r\n            this.dyData.push(row);\r\n        }\r\n    }\r\n    // 指定範囲の先頭が秒単位の端数のとき、dygraph用arrayに、末尾ワークデータを登録する #3\r\n    if (xRangeMax < Number.MAX_VALUE && // 範囲指定（＝下段）\r\n    xRangeMax !== Math.floor(xRangeMax / 1000) * 1000) {\r\n        var lastRow = [ xRangeMax ]; // 先頭はx（時刻）\r\n        xy.forEach(function (e, i) { // 秒間最大値系のyは始端：最大値、終端：０を、他はnullを設定\r\n            lastRow.push((this.SERIESES[i].key === HJN.Tat.CTPS.key) ? 0 : null);\r\n        }, this);\r\n        this.dyData.push(lastRow);\r\n    }\r\n\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[7:dygraph data created] \"\r\n            + this.dyData.length + \" rows\", \"calc\");\r\n\r\n    // グラフの設定\r\n    var visibility = [];\r\n    if (this.isVisiblity) {\r\n        // visiblity指定できるとき画面の表示指定を取り込む\r\n        var inputs = document[this.chartIdName + \"_LegendForm\"];\r\n        for (i = 0; i < this.SERIESES.length; i++) {\r\n            visibility.push(inputs[this.SERIESES[i].key].checked);\r\n        }\r\n    } else {\r\n        // visiblity指定できないとき、デフォルト設定を取り込む\r\n        for (i = 0; i < this.SERIESES.length; i++) {\r\n            visibility.push(this.SERIESES[i].visiblity);\r\n        }\r\n    }\r\n\r\n    // グラフの作成\r\n    if (this.graph) {\r\n        // 既にグラフがあるときはデータのみ変更する（注：ここでdestroy()すると下段のpointClickCallback時にエラー）\r\n        this.graph.updateOptions( {\r\n            file : this.dyData\r\n        } );\r\n        this.graph.resetZoom(); // #51\r\n    } else {\r\n        // グラフが無いときは新規作成する\r\n        this.graph = new Dygraph(this.chartId, this.dyData, {\r\n            height : this.resize(),\r\n            labels : this.labels,\r\n            title : this === HJN.chart ? '' : '', // タイトル\r\n            titleHeight : 10, // タイトルの高さ＆フォントサイズ（デフォルト18px)\r\n            legend : 'always', // 'follow', //\r\n            showLabelsOnHighlight : false, // 効果不明\r\n            // labelsDiv : document.getElementById(HJN.chartName + 'Labels'), //\r\n            // ラベル表示先の変更\r\n            labelsSeparateLines : false,\r\n            // legendFormatter: this.legendFormatter, // コメントアウトでlegendが非表示\r\n            axes : {  // 軸の設定\r\n                x : { // X軸の設定\r\n                    axisLabelFormatter : xAxisLabelFormatter, // ラベル表示文字列編集関数\r\n                    axisLabelWidth : 100        // X軸ラベルの表示幅（幅が不足すると文字が切れる）\r\n                },\r\n                y : { // Y2（左）軸の設定\r\n                    independentTicks : true,    // 目盛合わせ（falseはY2軸に合わせる）\r\n                    axisLabelWidth : 40,        // ラベル表示幅\r\n                    // axisLineColor : 'rgb(0,0,0)',// 軸の色\r\n                    // axisLabelFontSize : 14, // ラベルのフォントサイズ(デフォルト:14)\r\n                    logscale : false            // 対数軸\r\n                },\r\n                y2 : { // Y2（右）軸の設定\r\n                    axisLabelFormatter : yAxisLabelFormatter, // ラベル表示文字列編集関数\r\n                    independentTicks : true,    // 目盛合わせ（falseはY1軸に合わせる）\r\n                    axisLabelWidth : 65,        // ラベル表示幅\r\n                    drawGrid : true,            // 横罫線\r\n                    gridLinePattern : [ 1, 2 ], // 罫線形状（破線）\r\n                    logscale : false            // 対数軸\r\n                }\r\n            },\r\n            includeZero : true,\r\n            // axisLabelFontSize: 10,\r\n            axisLineColor : 'rgba(0, 0, 0, 0.2)',\r\n            gridLineColor : 'rgba(0, 0, 0, 0.2)',\r\n            strokeWidth : 2,\r\n            pointSize : 3,\r\n            ylabel: 'Number of transactions',\r\n            y2label : 'Sec', // this === HJN.chart ? '' : 'Sec',\r\n            // rollPeriod: 7,\r\n            // errorBars: true,\r\n            // showRangeSelector: true\r\n            // drawPointCallback: drawPointCallback,\r\n            drawHighlightPointCallback : drawHighlightPointCallback,\r\n            highlightCircleSize : 3,\r\n            highlightCallback : highlightCallback,\r\n            pointClickCallback : pointClickCallback,\r\n            annotationClickHandler : annotationClickHandler,\r\n            annotationDblClickHandler : annotationDblClickHandler,\r\n            // clickCallback: clickCallback,\r\n            drawCallback : Graph.DrawCallback, // #50 #51\r\n            highlightSeriesOpts : {\r\n            // strokeWidth: 3,\r\n            // strokeBorderWidth: 1,\r\n            // highlightCircleSize: 5\r\n            },\r\n            series : this.dySeries,\r\n            labelsKMB : true,\r\n            visibility : visibility,\r\n            interactionModel: { // #22\r\n                mousedown: Dygraph.defaultInteractionModel.mousedown,\r\n                willDestroyContextMyself: true,\r\n                // touchstart: function(){}, 空functionと未登録は同じ効果\r\n                // touchmove: function(){},\r\n                // touchend: function(){},\r\n                dblclick: Dygraph.defaultInteractionModel.dblclick\r\n            },\r\n            animatedZooms : true, // ズームするときのアニメーション有無（デフォルト:false）\r\n            connectSeparatedPoints : true\r\n        });\r\n        // dygraphイベント処理でHJJを取れるように（注：循環参照）\r\n        this.graph.HJN = this;\r\n        // スマフォ対応 #22\r\n        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"k\" /* TouchPanel */].DispatchEventTouchToMouse(this.graph.canvas_);\r\n        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"k\" /* TouchPanel */].DispatchEventTouchToMouse(this.graph.canvas_ctx_.canvas);\r\n    }\r\n    // zoom reset ボタン追加 #22\r\n    // this.addIcon_ZoomReset(); #78 グラフ毎から全体で一つに変更に伴いcall停止\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[8:dygraph showen] \", \"calc\");\r\n\r\n    // 初期表示の不活性グラフの設定\r\n    function xAxisLabelFormatter(d, gran, opts) {\r\n        // return Dygraph.dateAxisLabelFormatter(new Date(d), gran, opts); #63\r\n        var isTop = (this.xAxisRange()[0] === d);\r\n        var format = \"\";\r\n        var diffTime = this.xAxisRange()[1] - this.xAxisRange()[0];\r\n        if (diffTime < 60000) { \r\n            format = isTop ? \"hh:mm:ss.ppp\" : \"ss.ppp\";\r\n        } else if (diffTime < 86400000) { // 1日未満\r\n            format = \"hh:mm:ss\";\r\n        } else if (diffTime < 31536000000) { // 365日未満\r\n            format = isTop ? \"yyyy/MM/dd\": \"MM/dd hh\";\r\n        } else { // 365日以上\r\n            format = \"yyyy/MM/dd\";\r\n        }\r\n        return __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](d,format,true);\r\n    }\r\n    function yAxisLabelFormatter(d, gran, opts) { // #63\r\n        var range = this.yAxisRanges()[1];\r\n        var format = \"\";\r\n        var diff = range[1] - range[0];\r\n        if (diff < 300000) { // 300秒未満\r\n            return \"\" + d / 1000;\r\n        } else if (diff < 86400000) { // 1日未満\r\n            return __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](d, \"hh:mm:ss\", true);\r\n        } else if (diff < 172800000) { // 2日未満\r\n            var hours = Math.ceil(d / 3600000) + \":\";\r\n            return hours + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](d, \"mm:ss\", true);\r\n        } else { // 2日以上\r\n            var days = Math.ceil(d / 86400000) + \" days+\";\r\n            var time = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](d, \" hh:mm:ss\", false);\r\n            return (d < 172800000) ? time : days; // 2日未満？\r\n        }\r\n    }\r\n\r\n    // 再描画する\r\n    this.showBalloon();\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[9:balloon showen] \", \"calc\");\r\n\r\n    // updateメソッド内部関数宣言\r\n    // 点がハイライトになったときの描画処理（内部関数宣言） g:{dygraph} HJN.chartD.graph\r\n    function drawHighlightPointCallback(g, name, ctx, cx, cy, color, r, idx) {\r\n        // file dropのとき、新グラフデータに更新後に、旧グラフのidx値が引き渡されたとき 処理しない #12\r\n        if (!g.rawData_ || g.rawData_.length - 1 < idx)\r\n            return;\r\n        var x = g.rawData_[idx][HJN.Tat.CONC.N]; // 選択されている点(時刻)のCONCのxの値（無いときundefined)\r\n        var eTat = HJN.chart.eTat;\r\n        var sTat = HJN.chart.sTat;\r\n        var n = 0;\r\n\r\n        // ETAT,STATのときlogレコードを表示する #28\r\n        if ((name === HJN.Tat.STAT.key || name === HJN.Tat.ETAT.key)\r\n                && typeof x != 'undefined') { // #41\r\n            // eTatの配列位置をを求める\r\n            if (name === HJN.Tat.ETAT.key) {\r\n                // ETATのとき、終了時刻(x)からeTatの配列位置(n)を検索する\r\n                n = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"l\" /* binarySearch */](x, eTat, \r\n                                    function (e) { return e.x; });\r\n            } else {\r\n                // STATのとき、開始時刻(x)からsTatの配列位置(sTatN)を検索し、sTatからeTatの配列位置を取得する\r\n                var sTatN = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"l\" /* binarySearch */](x, sTat, \r\n                                    function (e) { return e.x; });\r\n                n = sTat[sTatN].eTatIdx;\r\n            }\r\n            // ログデータを表示し、線を引く\r\n            if (0 <= n) {\r\n                var e = eTat[n];\r\n                // ログデータを表示する\r\n                document.getElementById(\"lineViewer\").innerHTML =\r\n                            this.HJN.fileParser.getRecordAsText(e); // #62\r\n                // 線を引く #30\r\n                drawTatLine(ctx, e.x, e.y, 2, color);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n\r\n        // CONCのとき同時処理の線を引く\r\n        if (name === HJN.Tat.CONC.key && typeof eTat.tatMap != 'undefined') { // #17\r\n            // #41\r\n            // 指定時刻に動いているeTatの一覧(trans)を取得する\r\n            var trans = eTat.tatMap.search(x, x, 1000); // #18\r\n            // 以前に選択した線を消す\r\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            // 同時処理の線を引く\r\n            if (0 <= i && 0 < trans.length) {\r\n                // TRANS分の線を引く\r\n                trans.forEach(function (e) {\r\n                    drawTatLine(ctx, e.x, e.y, 1, HJN.Tat.CONC.color);\r\n                });\r\n            }\r\n            ctx.stroke();\r\n        }\r\n\r\n        // 選択点の点と数値を表示する\r\n        var val = \"\";\r\n        var time = \"\";\r\n        if (0 <= idx) {\r\n            time = g.rawData_[idx][0]; // #60\r\n            val = name ? g.rawData_[idx][g.setIndexByName_[name]] : \"\";\r\n            // valが時間のとき、 時間表記に文字列編集する\r\n            if (name === HJN.Tat.STAT.key || name === HJN.Tat.ETAT.key \r\n                    || name === HJN.Tat.EMPS.key || name === HJN.Tat.EAPS.key) {\r\n                val = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](val);\r\n            }\r\n        }\r\n        drawPoint(ctx, cx, cy, r, color, val, time);\r\n        // 縦線を引く\r\n        drawLine(ctx, [ {\r\n            x : cx,\r\n            y : 0\r\n        }, {\r\n            x : cx,\r\n            y : ctx.canvas.height\r\n        } ], 1, \"rgba(127,127,127,0.5)\", [ 1, 2 ]);\r\n\r\n        // drawHighlightPointCallback 内部関数宣言\r\n        // TAT線を表示する（内部関数）\r\n        function drawTatLine(ctx, x, y, heigth, color) {\r\n            // isXend指定の始点(false)／終点（true)に合わせて、線の座標を求める\r\n            var tXs = g.toDomXCoord(x - y), // ミリ秒\r\n            tXe = g.toDomXCoord(x), // ミリ秒\r\n            tY = g.toDomYCoord(y, 1); // 第二軸:1\r\n            drawLine(ctx, [ {\r\n                x : tXs,\r\n                y : tY\r\n            }, {\r\n                x : tXe,\r\n                y : tY\r\n            } ], heigth, color);\r\n            drawPoint(ctx, tXs, tY, r, HJN.Tat.STAT.color);\r\n            drawPoint(ctx, tXe, tY, r, HJN.Tat.ETAT.color);\r\n        }\r\n\r\n        // 線を表示する（内部関数）\r\n        function drawLine(ctx, plots, r, color, lineDashSegments) {\r\n            ctx.beginPath();\r\n            ctx.lineWidth = r;\r\n            ctx.lineCap = \"round\";\r\n            ctx.strokeStyle = color;\r\n            if (lineDashSegments)\r\n                ctx.setLineDash(lineDashSegments); // lineDashは[num]\r\n            ctx.moveTo(plots[0].x, plots[0].y);\r\n            plots.forEach(function (p) {\r\n                ctx.lineTo(p.x, p.y);\r\n            });\r\n            ctx.stroke();\r\n        }\r\n\r\n        // 点を表示する（内部関数）\r\n        function drawPoint(ctx, cx, cy, r, color, val, time) {\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = color;\r\n            ctx.fillStyle = color;\r\n            ctx.arc(cx, cy, r, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            var text = \"\";\r\n            if (val || time) {\r\n                if (typeof(val) === \"number\") {\r\n                    text += Math.round(val * 10) / 10;\r\n                } else if (typeof(val) === \"string\") { // #60\r\n                    text += val;\r\n                }\r\n                if (val && time) text += \" \";\r\n                if (time) text += \"[\" + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](time, \"hh:mm:ss.ppp\", true) + \"]\"; // #60\r\n                ctx.beginPath();\r\n                ctx.fillStyle = color.replace(/\\,[\\s\\.0-9]*\\)/,\",1)\"); // #60\r\n                ctx.textAlign = \"left\"; // \"rigth\" \"center\" #60\r\n                ctx.fillText(text, cx, cy - 12);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 点がハイライトになったときの処理（内部関数宣言）\r\n    function highlightCallback(e, x, pts, row, seriesName) {\r\n        // マウスクリック用に座標をHJN.hoverXYに退避する\r\n        HJN.hoverXY = {\r\n            x : x,\r\n            pts : pts,\r\n            row : row,\r\n            seriesName : seriesName\r\n        };\r\n    }\r\n\r\n    // 点をクリックしたときの処理(内部関数宣言）\r\n    function pointClickCallback(event, p) {\r\n        if (!p.annotation)\r\n            HJN.Plot.PointClickCallback(p);\r\n    }\r\n\r\n    // アノテーション（グラフ中の吹出し）をクリックしたときの処理(内部関数宣言）\r\n    function annotationClickHandler() { // annotation, p, dygraph, event\r\n        HJN.Plot.PointClickCallback(arguments[1]);\r\n    }\r\n\r\n    // アノテーション（グラフ中の吹出し）をダブルクリックしたときの処理(内部関数宣言）\r\n    function annotationDblClickHandler() { // annotation, p, dygraph, event\r\n        // 指定ポイントを削除する\r\n        HJN.Plot.PointDblClickCallback(arguments[1]);\r\n    }\r\n\r\n    // グラフをクリックしたときの処理(内部関数宣言）\r\n    // function clickCallback(e, x, pts) {}\r\n};\r\n\r\n/**\r\n * dygraphのBalloonを再描画する\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.showBalloon = function () {\r\n    if (this.cTps.length === 0)\r\n        return; // ctpsが空の時何もしない\r\n\r\n    var ann = {\r\n        series : \"\",\r\n        xval : 0,\r\n        shortText : \"\",\r\n        text : \"\"\r\n    }, anns = [];\r\n    // 表示時間帯を求める\r\n    var ctps = this.cTps, minX = ctps[0].x, maxX = ctps[ctps.length - 1].x;\r\n    // アノテーションをdygparhに追加する\r\n    HJN.Plot.List.forEach(function (e) {\r\n        if (minX <= e.x && e.x <= maxX) {\r\n            ann = {\r\n                series : HJN.Tat.seriesConfig[e.n].key,\r\n                xval : e.x, // ミリ秒\r\n                shortText : e.y,\r\n                text : e.label\r\n            };\r\n            anns.push(ann);\r\n            // 詳細Plot＆詳細グラフデータが無いとき、詳細Plot内のTPS Plotを追加する #7\r\n            if (\"tpsPlot\" in e) { // 詳細plotのとき\r\n                if (this.SERIESES.findIndex(function (s) {\r\n                    return s.N === e.n;\r\n                }) < 0) { // 詳細グラフデータが無いとき\r\n                    ann = {\r\n                        series : HJN.Tat.seriesConfig[e.tpsPlot.n].key,\r\n                        xval : e.tpsPlot.x, // ミリ秒\r\n                        shortText : e.tpsPlot.y,\r\n                        text : e.tpsPlot.label\r\n                    };\r\n                    anns.push(ann);\r\n                }\r\n            }\r\n        }\r\n    }, this);\r\n    // dygraphの残描画処理が完了してからアノテーションをセットする\r\n    this.graph.ready(function () {\r\n        this.setAnnotations(anns);\r\n    });\r\n};\r\n\r\n/**\r\n * dygraphのlegendを編集する(dygraph オプション登録用関数）\r\n * {@link http://dygraphs.com/options.html#legendFormatter}\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {ETAT}\r\n *            data [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]\r\n * @return {string} dygraphのlegendに表示する文字（HTML)\r\n */\r\nGraph.prototype.legendFormatter = function (data) {\r\n    // legend: 'always'指定のとき、マウスがグラフ外にあると dataに値が設定されていなことを考慮\r\n    var html = (typeof data.x === \"undefined\") ? '' : __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* DateToString */](\r\n            new Date(data.xHTML), \"yyyy/MM/dd hh:mm:ss.ppp\");\r\n    html = '<label class=\"datetime\">' + html + '</label>';\r\n    data.series\r\n            .forEach(function (series) {\r\n                if (!series.isVisible)\r\n                    return;\r\n                var val = (typeof series.yHTML === \"undefined\") ? \"\"\r\n                        : series.yHTML, text = '<label '\r\n                        + getStyle(series.label)\r\n                        + '\">'\r\n                        + \"&nbsp;\"\r\n                        + series.labelHTML\r\n                        + ':'\r\n                        + ('####' + val.replace(/\\.[0-9]*/, \"\")).slice(-4)\r\n                                .replace(/#/g, \"&nbsp;\") + '</label>';\r\n                html += series.isHighlighted ? '<b>' + text + '</b>' : text;\r\n                html += '&nbsp;';\r\n            });\r\n    return html;\r\n    // keyに設定された色指定するstyle文字列を取得する（legendFormatter内部関数宣言）\r\n    function getStyle(key) {\r\n        var i = HJN.Tat.seriesConfig.findIndex(function (e) {\r\n            return (e.key === key);\r\n        });\r\n        return 'style=\"background:' + HJN.Tat.seriesConfig[i].color + ';';\r\n    }\r\n};\r\n\r\n\r\n\r\n/**\r\n * メニュー機能：CSVデータファイルを開く\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {evt}\r\n *            evt ファイルオープンイペント\r\n */\r\nGraph.prototype.menuOpenCsv = function (evt) {\r\n    var file_list = evt.target.files;\r\n    // 指定されたファイルを処理する\r\n    HJN.init.FileReader(file_list);\r\n};\r\n\r\n/**\r\n * メニュー機能：画面設定をJSON形式のセーブファイルとしてダウンロードする\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuSaveConfig = function (menuId, fileName) {\r\n    // plotsをjsonに変換する\r\n    var save = {\r\n        \"HJN.Plot.List\" : HJN.Plot.List,\r\n        \"HJN.Config.File\" : HJN.Config.File.__config, // #76\r\n        \"HJN.Config.Filter\" : HJN.Config.Filter.__config\r\n    };\r\n    var json = JSON.stringify(save, null, 4);\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(this.menuBuffToBlob(json), menuId, fileName);\r\n};\r\n/**\r\n * メニュー機能：JSON形式の画面設定ファイルをロードし画面表示に反映する TODO\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ？\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名 ？\r\n */\r\nGraph.prototype.menuLoadConfig = function (evt) { // #10\r\n    // 指定されたファイルを開く\r\n    var files = evt.target.files;\r\n    for (var i = 0; i < files.length; i++) { // データを順番に取得する\r\n        try {\r\n            // ファイルを取得する\r\n            var file = files[i];\r\n            // ログ出力用にファイル名（サイズ）を編集する\r\n            if (10000 < file.size) {\r\n                var msg = \"Too large(>10KB) \" + file.name + \" [\" + file.size\r\n                        + \"byte]\";\r\n                __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowText([ \"<mark>\" + msg + \"</mark>\" ]);\r\n                return;\r\n            }\r\n            // ファイルの読み込みに成功したら、その内容をドロップエリアに追記して表示する\r\n            var reader = new FileReader();\r\n            reader.onloadend = funcOnloadend.bind(this, files[i], i);\r\n            // ファイルにArrayBufferで参照を取得する（onloadendイベントを起こす）\r\n            reader.readAsArrayBuffer(files[i]);\r\n        } catch (e) {\r\n            // 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n            var msg = \"The \" + i + \"th dropped object is not a file\";\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowText([ \"<mark>\" + msg + \"</mark>\" ]);\r\n            console.error(\"[%o]%o\", msg, e);\r\n        }\r\n    }\r\n\r\n    // 内部関数：ファイルを読み込み後の処理（指定ファイルを読み込んだ後に呼び出される）\r\n    function funcOnloadend(file, i, evt) {\r\n        if (evt.target.readyState === FileReader.DONE) {\r\n            // ファイルからjsonを読み込む\r\n            var filesArrayBuffer = evt.target.result;\r\n            var buf = new Uint8Array(filesArrayBuffer);\r\n            var json = String.fromCharCode.apply(null, buf);\r\n            alert(json);\r\n            var jsonObj = JSON.parse(json);\r\n\r\n            // jsonからHJN.chartD.fileParserに登録されているConfig の定義を作成する\r\n            var conf = jsonObj[\"HJN.chart.fileParser\"];\r\n            HJN.chart.fileParser._config_File.__config = conf;\r\n            var confD = jsonObj[\"HJN.chartD.fileParser\"];\r\n            HJN.chartD.fileParser._config_File.__config = confD;\r\n\r\n            // jsonからHJN.Plot.Listを作成する\r\n            var tmpPlots = jsonObj[\"HJN.Plot.List\"];\r\n            var plots = [];\r\n            // フォーマットに合致する項目のみ抽出する\r\n            if (isSameType([], tmpPlots)) { // 最上位が配列\r\n                tmpPlots.forEach(function (e) { // 2層目がオブジェクト\r\n                    if (isSameType(0, e.x))\r\n                        plots.push(e);\r\n                });\r\n            }\r\n            if (0 < plots.length) {\r\n                HJN.Plot.List = plots;\r\n            }\r\n            HJN.Plot.Render();\r\n            // グラフ内の吹き出しを再表示する\r\n            HJN.Plot.ShowBalloon();\r\n\r\n            // 型判定\r\n            function isSameType(sample, obj) {\r\n                var clas0 = Object.prototype.toString.call(sample);\r\n                var clas1 = Object.prototype.toString.call(obj);\r\n                return clas0 === clas1;\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * メニュー機能：メニューで指定されたフィルタの条件で再描画する\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuFilterApply = function () { // #34\r\n    if (HJN.files && HJN.files.length === 0) {\r\n        // 自動生成データのグラフを表示しているとき\r\n        HJN.init.ChartShow(HJN.chart.eTatOriginal)\r\n    } else {\r\n        // ファイル指定のグラフを表示しているとき\r\n        HJN.init.FileReader(HJN.files);\r\n    }\r\n};\r\n/**\r\n * メニュー機能：フィルタ条件を初期値にし、再描画する\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuFilterReset = function () { // #34\r\n    __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"d\" /* MenuConfigFilter */].reset();\r\n};\r\n\r\n/**\r\n * メニュー機能：シミュレータ 指定JSONでシミュレートする\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuSimulatorSimulate = function () { // #53\r\n    // グラフを再生成する\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ResetTimestamp(); // #79\r\n    var json = document.getElementById(\"SimulatorEditor\").value;\r\n    HJN.files = []; // #61\r\n    HJN.Plot.List = [];\r\n    Object(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_Init_js__[\"a\" /* CreateSampleTatLogAndChartShow */])(json);\r\n\r\n};\r\n/**\r\n * メニュー機能：シミュレータ JSON入力エリアを広げる\r\n *\r\n */\r\nGraph.prototype.menuSimulatorEditor = function () { // #53\r\n    var divSimulator = document.getElementById(\"Simulator\");\r\n    var divSimulatorEditor = document.getElementById(\"SimulatorEditor\");\r\n    if (divSimulator.style.height === \"100%\") { // #60\r\n        // 開いているとき、textareaの親を閉じる\r\n        divSimulator.style.visibility = \"hidden\"; // #79\r\n        divSimulator.style.height = \"0\";\r\n        divSimulator.style.width = \"190px\";\r\n    } else{ // 閉じているとき\r\n        // textareaを一度閉じる（textareaが大きいとき親が大きくなりスクロールが出るため）\r\n        divSimulatorEditor.style.height = \"0\";\r\n        // textareaの親を開く\r\n        divSimulator.style.height = \"100%\";\r\n        divSimulator.style.width = \"70%\";\r\n//        divSimulatorEditor.style.height = (divSimulator.scrollHeight - 10) + \"px\";\r\n        divSimulatorEditor.style.height = divSimulator.clientHeight + \"px\";\r\n        divSimulator.style.visibility = \"visible\"; // #79\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * メニュー機能：canvas画像をファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadImg = function (menuId, fileName) {\r\n    var type = 'image/png';\r\n    // canvas から DataURL で画像を出力\r\n    var canvas = this.chartId.getElementsByTagName('canvas')[0], dataurl = canvas\r\n            .toDataURL(type);\r\n    // DataURL のデータ部分を抜き出し、Base64からバイナリに変換\r\n    var bin = atob(dataurl.split(',')[1]);\r\n    // Uint8Array ビューに 1 バイトずつ値を埋める\r\n    var buffer = new Uint8Array(bin.length);\r\n    for (var i = 0; i < bin.length; i++) {\r\n        buffer[i] = bin.charCodeAt(i);\r\n    }\r\n    // Uint8Array ビューのバッファーを抜き出し、それを元に Blob を作る\r\n    var blob = new Blob([ buffer.buffer ], {\r\n        type : type\r\n    });\r\n    // var url = window.URL.createObjectURL(blob);\r\n\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(blob, menuId, fileName);\r\n};\r\n\r\n/**\r\n * メニュー機能：グラフ全データをCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadCsv = function (menuId, fileName) {\r\n    var bom = new Uint8Array([ 0xEF, 0xBB, 0xBF ]), // Excel対応UTF8のBOMコード指定\r\n    csv = this.labels.join(','); // csvヘッダ行の作成\r\n    this.dyData.forEach(function (e) {\r\n        csv += \"\\r\\n\" + e.join(',');\r\n    }); // csvデータ展開\r\n    var blob = new Blob([ bom, csv ], {\r\n        \"type\" : \"text/csv\"\r\n    }); // blob変換\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(blob, menuId, fileName);\r\n};\r\n\r\n/**\r\n * メニュー機能：グラフ全データの編集元に該当するTATログの該当行をCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadLog = function (menuId, fileName) {\r\n    var eTat = this.eTat;\r\n    if (0 < eTat.length) { // 出力対象データがあるとき\r\n        if (typeof eTat[0].pos === \"undefined\") { // 生成データのとき\r\n            // 生成データをCSVに編集する\r\n            var eTatCsv = \"\";\r\n            var delimiter = '\"';\r\n            var separator = delimiter + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].File.getConfig(\"SEP\") + delimiter; // #76\r\n            eTat.forEach(function (e) {\r\n                eTatCsv += delimiter + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](e.x, 'yyyy/MM/dd hh:mm:ss.ppp') + separator\r\n                        + e.y + separator + e.message + delimiter + '\\r\\n'; // #61\r\n            });\r\n            // ダウンロードする\r\n            this.menuDownloadBlob(this.menuBuffToBlob(eTatCsv), menuId,\r\n                    fileName);\r\n        } else { // ファイル読込のとき\r\n            // 出力データを元ファイルのpos順にソートする（改行コードのないファイル末尾レコートがある場合も最後に来るように） #45\r\n            eTat.sort(function (a, b) {\r\n                return a.pos - b.pos;\r\n            });\r\n            // 最大作業領域として元ファイルサイズの合計分のメモリを確保する #23\r\n            var maxSize = HJN.filesArrayBuffer.reduce(function (p, c) {\r\n                return p + c.byteLength + 2;\r\n            }, 0);\r\n            var buff = new Uint8Array(maxSize), offset = 0;\r\n            // ファイルの該当行を Uint8Arrayに登録する\r\n            eTat.forEach(function (e) {\r\n                buff.set(new Uint8Array(HJN.filesArrayBuffer[e.fileIdx], e.pos,\r\n                        Math.min(e.len + 2,\r\n                                HJN.filesArrayBuffer[e.fileIdx].byteLength\r\n                                        - e.pos)), offset);\r\n                offset += (e.len + 2);\r\n            });\r\n            // 未使用作業領域を削除する\r\n            var buff2 = new Uint8Array(buff.slice(0, offset));\r\n            // ダウンロードする\r\n            this.menuDownloadBlob(this.menuBuffToBlob(buff2), menuId, fileName);\r\n        }\r\n    } else { // 出力対象データがないとき\r\n        var str = \"No log in the time.\";\r\n        // ダウンロードする\r\n        this.menuDownloadBlob(this.menuBuffToBlob(str), menuId, fileName);\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー機能：plotsでconcが選択されているとき、同時処理に該当するTATログの該当行をCSVファイルとしてダウンロードする\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadConc = function (menuId, fileName) {\r\n    var plot = HJN.Plot.List.find(function (e) {\r\n        return e.radio;\r\n    });\r\n    if (plot.n === HJN.Tat.CONC.N || plot.n === HJN.Tat.STAT.N || plot.n === HJN.Tat.ETAT.N) {\r\n        // CONC|STAT|ETATが選択されているとき\r\n        var trans = this.eTat.tatMap.search(plot.x); // #18\r\n        if (0 < trans.length) { // 出力テキストを編集する\r\n            if (typeof trans[0].pos === \"undefined\") {\r\n                // 初期表示データのとき、CSVを編集する\r\n                // 生成データをCSVに編集する\r\n                var csv = \"\";\r\n                trans.forEach(function (e) {\r\n                    csv += __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](e.x, \"yyyy/MM/dd hh:mm:ss.ppp\") + \",\"\r\n                            + e.y + \"\\r\\n\";\r\n                });\r\n                // ダウンロードする\r\n                this.menuDownloadBlob(this.menuBuffToBlob(csv), menuId,\r\n                        fileName);\r\n            } else {\r\n                // ファイル読み込みの時、対象レコードを表示する\r\n                // 出力データを元ファイルのpos順にソートする（改行コードのないファイル末尾レコートがある場合も最後に来るように） #45\r\n                trans.sort(function (a, b) {\r\n                    return a.pos - b.pos;\r\n                });\r\n                // 最大作業領域として元ファイルサイズの合計分のメモリを確保する #23\r\n                var maxSize = HJN.filesArrayBuffer.reduce(function (p, c) {\r\n                    return p + c.byteLength + 2;\r\n                }, 0);\r\n                var buff = new Uint8Array(maxSize), offset = 0;\r\n                // ファイルの該当行を Uint8Arrayに登録する\r\n                trans.forEach(function (e) {\r\n                    buff.set(new Uint8Array(HJN.filesArrayBuffer[e.fileIdx],\r\n                            e.pos, Math.min(e.len + 2,\r\n                                    HJN.filesArrayBuffer[e.fileIdx].byteLength\r\n                                            - e.pos)), offset);\r\n                    offset += (e.len + 2);\r\n                });\r\n                // 未使用作業領域を削除する\r\n                var buff2 = new Uint8Array(buff.slice(0, offset));\r\n                // ダウンロードする\r\n                this.menuDownloadBlob(this.menuBuffToBlob(buff2), menuId,\r\n                        fileName);\r\n            }\r\n        }\r\n\r\n    } else { // CONCが選択されていないとき\r\n        var msg = \"抽出対象データがありません。空データがダウンロードされます\\r\\n\"\r\n                + \"conc：多重度（詳細）の点を選択した状態で行ってください\";\r\n        alert(msg);\r\n        this.menuDownloadBlob(this.menuBuffToBlob(msg), menuId, fileName);\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー共通機能：BinaryString, UintXXArray, ArrayBuffer をBlobに変換する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Object}\r\n *            arrayBuffer 変換元\r\n * @return {Blob}\r\n *            変換後\r\n */\r\nGraph.prototype.menuBuffToBlob = function (arrayBuffer) {\r\n    return new Blob([ arrayBuffer ], {\r\n        type : \"application/octet-stream\"\r\n    });\r\n};\r\n\r\n/**\r\n * メニュー共通機能：指定blobをファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Objcet}\r\n *            blob ダウンロードさせるblogデータ\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadBlob = function (blob, menuId, fileName) {\r\n    if (window.navigator.msSaveBlob) { // ie11以降のとき\r\n        window.navigator.msSaveBlob(blob, fileName);\r\n        // msSaveOrOpenBlobの場合はファイルを保存せずに開ける\r\n        window.navigator.msSaveOrOpenBlob(blob, fileName);\r\n    } else { // Chrome, FireFoxのとき\r\n        document.getElementById(menuId).href = window.URL.createObjectURL(blob);\r\n    }\r\n};\r\n\r\n/**\r\n * Zoomリセットアイコンを追加する\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.addIcon_ZoomReset = function () {\r\n    var divChart = this.chartId; // document.getElementById(\"Icons\");\r\n    var idName = this.chartIdName + \"Zoom\";\r\n    var input = document.getElementById(idName);\r\n    if (input !== null) { // 既にある場合削除する\r\n        var div = input.parentElement;\r\n        div.parentElement.removeChild(div);\r\n    }\r\n\r\n    if (divChart) {\r\n        var div = document.createElement('div');\r\n        var htmlText = '<input id=\"' + idName + '\" type=\"buttom\" class=\"hjnBoxSwitch hjnResize\" '\r\n                                + 'onClick=\"HJN.' + this.chartIdName + '.graph.resetZoom()\">'\r\n                     + '<label for=\"' + idName + '\" class=\"hjnCtrlBox\"><span></span></label>';\r\n        div.innerHTML = htmlText;\r\n        divChart.insertBefore(div, divChart.firstChild);\r\n    }\r\n};\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__simulator_VirtualApp_js__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__simulator_VirtualResource_js__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__simulator_VirtualSystemByJson_js__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__simulator_MenuConfig_js__ = __webpack_require__(37);\n/* unused harmony reexport VirtualSystem */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__simulator_VirtualApp_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__simulator_VirtualResource_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__simulator_VirtualSystemByJson_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_4__simulator_MenuConfig_js__[\"a\"]; });\n\r\n\r\n\r\n\r\n\r\n\r\n/** @namespace Simulator */\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__timeSeries_Tat_js__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_ETat_js__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timeSeries_FileParser_js__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__timeSeries_MenuConfigFile_js__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__timeSeries_MenuConfigFilter_js__ = __webpack_require__(39);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_0__timeSeries_Tat_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__timeSeries_ETat_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__timeSeries_FileParser_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_3__timeSeries_MenuConfigFile_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_4__timeSeries_MenuConfigFilter_js__[\"a\"]; });\n\r\n\r\n\r\n\r\n\r\n\r\n/** @namespace TimeSeries */\r\n\r\n\r\n/**\r\n * seriesSet: dygraph用時系列データ配列\r\n * \r\n * @typedef {array.<CONC, CTPS, ETPS, STAT, ETAT, EMPS, EAPS>} seriesSet\r\n */\r\n\r\n/**\r\n * CONC:多重度の時系列データ<br>\r\n * [{x:変化時刻(ms) ,y:多重度数 }]\r\n * \r\n * @typedef {array.<xMs, yInt>} CONC\r\n */\r\n\r\n/**\r\n * CTPS: 秒間最大多重度の時系列データ<br>\r\n * [{x:秒毎時刻(ms), y:秒内最大多重度数 }]\r\n * \r\n * @typedef {array.<xMs, index>} CTPS\r\n */\r\n\r\n/**\r\n * ETPS: 秒間終了件数の時系列データ<br>\r\n * [{x:秒毎時刻(ms), y:秒内終了件数 }]\r\n * \r\n * @typedef {array.<xMs, yInt>} ETPS\r\n */\r\n\r\n/**\r\n * STAT: 開始時刻のTAT（応答時間）時系列データ<br>\r\n * [{x:開始時刻(ms) ,y:レスポンス(sec), eTatIdx: eTatの配列位置 }]\r\n * \r\n * @typedef {array.<xMs, ySec, index>} STAT\r\n */\r\n\r\n/**\r\n * ETAT: 終了時刻のTAT（応答時間）時系列データ<br>\r\n * [{x:変化時刻(ms) ,y:レスポンス(sec), fileIdx:ファイル配列位置, pos:レコード位置, len:レコード長, sTatIdx:\r\n * sTatの配列位置 }]\r\n * \r\n * @typedef {array.<xMs, ySec, index, index, number, index>} ETAT\r\n */\r\n\r\n/**\r\n * EMPS: 秒間最大TAT（応答時間）時系列データ（終了時刻ベース）<br>\r\n * [{x:秒毎時刻(ms), y:秒内最大レスポンス(sec) }]\r\n * \r\n * @typedef {array.<xMs, ySec>} EMPS\r\n */\r\n\r\n/**\r\n * EAPS: 秒間平均TAT（応答時間）時系列データ（終了時刻ベース）<br>\r\n * [{x:秒毎時刻(ms), y:秒内平均レスポンス(sec) }]\r\n * \r\n * @typedef {array.<xMs, ySec>} EAPS\r\n */\r\n\r\n\r\n\r\n/**\r\n * xMs: x軸に用いる時刻(ms)\r\n * \r\n * @typedef {number} xMs\r\n */\r\n/**\r\n * ySec: y軸に用いる秒単位の時間（応答時間など）\r\n * \r\n * @typedef {number} ySec\r\n */\r\n\r\n\r\n\r\n/**\r\n * yInt: y軸に用いる整数（個数など）\r\n * \r\n * @typedef {number} yInt\r\n */\r\n/**\r\n * index: 配列の位置（インデックス）に用いる整数\r\n * \r\n * @typedef {number} index\r\n */\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return HJN; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_Tat_js__ = __webpack_require__(8);\n/* ******1*********2*********3*********4*********5*********6*********7****** */\r\n\r\n\r\n\r\n/** @namespace */\r\nvar HJN = {};\r\nwindow.HJN = HJN; // #67\r\n\r\nHJN.init = {}; // 初期登録処理関連\r\nHJN.Config = HJN.Config || __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */]; // #76\r\nHJN.Tat = __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_Tat_js__[\"a\" /* default */];\r\n\r\nHJN.chart = HJN.chartD = null;\r\nHJN.chartName = \"chart\";\r\n\r\nHJN.files = [];\r\nHJN.filesArrayBuffer = [];\r\n\r\nHJN.timer = {};\r\n__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */](\"DetailGraph\").setValueByKey(\"D_TIME\", +(new Date()));  // 下段表示時刻 #27\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = Init;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = CreateSampleTatLogAndChartShow;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Copyright_js__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__tatLogDiver_Usage_js__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__tatLogDiver_Graph_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__tatLogDiver_Plot_js__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__tatLogDiver_MenuConfigDetailGraph_js__ = __webpack_require__(13);\n\r\n\r\n\r\n\r\n\r\n // #84\r\n\r\n\r\n\r\n\r\n\r\n/* *****1*********2*********3*********4*********5*********6*********7******* */\r\n/**\r\n * HTMLから呼び出すAPI\r\n * \r\n * @memberof Init\r\n * @param {string}\r\n *            [chartName=HJN.chartName=\"chart\"] グラフを作成するHTMLタグ名\r\n * @return {ETAT} 終了時刻のTAT（応答時間）時系列データ\r\n * @example <!doctype html> <html> <head> <meta charset=\"UTF-8\"> <link\r\n *          type=\"text/css\" rel=\"stylesheet\" href=\"../libs/dygraph.css\"> <link\r\n *          type=\"text/css\" rel=\"stylesheet\" href=\"./tatLogDiver.css\"> </head>\r\n *          <body> <div id=\"hjn_chart\"></div> <script src=\"../libs/dygraph.js\"></script>\r\n *          <script src=\"../libs/extras/synchronizer.js\"></script> <script\r\n *          type=\"module\"> import {HJN_init_ChartRegist} from\r\n *          \"./tatLogDiver-Init.js\";\r\n *          window.addEventListener(\"DOMContentLoaded\",function(eve){\r\n *          Bundle(\"chart\"); // チャートを作成する }); </script> </body> </html>\r\n */\r\nfunction Init(chartName){ // #70\r\n\t// 引数１ ：デフォルトHJN.chartName(\"chart\")\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartName = chartName = chartName || __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartName;\r\n\t// タイトルを設定する #57\r\n\tdocument.title = \"tat log diver \" + __WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Copyright_js__[\"a\" /* Copyright */].Version; \r\n\t// htmlを作成する #52\r\n\tvar html_chart = document.getElementById(\"hjn_\" + chartName) || document.body;\r\n\thtml_chart.innerHTML = ''\r\n\t    + '<div id=\"' + chartName + '\"></div>'\r\n        + '<div id=\"' + chartName + 'D\"></div>'\r\n    // CONCデータ表示領域 #78\r\n        + '<div class=\"lineViewer hjnDraggableBox hjnCode\" >' // #79\r\n        + '<div id=\"lineViewer\" readonly>logdata</div></div>';\r\n\t// 手前にメニュ－用htmlを作成する #52\r\n\tvar html_nav = document.createElement('nav');\r\n\thtml_nav.innerHTML = ''\r\n\t    + '<header>'\r\n        // シミュレータ JSON Edit画面 領域 #53\r\n        + '<div id=\"Simulator\" class=\"hjnDraggableBox\" style=\"visibility:hidden\"></div>'\r\n        // ハンバーガーメニュー 領域\r\n        + '<div class=\"hjnBurgerTray\">'\r\n            // ステータスバー（ログ表示）領域\r\n        +   '<div class=\"statusbar hjnDraggableBox\">'\r\n        +   '<iframe id=\"fileInfo\" style=\"height:100%;\"></iframe></div>' // #79\r\n            // ×ボタン\r\n        +   '<input id=\"hjnBoxBuger\" type=\"checkbox\" class=\"hjnBurger hjnResize\" checked=\"checked\" />'\r\n        +     '<label for=\"hjnBoxBuger\" class=\"hjnCtrlBox\"><span></span></label>'\r\n        // グラフZoomリセットボタン #78\r\n        +     '<input id=\"chartZoom\" type=\"buttom\" class=\"hjnBoxSwitch hjnResize\" '\r\n        +     'onClick=\"HJN.init.ResetStyle();\" />'\r\n        +       '<label for=\"chartZoom\" class=\"hjnCtrlBox\"><span></span></label>'\r\n            // メニュー上部タイトル\r\n        +   '<div class=\"hjnBurgerTitle\">'\r\n                // メニューオーバレイモード変更 ボタン\r\n        +     '<input id=\"hjnBoxPlaceOn\" type=\"checkbox\" class=\"hjnBoxSwitch hjnResize\" />'\r\n        +       '<label for=\"hjnBoxPlaceOn\" class=\"hjnCtrlBox\"><span></span></label>'\r\n                // メニュー上部テキスト 領域\r\n        +     '<p>'\r\n                    // ツール名称＆JSDocリンク\r\n        +       '<a class=\"hjnLabel4Input\" href=\"../jsdoc/index.html\" '\r\n        +                 'target=”_hirosejnJSDoc3”>TAT log diver</a><BR>'\r\n        +     '</p>'\r\n        +   '</div>'\r\n        // メニュー画面本体（左右開閉ラッパー）\r\n        +   '<div class=\"hjnBurgerWrap\">'\r\n            // アコーディオンメニュー\r\n        +     '<div class=\"hjnAccordion\">'\r\n        +       '<div id=\"' + chartName + '_menu\"></div>'\r\n        +       '<div id=\"' + chartName + 'D_menu\"></div>'\r\n        +     '</div>'\r\n        +   '</div>'\r\n        + '</div>'\r\n        + '</header>';\r\n\thtml_chart.parentNode.insertBefore(html_nav, html_chart);\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.ResetStyle(true); // #79\r\n\t\r\n\tvar dropFieldName = chartName;\t// ファイルドロップを受け付けるタグ名\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogTextInit(); // 処理時間計測の初期化\r\n\r\n\t// コンフィグプロパティを初期化する #74\r\n\t// HJN.Config = HJN.Config || Util.Config;\r\n    __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"c\" /* MenuConfigFile */].config();\r\n    __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"d\" /* MenuConfigFilter */].config();\r\n    __WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__[\"a\" /* MenuConfig */].config();\r\n    __WEBPACK_IMPORTED_MODULE_8__tatLogDiver_MenuConfigDetailGraph_js__[\"a\" /* default */].config();\r\n\t\r\n\t// グラフのインスタンスを作成し初期化する\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart = new __WEBPACK_IMPORTED_MODULE_6__tatLogDiver_Graph_js__[\"a\" /* default */](chartName, \"HJN.chart\");\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.init();\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD = new __WEBPACK_IMPORTED_MODULE_6__tatLogDiver_Graph_js__[\"a\" /* default */](chartName + \"D\", \"HJN.chartD\");\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.init();\r\n\t// ドロップフィールドに、処理を登録する(注：dygraphはイベントリスナーを登録しないとクリック時にエラーが出る）\r\n\tInit.DropField(dropFieldName);\r\n\tInit.DropField(dropFieldName+ \"D\");\r\n\r\n\t// 初期表示データを自動生成する // #53\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].GetConfig(\"Simulator\").getFunctionByKey(\"S_SIMU\")(); // #53\r\n\t\r\n\t// イベントハンドラを登録する\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"d\" /* Element */].enableDraggableClass();\r\n}\r\n\r\n/**\r\n * スタイルを初期設定する（Reset zoomボタンからも呼ばれる）\r\n * \r\n * @param {Boolean}\r\n *            [isInit=false] リセット時true：初期設定値も再設定する\r\n *            シミュレーション条件JSONテキスト、もしくはサンプルJSON番号\r\n * \r\n * @memberof Init\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.ResetStyle = Init.ResetStyle = function(isInit){ // #79\r\n    // 指定クラス名が設定された要素にスタイルを設定する\r\n    var elements = document.getElementsByClassName(\"lineViewer\");\r\n    for(var i = 0; i < elements.length; i++){\r\n        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"d\" /* Element */].SetStyles(elements[i],\r\n                { bottom: 0, left: \"\", top: \"\", width: \"70%\", height: \"10vh\"});\r\n    }\r\n    elements = document.getElementsByClassName(\"statusbar\");\r\n    for(var i = 0; i < elements.length; i++){\r\n        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"d\" /* Element */].SetStyles(elements[i],\r\n                { left: \"10px\", top: 0, width: \"155px\", height: \"40px\"});\r\n    }\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"d\" /* Element */].SetStyles(document.getElementById(\"Simulator\"),\r\n                { left: 0, top: 0, width: \"190px\", height: 0});\r\n    // 別途初期設定される値を再設定する\r\n    if (!isInit) {\r\n        __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.graph.resetZoom();\r\n        __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.graph.resetZoom();\r\n    }\r\n}\r\n/**\r\n * データを自動生成し表示する\r\n * \r\n * @memberof Init\r\n * @param {String|Number}\r\n *            [json = Simulator.virtualSystemByJson.GetJsonConfig(0)]\r\n *            シミュレーション条件JSONテキスト、もしくはサンプルJSON番号\r\n */\r\nfunction CreateSampleTatLogAndChartShow(json){ // #53\r\n    var jsonText;\r\n    if (typeof(json) === \"number\") { // #53\r\n        jsonText = __WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__[\"d\" /* virtualSystemByJson */].GetJsonConfig(json);\r\n    } else{\r\n        jsonText = json || __WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__[\"d\" /* virtualSystemByJson */].GetJsonConfig(0);\r\n    }\r\n    // JSON Editorを更新する\r\n    document.getElementById(\"SimulatorEditor\").value = jsonText;\r\n    // 初期表示データを自動生成する\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTatOriginal = __WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__[\"d\" /* virtualSystemByJson */].Execute(jsonText);\r\n    // データを表示する\r\n    Init.ChartShow(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTatOriginal);\r\n}\r\n\r\n/**\r\n * 終了時刻とtatの配列をグラフ表示する（Menuイベントから呼び出される）\r\n * \r\n * @memberof Init\r\n * @param {ETAT}\r\n *            HJN.chart.eTatOriginal 終了時刻とtatを含む配列\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.ChartShow = Init.ChartShow = function(eTatOriginal){\r\n    // フィルタしたeTatを取得する #34\r\n    var eTat = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.createFilter().filter(eTatOriginal);\r\n\r\n    // グラフを初期表示する\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List = []; // #53\r\n    // 上段\r\n    if (eTat.length === 0) eTat = [{x:0, y:0}]; // #72\r\n    var tat = new __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"e\" /* Tat */](eTat); // #75\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.setSeriesSet(tat);\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.update();\r\n    showLogForUpperGraph(\"Simulator\"); // #79\r\n\r\n    // 下段(非同期）\r\n   __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"n\" /* setZeroTimeout */]( function(){\r\n       __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.update(Init.ChartRegistDetail(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.cTps));\r\n       __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.showBalloon();    // 上段のBalloonを描画する\r\n       if (__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.eTat){\r\n           showLogForLowerGraph(\"Simulator\"); // #79\r\n       } else { // #72\r\n           __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"<mark>表示データがありません</mark>\", \"msg\");\r\n       }\r\n       // 上下段のマウス操作同期設定 #49\r\n       var sync = Dygraph.synchronize(\r\n                 [ __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.graph, __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.graph ],\r\n                 {selection: true, zoom: false});\r\n    });\r\n}\r\nfunction showLogForUpperGraph(fileName){\r\n    var text = \"+ \";\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(text, \"elaps\");       // 処理時間ログ出力\r\n}\r\nfunction showLogForLowerGraph(fileName){\r\n    var text = \"下段[\" + __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.eTat.length + \"]行\";\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(text, \"elaps\", true);\r\n    text = \"<mark>\" + fileName + \" [\" \r\n            + __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTat.length.toString()\r\n             .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n            + \"]行を表示</mark>\"; // 整数文字列のカンマ編集\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(text, \"msg\");\r\n}\r\n\r\n/**\r\n * HTMLタグに、CSVファイルのドロップを受付けイベントを登録する\r\n * \r\n * @memberof Init\r\n * @param {string}\r\n *            dropFieldName ファイルのドロップイベントを受けるフィールド名\r\n */\r\nInit.DropField = function (dropFieldName) {\r\n\t// 第一引数で指定された名前の ID 属性のエレメントを取得する\r\n\tvar element = document.getElementById(dropFieldName);\r\n\t\r\n\t// ドラッグ操作中に実行されるイベント（マウスカーソルが要素内に滞在中）\r\n\telement.addEventListener(\"dragover\" , function (e){\r\n\t\te.preventDefault();   // ドロップを許可し受け入れを表明\r\n\t});\r\n\t\r\n\t// ドロップ時に実行されるイベント\r\n\telement.addEventListener(\"drop\", function (e){\r\n\t\t\tvar data_transfer = e.dataTransfer;\t\t// DataTransfer オブジェクトを取得する\r\n\t\t\tif(!data_transfer.types) return;\t\t// ファイルのコンテンツタイプを取得できたことを確認する\r\n\t\t\tvar files = data_transfer.files;\t// ファイルのリストを取得する\r\n\t\t\tInit.FileReader(files);\r\n\t\t\te.preventDefault();\t\t// デフォルトのドロップ機能を無効化\r\n\t});\r\n};\r\n\r\n/**\r\n * 指定されたファイルを読込んで処理する\r\n * \r\n * @memberof Init\r\n * @param {Object}\r\n *            files ファイルハンドラ\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.FileReader = Init.FileReader = function (files){  // #15\r\n\tfor(var i = 0; i < files.length; i++){\t// データを順番に取得する\r\n\t\ttry{\r\n\t\t\t// ファイルを取得する\r\n\t\t\tvar file = files[i];\r\n\t\t\t// ログ出力用にファイル名（サイズ）を編集する\r\n\t\t\tvar textArray =\t\"<BR><mark><b>\" + file.name + \"</b></mark> \" +\r\n\t\t\t\t\t\t\t\"[\"+ file.size + \"byte] \" + \r\n\t\t\t\t\t\t\tfile.lastModifiedDate.toLocaleString() +\"<BR>\";\r\n\t\t\t// ファイルの読み込みに成功したら、その内容をドロップエリアに追記して表示する\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.onloadend = funcOnloadend.bind(this, files[i], i);\r\n\t\t\t// ファイルにArrayBufferで参照を取得する（loadイベントを起こす）\r\n\t\t    reader.readAsArrayBuffer(files[i]);\r\n\t\t}catch(e){\r\n\t\t\t// 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n\t\t\tvar msg = \"The \" + i + \"th dropped object is not a file\";\r\n\t\t\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowText( [\"<mark>\"+msg+\"</mark>\"] );\r\n\t\t\tconsole.error(\"[%o]%o\",msg,e );\r\n\t\t}\r\n\t}\r\n\r\n\t// 内部関数：ファイルを読み込みｸﾞﾗﾌを表示する（指定ファイルを読み込んだ後に呼び出される） #23\r\n    function funcOnloadend(file, i, evt) {\r\n        if (evt.target.readyState === FileReader.DONE) { // DONE == 2\r\n            var filesIdx = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].files.length;\r\n            // ファイルの先頭2行をログ表示する\r\n            __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].filesArrayBuffer[filesIdx] = evt.target.result;\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ResetTimestamp();              // 情報表示 : 初期化\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(textArray, \"msg\");  // 情報表示：ドロップファイル情報\r\n            // 指定ファイルを読み込む\r\n            // CSVファイルを上段用eTatに展開する[{x:, y:,pos:,len:},...] 全件展開する\r\n            if (i === 0 && __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.isNewETAT()){\r\n                // 新規モードかつ、同時複数ファイル指定時の最初のファイルのとき、新たに作成する\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].files = [file];\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTatOriginal = getTatLogArray(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].filesArrayBuffer, filesIdx);\r\n            } else { // 2件目以降のファイルのとき、もしくは、追加モード\"ADDDATA\"のとき、追加する\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].files.push(file);\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTatOriginal = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTatOriginal.concat(\r\n                        getTatLogArray(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].filesArrayBuffer, filesIdx));\r\n            }\r\n\r\n            // 全ファイルを読み込んだらグラフを描画する\r\n            if (__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].files[__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].files.length - 1] === file){ // 指定ファイル群の最後のファイルを処理しているとき\r\n                // フィルタしたeTatを取得する #34\r\n                var eTat = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.createFilter().filter(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTatOriginal);\r\n\r\n                // 上段グラフを描画する（ eTatから上段用 時系列分析データ(seriesSet)を展開する）\r\n                if (eTat.length === 0) eTat = [{x:0, y:0}]; // #72\r\n                var tat = new __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"e\" /* Tat */](eTat); // #75\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.setSeriesSet(tat);\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.update();\r\n                showLogForUpperGraph(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].files[0].name); // #79\r\n\r\n                // 下段用データの展開とグラフ描画（非同期処理）\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List = [];\r\n                __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"n\" /* setZeroTimeout */](function(){\r\n                    if (__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.cTps) {\r\n                        // 下段グラフを描画する（下段用 時系列分析データ(seriesSet)を展開する）\r\n                        __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.update(Init.ChartRegistDetail(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.cTps));\r\n                        // 上段のBalloonを描画する(上段update時にはplots登録されていないので、ここで処理）\r\n                        __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.showBalloon();\r\n                        showLogForLowerGraph(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].files[0].name); // #79\r\n                    } else { // #72\r\n                        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"<mark>表示データがありません</mark>\", \"msg\");\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\t// 内部関数： 指定ファイルの先頭ｎ行を、改行文字<BR> のテキストに変換してリターンする\r\n\tfunction topLines(file, n) {\r\n\t    var fileInfo = \"\",\r\n\t        line;\r\n\t    try{    // 先頭からnレコード取得\r\n\t        var getterOfLine = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.createGetterOfLine(file);\r\n\t        for (var i = 0; i < n; i++) {\r\n\t            line = getterOfLine.next();\r\n\t            fileInfo += line.str + \"<BR>\";\r\n\t        }\r\n\t    }catch (e) {\r\n\t        alert(\"[Init.DropField 改行コードの無いファイルは扱えません]\");\r\n\t        console.error(e);\r\n\t    }\r\n\t    return fileInfo;\r\n\t}\r\n\r\n    // 内部関数： CSVファイルを読み込み、TatLog用アレイ[{x:日時, y:値, pos:レコード開始位置,\r\n    // len:レコード長},...]に展開する\r\n\tfunction getTatLogArray(files, idx) { // arg0:csvﾌｧｲﾙのファイルﾊﾟｽ\r\n\t    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"----- read file -----------------------------\",\"calc\");\r\n\t    var file = files[idx], // #23\r\n\t        eTat = [],\r\n\t        xy = {date: 0, value: 0, isError: false },\r\n\t        i = 0,  // timelog用\r\n\t        getterOfLine = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.createGetterOfLine(file),\r\n\t        getterOfXY = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.createGetterOfXY(),\r\n\t        line = getterOfLine.next();     // 先頭行の初期処理\r\n\t    while (!line.isEoF) {               // 以降最終行まで処理する\r\n\t        try {\r\n\t            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ByInterval(i++, line); // 一定時刻毎に進捗を出力する\r\n\t            xy = getterOfXY.parse(line);\r\n\t            if(!xy.isError){\r\n\t                eTat.push( {x: xy.x, y: xy.y, fileIdx: idx, // #23\r\n\t                    pos: line.pos, len: line.array.byteLength, sTatIdx: 0} );\r\n\t            }\r\n\t            line = getterOfLine.next(); // #24\r\n\t        } catch (e) {   /* 改行だけレコードをスキップ */\r\n\t            console.error(e);\r\n\t            console.err(\"err: %o\",e);\r\n\t        }\r\n\t    }\r\n\t    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[0:file readed & got eTat]---------------\",\"calc\");\r\n\t    return eTat;\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * 詳細グラフ用機能： 表示対象期間のcTpsから、eTps範囲を取得し、詳細Seriesを生成する。併せてPlotsを登録する。\r\n * \r\n * @memberof Init\r\n * @param {xMs}\r\n *            cTps 日時（ミリ秒単位）\r\n * @return {seriesSet} dygraph用時系列データ配列\r\n */\r\nInit.ChartRegistDetail = function(cTps){\r\n\t// CTPSの最大値となるplotを取得する\r\n\tvar maxY =Number.MIN_VALUE,\r\n\t\tmaxYIdx = -1;\r\n\tcTps.forEach(function(c, i){\r\n\t\tif (maxY < c.y){\r\n\t\t\tmaxY = c.y;\r\n\t\t\tmaxYIdx = i;\r\n\t\t}\r\n\t});\r\n\tif(0 <= maxYIdx){\t// #26\r\n\t\t// 秒単位より大きいとき、最大値を含む時刻(秒)に補正する #38\r\n\t\tvar x = cTps[maxYIdx].x;\r\n\t\tif(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.cTpsUnit.unit >= 1000){\r\n\t\t\tvar cTpsIdx = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.conc.findIndex(function(e,i){return e.y === cTps[maxYIdx].y;});\r\n\t\t\tx = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.conc[cTpsIdx].x;\r\n\t\t}\r\n\t\t// slider rangeに、下段の表示時刻を設定する\r\n\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.SetDetailDateTime(x);\r\n\t\t// eTpsの範囲を取得し、詳細用seriesSet(HJN.chartD.seriesSet）を設定する\r\n\t    var tat = new __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"e\" /* Tat */](__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.GetSliderRangedEtat()); // #75\r\n\t    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.setSeriesSet(tat);\r\n\t\t// plotsアイコン用 HJN.Plot.Listに、下段表示したplotを登録する\r\n\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.Add(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.CTPS.N, cTps[maxYIdx].x, cTps[maxYIdx].y);\r\n\t}\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[6:Plot added] \" + __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.length + \" plots\",\"calc\");\r\n\r\n\treturn __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.seriesSet;\r\n};\r\n/**\r\n * 詳細グラフ用機能： sliderRangeで指定された範囲のeTatを返却する（グラフの点クリックイベント時に呼び出される）\r\n * \r\n * @memberof Init\r\n * @return {ETAT} 詳細グラフ用eTat\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.GetSliderRangedEtat = function() {\r\n    // 指定時刻（ｄｔ ± range）を取得し、HJNグローバル変数に退避する #27\r\n    var rangeTagPlus  = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getConfig(\"D_RANGE_PLUS\");\r\n    var rangeTagMinus = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getConfig(\"D_RANGE_MINUS\");\r\n    var rangeTagUnit  = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getConfig(\"D_UNIT\"); // #48\r\n    var rangeCycle = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.cTpsUnit.unit / 1000; // 変動する #38\r\n\r\n    rangeTagPlus = rangeTagPlus  ? +rangeTagPlus : 1 + rangeCycle;     // 幅（秒）\r\n    rangeTagMinus = rangeTagMinus ? +rangeTagMinus : rangeCycle;     // 幅（秒）\r\n    rangeTagUnit = rangeTagUnit  ? +rangeTagUnit : __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE; // #48\r\n\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.setValueByKey(\"D_RANGE_PLUS\",rangeTagPlus);\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.setValueByKey(\"D_RANGE_MINUS\",rangeTagMinus);\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.setValueByKey(\"D_UNIT\",rangeTagUnit);\r\n\r\n    var detailDateTime = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getValueByKey(\"D_TIME\");\r\n    var eTatDetail = (new __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"a\" /* ETat */](__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTat)).sliceByRangeUnit(detailDateTime,\r\n                rangeTagMinus, rangeTagPlus, rangeTagUnit); // #75\r\n\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[0:HJN.init.GetSliderRangedEtat] \",\"calc\");\r\n    return eTatDetail;  // 詳細グラフ用eTatを返却する\r\n};\r\n/**\r\n * 詳細グラフ用機能： 指定日時を秒単位に丸めて、FORMのslider Rangeに設定する（Plotから呼び出される）\r\n * \r\n * @memberof Init\r\n * @param {xMs}\r\n *            date 日時（ミリ秒単位）\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.SetDetailDateTime=function(date) {\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.setValueByKey(\"D_TIME\",\r\n            Math.floor(date / 1000) * 1000); // 秒単位に丸める #27\r\n};\r\n\r\n\r\n/**\r\n * ダイアログを表示する\r\n * \r\n * @memberof Init\r\n * @param {String}\r\n *            iHtml ダイアログのiHtmlに設定する文字列\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.ShowDialog = function(iHtml, id, w, h, style){\r\n    var element;\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"d\" /* Element */].createDialog(iHtml, element, id, w, h, style);\r\n};\r\n\r\n/**\r\n * 使い方HTMLを取得する（Menuイベントから呼び出される） #84\r\n * \r\n * @memberof Init\r\n * @return {String} str 使い方HTML\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.Usage=function(){\r\n    var url = \"https://github.com/hirosejn/HJN/wiki/Usage(JP)\";\r\n    var label = \"GitHub wiki : \" + url;\r\n    var html = 'Usage of TAT log diver'\r\n    + '<br>'\r\n    + '<br>'\r\n    + '<a class=\"hjnLabel4Input\" href=\"' + url + '\"'\r\n    +  'target=”_hirosejnUsage”>' + label +'</a><BR>';\r\n    \r\n    return __WEBPACK_IMPORTED_MODULE_5__tatLogDiver_Usage_js__[\"a\" /* Usage */].TopHtml;\r\n// return html;\r\n};\r\n\r\n/**\r\n * 著作権表記文字を取得する（Menuイベントから呼び出される）\r\n * \r\n * @memberof Init\r\n * @return {String} str 著作権表記文字\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.Copyright=function(){\r\n    return __WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Copyright_js__[\"a\" /* Copyright */].getAboutText();\r\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(17);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Tat;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_MappedETat_js__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timeSeries_ETat_js__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__timeSeries_Cash_js__ = __webpack_require__(11);\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class Tat\r\n * @classdesc Tat 応答時間(Turnaround time)の時系列データ管理クラス\r\n * @param {ETAT}\r\n *            [eTat] [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]<br>\r\n *            eTatが指定されているとき、this.seriesSet を設定する\r\n */\r\nfunction Tat(eTat) {\r\n    \r\n    this.cTpsUnit = Tat.UNIT_CTPS[0];\r\n    this.seriesSet = [];\r\n\r\n    if (eTat){\r\n        this.createSeries(eTat);\r\n    }\r\n}\r\n\r\n/**\r\n * クラス定数\r\n */\r\nTat.UNIT_CTPS = [\r\n        { label: \"/sec\",   unit: 1000 },\r\n        { label: \"/min\",   unit: 60000 },\r\n        { label: \"/hour\",  unit: 3600000 },\r\n        { label: \"/day\",   unit: 86400000 }];\r\nTat.CYCLE = 60000;  // ミリ秒 #57\r\n\r\n// グラフ定数\r\nTat.CONC = {\r\n        key : 'conc',\r\n        name : '多重度（詳細）',\r\n        label : 'conc:%N',\r\n        N : 0,\r\n        scale : 0,\r\n        color : 'rgba(  0,  0,127, 0.3)',\r\n        tpsN : 1\r\n    }; // #7\r\nTat.CTPS = {\r\n        key : 'cTps',\r\n        name : '多重度（区間最大）',\r\n        label : 'conc(max):%N',\r\n        N : 1,\r\n        scale : 0,\r\n        color : 'rgba(  0,  0,127, 0.1)',\r\n        detailN : 0\r\n    };\r\nTat.ETPS = {\r\n        key : 'eTps',\r\n        name : 'average tps / min (end) [line]', // #57\r\n        label : 'end:%Ntps',\r\n        N : 2,\r\n        scale : 0,\r\n        color : 'rgba(  0, 127, 127, 0.3)'\r\n    };\r\nTat.STAT = {\r\n        key : 'sTat',\r\n        name : 'response by start time [Y2軸:plot]',\r\n        label : 'start:%Nms',\r\n        N : 3,\r\n        scale : 1,\r\n        color : 'rgba(127, 127, 0, 0.3)'\r\n    };\r\nTat.ETAT = {\r\n        key : 'eTat',\r\n        name : 'response by end time   [Y2軸:plot]',\r\n        label : 'end:%Nms',\r\n        N : 4,\r\n        scale : 1,\r\n        color : 'rgba(127,  0,  0, 0.3)'\r\n    };\r\nTat.EMPS = {\r\n        key : 'eMps',\r\n        name : 'max response / min (end) [Y2軸:line]', // #57\r\n        label : 'max:%Nms',\r\n        N : 5,\r\n        scale : 1,\r\n        color : 'rgba(127,   0,  64, 0.3)'\r\n    };\r\nTat.EAPS = {\r\n        key : 'eAps',\r\n        name : 'average response / min (end) [Y2軸:line]', // #57\r\n        label : 'ave:%Nms',\r\n        N : 6,\r\n        scale : 1,\r\n        color : 'rgba(127,   0,  64, 0.1)'\r\n    };\r\nTat.toSeriesArray = function(conc, cTps, eTps, sTat, eTat, eMps, eAps) {\r\n    return [ conc, cTps, eTps, sTat, eTat, eMps, eAps ];\r\n}\r\nTat.seriesConfig = Tat.toSeriesArray(\r\n        Tat.CONC, Tat.CTPS, Tat.ETPS, Tat.STAT, Tat.ETAT,\r\n        Tat.EMPS, Tat.EAPS);\r\n\r\n/**\r\n * 終了時刻のTAT時系列データ(eTat)から、描画用時系列データ配列を作成する\r\n * \r\n * @memberOf TimeSeries\r\n * @param {ETAT}\r\n *            eTat [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]\r\n * @return {seriesSet} dygraph用時系列データ配列\r\n */\r\nTat.prototype.createSeries = function (eTat) {\r\n    // 時系列データを初期化する\r\n    var conc = [], cTps = [], eTps = [], sTat = [], eMps = [], eAps = [];\r\n\r\n    // 集計対象データがないとき\r\n    if (eTat.length === 0)\r\n        return Tat.toSeriesArray(conc, cTps, eTps, sTat, eTat, eMps, eAps);\r\n\r\n    /** eTatをソートする * */\r\n    // 開始時刻でソートする #35\r\n    eTat.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[1:eTat sorten ] \" + eTat.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** eTps(時間あたり処理件数),eMps,eAps(時間あたり最大/平均応答時間)時系列データを作成する * */\r\n    var dFrom = Math.floor(eTat[0].x / Tat.CYCLE) * Tat.CYCLE,\r\n        dTo = dFrom + Tat.CYCLE,\r\n        num = 0, // #39\r\n        maxTat = 0.0, // #19\r\n        aveTmp = 0.0;\r\n    eTat.forEach(function (e) {\r\n        if (e.x < dTo) {\r\n            num += 1;\r\n            if (maxTat < e.y) maxTat = e.y; // #19\r\n            aveTmp += e.y;\r\n        } else {\r\n            eTps.push({x : dFrom, y : num * 1000 / Tat.CYCLE}); // #57\r\n            eMps.push({x : dFrom, y : maxTat}); // #19\r\n            eAps.push({x : dFrom, y : aveTmp / num});\r\n            dFrom = Math.floor(e.x / Tat.CYCLE) * Tat.CYCLE;\r\n            dTo = dFrom + Tat.CYCLE;\r\n            num = 1;\r\n            maxTat = e.y; // #19 #39\r\n            aveTmp = e.y; // #39\r\n        }\r\n    }, this);\r\n    eTps.push({x : dFrom,             y : num * 1000 / Tat.CYCLE}); // #57\r\n    eTps.push({x : dFrom + Tat.CYCLE, y : num * 1000 / Tat.CYCLE}); // #57\r\n    eMps.push({x : dFrom,             y : maxTat}); // #19\r\n    eMps.push({x : dFrom + Tat.CYCLE, y : maxTat}); // #57\r\n    eAps.push({x : dFrom,             y : aveTmp / num});\r\n    eAps.push({x : dFrom + Tat.CYCLE, y : aveTmp / num}); // #57\r\n    \r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[3:eTps,eMps,eAps created] \" + eTps.length\r\n            + \" plots\", \"calc\");\r\n\r\n    /** sTat（開始時間）時系列データを作成する,同時に入力eTatを補正する * */\r\n    // eTatからsTatを登録する\r\n    eTat.forEach(function (e, i) {\r\n        // 処理時間=0 のとき、1マイクロ秒とみなす(有効桁0.2マイクロ秒に切上される）\r\n        if (e.y === 0) {\r\n            e.y = 0.001;\r\n            e.x += e.y;\r\n        } // ミリ秒\r\n        // sTatにeTatデータを登録する\r\n        sTat.push({\r\n            x : e.x - e.y,\r\n            y : e.y,\r\n            eTatIdx : i\r\n        });\r\n    });\r\n    // 開始時刻でソートする\r\n    sTat.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    // eTatにsTatの位置を設定する\r\n    sTat.forEach(function (s, i) {\r\n        eTat[s.eTatIdx].sTatIdx = i;\r\n    });\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[2:sTat created] \" + sTat.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** CONC(多重度)時系列データを作成する * */\r\n    var concTmp = [];\r\n    // eTatから、多重度が変化した時刻の一覧を作成する\r\n    eTat.map(function (e, i) {\r\n        // 開始時刻にカウントアップ情報を追加する\r\n        concTmp.push({x : e.x - e.y, y : 1});\r\n        // 終了時刻をカウントダウン情報を追加する\r\n        concTmp.push({x : e.x, y : -1});\r\n    });\r\n    // concを変化した時刻（開始or終了）でソートする\r\n    concTmp.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    // concに同時取引数を設定する\r\n    var concNum = 0;\r\n    concTmp.forEach(function (c, i, a) {\r\n        // 重複削除用フラグを立てる #23\r\n        if (i > 0 && c.x === a[i - 1].x) {\r\n            a[i - 1].del = true;\r\n        }\r\n        // 同時取引数を集計する(前提：c.y に、開始なら1、終了なら(-1)が設定されている)\r\n        concNum += c.y;\r\n        c.y = concNum;\r\n    });\r\n    // concの同じ時刻の点を削除する #23\r\n    conc = concTmp.filter(function (c) {\r\n        return !c.del;\r\n    });\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[4:conc created] \" + conc.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** cTPS秒間同時処理件数（concurrent transactions/sec）時系列データを作成する #18 * */\r\n    var XSec = floorTime(conc[0].x, Tat.CYCLE), // ミリ秒\r\n    YMax = conc[0].y, YNext = conc[0].y;\r\n    // concの先頭と末尾の時刻(x)の差よりPlot数を求め、Plot数が規定数(8000個)を超えたら、桁上げする #38\r\n    var cTpsMaxPlots = 8000, // 桁上げするPlot数\r\n    cTpsUnits = Tat.UNIT_CTPS, // #48\r\n    concTerm = conc[conc.length - 1].x - conc[0].x, // ミリ秒\r\n    cTpsIdx = 0;\r\n    while (cTpsIdx < cTpsUnits.length\r\n            && concTerm / cTpsUnits[cTpsIdx].unit > cTpsMaxPlots) {\r\n        cTpsIdx++;\r\n    }\r\n    cTpsIdx = (cTpsUnits.length > cTpsIdx) ? cTpsIdx : cTpsUnits.length - 1;\r\n    this.cTpsUnit = cTpsUnits[cTpsIdx];\r\n    // メニューのViewのcTPSのラベルに単位を追加する\r\n    var pos = (this === HJN.chart) ? 0 : 1;\r\n    document.getElementsByName(\"cTps\")[pos]\r\n                .parentNode.lastChild.data = HJN.Tat.CTPS.name + this.cTpsUnit.label;\r\n\r\n    // 規定時間単位の最大同時処理数cTPSを作成する\r\n    conc.forEach(function (c) {\r\n        if (floorTime(c.x, this.cTpsUnit.unit) === XSec) { // c.xは ミリ秒\r\n            YMax = Math.max(YMax, c.y);\r\n        } else {\r\n            cTps.push({x : XSec, y : Math.max(YMax, YNext)});\r\n            for (var t = XSec + this.cTpsUnit.unit;\r\n                    t < floorTime(c.x, this.cTpsUnit.unit);\r\n                    t += this.cTpsUnit.unit) { // c.xはミリ秒\r\n                        cTps.push({x : t, y : YNext});\r\n                if (YNext === 0) break;\r\n            }\r\n            XSec = floorTime(c.x, this.cTpsUnit.unit);\r\n            YMax = Math.max(YNext, c.y);\r\n        }\r\n        YNext = c.y;\r\n    }, this);\r\n    cTps.push({x : XSec, y : YMax});\r\n    cTps.push({x : XSec + this.cTpsUnit.unit, y : YNext});\r\n\r\n    // Util.Logger.ShowLogText(\"[5-1:cTps created] \" + cTps.length + \"\r\n    // plots\",\"calc\");\r\n\r\n    // cTpsのxからindexを引くMapを作成する #18\r\n    eTat = new __WEBPACK_IMPORTED_MODULE_2__timeSeries_ETat_js__[\"a\" /* default */](eTat); // #75\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[5:cTps created] \" + cTps.length + \" plots(\"\r\n            + +Math.floor(concTerm / 1000) + \"sec\" + cTpsUnits[cTpsIdx].label\r\n            + \")\", \"calc\");\r\n\r\n    // 集計結果をHJN.Graphに設定する 注）this.SERIESESと同じ順番にすること\r\n    this.seriesSet = Tat.toSeriesArray(conc, cTps, eTps, sTat, eTat, eMps, eAps);\r\n\r\n    return this;\r\n\r\n    \r\n    // 時刻を指定ミリ秒間隔で切り捨てる（内部関数）\r\n    function floorTime(t, cycle) {\r\n        return Math.floor(Math.floor(t / cycle) * cycle);\r\n    }\r\n};\r\n\r\n/**\r\n * cTpsの集計単位を取得する\r\n * \r\n * @memberOf TimeSeries\r\n * @return {object} 単位構造体 { label: \"/sec\", unit: 1000 }\r\n */\r\nTat.prototype.getCTpsUnit = function () {\r\n    return this.cTpsUnit;\r\n}\r\n\r\n/**\r\n * seriesSetを取得する\r\n * \r\n * @memberOf TimeSeries\r\n * @return {array} seriesSet\r\n */\r\nTat.prototype.getSeriesSet = function () {\r\n    return this.seriesSet;\r\n}\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf TimeSeries\r\n * @class MappedETat\r\n * @classdesc 期間指定eTat取得用Map\r\n *            <p>\r\n *            指定期間に動いているeTatの一覧を、高速に取得するマップ\r\n * @param {ETAT}\r\n *            eTat インデックスを追加するETAT\r\n * @example eTat.tatMap = new HJN_util.MappedETat(eTat); var trans =\r\n *          eTat.tatMap.search(x, x, 1000);\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #18\r\n    /** @static */\r\n    MappedETat.prototype = {\r\n            _abscissa: [],\r\n            _conf :[{ms:      10, step:5, label:\"0_10ms_\"},\r\n                    {ms:      50, step:2, label:\"1_50ms_\"},\r\n                    {ms:     100, step:5, label:\"2_100ms_\"},\r\n                    {ms:     500, step:2, label:\"3_500ms_\"},\r\n                    {ms:    1000, step:5, label:\"4_1sec_\"},\r\n                    {ms:    5000, step:4, label:\"5_5sec_\"},\r\n                    {ms:   20000, step:3, label:\"6_20sec_\"},\r\n                    {ms:   60000, step:5, label:\"7_1min_\"},\r\n                    {ms:  300000, step:4, label:\"8_5min_\"},\r\n                    {ms: 1200000, step:3, label:\"9_20min_\"},\r\n                    {ms: 3600000, step:6, label:\"10_1h_\"},\r\n                    {ms:21600000, step:4, label:\"11_6h_\"},\r\n                    {ms:Number.MAX_VALUE, step:1, label:\"12_overDay_\"}] // 最後はstep:１\r\n        };\r\n    /** @constructor */\r\n    function MappedETat(eTat){\r\n        if(!(this instanceof MappedETat)) return new MappedETat(eTat);\r\n        // MappedArrayを作成する\r\n        this._tatMap = new MappedArray(eTat, this._getKey, true);\r\n    }\r\n\r\n    /** @private */\r\n    MappedETat.prototype._row = function(label, step) {return label + step;};\r\n\r\n    /** @private */\r\n    // MapKey取得関数\r\n    MappedETat.prototype._getKey = function(e, i) {        // MapedMap用Key配列関数\r\n        var start = e.x - e.y,      // x,yはミリ秒\r\n            end = e.x,\r\n            _conf = MappedETat.prototype._conf,\r\n            _row = MappedETat.prototype._row,\r\n            term = _conf[0].ms,\r\n            rowLv = 0;\r\n        if(Math.ceil(end / term) - 1 === Math.floor(start / term)){ // 最小BOX\r\n            return [_row(_conf[0].label, 0),\r\n                    (Math.ceil(e.x / _conf[0].ms) - 1) * _conf[0].ms];\r\n        }\r\n        for (i = 1; i < _conf.length; i++) {                // 最下位から上に評価\r\n            term = _conf[i].ms;\r\n            if(Math.floor(end / term) === Math.floor(start / term) \r\n                    || end - start < term){                      // 上位BOXを起点\r\n                term = _conf[i-1].ms;   // ひとつ下位のBOX期間（下から評価したので二段下となることは無い\r\n                rowLv = Math.floor(end / term) - Math.floor(start / term);\r\n                return [_row(_conf[i-1].label, rowLv),\r\n                        (Math.ceil(e.x / _conf[i-1].ms) - 1) * _conf[i-1].ms];\r\n            }\r\n        }\r\n        return \"error\";\r\n    };\r\n\r\n    // static メンバーの設定\r\n    // _confから_abscissa(横軸）を生成する\r\n    var c = MappedETat.prototype._conf,\r\n        e2 = c[c.length - 2],\r\n        \r\n        e  = c[c.length - 1];\r\n    MappedETat.prototype._abscissa.push(\r\n            {label: MappedETat.prototype._row(e.label, e.step), ms: e.ms ,i: 1,\r\n                step: e.step, from: e2.ms * e2.step, to: e.ms} );   // 末尾を先頭に追加\r\n    for (var j = c.length - 1; 0 <= j; j--){    // 降順に追加\r\n        e = c[j];\r\n        for (var i = e.step; 0 < i; i--){ // #39\r\n            MappedETat.prototype._abscissa.push(\r\n                    {label: MappedETat.prototype._row(e.label, i), ms: e.ms, i: i, \r\n                                step: e.step, from: e.ms * i, to: e.ms * (i + 1)} );\r\n        }\r\n    }\r\n    MappedETat.prototype._abscissa.push( \r\n            {label: MappedETat.prototype._row(c[0].label, 0), ms: c[0].ms, i: 0,\r\n                step: 0, from: 0, to: c[0].ms} );   // 先頭を末尾に追加\r\n\r\n    \r\n    // public\r\n    /**\r\n     * 指定期間に動いているeTatを検索する\r\n     * \r\n     * @memberOf Util.MappedETat\r\n     * @parm {Number} from 指定期間(from)\r\n     * @parm {Number} [to=from] 指定期間(to)\r\n     * @parm {Number} [cap] cap件数となったら抽出を終了する（指定なしの時：全件）\r\n     * @return {ETAT} eTatArr 指定期間内のeTat配列\r\n     */\r\n    MappedETat.prototype.search = function (from, to, cap) {\r\n        to = to || from;    // to省略時は時刻指定(from=to)\r\n        cap = cap || Number.MAX_VALUE; // 指定なしの時：全件\r\n        var map = this._tatMap._map,\r\n            eTat = this._tatMap._arr,\r\n            abscissa = this._abscissa,\r\n            eTatArr = [],\r\n            start = 0,\r\n            end = 0;\r\n        // 検索対象のBOX一覧を生成する\r\n        abscissa.forEach(function(e){   // 存在しうる横軸のうち（tatが長時間の方から）\r\n            if (map[e.label]){          // 横軸が存在するものについて\r\n                var boxNum = e.i + Math.ceil(to / e.ms) - Math.floor(from / e.ms), // #45\r\n                    key = Math.floor(from / e.ms) * e.ms;\r\n                // 存在しうるKey値を終了時間が早い方から集計する\r\n                for(var j = 0; j <= boxNum; j++){\r\n                    // Key値が存在するものみが集計対象\r\n                    if (map[e.label][key]){ \r\n                        // かつ、Keyが持っている要素(eTatへの参照:k)が集計対象\r\n                        map[e.label][key].forEach(function(k){\r\n                            // かつ、from-toの期間に動いている要素(eTatのindex)が集計対象\r\n                            start = eTat[k].x - eTat[k].y;\r\n                            end   = eTat[k].x;\r\n                            if((start <= to) && (from <= end)){\r\n                                // かつ、戻り値の配列要素数がcap未満の場合が集計対象\r\n                                if(eTatArr.length < cap){\r\n                                    // 集計対象条件に合致する要素を、戻り値の配列に追加する\r\n                                    eTatArr = eTatArr.concat(eTat[k]);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    key += e.ms;    // 次のKey値\r\n                }\r\n            }\r\n        }, this);\r\n        return eTatArr;\r\n    };\r\n    \r\n    // newの戻り値\r\n    return MappedETat;\r\n}());\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class MappedArray\r\n * @classdesc 配列位置逆引きマップ\r\n *            <p>\r\n *            配列に格納されているオブジェクトのx値で、配列位置を高速検索するマップ<br>\r\n *            指定関数の戻り値(x)をキーとするマップを作成する\r\n *            <p>\r\n *            参考 {@link http://qiita.com/alucky0707/items/10052866719ba5c5f5d7}\r\n * \r\n * @param {Array}\r\n *            arr インデクスをつける対象の配列\r\n * @param {String|function}\r\n *            [getKey=\"\"] MappedArrayのKey値の取得方法\r\n *            <p>\r\n *            String指定のとき（デフォルト\"\"を含む）、配列要素の値(valueOf)\r\n *            <p>\r\n *            注： 0,00,\"0\"は同値、1,01,\"1\"は同値 Stringのとき、 配列要素が持つ指定要素の値\r\n *            <p>\r\n *            functionのとき、配列要素に指定関数を適用した戻り値\r\n *            <p>\r\n *            関数の引数：(配列要素オブジェクト、配列のインデックス、作成中のMappedArrayへの参照）\r\n * @param {Boolean}\r\n *            [isMappedMap] getKeyが2段Map用の配列を返却する\r\n * @return {object} Index arrに対するインデックス（連想配列名で検索）\r\n * @example _tatMap = new HJN_util.MappedArray(eTat, this._getKey, true);\r\n */\r\nvar MappedArray = (function() {    // #18\r\n    /** @constructor */\r\n    function MappedArray(arr, getKey, isMappedMap){\r\n        if(!(this instanceof MappedArray)) return new MappedArray();\r\n        this._arr = arr;\r\n        // getKeyによりIndex作成関数を設定する\r\n        if(!getKey || getKey === \"\"){\r\n            // getKey指定がないとき、配列の値\r\n            this._getKey = function(e){ return e.valueOf(); };\r\n        }else if ((typeof(getKey) === \"string\") && (getKey !== \"\")){    // #29\r\n            // getKeyが文字列のとき、配列内オブジェクトのgetKey要素の値\r\n            this._getKey = function(e){ return e[getKey]; };\r\n        }else if (typeof(getKey) === \"function\" ){  // #29\r\n            // getKeyが関数のとき、配列内オブジェクトに関数を適用した戻り値\r\n            this._getKey = getKey;\r\n        }else{  // 以外のときエラーログを出力し、getKey指定なしと同様、配列の値\r\n            console.error(\"MappedArrayの第二引数エラー：[ %o ]を無視します \",getKey);\r\n            this._getKey = function(e){ return e.valueOf(); };\r\n        }\r\n        // MappedArrayを作成する\r\n        if(!isMappedMap){\r\n            this._createMappedArray();          \r\n        }else{\r\n            this._createMappedMappedArray();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    MappedArray.prototype._createMappedArray = function() {\r\n        var key = \"\"; \r\n        this._map = this._arr.reduce(function(m, a, i) {\r\n            key = this._getKey.call(a, a, i, m);\r\n            m[key] = (m[key] || []).concat(i);\r\n            return m;\r\n        }, {});\r\n    };\r\n    /** @private */\r\n    MappedArray.prototype._createMappedMappedArray = function() {\r\n        var keys = [],\r\n            key = \"\",\r\n            mKey = \"\",\r\n            _getKey = this._getKey;\r\n        this._map = this._arr.reduce(function(m, a, i) {\r\n            keys = _getKey.call(a, a, i, m);\r\n            key = keys[1] || \"error\";\r\n            mKey = keys[0] || \"error\";\r\n            if(m[mKey] === undefined) m[mKey] = {};\r\n            m[mKey][key] = (m[mKey][key] || []).concat(i);\r\n            return m;\r\n        }, {});\r\n    };\r\n\r\n    // public\r\n    /**\r\n     * 値の存在チェック\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.has = function (keyValue) {\r\n        return keyValue in this._map;\r\n    };\r\n    /**\r\n     * 該当位置を配列で返す\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.indexes = function (keyValue) {\r\n        return this._map[keyValue] || [];\r\n    };\r\n    /**\r\n     * 該当する要素を配列で返す\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.search = function (keyValue) {    \r\n        var arr = this._arr;\r\n        return this.indexes(keyValue).reduce(function(m, i) {\r\n            m.push(arr[i]);\r\n            return m;\r\n        }, []);\r\n    };\r\n    /**\r\n     * Array.prototype.indexOf() 同等\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.indexOf = function (keyValue) {\r\n        var idxArr = this._map[keyValue],\r\n            i = idxArr ? idxArr.length : -1;\r\n        return (0 < i) ? idxArr[0] : -1;\r\n    };\r\n    /**\r\n     * Array.prototype.lastIndexOf() 同等\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.lastIndexOf = function (keyValue) {\r\n        var idxArr = this._map[keyValue],\r\n            i = idxArr ? idxArr.length : -1;\r\n        return (0 < i) ? idxArr[i-1] : -1;\r\n    };\r\n    \r\n    \r\n    return MappedArray;\r\n}());\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ETat;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__timeSeries_MappedETat_js__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_Cash_js__ = __webpack_require__(11);\n\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class ETat\r\n * @extends Array\r\n * @classdesc eTat管理クラス、Arrayのメソッドを継承\r\n * @param {Array}\r\n *            [that] ETAT構造の配列\r\n */\r\nfunction ETat(that) {\r\n    /** @private */\r\n    // cTpsのxからindexを引くMapを作成する #18\r\n    that.tatMap = new __WEBPACK_IMPORTED_MODULE_0__timeSeries_MappedETat_js__[\"a\" /* default */](that);\r\n    // キャッシュを作成する\r\n    that.cash = Object(__WEBPACK_IMPORTED_MODULE_1__timeSeries_Cash_js__[\"a\" /* default */])();\r\n\r\n    /**\r\n     * 指定期間のeTatを取得する<br>\r\n     * 性能対策としてキャッシュを持っている\r\n     * \r\n     * @memberof TimeSeries.ETat\r\n     * @param {Number}\r\n     *            [detailDateTime] 期間の基準時刻(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangeMinus] 抽出開始時刻を求める基準時刻から引く時間(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangePlus] 抽出終了時刻を求める基準時刻に足す時間(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangeUnit] 抽出開始終了時刻を丸める時間の単位(ミリ秒)\r\n     * @return {ETAT} 指定期間のETAT配列\r\n     */\r\n    that.sliceByRangeUnit = function (detailDateTime, detailRangeMinus, detailRangePlus, detailRangeUnit){\r\n        var rangeUnit = detailRangeUnit || TimeSeries.Tat.CYCLE;\r\n        var dt = Math.floor(detailDateTime / rangeUnit) * rangeUnit; // 中央時刻(ミリ秒)\r\n        var from = dt - detailRangeMinus * rangeUnit;  // #48\r\n        var to = dt + detailRangePlus  * rangeUnit;  // 幅（ミリ秒）\r\n        var eTatDetail = [{x: 0, y: 0.001, sTatIdx: 0}];    // tatMapが無い場合の返却値\r\n        if (this.tatMap){ // #18\r\n            // eTatDetailがレンジキャッシュにあるか確認する #30\r\n            eTatDetail = this.cash.getRangedCash(from, to);\r\n            if(eTatDetail === undefined){\r\n                // キャッシュヒットしないとき、eTatDetailを抽出し、キャッシュにセットする\r\n                eTatDetail = this.tatMap.search(from,to);\r\n                this.cash.setRangedCash(eTatDetail, from, to);\r\n            }\r\n        }\r\n        return eTatDetail;\r\n    }\r\n\r\n    return that\r\n}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf TimeSeries\r\n * @class Cash\r\n * @classdesc キャッシュ\r\n *            <p>\r\n *            キャッシュを保持させるオブジェクト\r\n * @param {Number}\r\n *            [size=10] キャッシュ最大件数（未対応機能、設定は無視される）\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() {\r\n    /** constructor */\r\n    function Cash(size){\r\n        size = size || 10;  // TODO 未使用\r\n        if(!(this instanceof Cash)) return new Cash(size);\r\n        // インスタンス変数\r\n        this._cash = {};    // キャッシュ {data:, count:, lastTime:}\r\n        this._ranges = [];  // RangedCash用 {key: ,from: , to:, }\r\n        this._size = size;  // キャッシュ最大件数\r\n    }\r\n    \r\n    /* method */\r\n    /**\r\n     * 第一引数のargumentsを配列に変換する<br>\r\n     * （注：引数が１つ以上あることを前提）\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            args 引数一覧（arguments）\r\n     * @return {Array} 引数の配列\r\n     */\r\n    Cash._arg2arr = function(args) {\r\n            return args.length === 1 ? [args[0]] : Array.apply(null, args);\r\n        };\r\n    /**\r\n     * cash判定Keyを取得する<br>\r\n     * （注：引数を'.'でつないだ文字列をkeyとするので、関数名長の上限を超える大きな配列は不可）\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            args 引数一覧（argumentsオブジェクト）\r\n     * @return {String} キャッシュキー用の文字列\r\n     */\r\n    Cash._getKey = function(args) {\r\n            var argsArr = this._arg2arr(args);\r\n            return argsArr.reduce(function(a,b){return a+'.'+b; });\r\n        };\r\n        \r\n    /* private */\r\n\r\n    /* public */\r\n    /**\r\n     * cashオブジェクトを、cashが無いときはundefinedを返却する<br>\r\n     * cashヒットした場合、cashの使用回数をカウントアップする\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            arguments 引数からキー文字列を定める\r\n     * @return {Number|undefined} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.getCash = function () {\r\n            if (arguments.length < 1) return undefined;\r\n            var args = Cash._arg2arr(arguments),\r\n                key = Cash._getKey(args);\r\n            if (key in this._cash){\r\n                var cash = this._cash[key];\r\n                cash.lastTime = new Date();\r\n                cash.count++;\r\n                return cash.data;\r\n            }else{\r\n                return undefined;\r\n            }\r\n        };\r\n    /**\r\n     * オブジェクトをcashする\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            cashVal キャッシュするオブジェクト\r\n     * @param {Object}\r\n     *            arguments 第二引数以降の、引数からキー文字列を定める\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.setCash = function () {\r\n            if (arguments.length < 2) return undefined;\r\n            var cashVal = arguments[0],\r\n                args = Cash._arg2arr(arguments).slice(1, arguments.length),\r\n                key = Cash._getKey(args);\r\n            this._cash[key] = {data: cashVal, count: 0, lastTime:new Date()};\r\n            return cashVal;\r\n        };\r\n\r\n    /**\r\n     * レンジキー(form,to)範囲内でキーマッチするcashを、cashが無いときはundefinedを返却する<br>\r\n     * キーは大小比較できる数値であることが前提\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            from 抽出するキャッシュキー最小値\r\n     * @param {Number}\r\n     *            to 抽出するキャッシュキーの最大値\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.getRangedCash = function (from, to) {\r\n            var range = this._ranges.find(function(e){\r\n                    return (e.from <= from && to <= e.to);\r\n                });\r\n            return (range !== undefined) ? this.getCash(range.from,range.to) : undefined;\r\n        };\r\n    /**\r\n     * レンジキー(from,to)指定でキャッシュする<br>\r\n     * キーは大小比較できること（通常、数値）、from-to期間内の既存のキャッシュは削除される\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            cashVal キャッシュするオブジェクト\r\n     * @param {Number}\r\n     *            from 抽出するキャッシュキー最小値\r\n     * @param {Number}\r\n     *            to 抽出するキャッシュキーの最大値\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.setRangedCash = function (cashVal, from, to) {\r\n            if (arguments.length < 3) return undefined;\r\n            // 登録キー範囲に包含される既存キャッシュを削除する\r\n            var count = 0;\r\n            this._ranges = this._ranges.filter(function(e){\r\n                    if (from <= e.from && e.to <= to){\r\n                        // 登録キャッシュ範囲内のキャッシュを削除する\r\n                        count += this._cash[e.key].count;   // 削除分のカウンタ合算\r\n                        delete this._cash[e.key];\r\n                        return false;\r\n                    }else{  // 登録キャッシュの範囲外の一覧を返却する\r\n                        return true;\r\n                    }\r\n                }, this);\r\n            // 引数をキャッシュに登録する\r\n            var key = Cash._getKey([from, to]);\r\n            this._ranges.push( {from: from, to: to, key: key} );\r\n            this.setCash(cashVal, from, to);\r\n            this._cash[key].count= count + 1;   // 再作成時はカウンタ合算値\r\n            return cashVal;\r\n        };\r\n\r\n    // newの戻り値\r\n    return Cash;\r\n}());\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__simulator_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util_js__ = __webpack_require__(0);\n\r\n\r\n\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualSystem\r\n * @classdesc 仮想システム\r\n *            <p>\r\n *            Web3層(Web-AP-DB)をシミュレートしたWebのTATログ生成する\r\n *            <p>\r\n *            Webサーバ<br>\r\n *            最大スレッド数： Apache 2.4 [MaxClients = 1024]<br>\r\n *            JBossトランザクションタイムアウト [default-timeout = 300 秒]<br>\r\n *            キュー長 ： Apache 2.4 ListenBackLog (511) + Linux\r\n *            tcp_max_syn_backlog(769=1024*0.75+1)、タイムアウトなし<br>\r\n *            APサーバ<br>\r\n *            最大スレッド数(maxThreads)<br>\r\n *            JBossトランザクションタイムアウト [default-timeout=300 秒]<br>\r\n *            DBサーバ 最大コネクション数(max_connections)\r\n * \r\n * @param {Number}\r\n *            [start = 1970/01/02 00:00:00)] シミュレート開始時刻（UNIX日付（ミリ秒））\r\n * @param {Number}\r\n *            [end = startの24時間後] シミュレート終了時刻（UNIX日付（ミリ秒））\r\n * @param {String}\r\n *            [resourcesJson] リソース指定JSONテキスト\r\n * @param {Boolean}\r\n *            [log=false] 詳細ログ出力有無\r\n * @example sim = simulator.VirtualSystem()\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #53　\r\n    /** @constructor */\r\n    function VirtualSystem(start, end, resourcesJson, log){\r\n        if(!(this instanceof VirtualSystem)){\r\n            return new VirtualSystem(start, end, resourcesJson, log);\r\n        }\r\n        if (!resourcesJson) {\r\n            var jsonText =  '['\r\n                +   '{\"type\" :\"WEB\",\"thread\":1024,\"timeout\":300000, \"q\":1280, \"qWait\":0},'\r\n                +   '{\"type\" :\"AP\", \"thread\":20,  \"timeout\":300000, \"q\":1280, \"qWait\":0},'\r\n                +   '{\"type\" :\"DB\", \"thread\":2,   \"timeout\": 10000, \"q\":1000, \"qWait\":10000}'\r\n                + ']';\r\n            resourcesJson = JSON.parse(jsonText);\r\n        }\r\n        this.eTat = []; // シミュレートにより生成するTATログ出力先\r\n        var _resources = resourcesJson;\r\n        this._log = log ? log : false; // #53\r\n        this._start = +start || new Date(1970, 1, 2);   // シミュレート開始時刻\r\n        this._end = end || this._start + 24*60*60*1000; // シミュレート終了時刻（デフォルト：24時間後)\r\n        this._simulator = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"e\" /* Heap */](                // イベント予約スケジュール（ヒープ）\r\n                function(obj){ return obj.getTime(); }, // プライオリティの判定\r\n                function(obj){ return obj; });  // 削除対象の判定 #61\r\n        this._now = 0; // シミュレーション時の現在時刻\r\n        // リソースを設定する\r\n        this._resources = {}\r\n        for (var i = 0; i < _resources.length; i++) {\r\n            var e = _resources[i];\r\n            e.log = e.log ? e.log : this._log; // #53\r\n            this._resources[e.type] = Object(__WEBPACK_IMPORTED_MODULE_0__simulator_js__[\"c\" /* VirtualResource */])(this, // #61\r\n                    e.type, e.thread, e.timeout, e.q, e.qWait, e.log);\r\n        };\r\n        VirtualSystem.debug = this; // ★\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * 仮想クライアントをスケジューラに登録する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {String}\r\n     *            [userName = \"Default_\"] ログに出力するユーザ名\r\n     * @param {String}\r\n     *            [message = \"\"] ログの末尾に出力するデータ\r\n     * @param {Number}\r\n     *            [num = 3] 期間内に生成する仮想クライアントの数\r\n     * @param {Number}\r\n     *            [start = Util.S2D(\"1970/01/02 00:00:00\")]\r\n     *            仮想クライアント生成開始時刻（UNIX時刻の数値、ミリ秒）\r\n     * @param {Number}\r\n     *            [end = startの0.1秒後] 仮想アプリケーション強制終了時刻（UNIX時刻の数値、ミリ秒）\r\n     * @param {Object}\r\n     *            model 仮想クライアントが実行する取引モデル\r\n     */\r\n    VirtualSystem.prototype.setClients = function(userName, message, num, start, end, model) {\r\n        userName = userName || \"Default_\";\r\n        message = message || \"\";\r\n        num = (typeof(num) === \"number\") ? num : 1; // #61\r\n        start = +start || __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"i\" /* S2D */](\"1970/01/02 00:00:00\");\r\n        end = +end || start + 100;\r\n        // baseModelが指定されているとき、modelに展開する\r\n        if (model.baseModel){\r\n            model = VirtualSystem.getModel(\r\n                model.baseModel.holds, model.baseModel.tatMin, model.baseModel.tat,\r\n                model.sequence, model.times, model.thinkTimeMin, model.thinkTime);\r\n        }\r\n        // modelにmessageを設定する\r\n        if (typeof(model.message) === \"string\") {\r\n            model.message += message;\r\n        } else {\r\n            model.message = message;\r\n        }\r\n        // 仮想APを登録する\r\n        var checkStart = start;\r\n        var r = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"h\" /* Random */]((end - start) / num);\r\n        var t = start;\r\n        for (var i = 0; i < num; i++) {\r\n            // 仮想APを作成する\r\n            var vApp = Object(__WEBPACK_IMPORTED_MODULE_0__simulator_js__[\"b\" /* VirtualApp */])(userName + i, model);\r\n            // 仮想APに開始時刻（指数分布）を設定し、登録する\r\n            t += Math.round(r.exponential());\r\n            this.setEvent(vApp.start(t));\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * イベントをスケジューラに登録する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Object}\r\n     *            event 仮想クライアントもしくは仮想リソースのイベント\r\n     */\r\n    VirtualSystem.prototype.setEvent = function(event) {\r\n        this._simulator.push(event);\r\n    }\r\n\r\n    /**\r\n     * スケジューラからイベントを削除する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Object}\r\n     *            event 仮想クライアントもしくは仮想リソースのイベント\r\n     */\r\n    VirtualSystem.prototype.removeEvent = function(event) {\r\n        this._simulator.del(event);\r\n    }\r\n\r\n    /**\r\n     * シミュレーションを実行する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @return {eTat} シミュレート実行結果のログ（this.eTat）\r\n     */\r\n    VirtualSystem.prototype.execute = function() {\r\n        var event, events;\r\n        // 処理対象がなくなるか、シミュレート終了時刻になるまでシミュレートする\r\n        while(0 < this._simulator.size() &&\r\n                this._simulator.top().getTime() <= this._end ) {\r\n            // 次にイベントを迎える仮想APを取り出し、「次の処理」をシミュレートする\r\n            event = this._simulator.pop();\r\n            this._now = event.getTime(); // #59\r\n            events = event.next(this);\r\n            // 「次の処理」のシミュレートに伴い発生したイベントを、スケジュールする\r\n            while (events.length) {\r\n                this._simulator.push(events.pop());\r\n            }\r\n        }\r\n        // シミュレーション終了後処理（処理中のvAppを強制終了する） #59\r\n        while(0 < this._simulator.size()){\r\n            event = this._simulator.pop();\r\n            if (event._finish) {\r\n                event._finish(this, \"N_EoS\", \"\", this._end);\r\n            }\r\n        }\r\n        // シミュレーション終了後処理（リソース開放待ちのvAppを強制終了する） #59\r\n        for (var key in this._resources){\r\n            this._resources[key]._finish(this, \"N_EoS\", \"\", this._end);\r\n        }\r\n        \r\n        return this.eTat;\r\n    };\r\n\r\n    /**\r\n     * リソースを取得する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {String}\r\n     *            [name = \"unlimited\"] 仮想リソース名\r\n     * @return {Object} 仮想リソース（登録されていないときは、新たにholdCapacity=1の仮想リソースを登録）\r\n     */\r\n    VirtualSystem.prototype.getResouce = function(name) {\r\n        if (typeof(this._resources[name]) === \"undefined\") {\r\n            this._resources[name] = Object(__WEBPACK_IMPORTED_MODULE_0__simulator_js__[\"c\" /* VirtualResource */])(this, name);\r\n        }\r\n        return this._resources[name];\r\n    };\r\n\r\n    /**\r\n     * シミュレーション現在時刻（処理中のイベントの時刻）を返却する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualSystem.prototype.getTime = function() {\r\n        return this._now;\r\n    };\r\n\r\n\r\n    // Static Method\r\n    /**\r\n     * 取引モデルを取得する（ユーティリティ）\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Array}\r\n     *            [baseModel = []] 使用リソースの一覧[\"WEB\",\"AP\",\"DB\"]\r\n     * @param {Number}\r\n     *            [tat = 5] 使用リソースの平均取得時間＆平均開放時間\r\n     * @param {Number}\r\n     *            [tatMin = 2] 使用リソースの最小取得時間＆最小開放時間\r\n     * @param {Array}\r\n     *            [sequence = []] イベントシーケンス\r\n     * @param {Number}\r\n     *            [times = undefined] イベントシーケンスの繰り返し回数（未指定時:1)\r\n     * @param {Number}\r\n     *            [thinkTime= undefined] イベントシーケンス終了時に再実行する場合の平均再開時間（未指定時:500)\r\n     * @param {Number}\r\n     *            [thinkTimeMin = undefined]\r\n     *            イベントシーケンス終了時に再実行する場合の最小再開時間（未指定時:thinkTimeと同じ）\r\n     * @param {String}\r\n     *            [message = \"\"] 自動生成ログの末尾に追加する文字列\r\n     * @return {Object} 取引モデル\r\n     */\r\n    VirtualSystem.getModel = function(baseModel, tatMin, tat, sequence, times, thinkTimeMin, thinkTime, message) {\r\n        baseModel = baseModel || [];\r\n        tatMin = tatMin || 2;\r\n        tat = tat || 5;\r\n        message = message || \"\";\r\n        sequence = sequence || [\r\n                {tatMin:6,   tat:15,  note:\"Req\",     hold:\"DB\",    free:[]},\r\n                {tatMin:70,  tat:100, note:\"selectA\", hold:\"TBL_A\", free:[\"TBL_A\"]},\r\n                {tatMin:150, tat:200, note:\"updateB\", hold:\"TBL_B\", free:[]},\r\n                {tatMin:30,   tat:50,  note:\"Res\",     hold:\"\",      free:[\"TBL_B\",\"DB\"]}\r\n            ];\r\n        var model = {sequence :[], message : message}; // 戻り値\r\n        if (typeof(times) === \"number\") model.times = times;\r\n        if (typeof(thinkTimeMin) === \"number\") model.thinkTimeMin = thinkTimeMin;\r\n        if (typeof(thinkTime) === \"number\") model.thinkTime = thinkTime;\r\n        \r\n        // baseModelを返却用シーケンスに展開する\r\n        baseModel.forEach( function(e) {\r\n            model.sequence.push({hold:e, tatMin:tatMin, tat:tat, free:[]});\r\n        });\r\n        // 指定シーケンスを返却用シーケンスに追加する\r\n        model.sequence = model.sequence.concat(sequence);\r\n\r\n        // 返却用シーケンスに、holdingを追加するとともにシーケンス終了時未開放リソースを取得する\r\n        var resources = []; // #61\r\n        var holding = []; // #59\r\n        model.sequence.forEach( function(tran) { // #61\r\n            // tatMinがtatより大きいとき、tatをtatMin一定とする #59\r\n            if (tran.tat < tran.tatMin) tran.tat = tran.tatMin;\r\n            // 処理開始時にholdしているリソース一覧をholdingに登録する #59\r\n            tran.holding = [];\r\n            resources.forEach(function(r) {tran.holding.push(r)});\r\n            // 未開放リソース一覧を更新する\r\n            if (typeof(tran.hold) !== \"undefined\" && tran.hold !== \"\") {\r\n                resources.push(tran.hold);                \r\n            }\r\n            if (tran.free) {\r\n                tran.free.forEach( function(free){\r\n                    resources.some( function(r, i){\r\n                        if (r == free) {\r\n                            resources.splice(i,1);\r\n                            return true;\r\n                        }\r\n                    })    \r\n                })\r\n            }\r\n        }, this);\r\n        // シーケンス終了時未開放リソースが残っているとき、返却用シーケンスにリソース開放処理を追加する\r\n        if (0 < resources.length){\r\n            model.sequence = model.sequence.concat(\r\n                    [{hold: \"\", tatMin: tatMin * baseModel.length, tat: tat * baseModel.length,\r\n                        free: resources.reverse()}]);\r\n        }\r\n        return model;\r\n    };\r\n    \r\n    /* new */\r\n    return VirtualSystem;\r\n}());\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = MenuConfigDetailGraph;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__ = __webpack_require__(3);\n\r\n\r\n\r\n\r\n/**\r\n * @memberOf tatLogDiver\r\n * @class MenuConfigDetailGraph\r\n * @classdesc DetailGraph用メニューHTML定義\r\n * \r\n */\r\nfunction MenuConfigDetailGraph() {} // #27\r\n\r\nMenuConfigDetailGraph.config = function () {\r\n    var prefix = \"DetailGraph\";\r\n    var c = new  __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */](prefix);\r\n    // Config設定画面定義\r\n    c \r\n        .name(\"D_RANGE\").label(null,\"Range:\")\r\n            .number(\"D_RANGE_MINUS\", \" - \", \"\", \"1\", 'style=\"width:40px;\"', func_D)\r\n            .number(\"D_RANGE_PLUS\"  , \" + \", \"\", \"2\", 'style=\"width:40px;\"', func_D)\r\n        .name(\"D_UNIT\").startTag(\"select\")\r\n            .option(c.def(\"D_UNIT_SEC\",         1000), null, \"sec\",   false, null, func_D) // #48\r\n            .option(c.def(\"D_UNIT_10SEC\",      10000), null, \"10sec\", true,  null, func_D)\r\n            .option(c.def(\"D_UNIT_MIN\",        60000), null, \"min\",   false, null, func_D)\r\n            .option(c.def(\"D_UNIT_HOUR\",     3600000), null, \"hour\",  false, null, func_D)\r\n            .option(c.def(\"D_UNIT_6HOUR\",   21600000), null, \"6hour\", false, null, func_D)\r\n            .option(c.def(\"D_UNIT_DAY\",     86400000), null, \"day\",   false, null, func_D)\r\n            .option(c.def(\"D_UNIT_YEAR\", 31536000000), null, \"year\",  false, null, func_D)\r\n        .endTag()\r\n    ;\r\n}\r\n\r\n// Config登録関数定義\r\nfunction func_D(){\r\n    clearTimeout(HJN.timer);\r\n    HJN.timer = setTimeout(function(){\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogTextInit(\"[-:HJN.init.setDetailRange]start---------------\",\"calc\");\r\n            // 表示中Plotsのrangeを更新する #30\r\n            var i = HJN.Plot.List.findIndex(function(e){ return (e.radio === true); });\r\n            var plot = HJN.Plot.List[i];\r\n            plot.rangePlus  = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getConfig(\"D_RANGE_PLUS\"); // #27\r\n            plot.rangeMinus = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getConfig(\"D_RANGE_MINUS\");\r\n            plot.rangeUnit = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getConfig(\"D_UNIT\"); // #48\r\n            plot.rangeUnit = plot.rangeUnit  ? plot.rangeUnit  : __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE; // #57\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.setValueByKey(\"D_UNIT\", plot.rangeUnit);\r\n\r\n            // 下段データを登録する\r\n            var tat = new __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */](HJN.init.GetSliderRangedEtat()); // #75\r\n            HJN.chartD.setSeriesSet(tat);\r\n            // 下段グラフを描画する\r\n            __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__[\"a\" /* default */].prototype.update.call(HJN.chartD, HJN.chartD.seriesSet);\r\n        }, 750);    // 750ms 値の変更がなかった時に、処理を開始する\r\n };\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__libs_dygraph_css__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__libs_dygraph_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__libs_dygraph_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_css__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Init_js__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Graph_js__ = __webpack_require__(1);\n\r\n\r\n\r\n\r\n\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\",function(eve){\r\n    Object(__WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Init_js__[\"b\" /* default */])(\"chart\");      // チャートを作成する\r\n});\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(16);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./dygraph.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./dygraph.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(6)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"/**\\n * Default styles for the dygraphs charting library.\\n */\\n\\n.dygraph-legend {\\n  position: absolute;\\n  font-size: 14px;\\n  z-index: 10;\\n  width: 250px;  /* labelsDivWidth */\\n  /*\\n  dygraphs determines these based on the presence of chart labels.\\n  It might make more sense to create a wrapper div around the chart proper.\\n  top: 0px;\\n  right: 2px;\\n  */\\n  background: white;\\n  line-height: normal;\\n  text-align: left;\\n  overflow: hidden;\\n}\\n\\n/* styles for a solid line in the legend */\\n.dygraph-legend-line {\\n  display: inline-block;\\n  position: relative;\\n  bottom: .5ex;\\n  padding-left: 1em;\\n  height: 1px;\\n  border-bottom-width: 2px;\\n  border-bottom-style: solid;\\n  /* border-bottom-color is set based on the series color */\\n}\\n\\n/* styles for a dashed line in the legend, e.g. when strokePattern is set */\\n.dygraph-legend-dash {\\n  display: inline-block;\\n  position: relative;\\n  bottom: .5ex;\\n  height: 1px;\\n  border-bottom-width: 2px;\\n  border-bottom-style: solid;\\n  /* border-bottom-color is set based on the series color */\\n  /* margin-right is set based on the stroke pattern */\\n  /* padding-left is set based on the stroke pattern */\\n}\\n\\n.dygraph-roller {\\n  position: absolute;\\n  z-index: 10;\\n}\\n\\n/* This class is shared by all annotations, including those with icons */\\n.dygraph-annotation {\\n  position: absolute;\\n  z-index: 10;\\n  overflow: hidden;\\n}\\n\\n/* This class only applies to annotations without icons */\\n/* Old class name: .dygraphDefaultAnnotation */\\n.dygraph-default-annotation {\\n  border: 1px solid black;\\n  background-color: white;\\n  text-align: center;\\n}\\n\\n.dygraph-axis-label {\\n  /* position: absolute; */\\n  /* font-size: 14px; */\\n  z-index: 10;\\n  line-height: normal;\\n  overflow: hidden;\\n  color: black;  /* replaces old axisLabelColor option */\\n}\\n\\n.dygraph-axis-label-x {\\n}\\n\\n.dygraph-axis-label-y {\\n}\\n\\n.dygraph-axis-label-y2 {\\n}\\n\\n.dygraph-title {\\n  font-weight: bold;\\n  z-index: 10;\\n  text-align: center;\\n  /* font-size: based on titleHeight option */\\n}\\n\\n.dygraph-xlabel {\\n  text-align: center;\\n  /* font-size: based on xLabelHeight option */\\n}\\n\\n/* For y-axis label */\\n.dygraph-label-rotate-left {\\n  text-align: center;\\n  /* See http://caniuse.com/#feat=transforms2d */\\n  transform: rotate(90deg);\\n  -webkit-transform: rotate(90deg);\\n  -moz-transform: rotate(90deg);\\n  -o-transform: rotate(90deg);\\n  -ms-transform: rotate(90deg);\\n}\\n\\n/* For y2-axis label */\\n.dygraph-label-rotate-right {\\n  text-align: center;\\n  /* See http://caniuse.com/#feat=transforms2d */\\n  transform: rotate(-90deg);\\n  -webkit-transform: rotate(-90deg);\\n  -moz-transform: rotate(-90deg);\\n  -o-transform: rotate(-90deg);\\n  -ms-transform: rotate(-90deg);\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(19);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(6)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"@CHARSET \\\"UTF-8\\\";\\r\\n/*   ****1**** ****2**** ****3**** ****4**** ****5**** ****6**** ****7***** */\\r\\n/* リセットCSS */\\r\\nhtml, body, h1, h2, h3, h4, ul, ol, dl, li, dt, dd, p, div, span, img, a, table, tr, th, td, selector{\\r\\n margin: 0; padding: 0; border: 0; font-weight: normal; font-size: 100%; vertical-align:baseline;\\r\\n -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }\\r\\narticle, header, footer, aside, figure, figcaption, nav, section { display:block; }\\r\\nbody { line-height: 1; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; }\\r\\nol, ul { list-style: none; list-style-type: none; }\\r\\n*:focus { outline: 0; }\\r\\n\\r\\n/* TAT log diver */\\r\\nbody\\t{ font-size: 12px; font-family: \\\"\\\\30E1\\\\30A4\\\\30EA\\\\30AA\\\",\\\"Meiriyo\\\",\\\"\\\\30D2\\\\30E9\\\\30AE\\\\30CE\\\\89D2\\\\30B4   ProN W3\\\",\\\"Hiragino Kaku Gothic ProN\\\",\\\"sans-serif\\\"; }\\r\\nnav \\t{ height: 36px; }\\r\\ninput\\t{ border-width: 1px; font-size: 12px; }\\r\\nselect  { background: #eee;}\\r\\n#Simulator {overflow: auto; resize: both; position: absolute; z-index: 100; background: rgba(255,255,255,0.5); }\\r\\n.statusbar\\t{ z-index: 99; visibility:visible; padding: 5px; background: #fff; }\\r\\n.statusbar > iframe { overflow: hidden; border: 0; width: 100%; }\\r\\n.lineViewer {margin: 10px 0px 2px; overflow: hidden; padding: 0px; border: 1px #cccccc dotted; }\\r\\n.hjnCode { font-family: \\\"monospace\\\",\\\"Consolas\\\", \\\"\\\\FF2D\\\\FF33\\\\30B4\\\\30B7\\\\30C3\\\\30AF\\\";}\\r\\n/* draggable box */\\r\\n.hjnDraggableBox {}\\r\\n.hjnDraggableItem:hover {background: rgba(128, 128, 128, 0.2); transition: all 0.2s; }\\r\\nfooter { position: fixed; bottom: 0%; text-align: right; font-size: smaller; }\\r\\n\\r\\n/* ハンバーガーメニュー */\\r\\n.hjnBurgerTray { position :fixed; display: inline-block; visibility: hidden; z-index: 96;\\r\\n\\ttop :0; right :0; width :305px; height:100%; padding :0 18px 0 0; background :#fff; }\\r\\n/* ハンバーガーボタン */\\r\\n.hjnCtrlBox { position: relative; float: right; cursor: pointer; z-index: 98;\\r\\n\\twidth: 40px; height: 40px; background-color: #fff; visibility: visible;\\r\\n\\tborder: 1px solid #ccc; box-shadow:\\t1px 1px 1px #ccc; border-radius: 4px; \\r\\n\\tline-height: 12px; box-sizing: border-box;\\ttransition: all 0.1s; }\\r\\n.hjnCtrlBox:hover { border: #ccc; }\\r\\n.hjnCtrlBox:active { border: 1px solid #999;  }\\r\\n.hjnBurger { display: none; }\\r\\n.hjnBurger + label span { top: 17px; height: 4px; border-radius: 2px;\\r\\n\\tposition: absolute; left: 6px; width: 69%; background-color: #888; }\\r\\n.hjnBurger + label span::before, .hjnBurger + label span::after { border-radius: 2px;\\r\\n\\tposition: absolute; width: 26px; height: 4px; background: #888;\\r\\n\\tdisplay: block; content: ''; transition: transform 0.1s; }\\r\\n.hjnBurger + label span::before { top: -8px; }\\r\\n.hjnBurger + label span::after { top: 8px; }\\r\\n.hjnBurger:checked + label span { background: transparent; }\\r\\n.hjnBurger:checked + label span::before { transform: translateY(8px) rotate(-45deg); }\\r\\n.hjnBurger:checked + label span::after { transform: translateY(-8px) rotate(45deg); }\\r\\n\\r\\n/* メニュー 全体 */\\r\\n.hjnBurgerTitle { /* ハンバーガーメニューオープン時の見出し */\\r\\n\\tposition: absolute; visibility: visible; color: #999; background:#fff; width: 100%;\\r\\n\\tpadding: 0 98px 0 15px; opacity: 0; z-index: 97; background-color: transparent;\\r\\n\\ttransform: translate3d(0, -15px, 0); transition: transform 0.1s, opacity 0.5s; }\\r\\n.hjnBurgerTitle p { word-wrap: break-word; line-height: 18px; width: 160px; }\\r\\n.hjnBurger:checked ~ .hjnBurgerTitle { transform: none;  opacity: 1; }\\r\\n.hjnBurgerWrap { position: absolute;  visibility: visible; width :100%; height :100%;\\r\\n\\tbackground: #fff; opacity: 0.9;\\ttop: 0; right: -100%; transition: right 0.1s;\\r\\n\\tpadding: 43px 0 0 0; overflow: scroll;}\\r\\n.hjnBurger:checked ~ .hjnBurgerWrap { right: 0; }\\r\\n/* Copyright表示 */\\r\\n.hjnBurgerTitle a {\\r\\n    color: #4d4e53; text-decoration: none; border-bottom: 1px dotted #afafaf; }\\r\\n/* モードボタン */\\r\\n.hjnBoxSwitch { display: none; }\\r\\n.hjnBoxSwitch + label span::before, .hjnBoxSwitch + label span::after\\r\\n\\t\\t{ display: inline-block; text-align:center; transition: all 0.1s; width: 100%}\\r\\n.hjnBoxSwitch + label span::before, .hjnBoxSwitch:checked + label span::after\\r\\n\\t\\t{ color: #ddd; }\\r\\n.hjnBoxSwitch + label span::after, .hjnBoxSwitch:checked + label span::before \\r\\n\\t\\t{ color: #888; font-weight: bold; }\\r\\n\\r\\n#hjnBoxPlaceOn + label span::before { content: \\\"Place on\\\"; }\\r\\n#hjnBoxPlaceOn + label span::after  { content: \\\"side\\\"; }\\r\\n#chartZoom + label span::before, #chartDZoom + label span::before  { content: \\\"reset zoom\\\"; }\\r\\n/* スイッチラベル */\\r\\n.hjnBoxOn { display: none; }\\r\\n.hjnBoxOn + label { text-align:center; color: #ddd; }\\r\\n.hjnBoxOn:checked + label { color: #888; font-weight: bold;}\\r\\n\\r\\n /* アコーデオンメニュー */\\r\\n.hjnAccordion { list-style-type: none; margin: 0; padding: 0; }\\r\\n.hjnMenuLv1 { position:rerative; margin: 0 0 0 10px; }\\r\\n.hjnMenuLv1 > input { display: none; }\\r\\n.hjnMenuLv1 > label::before { content: \\\"\\\"; transition: 0.1s; transform: rotate(-90deg);\\r\\n /* ▲ */border-style: solid; border-color: #aaa transparent transparent transparent; border-width: 10px 5px 0 5px;\\r\\n\\t\\tdisplay: inline-block; vertical-align: middle; margin: 10px 5px 10px 10px; }\\r\\n.hjnMenuLv1 > input:checked ~ label::before { transform: rotate(0deg); }\\r\\n\\r\\n.hjnMenuLv1 > label, .hjnMenuLv1 > a { display: block; cursor: pointer;\\r\\n\\t\\tborder-bottom: 1px solid #fff; background: #eee; transition: all 0.1s; }\\r\\n.hjnMenuLv1 > label:hover { background: rgba(0,0,0,0.2); }\\r\\n.hjnMenuLv1 > label:active { background: #999;  }\\r\\n.hjnMenuLv1 > input:checked ~ .hjnMenuLv2 { height: auto; padding: 10px; }\\r\\n\\r\\n/* 詳細メニューリスト   */\\r\\n.hjnMenuLv2 { transition: 0.1s; height: 0; overflow: hidden; padding: 0 10px; background: #ddd; }\\r\\n.hjnMenuLv2 ol { display: block; margin: 2px 0; }\\r\\n.hjnMenuLv2 label { height: 12px; }\\r\\n.hjnLabel4Input:hover,  .hjnButton4Input:hover { background: rgba(0,0,0,0.2); }\\r\\n.hjnLabel4Input:active, .hjnButton4Input:active { background: #999; }\\r\\n/* 詳細メニューリスト  ボタン */\\r\\n.hjnMenuLv2 .hjnButton4Input label, .hjnMenuLv2 label.hjnButton4Input, .hjnPlot \\r\\n\\t\\t{ display: block; padding: 8px 12px 8px 22px;}\\r\\n.hjnButton4Input { position: relative; display: block; overflow: hidden; transition: all 0.1s;\\r\\n\\t\\ttext-decoration: none; color: #000; border: outset #fff; border-radius: 14px; }\\r\\n.hjnButton4Input:active { border: inset #fff; }\\r\\n.hjnMenuLv2 li .hjnButton4Input { padding: 8px 12px 8px 22px; } /* Download用 */\\r\\n.hjnMenuLv2 .hjnButton4Input input[type=\\\"file\\\"] { display: none; } /* File Open用 */\\r\\n/* 詳細メニューリスト  文字 */\\r\\n.hjnMenuLv2 .hjnLabel4Input { display: inline-block; position: relative;\\r\\n\\t\\t border-radius: 14px; padding-left: 1em; cursor: pointer; transition: all 0.1s; }\\r\\n.hjnMenuLv2 input { height: 12px; text-align: right; border-radius: 5px; }\\r\\n.hjnMenuLv2 .hjnLabel4Input input[type=\\\"radio\\\"] { position: absolute;\\r\\n\\t\\t top: 0; bottom: 0; left: 0; margin: auto;  cursor: pointer; }\\r\\n.hjnMenuLv2 select.hjnLabel4Input  {padding-left: 0; }\\r\\n/* 詳細メニューリスト  Legend */\\r\\n.hjnMenuLv2 .legend {cursor: pointer; width:206px; height: auto;\\r\\n \\t\\tdisplay: inline-block; padding: 8px 12px 8px 22px; border-radius: 14px;}\\r\\n.hjnMenuLv2 .legend > input { display: inline; cursor: pointer; margin: auto -15px; }\\r\\n.hjnMenuLv1 > input:checked ~ .hjnMenuLv2 .legend > input { position: absolute; }\\r\\n.hjnMenuLv2 .legend:hover { font-style: oblique; } \\r\\n\\r\\n/* dygraph用設定 */\\r\\n.item.active{ background: rgba(0,0,0,0.2) !important; border: rgba(0,0,0,0.2) !important; }\\r\\n.column { display: inline-block; }\\r\\n.dygraph-annotation { color: rgba(0,0,0,0.8) !important;\\r\\n\\t\\tbackground-color: rgba(256,256,256,0.2) !important; width: 40px !important; }\\r\\n\\r\\n/* Bottom detail graph用設定 */\\r\\n#detailTimeRange { padding: 8px; }\\r\\n#chartPlots div { float: left; padding: 2px 0; top: 5vh; }\\r\\n.hjnPlot { margin: 2px 0; width:250px; }\\r\\n.hjnPlot > label { position:relative; margin: 2px 0px; background-color: #eee;\\r\\n\\t\\tpadding: 0px 5px; cursor: pointer; border-radius: 5px; }\\r\\n.hjnPlot > input[type=checkbox] { /* 削除アイコン */\\r\\n\\t\\tvisibility: hidden; z-index: 98; float: left; margin: -2px 0 0 0;\\r\\n\\t\\tbackground-color: #fff; box-shadow: 1px 1px 1px #ccc; height: 16px; width: 16px; }\\r\\n.hjnPlot > input[type=checkbox] + label{ /* 削除アイコンの横棒*/\\r\\n\\t\\tvisibility: hidden; z-index: 97; float: left; left: -13px; top: 2px;\\r\\n\\t\\tbackground: #aaa; height: 3px; width: 9px; padding: 0; border-radius: 2px; }\\r\\n.hjnPlot:hover > input[type=checkbox], .hjnPlot:hover > input[type=checkbox] + label\\r\\n\\t\\t{ visibility: visible; cursor: pointer; }\\r\\n.hjnPlot > input[type=radio] { display:none; }\\r\\n.hjnPlot > input[type=radio]:checked + label { background-color: #ccc; }\\r\\n.hjnPlot:hover { font-weight: bold; }\\r\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * @memberOf Util\r\n * @class TouchPanel\r\n * @classdesc タッチパネル用ツール\r\n *            <p>\r\n *            参考 {@link https://code.i-harness.com/ja/q/4f2389}\r\n * \r\n * @param {Number}\r\n *            [average=0.5] 平均値\r\n * @example var r = HJN_util.TouchPanel(10), val = r.exponential();\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #56\r\n    /** @constructor */\r\n    function TouchPanel(average){\r\n        if(!(this instanceof TouchPanel)) return new TouchPanel(average);\r\n        this._average = average || 0.5;\r\n    }\r\n    /** @private */\r\n\r\n    // public\r\n    /**\r\n     * タッチデバイスか判定する\r\n     * <p>\r\n     * クラスロード後、touchstart と mouosemove の初回のイベントがどちらが先に発生したかにより判定する 参考\r\n     * {@link https://lab.syncer.jp/Web/JavaScript/Snippet/44/}\r\n     * \r\n     * @memberof TouchPanel\r\n     * @return {String} 先に検出したイベントがマウス移動のとき false、以外のときtrue\r\n     * \r\n     */\r\n    TouchPanel.isTouchableDevice = function() {\r\n        __WEBPACK_IMPORTED_MODULE_0__util_js__[\"f\" /* Logger */].ShowText([TouchPanel._deviceType]);\r\n        return  (TouchPanel._deviceType === \"MOUSE\") ? false : true; // #78\r\n    }\r\n\r\n    // タッチデバイスか判定する（クラス定数）\r\n    TouchPanel._deviceType = \"SHIMULATED_TOUCH\";\r\n    function detectDeviceType(event) {\r\n        TouchPanel._deviceType = event.changedTouches ? \"TOUCH\" : \"MOUSE\" ;\r\n        document.removeEventListener(\"touchstart\", detectDeviceType) ;\r\n        document.removeEventListener(\"mousemove\", detectDeviceType) ;\r\n    }\r\n    document.addEventListener(\"touchstart\", detectDeviceType) ;\r\n    document.addEventListener(\"mousemove\", detectDeviceType) ;\r\n\r\n    /**\r\n     * タッチパネル操作をマウス操作に転送する\r\n     * <p>\r\n     * 参考 {@link https://code.i-harness.com/ja/q/4f2389}\r\n     * \r\n     * @memberof Util.TouchPanel\r\n     * @param {Object}\r\n     *            element 対象dom要素\r\n     * @param {Boolean}\r\n     *            [isStopTouch=false] 元のタッチのデフォルトイベントを消すか（個別に登録されているリスナーには無関係）\r\n     * \r\n     * @example HJN_util.DispatchEventTouchToMouse();\r\n     */\r\n    TouchPanel.DispatchEventTouchToMouse = function(element, isStopTouch) { // #22\r\n        element.addEventListener(\"touchstart\", touchHandler, true);\r\n        element.addEventListener(\"touchmove\", touchHandler, true);\r\n        element.addEventListener(\"touchend\", touchHandler, true);\r\n        element.addEventListener(\"touchcancel\", touchHandler, true);\r\n        return;\r\n\r\n        function touchHandler(ev) {\r\n            var bIgnoreChilds = false;\r\n            if( !window.__TOUCH_TYPES ) {\r\n                window.__TOUCH_TYPES  = { touchstart:'mousedown', touchmove:'mousemove', touchend:'mouseup' };\r\n                window.__TOUCH_INPUTS = { INPUT: 1, TEXTAREA: 1, SELECT: 1, OPTION: 1,\r\n                                         'input':1,'textarea':1,'select':1,'option':1 };\r\n            }\r\n            var bSame = (ev.target == this);\r\n            if (bIgnoreChilds && !bSame) { return; }\r\n            // Get if object is already tested or input type\r\n            var b = (!bSame && ev.target.__ajqmeclk);\r\n            // allow multi-touch gestures to work\r\n            if (b === true || !ev.touches || ev.touches.length > 1 || !window.__TOUCH_TYPES[ev.type]) { return; }\r\n\r\n            var oEv = (!bSame && typeof b != 'boolean') ? ev.target.getAttribute('events') : false;\r\n            var b = (!bSame)\r\n                  ? (ev.target.__ajqmeclk = oEv\r\n                      ? (oEv['click'] || oEv['mousedown'] || oEv['mouseup'] || oEv['mousemove']) \r\n                      : false )\r\n                  :false;\r\n            // allow default clicks to work (and on inputs)\r\n            if (b || window.__TOUCH_INPUTS[ev.target.tagName]) { return; } \r\n\r\n            var touch = ev.changedTouches[0];\r\n            var tmpClientX = touch.clientX;\r\n            var tmpClientY = touch.clientY;\r\n            // クリックに変換するタップ誤差範囲\r\n            var CLICK_MARGIN = 20; // px\r\n            var CLICK_DELAY = 1000; // ms\r\n\r\n            // 前回touchstart時の座標と時刻が一定範囲内の時、dygraphがクリックと判定するよう補正する\r\n            if ((ev.type === \"touchstart\" || ev.type === \"touchend\") &&\r\n                    this.startTouch &&\r\n                    Math.abs(this.startTouch.x - touch.clientX) < CLICK_MARGIN && // タッチ補正幅(px)\r\n                    Math.abs(this.startTouch.y - touch.clientY) < CLICK_MARGIN &&\r\n                    +new Date() - this.startTouch.t < CLICK_DELAY) { // タッチ時間(ms)\r\n                // 位置補正\r\n                tmpClientX = this.startTouch.x;\r\n                tmpClientY = this.startTouch.y;\r\n            } else if (ev.type === \"touchstart\"){\r\n                // touchstart時の座標と時刻を退避する\r\n                this.startTouch = {x: touch.clientX, y: touch.clientY, t: +new Date()};\r\n            } else if (ev.type === \"touchend\") {  \r\n                // touchstart時の座標と時刻を初期化する\r\n                this.startTouch = {};\r\n            }\r\n            // マウスイベントを発生させる\r\n            var newEvent = document.createEvent(\"MouseEvent\");\r\n            newEvent.initMouseEvent(\r\n                window.__TOUCH_TYPES[ev.type],    // type\r\n                true,             // bubbles\r\n                true,             // cancelable\r\n                window,           // view\r\n                1,                // detail\r\n                touch.screenX,    // screenX スクリーンサイズ\r\n                touch.screenY,    // screenY\r\n                tmpClientX,       // clientX タッチ座標\r\n                tmpClientY,       // clientY\r\n                false,            // ctrlKey\r\n                false,            // altKey\r\n                false,            // shiftKey\r\n                false,            // metaKey\r\n                0,                // button\r\n                null              // relatedTarget\r\n              );\r\n            touch.target.dispatchEvent(newEvent);\r\n\r\n            // タッチイベントを止める #22\r\n            if(isStopTouch) {\r\n                ev.stopImmediatePropagation();\r\n                ev.stopPropagation();\r\n                ev.preventDefault();\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n\r\n    /* new */\r\n    return TouchPanel;\r\n}());\n\n/***/ }),\n/* 21 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DateToString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return S2D; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return D2S; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return N2S; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return S2N; });\n/**\r\n * 日時(Date)から、ローカル時刻に基づく、指定フォーマットの文字列を取得する\r\n * \r\n * @memberOf Util\r\n * @param {Date}\r\n *            dt Date型（内部実装はミリ秒単位）\r\n * @param {String}\r\n *            str フォーマット yyyy-MM-dd hh:mm:ss.ppp （戻り値で上書きされる）\r\n * @return {String} str 編集後文字列\r\n */\r\nvar DateToString = function() {\r\n    var dt = arguments[0],  // arg0\r\n        str = arguments[1]; // arg1\r\n    // if (typeof(dt) === \"number\") dt = new Date(dt);\r\n    str = str.replace(/yyyy/, dt.getFullYear() );\r\n    str = str.replace(/MM/, ('0' + (dt.getMonth() + 1) ).slice(-2) );\r\n    str = str.replace(/dd/, ('0' + dt.getDate()).slice(-2) );\r\n    str = str.replace(/hh/, ('0' + dt.getHours()).slice(-2) );\r\n    str = str.replace(/mm/, ('0' + dt.getMinutes()).slice(-2) );\r\n    str = str.replace(/ss/, ('0' + dt.getSeconds()).slice(-2) );\r\n    str = str.replace(/ppp/,('00' + dt.getMilliseconds()).slice(-3) ); // #60\r\n    // str = str.replace(/ppp/,('00' + Math.floor(dt % 1000)).slice(-3) );\r\n\r\n    return str;\r\n};\r\n\r\n/**\r\n * 日時文字列を指定フォーマットでパースして数値(ミリ秒単位）を取得する\r\n * @memberOf Util\r\n * @param {String}\r\n *            str\r\n * @param {Object|String}\r\n *            [conf={YYYY: 0, MM: 5, DD: 8, hh: 11, mm: 14, ss: 17, ppp: 20}]\r\n *            Object指定のとき：年月日時分秒ミリ秒の先頭位置を示す構造体オブジェクト<br>\r\n *            String指定とき：フォーマットを示す文字列<br>\r\n *            デフォルト値は、\"YYYY/MM/DD hh:mm:ss.ppp\"相当\r\n * @return {Number} timeNum 日時（１ミリ秒を１とする数値、エラーのときNumber.NaN）\r\n */\r\nvar S2D = function(str, conf){ // #34\r\n    if(!str) return Number.NaN;\r\n\r\n    if(typeof(conf) === \"Object\"){\r\n        // confが\"Object\"のとき、指定された構造体オブジェクトの条件でパースする（最も高速な処理）\r\n        return parse(str, conf);\r\n    } else if (typeof(conf) === \"string\") {\r\n        // confが\"String\"のとき、指定された文字列フォーマットから構造体オブジェクトを作成し、パースする（準高速処理）\r\n        var config = {  // YYYY/MM/DD hh:mm:dd.ss.ppp #41\r\n                YYYY: conf.indexOf(\"YYYY\"),\r\n                MM: conf.indexOf(\"MM\"),\r\n                DD: conf.indexOf(\"DD\"),\r\n                hh: conf.indexOf(\"hh\"),\r\n                mm: conf.indexOf(\"mm\"),\r\n                ss: conf.indexOf(\"ss\"),\r\n                ppp: conf.indexOf(\"p\")};\r\n        return parse(str, config);\r\n    } else {\r\n        // confが指定されていないとき、デフォルト条件でパースする（汎用処理）\r\n        // デフォルトフォーマット：\"YYYY/MM/DD hh:mm:dd.ss.ppp\" #42\r\n        var config = {YYYY: 0, MM: 5, DD: 8, hh: 11, mm: 14, ss: 17, ppp: 20};\r\n        return parse(str, config);\r\n    }\r\n\r\n    // 内部関数：構造体オブジェクトで指定された条件でパースする\r\n    function parse(str, conf){\r\n        var y   = (0 <= conf.YYYY) ? parseInt( str.substr( conf.YYYY, 4), 10) : 1970,\r\n                m   = (0 <= conf.MM)   ? parseInt( str.substr( conf.MM, 2), 10) - 1 : 0, // デフォルト1月\r\n                // 1970/1/1だと時差でマイナスになることがあるので日付のデフォルトは2日\r\n                d   = (0 <= conf.DD)   ? parseInt( str.substr( conf.DD, 2), 10) : 2,\r\n                h   = (0 <= conf.hh)   ? parseInt( str.substr( conf.hh, 2), 10) : 0,\r\n                min = (0 <= conf.mm)   ? parseInt( str.substr( conf.mm, 2), 10) : 0,\r\n                sec = (0 <= conf.ss)   ? parseInt( str.substr( conf.ss, 2), 10) : 0,\r\n                // ミリ秒以下を指定すると丸め誤差が生じるため、秒以下のミリ秒は個別に加算\r\n                p   = (0 <= conf.ppp)  \r\n                    ? (\"0.\" + str.substr( conf.ppp).match(/[0-9]*/)[0]) * 1000.0 \r\n                    : 0;\r\n        return +(new Date( y, m, d, h, min, sec )) + p;  // #14\r\n    }\r\n};\r\n\r\n/**\r\n * 日時(ミリ秒：Ｘ軸用）から、時差補正のない、指定フォーマットの文字列を取得する\r\n * \r\n * @memberOf Util\r\n * @param {Number|Date}\r\n *            ds 時刻をUNIX経過時間（ミリ秒）で表した数値、もしくはDate(日付）\r\n * @param {String}\r\n *            [str=自動] フォーマット yyyy-MM-dd hh:mm:ss.ppp （戻り値で上書きされる）<br>\r\n *            自動のとき 日数+ hh:mm:ss.ppp 表示単位に至らない単位は表示しない、ミリ秒は分単位以下の時表示<br>\r\n *            例： 日数表示：\"1 02:03:04\",時表示\"02:03:04\" 分表示\"0:03:04.567\" 秒表示\"04.567\"\r\n * @param {Boolean}\r\n *            [isLocal=false] trueのとき時差補正をしない\r\n * @return {String} str 編集後文字列\r\n */\r\nvar D2S = function(ds, str, isLocal){ // #60\r\n    var minus = \"\";\r\n    var ret = \"\";\r\n    if (ds < 0) {\r\n        minus = \"-\";\r\n        ds = -1 * ds;\r\n    }\r\n    var datetime = new Date(ds);\r\n    if (!isLocal) { // #60\r\n        datetime = new Date(+datetime + 60000 * datetime.getTimezoneOffset()); // 環境タイムゾーンの補正\r\n    }\r\n    if(str){ // フォーマット指定があるとき\r\n        ret = DateToString(datetime, str);\r\n    } else if (ds < 1000) { // 自動で1秒(1000)未満のとき\r\n        ret = \"0.\" + Math.round(ds);\r\n    } else if (ds < 60000) { // 自動で1分(1*60*1000)未満のとき\r\n        ret = DateToString(datetime, \"ss.ppp\");\r\n    } else if (ds < 3600000) { // 自動で1分以上、1時間(1*60*60*1000)未満のとき\r\n        ret = \"0:\" + DateToString(datetime, \"mm:ss.ppp\");\r\n    } else if (ds < 86400000) { // 自動で1時間以上、1日(1*24*60*60*1000)未満のとき\r\n        ret = DateToString(datetime, \"hh:mm:ss\");\r\n    } else { // 自動で1日以上のとき\r\n        ret = Math.floor(ds / 86400000) + \" \";\r\n        ret += DateToString(datetime, \"hh:mm:ss\");\r\n    }\r\n    return minus + ret;\r\n};\r\n\r\n/**\r\n * 数値(Ｙ軸用）から、誤差のない表示用文字列を取得する<br>\r\n * （hover、legendなどでY軸の値を使うときに使用する）\r\n * \r\n * @memberOf Util\r\n * @param {Number|Date}\r\n *            y 時刻をUNIX経過時間（ミリ秒）で表した数値、もしくはDate(日付）\r\n * @return {String} str 編集後文字列\r\n *         {@linkhttps://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat}\r\n */\r\nvar N2S = function(y){\r\n    return Intl.NumberFormat('en-IN').format(y);\r\n};\r\n\r\n/**\r\n * 文字列を数値に変換する\r\n * \r\n * @memberOf Util\r\n * @param {String|Number}\r\n *            [str = sub] 計算式（日時分秒ミリ秒(d,h,mim,sec,ms)の文字は、ミリ秒に変換する）\r\n * @param {String|Number}\r\n *            [sub] 第一引数が指定されていない(undefined)ときの代用\r\n * @return {Number} n eval(str||sub)で取得した数値\r\n * \r\n */\r\nvar S2N = function(str, sub){ // #53\r\n    var s = (typeof(str) !== \"undefined\") ? str : sub;\r\n    var h = 3600000; // 1時間（ミリ秒）\r\n    var min = 60000; // 1分（ミリ秒）\r\n    var sec =  1000; // 1秒（ミリ秒）\r\n    var ms =      1; // 1ミリ秒\r\n\r\n    return eval(s);\r\n};\n\n/***/ }),\n/* 22 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class Random\r\n * @classdesc Random 乱数取得\r\n *            <p>\r\n *            ある事象の単位時間あたりの発生回数がポアソン分布, その発生間隔が指数分布に従う<br>\r\n *            M/M/1モデルは、到着がポアソン過程となり、(したがって到着間隔は指数分布に従う)、サービス時間が指数分布に従う\r\n *            <p>\r\n *            参考 {@link http://www.ishikawa-lab.com/montecarlo/4shou.html}\r\n * \r\n * @param {Number}\r\n *            [average=0.5] 平均値\r\n * @example var r = HJN_util.Random(10), val = r.exponential();\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #56\r\n    /** @constructor */\r\n    function Random(average){\r\n        if(!(this instanceof Random)) return new Random(average);\r\n        this._average = average || 0.5;\r\n    }\r\n\r\n    /** @private */\r\n\r\n    // public\r\n    /**\r\n     * 一様分布となる乱数を返却する\r\n     *\r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.uniform = function(average) {\r\n        average = average || this._average;\r\n        return  2.0 * average * Math.random();\r\n    };\r\n\r\n    /**\r\n     * 指数分布となる乱数を返却する(lambda = 1/average)\r\n     *\r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値=1/λ、分散=1/(λ^2)<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.exponential = function(average) {\r\n        average = average || this._average;\r\n        return (-1.0 * average) * Math.log(1.0 - Math.random());\r\n    };\r\n    \r\n    /**\r\n     * ポアソン分布となる乱数を返却する(lambda = average)\r\n     * \r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値=分散=λ<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.poisson = function(average) {\r\n        var lambda = average || this._average;\r\n        var xp = Math.random();\r\n        var k = 0;\r\n        while (xp >= Math.exp(-lambda)) {\r\n            xp = xp * Math.random();\r\n            k = k + 1;\r\n        }\r\n        return (k);\r\n    };\r\n    \r\n    /* new */\r\n    return Random;\r\n}());\n\n/***/ }),\n/* 23 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class addEventListener\r\n * \r\n * 1つのイベントターゲットにイベントリスナーを1つ登録する\r\n * \r\n * @param {dom}\r\n *            element DOM要素、document.getElementById(\"xx\");などで取得\r\n * @param {string}\r\n *            [type=\"click\"] イベントの種類\r\n *            {@link https://developer.mozilla.org/en-US/docs/Web/Events}\r\n * @param {function}\r\n *            func 実行する関数\r\n */\r\n/* unused harmony default export */ var _unused_webpack_default_export = (function(element, type, func) { // #74\r\n    type = type || \"click\";\r\n    if (element.addEventListener) {\r\n        element.addEventListener(type, func, false);\r\n    } else if (element.attachEvent) {\r\n        element.attachEvent(\"on\" + type, func); \r\n    } else {\r\n        console.log(\"unable addEventListner %o\", element);\r\n    }\r\n});;\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class setZeroTimeout\r\n * 非同期化\r\n * \r\n * @param {function}\r\n *            global 非同期化して実行する関数\r\n *            <p>\r\n *            参考 {@link https://jsfiddle.net/kou/j73tLum4/8/}\r\n *            {@link https://gist.github.com/mathiasbynens/579895}\r\n *            {@link http://dbaron.org/log/20100309-faster-timeouts}\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(global) {\r\n    var timeouts = [], \r\n        messageName = \"zero-timeout-message\";\r\n    function handleMessage(event) {\r\n        if (event.source === global && event.data === messageName) {\r\n            if (event.stopPropagation)  event.stopPropagation();\r\n            if (timeouts.length) timeouts.shift()();\r\n        }\r\n    }\r\n    if (global.postMessage) {\r\n        if (global.addEventListener) {\r\n            global.addEventListener(\"message\", handleMessage, true); \r\n        }else if (global.attachEvent) {\r\n            global.attachEvent(\"onmessage\", handleMessage); \r\n        }\r\n        return function (fn) { timeouts.push(fn); global.postMessage(messageName, \"*\"); };\r\n    } \r\n    else {\r\n        return function (fn) { setTimeout(fn, 0); }; \r\n    }\r\n}(window));\n\n/***/ }),\n/* 25 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * @memberOf Util\r\n * @class Logger\r\n * @classdesc ロガー\r\n *            <p>\r\n *            モードに応じたログを出力する。画面ログ表示領域、コンソールログへの出力に対応\r\n * \r\n * @param {String}\r\n *            [mode=0] ログ出力モード\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #27\r\n    /** @static */\r\n    Logger.prototype = {\r\n            _logText: [],\r\n            _timestamp : new Date(),\r\n            _logtime : new Date()\r\n        };\r\n    /** @constructor */\r\n    function Logger(mode){\r\n        if(!(this instanceof Logger)) return new Logger(mode);\r\n        this._mode = mode || 0;\r\n        // getKeyによりIndex作成関数を設定する\r\n    }\r\n    /**\r\n     * 一定時間（１分）経過後、最初に本メソッドが呼ばれたときのみログ出力する（ループ用）\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {Number}\r\n     *            i 参考番号<br>\r\n     *            経過時間内のループ回数などの表示に使用することを想定\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     */\r\n    Logger.ByInterval = function(i, text) {\r\n        var ts = new Date(),\r\n            freq = 60000;   // 1分毎\r\n        if (freq < ts - Logger._logtime){\r\n            var t = Object(__WEBPACK_IMPORTED_MODULE_0__util_js__[\"b\" /* D2S */])(ts, \"hh:mm:ss.ppp\"); // #60\r\n            console.log(t + \"[\" + i + \"]~~~~\" + text);\r\n            Logger._logtime = ts;\r\n        }\r\n    };\r\n    /**\r\n     * ログ出力： ログテキストおよびタイムスタンプを初期化する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     * @param {String}\r\n     *            [type] ログ区分（\"calc\"：計算用ログ、\"msg\"：メッセージのみ（タイムスタンプなし））\r\n     */\r\n    Logger.ShowLogTextInit=function(text, type) {\r\n        Logger._timestamp = new Date();\r\n        Logger._logText = [];\r\n        if(text) Logger.ShowLogText(text, type);\r\n    };\r\n    /**\r\n     * ログ出力： タイムスタンプを初期化する\r\n     * \r\n     * @memberof Util.Logger\r\n     */\r\n    Logger.ResetTimestamp=function() {\r\n        Logger._timestamp = new Date();\r\n    };\r\n    /**\r\n     * ログ出力： ログテキストをテキストアレイに追記し、表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     * @param {String}\r\n     *            [type] ログ区分（\"calc\"：計算用ログ、\"msg\"：メッセージのみ（タイムスタンプなし））\r\n     * @param {Boolean}\r\n     *            [isSameline=false] 直前のログと同一ラインにするか\r\n     */\r\n    Logger.ShowLogText=function(text, type, isSameline) {\r\n        if (type === \"calc\") return; // 集計時評価用ログ出力抑止\r\n        // \"msg\"指定のときは経過時間を取らずに、ログのみ出力する\r\n        if (type !== \"msg\"){\r\n            // 処理時間情報を追加する\r\n            var lastTimestamp = Logger._timestamp;\r\n            Logger._timestamp = new Date();\r\n            text = (Math.round( Logger._timestamp - lastTimestamp ) / 1000.0)\r\n                    + \"s \" + text;\r\n            // 数値のカンマ編集（小数部もカンマが入る）\r\n            text = text.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n        }\r\n        if (isSameline){\r\n            var last = Logger._logText.length - 1;\r\n            Logger._logText[last] += text;\r\n        } else {\r\n            Logger._logText.push(text);\r\n        }\r\n        Logger.ShowText(Logger._logText);\r\n        if(true) console.log(Object(__WEBPACK_IMPORTED_MODULE_0__util_js__[\"b\" /* D2S */])(Logger._timestamp, \"hh:mm:ss.ppp     \") + text); // #60\r\n    };\r\n    /**\r\n     * 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            textArray 出力するログ（配列１行がログ１件）\r\n     */\r\n    Logger.ShowText=function(textArray) {\r\n        var iHtmlBody = \"\";\r\n        for (var i = textArray.length - 1; 0 <= i; i--){\r\n            iHtmlBody += textArray[i] + \"<BR>\"; \r\n        }\r\n        Logger.ShowIHtmlBody('fileInfo',iHtmlBody);\r\n    };\r\n    /**\r\n     * 第一引数のID名のiframeに、第二引数のログ（HTML化）を表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            elementId iframeのID名\r\n     * @param {String}\r\n     *            iHtmlBody ログ（HTML化）\r\n     */\r\n    Logger.ShowIHtmlBody=function(elementId, iHtmlBody){\r\n        var body = document.createElement('body');\r\n        body.innerHTML = \"\"\r\n            + \"<style>body{font-size: x-small; margin: 0; }</style>\"\r\n            + \"<body id='iHtmlBody'>\" + iHtmlBody + \"</body>\";\r\n        var iframe = document.getElementById(elementId);\r\n        iframe.contentDocument.body = body;\r\n    };\r\n    \r\n    // newの戻り値\r\n    return Logger;\r\n}());\n\n/***/ }),\n/* 26 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = copyToClipboard;\n/**\r\n * 指定されたelementIDのテキストをクリップボードにコピーする<br>\r\n * 一時的にdocument.bodyの下にコピー処理用要素を作成する<br>\r\n * スマフォ等で書き込み可能なtextareaにフォーカスが移らないよう一時的にreadonlyにする\r\n * \r\n * @memberof Util\r\n * @param {String}\r\n *            elementID textareaのID名\r\n */\r\nfunction copyToClipboard(elementId) { // #61\r\n    // コピー元要素を取得する\r\n    var el = document.getElementById(elementId);\r\n    // ワーク領域を作成する\r\n    var input = document.createElement('textarea');\r\n    input.setAttribute('id', 'copyinput');\r\n    document.body.appendChild(input);\r\n    // クリップボードにコピーする\r\n    input.value = (el.innerText === \"\") ? el.value : el.innerText;\r\n    copy2Clipboard(input); // 内部関数\r\n    // ワーク領域を削除する\r\n    document.body.removeChild(input);\r\n}\r\n\r\n/**\r\n * textareaをクリップボードにコピーする<br>\r\n * iOSに対応したtextareaのselect機能 #78\r\n * {@link https://marmooo.blogspot.jp/2018/02/javascript.html}\r\n */\r\nfunction copy2Clipboard(el){\r\n    // handle iOS as a special case\r\n    if (navigator.userAgent.match(/ipad|ipod|iphone/i)) {\r\n        // save current contentEditable/readOnly status\r\n        var editable = el.contentEditable;\r\n        var readOnly = el.readOnly;\r\n        // convert to editable with readonly to stop iOS keyboard opening\r\n        el.contentEditable = true;\r\n        el.readOnly = true;\r\n        // create a selectable range\r\n        var range = document.createRange();\r\n        range.selectNodeContents(el);\r\n        // select the range\r\n        var selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        el.setSelectionRange(0, 999999);\r\n        // restore contentEditable/readOnly to original state\r\n        el.contentEditable = editable;\r\n        el.readOnly = readOnly;\r\n    }\r\n    else {\r\n        el.select();\r\n    }\r\n    // execute copy command\r\n    document.execCommand('copy');\r\n}\n\n/***/ }),\n/* 27 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class binarySearch\r\n * @classdesc 配列二分木検索\r\n * \r\n * @param {Number}\r\n *            val 検索する値\r\n * @param {Array}\r\n *            arr 検索対象の配列\r\n * @param {Function}\r\n *            [func=function(val){return val.valueOf();}] 配列要素に対して、値を取得する関数\r\n * @param {Index}\r\n *            [low=0] 配列の検査範囲の下限\r\n * @param {Index}\r\n *            [high=arr.length-1] 配列の下限検査範囲の上限\r\n * @param {Boolean}\r\n *            [isEqual=false] 完全一致しないときのリターン値：trueのとき-1、falseのとき値との差が最も少ない位置\r\n * @example i=Util.binarySearch(x,arrXY,function(e){return e.x;});\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (val, arr, func, low, high, isEqual) {\r\n    func = func || function(val){ return val.valueOf(); };\r\n    low = low || 0;\r\n    if (!arr) return -1;\r\n    high = high || arr.length - 1;\r\n    isEqual = isEqual || false;\r\n    var middle,\r\n        valMiddle;\r\n    while( low <= high ){\r\n        middle = Math.floor(low + high) / 2 | 0;\r\n        valMiddle = func(arr[middle]);\r\n        if(valMiddle === val) return middle;\r\n        else if(val < valMiddle) high = middle - 1;\r\n        else low = middle + 1;\r\n    }\r\n    // 値が完全一致する要素がなかった場合の戻り値を編集する\r\n    if (isEqual){\r\n        return -1;  // 完全一致指定のとき(-1)をリターンする\r\n    } else {        // 完全一致指定でないとき、値との差が最も少ない位置をリターンする #46\r\n        // low,middle,high を補正する\r\n        low = Math.min(Math.max(0, low), arr.length - 1);\r\n        high = Math.max(0, Math.min(high, arr.length - 1));\r\n        middle = Math.max(low, Math.min(middle, high));\r\n        if(high < low){\r\n            var tmp = high;\r\n            high= low;\r\n            low = tmp;\r\n        }\r\n        // low,middle,high のうち、値との差が最も少ない位置をリターンする\r\n        if(func(arr[middle]) < val){\r\n            if (val - func(arr[middle]) < func(arr[high]) - val) {\r\n                return middle;\r\n            } else {\r\n                return high;\r\n            }\r\n        }else{\r\n            if (func(arr[high]) <= val && val < func(arr[middle])){\r\n                return high;\r\n            } else if (val - func(arr[low]) < func(arr[middle]) - val){\r\n                return low;\r\n            } else {\r\n                return middle;\r\n            }\r\n        }\r\n        return -1;  // 指定範囲外\r\n    }\r\n});;\r\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class Heap\r\n * @classdesc Heap ヒープ(二分ヒープ)\r\n *            <p>\r\n *            最小値(最大値)を効率よく取り出すことができるデータ構造\r\n *            <p>\r\n *            参考 {@link http://d.hatena.ne.jp/otaks/20121220/1355993039}\r\n * \r\n * @param {Function}\r\n *            [func=function(obj){ return +obj; }]\r\n *            pushで登録するオブジェクトからヒープの大小比較判定値を取り出す関数\r\n * @param {Function}\r\n *            [delFunc=function(obj){ return obj; }] 削除対象ノードを特定する関数<br>\r\n *            「delの引数オブジェクト === delFunc(heapのノードのオブジェクト)」 で判定する\r\n * \r\n * @example h = HJN_util.Heap( function(obj){ return +obj; } );<br>\r\n *          h.push(\"12.34\") // データを登録する ;<br>\r\n *          h.push(0.12) // ;<br>\r\n *          h.pop() // => 0.12 最小値のオブジェクトを取り出す ;<br>\r\n *          h.pop() // => \"12.34\" ;<br>\r\n *          h.top() // =>undefined 最小値のオブジェクト ;<br>\r\n *          h.size() // =>0 登録オブジェクト数\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #55\r\n    /** @constructor */\r\n    function Heap(func, delFunc){ \r\n        if(!(this instanceof Heap)) return new Heap(func, delFunc);\r\n\r\n        this._func = (typeof(func) === \"function\")\r\n                ? func\r\n                : function(node){\r\n                    if (typeof(node.val) === \"undefined\") { return node }\r\n                    else { return node.val}; \r\n                  };\r\n        this._delFunc = (typeof(delFunc) === \"function\")\r\n                ? delFunc\r\n                : function(node){\r\n                    if(typeof(node.obj) === \"undefined\"){ return node }\r\n                    else { return node.obj};\r\n                  };\r\n        this._heap = []; // Heap構造体（大小比較数値用）\r\n    }\r\n\r\n    //\r\n    /**\r\n     * upheap：root方向へheapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     */\r\n    Heap.prototype._upHeap = function(k) {\r\n        // 指定位置のオブジェクトとその値の控えを取る\r\n        var obj = this._heap[k];\r\n        var val = this._func(obj);\r\n        while( 0 < k ) {\r\n            // 親ノードの配列位置を求める\r\n            var p = Math.floor( (k - 1) / 2 );\r\n            // 逆転していなければ処理終了\r\n            if( this._func(this._heap[p]) <= val ) break;\r\n            // 親ノードと処理対象を入れ替える\r\n            this._heap[k] = this._heap[p];\r\n            this._heap[p] = obj;\r\n            k = p;\r\n        }\r\n    };\r\n    /**\r\n     * downheap：reaf方向へheapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     */\r\n    Heap.prototype._downHeap = function(k) {\r\n        // 指定位置のオブジェクトとその値を控えを取る\r\n        var obj = this._heap[k];\r\n        var val = this._func(obj);\r\n        var size = this._heap.length;\r\n        // 子ノードが無くなるまで繰り返す\r\n        while( k * 2 + 1 < size) {\r\n            var a = k * 2 + 1;  // 子ノード（左）\r\n            var b = a + 1;      // 子ノード（右）\r\n            // aが大小比較対象先となる小さい子ノードを指すようにする\r\n            if( b < size && this._func(this._heap[a]) > this._func(this._heap[b]) ) a = b;\r\n            // 逆転していなければ処理終了\r\n            if( val < this._func(this._heap[a]) ) break;\r\n            // 子ノード（比較対象）と処理対象を入れ替える\r\n            this._heap[k] = this._heap[a];\r\n            this._heap[a] = obj;\r\n            k = a;\r\n        }\r\n    };\r\n    /**\r\n     * _heapのk番目を削除し、_heapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     * @return {object|undefined} 削除したオブジェクト（削除対象が無いとき undefined）\r\n     */\r\n    Heap.prototype._del = function(k) {\r\n        if (this._heap.length <= k) return undefined; // ヒープ外を指定したとき\r\n\r\n        var ret = this._heap[k]; // 削除したオブジェクト\r\n        var obj = this._heap.pop(); // 末尾ノードを取り出す\r\n        var size = this._heap.length;\r\n        if (k === size) return ret; // 末尾ノードを削除したとき再構築不要\r\n\r\n        this._heap[k] = obj; // 末尾ノードを指定位置に移動する\r\n        if (size === 1) return ret; // ヒープが１個のとき、再構築不要\r\n\r\n        // upHeapの判定\r\n        var val = this._func(obj); // 末尾ノードにあったオブジェクトの値\r\n        var p = Math.floor( (k - 1) / 2 );\r\n        if (0 < k && val < this._func(this._heap[p])) {\r\n            // 親ノードより小さいときupheapする\r\n            this._upHeap(k);\r\n        } else {\r\n            var a = k * 2 + 1;  // 子ノード（左）\r\n            var b = a + 1;      // 子ノード（右）\r\n            if (a < size) { // 子ノードがあるとき（末端の枝葉でないとき）のみdownHeapする\r\n                // aに、子ノードの小さい方のノードを設定する\r\n                if( b < size && (this._func(this._heap[a]) > this._func(this._heap[b])) ) a = b;\r\n                // 自分より小さい子ノードがあるとき、downheapする\r\n                if( this._func(this._heap[a]) < val ) this._downHeap(k);\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    // public\r\n    /**\r\n     * データを追加する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @param {Object}\r\n     *            obj 登録オブジェクト\r\n     */\r\n    Heap.prototype.push = function(obj) {\r\n        // 末尾に追加し、upHeapする\r\n        this._heap.push(obj);\r\n        this._upHeap(this._heap.length - 1);\r\n        if (this._deletable) {\r\n            this._deleteMap = {};\r\n        }\r\n    };\r\n    /**\r\n     * 最小値のデータを取り出す\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Object|undefined} 最小値\r\n     */\r\n    Heap.prototype.pop = function() {\r\n        // 先頭ノードを戻り値用に退避する\r\n        var ret = this._heap[0];\r\n        // 末尾ノードを退避し削除する\r\n        var obj = this._heap.pop();\r\n        if(0 < this._heap.length){\r\n            // ヒープが空でないとき、末尾ノードを先頭に移動し、downHeapする\r\n            this._heap[0] = obj;\r\n            this._downHeap(0);\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * 指定データを削除する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @param {Object}\r\n     *            obj 削除対象と同一オブジェクト(=== で判定)\r\n     * @return {Object|undefined} 削除したオブジェクト（undefined：合致するオブジェクトが無いとき）\r\n     */\r\n    Heap.prototype.del = function(obj) { // #59\r\n        // 削除対象オブジェクトのHeap配列位置を取得する\r\n        var k = -1;\r\n        if (this._heap.some(find, this)){\r\n            // 合致するオブジェクトのノードを削除し、合致ノードをリターンする\r\n            return this._del(k);\r\n        }\r\n        // 合致するオブジェクトが無いとき\r\n        return undefined;\r\n        \r\n        function find(e, i) {\r\n            if(this._delFunc(e) === obj){\r\n                k = i;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * 最小値を返却する（登録データは変更しない）\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Object|undefined} 最小値\r\n     */\r\n    Heap.prototype.top = function() {\r\n        return this._heap[0];\r\n    };\r\n    /**\r\n     * ヒープのサイズを返却する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Number} ヒープサイズ（0以上）\r\n     */\r\n    Heap.prototype.size = function() {\r\n        return this._heap.length;\r\n    };\r\n    \r\n    /* new */\r\n    return Heap;\r\n}());\n\n/***/ }),\n/* 29 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Element;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * @memberOf Util\r\n * @class Element\r\n * @classdesc 追加する挙動の操作要素は、後に記述した挙動の要素が上位になる 参考\r\n *            {@link https://q-az.net/elements-drag-and-drop/}\r\n * @param {DOM}\r\n *            element ドラッグ機能を付与するDOM要素\r\n * @constructor\r\n */\r\nfunction Element(element){\r\n    this._element = element;    // 挙動を追加する要素\r\n    this._wrapper = {};         // マウスイベントを取得するdivを追加する下地要素\r\n\r\n    // width,height :100%が有効となるようposition: absoluteを指定する\r\n    element.style.position = \"absolute\";\r\n    // ドラッグ＆ドロップ用divを作成する(下地のみクリック透過）\r\n    this._wrapper = document.createElement('div');\r\n    setStyles(this._wrapper, { background : \"rgba(192,192,192,0.1)\",\r\n        position : \"absolute\", width : \"100%\", height : \"100%\", top : \"0\", left : \"0\",\r\n        \"pointer-events\": \"none\"});\r\n    // ドラッグ＆ドロップ用divを登録する\r\n    this._element.appendChild(this._wrapper);\r\n}\r\n\r\n// グローバル（のような）変数\r\nvar pos = {};        // マウス押下時の位置情報の保管用\r\n\r\n/**\r\n * CSSクラス名\"hjnDraggableBox\"が付いた要素をドラッグ＆ドロップで移動できるようにする\r\n * \r\n * @memberOf Util\r\n * @example .hjnDraggableBox {} .hjnDraggableItem:hover {cursor: move;\r\n *          background: rgba(128, 128, 128, 0.5); transition: all 0.2s; }\r\n * @example <div class=\"hjnDraggableBox\"></div>\r\n */\r\nElement.enableDraggableClass = function(){\r\n    var elements = document.getElementsByClassName(\"hjnDraggableBox\");  // 要素の取得\r\n    // マウスが要素内で押されたとき、又はタッチされたとき発火\r\n    for(var i = 0; i < elements.length; i++){\r\n        var element = new Element(elements[i]);\r\n        element     // 移動指定要素がリサイズ指定要素よりが下になるよう、移動を先に記述する\r\n            .makeMoveable()\r\n            .makeResizable();\r\n    }\r\n}\r\n\r\n/**\r\n * ダイアログを生成し表示する\r\n * \r\n * @memberOf Util\r\n * @param {String}\r\n *            [iHtml=\"no message\"] ダイアログのinnerHTMLに設定する文字列\r\n * @param {DOM}\r\n *            [element=document.body] ダイアログの位置とサイズを指定する際の基準となる要素\r\n * @param {String}\r\n *            [id=\"HJN.dialog\"] ダイアログ要素のid名、同一名称のダイアログを閉じて作成する\r\n * @param {Number}\r\n *            [w=40] elementに対するダイアログの幅の比率％\r\n * @param {Number}\r\n *            [h=40] elementに対するダイアログの高さの比率％\r\n * @param {Object}\r\n *            [style={ width: w+\"%\", height: h+\"%\", left: 50-w/2+\"%\", top:\r\n *            50-h/2+\"%\", position: \"absolute\", background: \"rgba(255, 255, 255,\r\n *            0.8)\", border: \"medium solid #aaa\"}] ダイアログ背景のCSSスタイル\r\n * @memberOf Util.Element\r\n */\r\nElement.createDialog = function(iHtml, element, id, w, h, style){\r\n    iHtml = iHtml || \"no message\";\r\n    element = element || document.body;\r\n    style = style || {};\r\n    id = id || \"HJN.dialog\";\r\n    w = w || 40; // 幅40%\r\n    h = h || 40; // 高さ40%\r\n    // 既存の同一idの要素を削除する\r\n    var div = document.getElementById(id);\r\n    if (div) { div.parentElement.removeChild(div);}\r\n    // ダイアログ要素を作成する\r\n    div = document.createElement('div');\r\n    div.id = id;\r\n    element.appendChild(div);\r\n    div.innerHTML =\"<iframe></iframe>\";\r\n    setStyles(div.children[0],\r\n            {width: \"100%\", height: \"100%\", border: 0, \"pointer-events\": \"auto\"});\r\n    var body = document.createElement('body');\r\n    body.innerHTML = \"<body>\" + iHtml + \"</body>\";\r\n    div.children[0].contentDocument.body = body;\r\n    // スタイルを設定する（デフォルト：縦横40%（親サイズに連動）で中央に配置）\r\n    setStyles(div, style, \r\n            { width: w+\"%\", height: h+\"%\", left: 50-w/2+\"%\", top: 50-h/2+\"%\",\r\n              position: \"absolute\", \"z-index\" : \"80\",\r\n              background: \"rgba(255, 255, 255, 0.8)\", border: \"medium solid #aaa\"});\r\n    var draggable = new Element(div);\r\n    draggable        // 移動指定要素がリサイズ指定要素よりが下になるよう、×ボタン、移動、リサイズの順に記述する\r\n        .makeRemovable()\r\n        .makeMoveable()\r\n        .makeResizable();\r\n}\r\n\r\n/**\r\n * ×ボタンによる要素削除機能を付与する\r\n * \r\n * @memberOf Util\r\n * @param {Object}\r\n *            [style={cursor: \"move\", top:\"0\", left:\"50%\", width:\"100%\",\r\n *            height:\"20px\"};] ×ボタン要素のCSSスタイル\r\n * @return this\r\n */\r\nElement.prototype.makeRemovable = function(style) {\r\n    // inputタグを追加する\r\n    // <input id=\"hjnDialog\" type=\"checkbox\" class=\"hjnBurger\" checked=\"checked\"\r\n    // onChange=\"...\"/>\r\n    var input = document.createElement(\"input\");\r\n    input.type = \"checkbox\";\r\n    input.id = \"hjnDialog\";\r\n    input.classList.add(\"hjnBurger\");\r\n    input.checked = true;\r\n    input.onchange = function(){\r\n                var e = this.parentElement.parentElement;\r\n                e.parentElement.removeChild(e); // ToDo: 自分ではなく先に開いたダイアログから閉じる\r\n                };\r\n    this._wrapper.appendChild(input);\r\n    // ×ボタンlabelタグを追加する\r\n    // <label for=\"hjnDialog\"><span></span></label>\r\n    var label = document.createElement(\"label\");\r\n    label.classList.add(\"hjnCtrlBox\");\r\n    label.htmlFor = input.id;\r\n    label.appendChild(document.createElement(\"span\"));\r\n    setStyles(label, style, { top:\"4px\", right: \"4px\", \r\n        position: \"absolute\", background: \"transparent\"});\r\n    this._wrapper.appendChild(label);\r\n    return this;\r\n}\r\n/**\r\n * ドラッグによる移動機能を付与する\r\n * \r\n * @memberOf Util\r\n * @param {Object}\r\n *            [style={cursor: \"move\", top:\"0\", left:\"50%\", width:\"100%\",\r\n *            height:\"20px\"};] ドラッグ移動機能要素のCSSスタイル\r\n * @return this\r\n */\r\nElement.prototype.makeMoveable = function(style) {\r\n    // 制御用divを追加する\r\n    this.addHandleElement(elementMove, style, // 上：20px\r\n            {cursor: \"move\", top:\"0\",  left:\"50%\", width:\"100%\", height:\"20px\"},\r\n            \"inside\");\r\n    return this;\r\n}\r\n/**\r\n * ドラッグによる リサイズ機能を付与する\r\n * \r\n * @param {object}\r\n *            [style] リサイズ機能要素のCSSスタイルを、デフォルトから変更する際に指定\r\n * \r\n * @return this\r\n */\r\nElement.prototype.makeResizable = function(style) {\r\n    // 制御用divを追加する\r\n    this.addHandleElement(elementUpper,  style,  // 上:Upper\r\n            {cursor: \"ns-resize\", top:\"0\",    left:\"50%\", width:\"100%\"});\r\n    this.addHandleElement(elementBottom, style,  // 下:Bottom\r\n            {cursor: \"ns-resize\", top:\"100%\", left:\"50%\", width:\"100%\"});\r\n    this.addHandleElement(elementLeft,   style,  // 左:Left\r\n            {cursor: \"ew-resize\", top:\"50%\",  left:\"0\",   height:\"100%\"});\r\n    this.addHandleElement(elementRight,  style,  // 右:Right\r\n            {cursor: \"ew-resize\", top:\"50%\",  left:\"100%\",height:\"100%\"});\r\n    this.addHandleElement(elementUpperLeft,  style,  // 左上:UpperLeft\r\n            {cursor: \"nwse-resize\", top:\"0\",    left:\"0\"});\r\n    this.addHandleElement(elementUpperRight, style,  // 右上:UpperRight\r\n            {cursor: \"nesw-resize\", top:\"0\",    left:\"100%\"});\r\n    this.addHandleElement(elementBottomLeft, style,  // 左下:BottomLeft\r\n            {cursor: \"nesw-resize\", top:\"100%\", left:\"0\"});\r\n    this.addHandleElement(elementBottomRight,style,  // 右下:BottomRight\r\n            {cursor: \"nwse-resize\", top:\"100%\", left:\"100%\"});\r\n   return this;\r\n}\r\n/**\r\n * マウスクリック用要素を追加\r\n * \r\n * @param {Function}\r\n *            func マウス押下時に発火する処理\r\n * @param {object}\r\n *            [style] elementに設定するスタイル\r\n * @param {object}\r\n *            [styleD={top:\"0\", left:\"0\" width:\"5px\", height:\"5px\"}]\r\n *            elementに設定するデフォルトスタイル（styleに同じ属性がある場合styleが優先される）\r\n * @param {String}\r\n *            [transform=\"over\"] paddingに対する要素の位置\r\n *            \"onFrame\":線上、\"inside\":内側、その他：指定文字列をtransformスタイルに設定\r\n * @param {String}\r\n *            [className=\"hjnDraggableItem\"] マウスイベントを取得するdivに設定するCSSクラス名\r\n */\r\nElement.prototype.addHandleElement = function(func, style, styleD, transform, className) {\r\n    style = style || {};\r\n    styleD = styleD || {};\r\n    transform = transform || \"onFrame\";\r\n    for (var property in style) styleD[property] = style[property];\r\n\r\n    var div = document.createElement('div');\r\n    div.classList.add(className || \"hjnDraggableItem\");\r\n    // 要素がpaddingの内側になるtransform設定値を求める\r\n    // 例：上下左右中央の時\"translateY(-50%) translateX(-50%)\"\r\n    if (transform === \"onFrame\") {\r\n        transform = 'translateX(-50%) translateY(-50%)';\r\n    } else if (transform === \"inside\"){\r\n        transform = 'translateX(-' + (styleD.left || 0) + ') translateY(-' + (styleD.top || 0) + ')';\r\n    }\r\n    // スタイルを設定する（デフォルト：縦横10pxで左上{top:0,ledt:0}に配置）\r\n    setStyles(div, styleD, \r\n            { width : \"5px\", height : \"5px\", position : \"absolute\", transform : transform });\r\n    // 要素を追加する\r\n    this._wrapper.appendChild(div);\r\n    // 追加した要素に、マウス押下時の処理を登録する\r\n    div.addEventListener(\"mousedown\", func, false);\r\n    div.addEventListener(\"touchstart\", func, false);\r\n};\r\n\r\n\r\n// マウス押下後の発火関数定義（イベントリスナーに登録する関数を指定）\r\nfunction elementMove(e)       {dragStart(e, this, draggingMove,        dragEndMove       ); }\r\nfunction elementUpper(e)      {dragStart(e, this, draggingUpper,       dragEndUpper      ); }\r\nfunction elementBottom(e)     {dragStart(e, this, draggingBottom,      dragEndBottom     ); }\r\nfunction elementLeft(e)       {dragStart(e, this, draggingLeft,        dragEndLeft       ); }\r\nfunction elementRight(e)      {dragStart(e, this, draggingRight,       dragEndRight      ); }\r\nfunction elementUpperLeft(e)  {dragStart(e, this, draggingUpperLeft,   dragEndUpperLeft  ); }\r\nfunction elementUpperRight(e) {dragStart(e, this, draggingUpperRight,  dragEndUpperRight ); }\r\nfunction elementBottomLeft(e) {dragStart(e, this, draggingBottomLeft,  dragEndBottomLeft ); }\r\nfunction elementBottomRight(e){dragStart(e, this, draggingBottomRight, dragEndBottomRight); }\r\n// マウスドラッグ時の挙動定義（マウス移動距離に乗算する値を定義）\r\nfunction draggingMove(e)       {dragging(e, {posX: 1, posY: 1, width: 0, height: 0 }); }  // 移動\r\nfunction draggingUpper(e)      {dragging(e, {posX: 1, posY: 1, width: 0, height:-1 }); }  // 上リサイズ\r\nfunction draggingBottom(e)     {dragging(e, {posX: 0, posY: 0, width: 0, height: 1 }); }  // 下リサイズ\r\nfunction draggingLeft(e)       {dragging(e, {posX: 1, posY: 0, width:-1, height: 0 }); }  // 左リサイズ\r\nfunction draggingRight(e)      {dragging(e, {posX: 0, posY: 0, width: 1, height: 0 }); }  // 右リサイズ\r\nfunction draggingUpperLeft(e)  {dragging(e, {posX: 1, posY: 1, width:-1, height:-1 }); }  // 左上リサイズ\r\nfunction draggingUpperRight(e) {dragging(e, {posX: 0, posY: 1, width: 1, height:-1 }); }  // 右上リサイズ\r\nfunction draggingBottomLeft(e) {dragging(e, {posX: 1, posY: 0, width:-1, height: 1 }); }  // 左下リサイズ\r\nfunction draggingBottomRight(e){dragging(e, {posX: 0, posY: 0, width: 1, height: 1 }); }  // 右下リサイズ\r\n// マウス解放後の発火関数定義（イベントリスナーから解放する関数を指定）\r\nfunction dragEndMove(e)       {dragEnd(draggingMove,        dragEndMove       ); }\r\nfunction dragEndUpper(e)      {dragEnd(draggingUpper,       dragEndUpper      ); }\r\nfunction dragEndBottom(e)     {dragEnd(draggingBottom,      dragEndBottom     ); }\r\nfunction dragEndLeft(e)       {dragEnd(draggingLeft,        dragEndLeft       ); }\r\nfunction dragEndRight(e)      {dragEnd(draggingRight,       dragEndRight      ); }\r\nfunction dragEndUpperLeft(e)  {dragEnd(draggingUpperLeft,   dragEndUpperLeft  ); }\r\nfunction dragEndUpperRight(e) {dragEnd(draggingUpperRight,  dragEndUpperRight ); }\r\nfunction dragEndBottomLeft(e) {dragEnd(draggingBottomLeft,  dragEndBottomLeft ); }\r\nfunction dragEndBottomRight(e){dragEnd(draggingBottomRight, dragEndBottomRight); }\r\n\r\n/**\r\n * DOM要素にスタイル設定\r\n * \r\n * @param {DOM}\r\n *            element CSSスタイルを設定するDOM要素\r\n * @param {object}\r\n *            [style] elementに設定するスタイル {top:\"50%\", left:\"50%\"}\r\n * @param {object}\r\n *            [styleD] elementに設定するデフォルトスタイル {top:\"50%\", left:\"50%\"}\r\n */\r\nElement.SetStyles = setStyles;\r\nfunction setStyles(element, style, styleD){\r\n    // ポインタ操作の透過が指定されていないとき有効化にする（ダイアログなど上位レイヤで透過となっていることがあるため）\r\n    styleD = styleD || {};\r\n    styleD[\"pointer-events\"] = styleD[\"pointer-events\"] || \"auto\";\r\n    // デフォルトスタイルを設定する\r\n    for (var property in styleD) element.style[property] = styleD[property];\r\n    // 指定スタイルを設定する\r\n    for (var property in style) element.style[property] = style[property];\r\n}\r\n\r\n/**\r\n * マウス押下したときに発火する関数から呼ばれる\r\n * \r\n * @private\r\n * @param {Event}\r\n *            e 発火イベント\r\n * @param {DOM}\r\n *            element マウス押下を発火したDOM要素（CALL元のthis)\r\n * @param {function}\r\n *            dragging マウス移動イベントに登録する関数消去するイベントに登録されている関数\r\n * @param {function}\r\n *            dragEnd 消去するイベントに登録する関数\r\n */\r\nfunction dragStart(e, element, dragging, dragEnd) {\r\n    // タッチイベントとマウスのイベントの差異を吸収する\r\n    var event = (e.type === \"mousedown\") ? e : e.changedTouches[0];\r\n    pos.pageX = event.pageX; \r\n    pos.pageY = event.pageY;\r\n    // 親の親要素(hjnDraggableBox指定)内の相対座標を取得\r\n    var grandparent = element.parentNode.parentNode;\r\n    pos.offsetLeft = grandparent.offsetLeft;\r\n    pos.offsetTop = grandparent.offsetTop;\r\n    // margin補正値、縦横を取得\r\n    var style = document.defaultView.getComputedStyle(grandparent);\r\n    pos.marginLeft = parseInt(style.getPropertyValue(\"margin-left\")) || 0;\r\n    pos.marginTop = parseInt(style.getPropertyValue(\"margin-top\")) || 0;\r\n    pos.width = grandparent.clientWidth || 0;\r\n    pos.height = grandparent.clientHeight || 0;\r\n\r\n    // 処理範囲外のとき何もしない\r\n    // if (pos.y > 10) return;\r\n\r\n    // 全画面にマウスアップ用要素を被せる\r\n    var hjnDrag = document.getElementById(\"hjnDrag\");\r\n    if (!hjnDrag) {\r\n        hjnDrag = document.createElement('div');\r\n        hjnDrag.id = \"hjnDrag\";\r\n        element.parentElement.appendChild(hjnDrag);\r\n    }\r\n    setStyles(hjnDrag,  \r\n            { width  : window.innerWidth + \"px\",\r\n              height : window.innerHeight + \"px\",\r\n              position : \"fixed\", top : \"0\", left : \"0\",\r\n              });\r\n    // 親の親要素（hjnDraggableBox指定)に、CSSクラス\"drag\"を追加\r\n    grandparent.classList.add(\"drag\");\r\n    // addEventListenerの第三引数を判定\r\n    var isPassive = isSupportsPassive() ? {passive: false} : false;\r\n    // ムーブイベントにコールバック\r\n    document.body.addEventListener(\"mousemove\", dragging, isPassive);\r\n    document.body.addEventListener(\"touchmove\", dragging, isPassive);\r\n    // マウスボタンが離されたとき、またはカーソルが外れたときに発火するイベントを登録する\r\n    hjnDrag.addEventListener(\"mouseup\", dragEnd, isPassive);\r\n    hjnDrag.addEventListener(\"touchend\", dragEnd, isPassive);\r\n    document.body.addEventListener(\"mouseleave\", dragEnd, isPassive);\r\n    document.body.addEventListener(\"touchleave\", dragEnd, isPassive);\r\n}\r\n\r\n// addEventListenerの第三引数を判定するためにがpassive対応かどうか判定する\r\nfunction isSupportsPassive(){\r\n    var supportsPassive = false;\r\n    try {\r\n      var opt = {\r\n        get passive() {\r\n          supportsPassive = true;\r\n        }\r\n      },\r\n      handler = function() {};\r\n\r\n      window.addEventListener(\"checkpassive\", handler, opt);\r\n      window.removeEventListener(\"checkpassive\", handler, opt);\r\n    } catch (err) {}\r\n    return supportsPassive; \r\n}\r\n/**\r\n * 親の親要素をマウス押下後、マウスカーソルが動いたときに発火する関数から呼ばれる\r\n * \r\n * @private\r\n * @param {Event}\r\n *            e 発火イベント\r\n * @param {Object}\r\n *            multiply 補正スタイル毎のマウスカーソル移動幅の掛け目<br>\r\n *            要素を移動する場合 {posX:1, posY:1, width:0, height:0}<br>\r\n *            左上リサイズの場合 {posX:1, posY:1, width:-1, height:-1}<br>\r\n *            右下リサイズの場合 {posX:0, posY:0, width:1, height:1}\r\n */\r\nfunction dragging(e, multiply) {\r\n    // タッチイベントとマウスのイベントの差異を吸収する\r\n    var event = (e.type === \"mousemove\") ? e : e.changedTouches[0];\r\n    // フリックしたときに画面を動かさないようにデフォルト動作を抑制する\r\n    e.preventDefault();\r\n    // マウスが動いた場所に要素を動かす（\"drag\"は同時に一つしか存在しない前提）\r\n    var drag = document.getElementsByClassName(\"drag\")[0];\r\n    if (drag) {\r\n        drag.style.left = pos.offsetLeft - pos.marginLeft \r\n            + multiply.posX * (event.pageX - pos.pageX) + \"px\";\r\n        drag.style.top  = pos.offsetTop  - pos.marginTop\r\n            + multiply.posY * (event.pageY - pos.pageY) + \"px\";\r\n        drag.style.width  = pos.width\r\n            + multiply.width  * (event.pageX - pos.pageX) + \"px\";\r\n        drag.style.height = pos.height\r\n            + multiply.height * (event.pageY - pos.pageY) + \"px\";\r\n    }\r\n}\r\n/**\r\n * マウスボタンが上がった場合、もしくは画面外にマウスが出た場合に発火する関数から呼ばれる\r\n * \r\n * @private\r\n * @param {function}\r\n *            dragging 消去するイベントに登録されている関数\r\n * @param {function}\r\n *            dragEnd 消去するイベントに登録されている関数\r\n */\r\nfunction dragEnd(dragging, dragEnd) {\r\n    // イベントハンドラを消去する\r\n    document.body.removeEventListener(\"mousemove\", dragging, false);\r\n    document.body.removeEventListener(\"touchmove\", dragging, false);\r\n    document.body.removeEventListener(\"mouseleave\", dragEnd, false);\r\n    document.body.removeEventListener(\"touchleave\", dragEnd, false);\r\n    // クラス名 .drag を外す\r\n    var drag = document.getElementsByClassName(\"drag\")[0];\r\n    if (drag) drag.classList.remove(\"drag\");\r\n    // マウスアップ検知用要素を削除する\r\n    var hjnDrag = document.getElementById(\"hjnDrag\");\r\n    if (hjnDrag) { hjnDrag.parentElement.removeChild(hjnDrag);}\r\n}\r\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_Config_js__ = __webpack_require__(31);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__util_Config_js__[\"a\"]; });\n\r\n\r\n// import Config_addMenu from \"./util-config_addMenu.js\";\r\n// Config.addMenu = Config_addMenu;\r\n\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class Config\r\n * @classdesc 定数設定機能（設定HTML作成機能付き）\r\n *            <p>\r\n *            日時、TATフォーマット指定機能追加用に作成\r\n * \r\n * @param {String}\r\n *            [prefix=''] 定数の名前空間を一位に指定する文字列、指定しない場合グローバル\r\n * @param {String}\r\n *            [ol='ol'] インデント(.nDown() .nUp())に使うHTMLタグ\r\n * @param {String}\r\n *            [globalName='HJN'] Configを登録するグローバル変数(window)の変数名\r\n * @example this._config = HjnConfig(\"m\") // config設定画面定義\r\n *          .label(null,\"------\").n() // ラベルを表示し、改行\r\n *          .name(\"ENDIAN\").label(null,\"[endian(long field)]\") //key:ENDIAN\r\n *          .radio(def(\"ENDIAN_LIL\", true), null, \"little\", true) //表示ラベルと選択時設定値\r\n *          .radio(def(\"ENDIAN_BIG\", false), null, \"big\");\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #24\r\n    /** @static */\r\n    Config.prototype.__config = {};   // config設定コンテナ\r\n    Config.prototype.__config._onFunctions = {}; // 関数登録用\r\n    Config.prototype.__config.__keyConfig = {};  // キー値登録用\r\n\r\n    /** @constructor */\r\n    function Config(prefix, ol, globalName){ \r\n        if(!(this instanceof Config)) return new Config(prefix, ol, globalName);\r\n\r\n        // グローバル変数(window)にHJN.Configを登録する #74\r\n        this._globalName = globalName || \"HJN\";\r\n        var globalConfig = window[this._globalName].Config;\r\n        globalConfig = globalConfig || Config;\r\n\r\n        this._prefix = prefix; // #76\r\n        this._pre = (prefix || '') + \".\"; // 各フィールド、要素の名称のプレフィックス(区切り文字\".\")\r\n        this._ols = ol ? '<' + ol + '>' : '<ol>';   // リストに使用する要素（初期値 ol )\r\n        this._ole = ol ? '</' + ol + '>' : '</ol>';\r\n        this._html = this._ols; // config設定画面のHtml\r\n        this._nameHtml = '';    // HTMLタグの name属性指定\r\n        this._name = '';        // radioのConfig.get用\r\n\r\n        if (globalConfig[prefix] === undefined){\r\n            globalConfig[prefix] = this;\r\n            return this;\r\n        } else {\r\n            return globalConfig[prefix]; \r\n        }\r\n    }\r\n\r\n    /**\r\n     * HTML要素の値が変更した時に、configに当該要素を登録する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.on = function(t) {\r\n        var funcId = t.id;\r\n        if (t.type === \"radio\") { // radioのとき、nameに対して、選択されたキー値（idからprefixを削除した値）を登録\r\n            this.prototype.__config[t.name] = t.id.substr(t.id.indexOf(\".\") + 1);\r\n        }else if (t.type === \"number\") {    // numberのとき、idに、value(入力値)を数値として登録\r\n            this.prototype.__config[t.id] = +t.value;\r\n        } else if (t.type === \"select-one\") {    // selectのとき、idに、valueの設定値を登録\r\n            this.prototype.__config[t.id] = this.prototype.__config.__keyConfig[t.value].getConfig();\r\n            funcId = t.value;\r\n        } else {                            // textのとき、idに、value(入力値)を登録\r\n            this.prototype.__config[t.id] = t.value;\r\n        }\r\n        // on呼出し関数が登録されているとき、登録関数を呼び出す #51\r\n        var func = Config.GetConfig().getFunctionById(funcId); // #59\r\n        if(typeof(func) === \"function\") func();\r\n    };\r\n\r\n    /**\r\n     * Configリポジトリ管理インスタンスを取得する\r\n     * \r\n     * @memberof Util.Config\r\n     * @example  \r\n     * Config.GetConfig(\"File\") === Config(\"File\"); // true 既に登録されているとき\r\n     */\r\n    Config.GetConfig = function(prefix) { // #59\r\n        return new Config(prefix);\r\n    }\r\n    \r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * keyの値に指定されたvalue（なければkey値）を返却する\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    Config.prototype.getConfig = function(key) {\r\n        var cKey = this.getValueByKey(key);\r\n        var keyConfig = Config.prototype.__config.__keyConfig[this._pre + cKey];\r\n        if(!keyConfig || keyConfig.value === undefined){\r\n            return cKey;    // valueが定義されていないとき、keyの設定値を返却\r\n        }else{\r\n            return keyConfig.getConfig(); // keyの設定値のvalueが定義されているとき\r\n        }\r\n    };\r\n    /**\r\n     * configに登録されているid(=prefix+key)の設定値を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getObjctById = function(id) {\r\n        // return this.__config[id];\r\n        return Config.prototype.__config[id];\r\n    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の設定値を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getValueByKey = function(key) { \r\n        return Config.prototype.__config[this._pre + key];\r\n    };\r\n    /**\r\n     * configにkey(prefix補填)に値を設定する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.setValueByKey = function(key, val) { \r\n        Config.prototype.__config[this._pre + key] = val;\r\n    };\r\n    /**\r\n     * configの指定Idに登録されている関数を取得する<br>\r\n     * \r\n     * @memberof Util.Config\r\n     * @example  //  Config.onでradioボタン選択時に関数を呼ぶ場合に使用\r\n     * var func = Config.GetConfig().getFunctionById(t.id);\r\n     */\r\n\r\n    Config.prototype.getFunctionById = function(id) { // #53\r\n        return Config.prototype.__config._onFunctions[id];\r\n    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の関数を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     * @example Util.Config.GetConfig(\"Simulator\").getFunctionByKey(\"S_SIMU\")();\r\n     */\r\n    Config.prototype.getFunctionByKey = function(key) { // #59\r\n        return Config.prototype.__config._onFunctions[this._pre + this.getValueByKey(key)];\r\n    };\r\n    /**\r\n     * 指定keyに登録されている関数を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getFunction = function(key) { // #76\r\n        return Config.prototype.__config._onFunctions[this._pre + key];\r\n    };\r\n    /**\r\n     * 指定keyに関数を登録する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.setFunction = function(key, func) { // #76\r\n        Config.prototype.__config._onFunctions[this._pre + key] = func;\r\n    };\r\n    \r\n\r\n    /**\r\n     * config設定用HTMLテキストを取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getHtml = function() { \r\n        return this._html + this._ole;\r\n    };\r\n    /**\r\n     * keyに値を設定する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.set = function(key, val) { \r\n        this.value[this._pre + key] = val;\r\n    };\r\n    \r\n    // config作成用 メソッド\r\n    /**\r\n     * 定義＆設定画面作成用機能： 改行\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.n = function (str) {\r\n        str = str || \"\";\r\n        this._html += this._ole + str + this._ols;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ネスト一つ下げ\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.nDown = function () {\r\n        this._html += this._ols;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ネスト一つ上げ\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.nUp = function () {\r\n        this._html += this._ole;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： nameを変更する（radio等の先頭で指定）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.name = function (str) {\r\n        this._nameHtml = str ? 'name=\"' + this._pre + str + '\" ' : '';\r\n        this._name = str;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラベル要素(prefix+keyで関連付けるformのid属性となる)\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.label = function (key, str, attribute) {\r\n        this._html += '<label ' +\r\n                        (key ? 'for=\"' + this._pre + key + '\" ': '') +\r\n                        (attribute || '') + '>' +\r\n                        (str || '') +\r\n                        '</label>\\n'; // #51\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラベル付された各種入力フォーム\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.labeledForm = function (key, type, typedAttribute,\r\n                                pLabel, sLabel, val, attribute, check, cssClass) {\r\n        var classStr = (cssClass) ? ' class=\"' + cssClass + '\"' : ''; // #51\r\n        // optionの時(select用）\r\n        if (type === \"option\"){\r\n            this._html += '<option value=\"' + this._pre + key + '\"' + (typedAttribute || '') + '>' +\r\n                    (pLabel ? pLabel : '') + (sLabel ? sLabel : '') + '</option>\\n'\r\n            return this;\r\n        }\r\n        // option以外の時\r\n        this._html += '<label' + classStr + '>' + // #51\r\n                    (pLabel ? pLabel : '') +\r\n                    '<input type=\"' +type + '\" ' +\r\n                        (typedAttribute || '') + \r\n                        this._nameHtml +\r\n                        'id=\"' + this._pre + key + '\" '+ // idがユニークになるようkeyにprefixを付与\r\n                        'onchange=\"' + this._globalName + '.Config.on(this);\" ' + // #74\r\n                        (val ? 'value=\"' + val + '\" ' : '') +   // val は、キー値のまま\r\n                        (attribute || '') + \r\n                        (check ? ' checked=\"checked;\"' : '') +\r\n                    '>' +\r\n                    (sLabel ? sLabel : '') +\r\n                    '</label>\\n'; // #51\r\n        // デフォルト指定があるとき configにデフォルト値を設定する\r\n        if (type === \"radio\" && check) {    // radioのとき、nameに対して、選択状態のkeyを登録\r\n            Config.prototype.__config[this._pre + this._name] = key;\r\n        } else if (type === \"number\") { // numberのとき、keyに対する、val(入力値)を数値として登録\r\n            Config.prototype.__config[this._pre + key] = +val;\r\n        } else {    // textのとき、keyに対する、val(入力値)を登録\r\n            Config.prototype.__config[this._pre + key] = val;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： テキストボックス要素で、文字列を設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.number = function (key, pLabel, sLabel, val, attribute, func) {\r\n        Config.prototype.labeledForm.call(this, key, \"number\", \"\", \r\n                                pLabel, sLabel, val, attribute);\r\n        if (func) this.setFunction(key, func); // #74\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： テキストボックス要素で、数値を設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.text = function (key, pLabel, sLabel, val, attribute) {\r\n        Config.prototype.labeledForm.call(this, key, \"text\", \"\", \r\n                                pLabel, sLabel, val, attribute);\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラジオボタン要素で、選択肢の一つを設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.radio = function (key, pLabel, sLabel, check, attribute, func) {\r\n        Config.prototype.labeledForm.call(this, key, \"radio\", (check ? 'checked=\"checked;\"' : ''),\r\n                                pLabel, sLabel, \"\", attribute, check, \"hjnLabel4Input\");\r\n        // 関数登録指定時、attributeを関数名として、指定関数を登録する #51\r\n        if (func) this.setFunction(key, func);\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： セレクトボックス要素で、選択肢の一つを設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.option = function (key, pLabel, sLabel, check, attribute, func) { // #74\r\n        Config.prototype.labeledForm.call(this, key, \"option\", (check ? ' selected' : ''),\r\n                                pLabel, sLabel, \"\", attribute, check, \"hjnLabel4Input\");\r\n        // 関数登録指定時、attributeを関数名として、指定関数を登録する #51\r\n        if (func) this.setFunction(key, func);\r\n        // 逆引きリストに追加する \r\n        var reverseList = Config.prototype.__config.__keyConfig[this._pre + this._name] || {};\r\n        var reverseVal = this._pre + key;\r\n        var reverseKey = this.__config.__keyConfig[reverseVal].getConfig(); \r\n        reverseList[reverseKey] = reverseVal;\r\n        Config.prototype.__config.__keyConfig[this._pre + this._name] = reverseList; \r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： option用タグの開始宣言（selectタグ用）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.startTag = function (type) { // #74\r\n        this._tag = type || \"\";\r\n        this._html += '<' + this._tag \r\n                            + ' id=\"' + this._pre + this._name + '\"'\r\n                            + 'class=\"hjnLabel4Input\" onchange=\"HJN.Config.on(this);\">\\n'  ;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： option用タグの終了宣言（selectタグ用）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.endTag = function (type) { // #74\r\n        this._html += '</' + this._tag + '>\\n'\r\n        this._tag = undefined;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 定義＆設定画面作成用機能： keyConfigの設定値を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getKeyConfig = function (key) { // #74\r\n        return this.__config.__keyConfig[this._pre + key];\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： option設定値からoptionキー値を逆引きする（selectタグ用）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getOptionKey = function (key, val) { // #74\r\n        return this.__config.__keyConfig[this._pre + key][val];\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： 固定値を取得するキーの宣言<br>\r\n     * __keyConfig[\"File.SEP_COMMA\"] = {value: \",\", getConfig: LF_ELSE.vから値を取得するfunction, onFunc: null}  \r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key キー値\r\n     * @param {Object}\r\n     *            [val=key] 取得する固定値（getValueByKeyの返却値、デフォルト：keyと同じ文字列）\r\n     * @param {function}\r\n     *            [onFunc] onイベント時に実行する処理（メニューのa属性などで利用）\r\n     */\r\n    Config.prototype.def = function(key, val, onFunc) { // #76\r\n        var _keyConf = Config.prototype.__config.__keyConfig[this._pre + key] = {};\r\n        _keyConf.value = (val === undefined) ? key : val; // \r\n        _keyConf.getConfig = function () { return (val === undefined) ? key : val; };\r\n        _keyConf.onFunc = onFunc || null; \r\n        return key;\r\n    }\r\n    /**\r\n     * 定義＆設定画面作成用機能： 画面より値を取得するキーの宣言<br>\r\n     * __keyConfig[\"File.LF_ELSE\"] = {value: \"LF_ELSE\", getConfig: LF_ELSE.vから値を取得するfunction}  \r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key キー値\r\n     * @param {String}\r\n     *            [fieldId=key+\".v\"] 値を取得する画面フィールドのキー\r\n     */\r\n    Config.prototype.v = function (key, fieldId) { // #76\r\n        var _keyConf = Config.prototype.__config.__keyConfig[this._pre + key] = {};\r\n        _keyConf.value = key;           // getValueByKeyの返却値（デフォルト：keyと同じ文字列）\r\n        _keyConf.getConfig = function () {\r\n                return Util.Config(this._prefix).getValueByKey(fieldId || key + \".v\");\r\n            };\r\n        return key;\r\n    };\r\n\r\n\r\n    /**\r\n     * HTMLの入力フィールドに、指定値を設定し、Configに反映する\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    Config.prototype.setText = function(key, val) { // #76\r\n        var id = this._pre + key;\r\n        document.getElementById(id).value = val;\r\n        document.getElementById(id).onchange();\r\n    }    \r\n    /**\r\n     * HTMLのselectorを、指定値を選択し、Configに反映する\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    Config.prototype.setSelector = function(key) { // #76\r\n        var id = this._pre + key;\r\n        document.getElementById(id).checked = true;\r\n        document.getElementById(id).onchange();\r\n    }    \r\n    \r\n    /* new */\r\n    return Config;\r\n}());\n\n/***/ }),\n/* 32 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__ = __webpack_require__(4);\n\r\n\r\n\r\n/**\r\n * @memberof TimeSeries\r\n * @class FileParser\r\n * @classdesc ファイルをパースして読み込む\r\n *            <p>\r\n *            パース条件指定画面生成つき\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() {\r\n    /** @static */\r\n\r\n    /** constructor */\r\n    function FileParser(){\r\n        if(!(this instanceof FileParser)) return new FileParser();\r\n    }\r\n    \r\n    /** @private */\r\n\r\n    // public\r\n    /**\r\n     * ファイルが新たに指定された時、eTatOriginalを再構築するか否（データを追加する）か\r\n     * \r\n     * @memberof TimeSeries.FileParser\r\n     * @return {boolean} 再構築モードするときtrue、データを追加するときfalse\r\n     */\r\n    FileParser.prototype.isNewETAT = function() { // #23\r\n        return __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].File.getConfig(\"NEWFILE\") === \"NEWDATA\"; // #76\r\n    }\r\n    \r\n    /**\r\n     * 「ファイルから次の1レコードを取得するutil」 を取得する\r\n     * \r\n     * @memberof TimeSeries.FileParser\r\n     */\r\n    FileParser.prototype.createGetterOfLine = function(file) {\r\n\r\n        /**\r\n         * @memberof TimeSeries.FileParser\r\n         * @class GetterOfLine\r\n         * @classdesc ファイルから１レコード取得する\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持する改行コードを用いて、ファイルから１レコードを取得する\r\n         * \r\n         * @example try{ var getterOfLine =\r\n         *          FileParser.createGetterOfLine(file), fileInfo;<br>\r\n         *          for(var i = 0; i < n; i++) { <br>\r\n         *          line = getterOfLine.next(); fileInfo += line.str + \"<BR>\"; }<br>\r\n         *          }catch (e) {<br>\r\n         *          console.error(\"改行コードの無いファイルは扱えません]%o\",e); }\r\n         */\r\n        function GetterOfLine(file, maxLength){ /* constructor */\r\n            if(!(this instanceof GetterOfLine)) return new GetterOfLine(file, maxLength);\r\n\r\n            this.file = file;\r\n            this.buf = new Uint8Array(file);\r\n            this.maxLength = maxLength || this.buf.length,\r\n            this.confLF = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].File.getConfig(\"LF\");  // 改行コードor固定レコード長 #76\r\n            this.from = 0;\r\n            this.to = 0;\r\n            this.len = 0;\r\n            this.line = {file: this.file, pos: 0, array: null, str: \"\", isEoF: false };\r\n        }\r\n        // public\r\n        /**\r\n         * 次の1レコードを取得する\r\n         * \r\n         * @memberof TimeSeries.FileParser.GetterOfLine\r\n         * @name next\r\n         */\r\n        if (__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].File.getValueByKey(\"LF\") === \"LF_FIX\"){ // 固定長のとき #76\r\n            GetterOfLine.prototype.next = function () { // 次の1レコードを取得する\r\n                if(this.from >= this.maxLength ){   // ファイル末尾のとき\r\n                    this.line = {file: this.file, pos: this.maxLength, array: null, str: \"\", isEoF: true };\r\n                } else {\r\n                    this.len = Math.min(this.maxLength - this.from, this.confLF);\r\n                    var array = new Uint8Array(this.file, this.from, this.len);\r\n                    this.line = {\r\n                            file: this.file,\r\n                            pos: this.from,\r\n                            array: array,\r\n                            str: String.fromCharCode.apply(null, array),\r\n                            isEoF: false };\r\n                }\r\n                this.from += this.confLF;   // 次の行を指しておく\r\n                return this.line;\r\n            };\r\n        } else { // 可変長のとき\r\n            GetterOfLine.prototype.next = function () { // 次の1レコードを取得する\r\n                if(this.from >= this.maxLength ){   // ファイル末尾のとき\r\n                    this.line = {file: this.file, pos: this.maxLength, array: null, str: \"\", isEoF: true };\r\n                } else {\r\n                    this.to = this.buf.indexOf(this.confLF, this.from);\r\n                    if(this.to < 0) this.to = this.maxLength;   // 最終レコード（EOFで改行コードなし）のとき\r\n                    this.len = Math.min(this.to - this.from, 1024);\r\n                    var array = new Uint8Array(this.file, this.from, this.len);\r\n                    this.line = {\r\n                            file: this.file,\r\n                            pos: this.from,\r\n                            array: array,\r\n                            str: String.fromCharCode.apply(null, array),\r\n                            isEoF: false };\r\n                }\r\n                this.from = this.to + 2;    // 次の行を指しておく\r\n                return this.line;\r\n            };\r\n        }\r\n        return new GetterOfLine(file);\r\n    };\r\n    \r\n    \r\n    /**\r\n     * eTatのフィルター\r\n     * \r\n     * @memberof TimeSeries\r\n     */\r\n    FileParser.prototype.createFilter = function() { // #34\r\n       /**\r\n         * @memberof TimeSeries.FileParser\r\n         * @class Filter\r\n         * @classdesc FileParserのフィルター\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持するフィルタ条件を用いるフィルターを取得する\r\n         */\r\n        function Filter(){ /* constructor */\r\n            if(!(this instanceof Filter)) return new Filter();\r\n            var c = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].Filter; // #76\r\n            \r\n            this.confF_TIME_FROM = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"i\" /* S2D */](c.getConfig(\"F_TIME_FROM\"));    // 時刻(X)の最小値フィルター\r\n            this.confF_TIME_TO   = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"i\" /* S2D */](c.getConfig(\"F_TIME_TO\"));      // 時刻(X)の最大値フィルター\r\n            this.confF_TIME = (isNaN(this.confF_TIME_FROM) && isNaN(this.confF_TIME_TO))\r\n                            ? false : true; // 時刻(x）フィルター指定の有無\r\n            \r\n            this.confF_TAT_FROM = c.getConfig(\"F_TAT_FROM\") || 0; // 時間(Y)の最小値フィルター\r\n            this.confF_TAT_TO   = c.getConfig(\"F_TAT_TO\") || Number.MAX_VALUE; // 時間(Y)の最大値フィルター\r\n            this.confF_TAT = (this.confF_TAT_FROM === 0 && this.confF_TAT_TO === Number.MAX_VALUE)\r\n                            ? false : true; // 時間(ｙ）フィルター指定の有無\r\n\r\n            this.confF_TEXT = c.getConfig(\"F_TEXT\") || null; // テキストフィルタの条件（使用しない、Include,Exclude\r\n            if (this.confF_TEXT === \"F_TEXT_INCLUDE\") {\r\n                this.confF_TEXT = true;\r\n            } else if (this.confF_TEXT === \"F_TEXT_EXCLUDE\") {\r\n                this.confF_TEXT = false;\r\n            } else { // \"F_TEXT_NON\"\r\n                this.confF_TEXT = null;\r\n            }\r\n            \r\n            this.confF_TEXT_LEN = c.getConfig(\"F_TEXT_LEN\") || null;    // フィルタテキストのバイト長\r\n            this.confF_TEXT_POS = c.getConfig(\"F_TEXT_POS\") || 0;       // フィルタテキストの先頭バイト位置\r\n            this.confF_TEXT_COL = (c.getConfig(\"F_TEXT_COL\") || 3) - 1; // フィルタテキストのカラム位置（先頭：０）\r\n            this.confF_TEXT_REG = new RegExp(c.getConfig(\"F_TEXT_REG\") || \".*\");    // フィルタテキストの正規表現\r\n            \r\n            this.confF_IS = (this.confF_TIME === true \r\n                            || this.confF_TAT === true || this.confF_TEXT != null)\r\n                          ? true : false; // フィルタ指定の有無\r\n            \r\n            c = new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */](\"File\"); // #76 \r\n            this.confF_SEP = c.getConfig(\"SEP\").charCodeAt(0);\r\n        }\r\n        \r\n        // class method\r\n        // private\r\n        /**\r\n         * フィルター条件で判定する\r\n         * \r\n         * @memberof TimeSeries.Filter\r\n         */\r\n        Filter.prototype._isIn = function (e) {\r\n            // フィルタ指定が無いときフィルタしない（初期表示時に無駄な処理をしない）\r\n            if (this.confF_IS === false) return true;\r\n            // 時刻（ｘ）フィルタの判定 （conf指定なしのとき NaNとの比較となりfalseとなる）\r\n            if (e.x < this.confF_TIME_FROM || this.confF_TIME_TO < e.x ) {\r\n                return false;\r\n            }\r\n            // 時間（ｙ）フィルタの判定\r\n            if (e.y < this.confF_TAT_FROM || this.confF_TAT_TO < e.y){\r\n                return false;\r\n            }\r\n            // テキストフィルタの判定\r\n            if (this.confF_TEXT === null) {\r\n                return true; // フィルタ指定なし\r\n            }\r\n            var text = \"\";\r\n            if (e.pos === undefined) { // テキスト読み込みでないとき（自動生成データのとき）\r\n                // レコードを取得する #62\r\n                text = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.getRecordAsText(e); // #61\r\n                // 指定正規表現に合致するか判定し、Include/Exclude指定に応じてリターンする\r\n                return this.confF_TEXT === this.confF_TEXT_REG.test(text);\r\n            } else { // ファイル読み込みのとき\r\n                // レコードを取得する\r\n                var arr = new Uint8Array(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__[\"a\" /* HJN */].filesArrayBuffer[e.fileIdx+1], e.pos, e.len);\r\n                // CSVレコードの指定カラムを取得する(arr)\r\n                var colPos = 0;\r\n                for (var i = 0; i < this.confF_TEXT_COL; i++) {\r\n                    colPos = arr.indexOf(this.confF_SEP,colPos + 1);\r\n                }\r\n                if (colPos === -1){\r\n                    // 指定数のカラムが無い場合、Includeは処理対象外、Excludeは処理対象\r\n                    return !this.confF_TEXT;\r\n                }\r\n                var col = arr.slice(colPos, arr.length);\r\n                // 判定用文字列を取得する\r\n                text = col.slice(this.confF_TEXT_POS, this.confF_TEXT_POS + this.confF_TEXT_LEN);\r\n                // 指定正規表現に合致するか判定し、Include/Exclude指定に応じてリターンする\r\n                return this.confF_TEXT === this.confF_TEXT_REG.test(String.fromCharCode.apply(null, text));\r\n            }\r\n            return true;\r\n        };\r\n        \r\n        // public\r\n        /**\r\n         * eTatをフィルターする\r\n         * \r\n         * @memberof TimeSeries.Filter\r\n         * @param {eTat}\r\n         *            eTat フィルター処理対象のeTat\r\n         * @return {eTat} eTat フィルターされたeTat\r\n         * \r\n         */\r\n        Filter.prototype.filter = function (eTat) {\r\n            if (!eTat) return [];\r\n            return eTat.filter(this._isIn, this);\r\n        };\r\n\r\n        return new Filter();\r\n    };\r\n\r\n\r\n    /**\r\n     * 「１レコードからx:時刻（数値：ミリ秒）,y:Tat(数値：秒)を取得するutil」を取得する\r\n     * \r\n     * @memberof TimeSeries.Filter\r\n     */\r\n    FileParser.prototype.createGetterOfXY = function() {\r\n\r\n        /**\r\n         * @memberof TimeSeries.FileParser\r\n         * @class GetterOfXY\r\n         * @classdesc １レコードをパースし、XとYをレコード取得する\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持するレコードフォーマット情報を用いて、ファイルの指定レコードからＸ(data)とＹ(value)を取得する\r\n         */\r\n        function GetterOfXY(){ /* constructor */\r\n            if(!(this instanceof GetterOfXY)) return new GetterOfXY();\r\n\r\n            var c = new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */](\"File\"); // #76\r\n            this.confSEP = c.getConfig(\"SEP\");   // セパレータ\r\n            \r\n            this.confTIME_COL = c.getConfig(\"TIME_COL\") - 1 || 0;    // 時刻(X)のカラム位置\r\n            this.confTIME_POS = (c.getConfig(\"TIME_POS\") || 1) - 1;  // 時刻(X)の先頭バイト位置\r\n            this.confTIME_LEN = (c.getConfig(\"TIME_LEN\") || 0);      // 時刻(X)のバイト長\r\n            this.confTIME_FORM = c.getConfig(\"TIME_FORM\");           // 時刻(X)の文字フォーマット指定\r\n            this.confTIME_YMD = (c.getConfig(\"TIME_YMD\") || \"YYYY/MM/DD hh.mm.ss.ppp\"); // #42\r\n                                                                    // 時刻(X)のYMDフォーマット\r\n            this.paseDateConf = {  // YYYY/MM/DD hh:mm:dd.ss.ppp #41\r\n                YYYY: this.confTIME_YMD.indexOf(\"YYYY\"),\r\n                MM: this.confTIME_YMD.indexOf(\"MM\"),\r\n                DD: this.confTIME_YMD.indexOf(\"DD\"),\r\n                hh: this.confTIME_YMD.indexOf(\"hh\"),\r\n                mm: this.confTIME_YMD.indexOf(\"mm\"),\r\n                ss: this.confTIME_YMD.indexOf(\"ss\"),\r\n                ppp: this.confTIME_YMD.indexOf(\"p\"),\r\n            };\r\n            this.isYMD = (this.confTIME_FORM === \"TIME_FORM_YMD\");\r\n            // 時刻(X)の数値単位(1or1000,YMDのとき1)\r\n            this.confTIME_UNIT = this.isYMD? 1 : (c.getConfig(\"TIME_UNIT\") || 1);\r\n            \r\n            \r\n            this.confTAT_COL = c.getConfig(\"TAT_COL\") - 1 || 1;      // 時間(Y)のカラム位置\r\n            this.confTAT_POS = (c.getConfig(\"TAT_POS\") || 1) - 1;    // 時間(Y)の先頭バイト位置\r\n            this.confTAT_LEN = (c.getConfig(\"TAT_LEN\") || 0);        // 時間(Y)のバイト長\r\n            this.confTAT_FORM = c.getConfig(\"TAT_FORM\");             // 時間(Y)のフォーマット指定\r\n            this.confTAT_UNIT = c.getConfig(\"TAT_UNIT\") || 1;        // 時間(Y)の数値単位(1/1000)\r\n            this.confENDIAN =  c.getConfig(\"ENDIAN\");    // リトルエンディアンはtrue、ビッグエンディアンはfalse\r\n            this.isLittle = (function(){\r\n                // long用に4バイト取得する\r\n                var buf = new ArrayBuffer(4);               \r\n                // true:bufに、リトルエンディアン指定で1を書き込む\r\n                new DataView(buf).setUint32(0, 1, true);\r\n                // プラットフォームのエンディアンを使用するUint32Arrayと比較する\r\n                return (new Uint32Array(buf)[0] === 1);     \r\n            }());\r\n            \r\n            this.dateAndValue = {date: 0, value: 0, isError: false };\r\n        }\r\n        \r\n        // class method\r\n        /**\r\n         * 数字をパースして数値（ミリ秒）を取得する<br>\r\n         * 例：\"-1:1:1.2 -> -3661200 ms = -1*(3600+60+1+0.2)*1000\r\n         * \r\n         * @memberof TimeSeries.FileParser.GetterOfXY\r\n         */\r\n        GetterOfXY.parseNumber = function (){ // str, unit,\r\n            var str = arguments[0],\r\n                unit = arguments[1];\r\n            if(!str) {console.log(\"data Y parse error\"); return 0; }\r\n            var ds = (str.indexOf(\":\") < 0) ? [str] : str.split(\":\"),   // #40\r\n                pm = (0 <= ds[0]) ? 1 : -1,\r\n                sec = 0.0;\r\n            for(var i = 0; i < ds.length; i++){\r\n                sec += pm * Math.abs(ds[i]) * Math.pow(60, ds.length - i - 1);\r\n            }\r\n            return sec * (unit || 1);\r\n        };\r\n\r\n        /**\r\n         * Long(4バイトバイナリ）数字をパースして数値（ミリ秒）を取得する\r\n         * \r\n         * @private\r\n         */\r\n        GetterOfXY.prototype._parseLong = function (arr){\r\n            if (4 <= arr.length ) { // Long(4byte)以上のときunsigned longとして処理する\r\n                // bufの先頭4byteを、指定バイトオーダ(endian)で、符号無32bit intとして参照\r\n                return (new DataView(arr.buffer, 0 , 4)).getUint32(0, this.confENDIAN);\r\n            } else {\r\n                // Long(4バイト）より短いとき、Byte単位に処理する\r\n                if (this.confENDIAN) { // little endianのとき\r\n                    return arr.reduceRight(function(a, b){ return a*256 + b; });\r\n                } else {               // big endianのとき\r\n                    return arr.reduce(function(a, b){ return a*256 + b; });\r\n                }\r\n            }\r\n        };\r\n\r\n        // public\r\n        /**\r\n         * レコードからXとYを取得する\r\n         * \r\n         * @memberof TimeSeries.FileParser.GetterOfXY\r\n         */\r\n        GetterOfXY.prototype.parse = function (line) {\r\n            // セパレータでカラム分割する\r\n            var posMax = Math.max(this.confTIME_COL, this.confTAT_COL),\r\n                sep = this.confSEP.charCodeAt(0),   // 区切り文字のUint値\r\n                pos = 0,\r\n                nextPos = line.array.indexOf(sep),  // 行末（次の区切り文字位置）\r\n                x = 0,\r\n                y = -1;\r\n            for (var i = 0; i <= posMax; i++) {\r\n                if (i === this.confTIME_COL){\r\n                    // パース対象フィールドを切り出す\r\n                    var posX =  pos + this.confTIME_POS;\r\n                    var arrX = (0 < this.confTIME_LEN) \r\n                             ? line.array.slice(posX, posX + this.confTIME_LEN)\r\n                             : line.array.slice(posX, nextPos);\r\n                    var strX = \"\";\r\n                    // フィールドをパースする\r\n                    if (this.isYMD){    // 年月日時分秒の文字列のとき\r\n                        strX = String.fromCharCode.apply(null,arrX);\r\n                        x = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"i\" /* S2D */](strX, this.paseDateConf);\r\n                    } else if (this.confTIME_FORM === \"TIME_FORM_TEXT\"){    // テキスト数字のUNIX経過時間のとき\r\n                        strX = String.fromCharCode.apply(null,arrX);\r\n                        x = GetterOfXY.parseNumber(strX);\r\n                    } else{ // this.confTIME_FORM === \"TIME_FORM_LONG\"\r\n                            // longのUNIX経過時間のとき\r\n                        x = this._parseLong(arrX);\r\n                    }\r\n                    // 単位を補正する\r\n                    x *= this.confTIME_UNIT;\r\n                }\r\n                if (i === this.confTAT_COL){\r\n                    // パース対象フィールドを切り出す\r\n                    var posY =  pos + this.confTAT_POS;\r\n                    var arrY = (0 < this.confTAT_LEN) \r\n                             ? line.array.slice(posY, posY + this.confTAT_LEN)\r\n                             : line.array.slice(posY, nextPos);\r\n                    // フィールドをパースする\r\n                    if (this.confTAT_FORM === \"TAT_FORM_TEXT\"){\r\n                        // テキスト数字によるUNIX経過時間のとき\r\n                        var strY = String.fromCharCode.apply(null,arrY);\r\n                        y = GetterOfXY.parseNumber(strY);\r\n                    } else{\r\n                        // TAT_FORM_TEXT === \"TAT_FORM_LONG\" 数値によるUNIX経過時間のとき\r\n                        y = this._parseLong(arrY);\r\n                    }\r\n                    // 単位を補正する\r\n                    y *= this.confTAT_UNIT;\r\n                }\r\n                pos = nextPos + 1;\r\n                nextPos = line.array.indexOf(sep, pos);\r\n                if (nextPos < 0) nextPos = line.array.length;\r\n            }\r\n            \r\n            if(0 < x && 0 <= y){ // 正常時\r\n                return {x: x, y: y, isError: false };\r\n            } else {            // エラー時\r\n                return {x: x, y: y, isError: true };\r\n            }\r\n        };\r\n        \r\n        return new GetterOfXY();\r\n    };\r\n    \r\n    /**\r\n     * eTatの指定行の編集元レコードを、テキストフォーマットに変換して取得する\r\n     * \r\n     * @memberof TimeSeries.FileParser\r\n     * @param {Object}\r\n     *            e eTat[n]：eTatの指定行\r\n     * @return {String} eTatの指定行の表示用テキスト\r\n     */\r\n    FileParser.prototype.getRecordAsText = function (e) { // #62 ADD\r\n        if (!e) return \"\";\r\n        var text = \"\";\r\n        if (typeof e.pos === \"undefined\") { // 生成データのとき\r\n            // 生成データをCSVのログデータとして編集する #61\r\n            text = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](e.x, \"yyyy/MM/dd hh:mm:ss.ppp\", true)\r\n                    + \", \" + e.y + \", \" + e.message; // #53\r\n            // 状態遷移履歴を追加する #62\r\n            if (e.history){\r\n                e.history.forEach(function(h){\r\n                    var timeStr = \"\";\r\n                    if (typeof(h.time) === \"number\") {\r\n                        timeStr = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](h.time, \"mm:ss.ppp\", true) + \" seq:\"\r\n                    }\r\n                    text += \" [\" + h.sequenceIdx + \":\" + h.status + \"]\" // #61\r\n                        + timeStr + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](h.sequenceTime, \"mm:ss.ppp\", true);\r\n                }, this);\r\n            }\r\n        } else { // ファイル読込のとき\r\n            // ファイルの該当行を Uint8Arrayに登録する\r\n            var buff = new Uint8Array(e.len + 2);\r\n            var file = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__[\"a\" /* HJN */].filesArrayBuffer[e.fileIdx]; // #23\r\n            buff.set(new Uint8Array(file, e.pos,\r\n                    Math.min(e.len + 2, file.byteLength - e.pos)));\r\n            // ログデータを編集する\r\n            text = String.fromCharCode.apply(null, buff);\r\n        }\r\n        return text;\r\n        \r\n    };\r\n \r\n    // new\r\n    return FileParser;\r\n}());\n\n/***/ }),\n/* 33 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = MenuConfigFile;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__ = __webpack_require__(1);\n\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class MenuConfigFile\r\n * @classdesc FileParser用メニューHTML定義\r\n * \r\n */\r\nfunction MenuConfigFile() {}  // #76\r\n  \r\n\r\nMenuConfigFile.config = function () {\r\n    // File Format Config設定画面定義 #51\r\n    var prefix = \"File\";\r\n    var c = new  __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */](prefix);\r\n    c // #53\r\n        .name(\"NEWFILE\").label(null,\"Registered \") // #23\r\n            .radio(\"NEWDATA\", null, \"newly\", true)\r\n            .radio(\"ADDDATA\", null, \"additionally\").n()\r\n        .label(null,\"----- File format definition --------\").n()\r\n        .n(\"<br>\")\r\n        .name(\"LF\").label(null, \"[Line feed code]\").n()\r\n        .radio(c.v(\"LF_FIX\"), null, \"Fixed Length\")\r\n            .number(\"LF_FIX.v\",  null, \"byte\",\"80\",'style=\"width:60px;\"').n()\r\n        .radio(c.def(\"LF_WIN\",  13), null, \"Windows:CR(13)+LF(10)\", true).n()\r\n        .radio(c.def(\"LF_UNIX\", 10), null, \"Unix/Linux:LF(10)\").n()\r\n        .radio(c.def(\"LF_ZOS\",  15), null, \"zOS:NEL(15)\").n()\r\n        .radio(c.def(\"LF_MAC\",  13), null, \"Mac:CR(13)\").n()\r\n        .radio(c.v(\"LF_ELSE\"), null, \"other charcode\")\r\n            .number(\"LF_ELSE.v\", \"(\", \")\", \"10\", 'style=\"width:40px;\"').n()\r\n        .n(\"<br>\")\r\n        .name(\"SEP\").label(null,\"[CSV delimiter]\").n()\r\n        .radio(c.def(\"SEP_COMMA\", ','), null, \"comma\", true)\r\n        .radio(c.def(\"SEP_TAB\", '\\t'),   null,\"tab\")\r\n        .radio(c.v(\"SEP_ELSE\"), null, \"other\")\r\n            .text(\"SEP_ELSE.v\", '\"', '\"', ',', 'size=\"2\" placeholder=\",\"').n()\r\n        .n(\"<br>\")\r\n        .name(\"TIME\").label(null, \"[Timestamp field]\").n()\r\n        .number(\"TIME_COL\", \"\", \"th column of CSV\", \"1\", 'style=\"width:40px;\"').n()\r\n        .name(\"TIME_POS\")\r\n            .number(\"TIME_POS\", \"Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n            .number(\"TIME_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .name(\"TIME_FORM\").label(null,\"Format:\").n()\r\n            .radio(\"TIME_FORM_YMD\", \"text\", null, true)\r\n                .text(\"TIME_YMD\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"').n()\r\n            .radio(\"TIME_FORM_TEXT\", \"(num)\", \"text\")\r\n            .radio(\"TIME_FORM_LONG\", null, \"long\").n()\r\n            .nDown()\r\n            .name(\"TIME_UNIT\").label(null, \"Units of numbers:\")\r\n                .radio(c.def(\"TIME_UNIT_MS\", 1), null, \"msec\")\r\n                .radio(c.def(\"TIME_UNIT_SEC\", 1000), null, \"sec\", true)\r\n            .nUp()\r\n        .n(\"<br>\")\r\n        .name(\"TAT\").label(null,\"[Turnaround time(TAT) field]\").n()\r\n        .number(\"TAT_COL\", \"\", \"th column of CSV\", \"2\", 'style=\"width:40px;\"').n()\r\n        .name(\"TAT_POS\")\r\n            .number(\"TAT_POS\", \"Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n            .number(\"TAT_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .name(\"TAT_UNIT\").label(null, \"Units of numbers:\")\r\n                .radio(c.def(\"TAT_UNIT_MS\", 1), null, \"msec\")\r\n                .radio(c.def(\"TAT_UNIT_SEC\", 1000), null, \"sec\", true).n()\r\n        .name(\"TAT_FORM\").label(null,\"Format: \")\r\n            .radio(\"TAT_FORM_TEXT\", null, \"text\", true)\r\n            .radio(\"TAT_FORM_LONG\", null, \"long\").n()\r\n            .nDown()\r\n            .name(\"ENDIAN\").label(null, \"for long Endian: \")\r\n                .radio(c.def(\"ENDIAN_LIL\", true), null, \"little\", true)\r\n                .radio(c.def(\"ENDIAN_BIG\", false), null, \"big\")\r\n            .nUp()\r\n        .n(\"<br>\")\r\n    ;\r\n}\n\n/***/ }),\n/* 34 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualApp\r\n * @classdesc 仮想アプリケーション\r\n * \r\n * @param {String}\r\n *            [userName = \"dafault\"] ログに出力するユーザ名\r\n * @param {Array}\r\n *            [sequence = SQL３個のオン処理] 取引の処理シーケンスを格納した配列\r\n * @param {Number}\r\n *            [times = 2 回] 繰返し回数\r\n * @param {Number}\r\n *            [thinkTime = 300 ms] 繰返し時の次回処理開始までの平均時間(ミリ秒）\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #53\r\n    /** @constructor */\r\n    function VirtualApp(userName, model){\r\n        if(!(this instanceof VirtualApp)){\r\n            return new VirtualApp(userName, model);\r\n        }\r\n        this._userName = userName || \"default\"; // ログ出力テキスト\r\n        // 定数の設定\r\n        // イベントシーケンスを取得する\r\n        if (typeof(model) === \"undefined\") model = {}\r\n        model.baseModel = model.baseModel || {\"holds\": []};\r\n        this._sequence = model.sequence;\r\n        // イベントシーケンスの繰り返し回数\r\n        this._times = (typeof(model.times) !== \"undefined\") ? model.times : 1;\r\n        // イベントシーケンス終了時に再実行する場合の平均再開時間\r\n        this._thinkTime = Math.max(0,\r\n                (typeof(model.thinkTime) !== \"undefined\") ? model.thinkTime : 500);\r\n        // イベントシーケンス終了時に再実行する場合の最小再開時間\r\n        this._thinkTimeMin = Math.max(0,\r\n                (typeof(model.thinkTimeMin) !== \"undefined\") ? model.thinkTimeMin : 500);\r\n        // メッセージ（ログ末尾に付与する文字列）\r\n        this._baseMessage = model.message + \"\\n\";\r\n        this._message = \"\";\r\n        this._history = []; // #62\r\n\r\n        // 変数の設定\r\n        this._startTime = Number.MIN_SAFE_INTEGER; // イベントシーケンス開始時刻（UNIX時刻：ミリ秒）\r\n        this._sequenceTime = Number.MIN_SAFE_INTEGER; // シミュレータに登録したイベントの時刻（現在時刻）\r\n        this._sequenceIdx = 0;    // シミュレータに登録したイベントシーケンスの位置\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n\r\n    /**\r\n     * シミュレータのログを出力する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            logLv ログレベル（isLog <= logLvのときログ出力する）<br>\r\n     *            (0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)\r\n     * @param {boolean}\r\n     *            isLog ログ出力レベル\r\n     * @param {Number}\r\n     *            time 日時を表す数値（ミリ秒）\r\n     * @param {Object}\r\n     *            vApp 仮想アプリ\r\n     * @param {Object}\r\n     *            resource リソース\r\n     * @param {String}\r\n     *            text ログテキスト\r\n     * @param {String}\r\n     *            highText 強調表示テキスト\r\n     */\r\n    VirtualApp.prototype.logger = function(logLv, isLog, time, vApp, resource, text, highText) {\r\n        // 0:なしの時\r\n        if (!isLog) return;\r\n        var errCode = 0;\r\n        if (resource && (resource._holdHeap.size() !== resource._holdingQty)) {\r\n            // エラー時★\r\n            errCode = 1;\r\n            highText = highText ? highText + \"　unkown error!!\" : \"　unkown error!!\";\r\n        } else if (logLv > +isLog) {\r\n            return; \r\n        }\r\n\r\n        // エラーログ編集\r\n        var user = vApp ? \" \" + vApp._userName : \" \";\r\n        var resourceText = resource ? (\" [\" + resource._name + \" wait:\"\r\n                + resource._waitHeap.size() + \"hold:\"\r\n                + resource._holdHeap.size() + \"=\"\r\n                + resource._holdingQty + \" qty] \") : \" \";\r\n        text = text || \"\";\r\n        var logText = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](this.getTime(),\"hh:mm:ss.ppp\",true) \r\n                    + user +\"(\" + this._times + \"-\" + this._sequenceIdx + \")\"\r\n                    + resourceText \r\n                    + text;\r\n        highText = highText || \"\";\r\n\r\n        // エラー時の強制補正★\r\n        var modify = \"\";\r\n        if (errCode === 1) { // リソースヒープもしくはリソース量を強制補正する\r\n            var deleted = undefined;\r\n            if (resource._holdHeap.size() < resource._holdingQty) {\r\n                deleted = resource._holdHeap.del(this);\r\n            }\r\n            if (deleted){\r\n                modify = \"FORCE★: holdHeap.del(\" + deleted.userName + \")\";\r\n            } else {\r\n                modify = \"FORCE★: holdingQty modified\"\r\n                    resource._holdingQty = resource._holdHeap.size();\r\n            }\r\n        }\r\n\r\n        // エラーログ出力\r\n        if (highText || modify){\r\n            console.log(logText + \" %o\", highText + \" \" + modify);\r\n        } else {\r\n            console.log(logText);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取引を開始する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            startTime 開始時刻（UNIX時刻：ミリ秒）\r\n     * @return {Object}仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.start = function(startTime) {\r\n        this._times--; // イベントシーケンスの繰り返し回数を1減らす\r\n        this._sequenceIdx = 0;    // シミュレータに登録したイベントシーケンスの位置\r\n        this._startTime = startTime;      // イベントシーケンス開始時刻（UNIX時刻：ミリ秒）\r\n        this._sequenceTime = startTime;   // シミュレータに登録したイベントの時刻\r\n        this._message = this._baseMessage; // ログ末尾に出力する文字列の初期化\r\n        this._history = []; // ログ末尾に出力する状態遷移履歴情報の初期化 #62\r\n        this.addHistory(\"start\");\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * イベント時刻を返却する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualApp.prototype.getTime = function() {\r\n        return this._sequenceTime;\r\n    };\r\n\r\n    /**\r\n     * リソース使用量を返却する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            [resource| 指定なしのとき1.0を返却する] リソース\r\n     * @return {Number} リソース使用量\r\n     */\r\n    VirtualApp.prototype.getAmount = function(resource) {\r\n        return 1.0;\r\n    };\r\n\r\n    /**\r\n     * 次の状態に遷移する、シーケンス終了時TATログを出力する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualApp.prototype.next = function(system) {\r\n        this.logger(4, system._log, system.getTime(), this, undefined, 'NEXT', undefined);\r\n        var events = []; // 戻り値\r\n        var ret = {result: true, events: [this]};\r\n\r\n        if (this._sequenceIdx < this._sequence.length) { // イベントシーケンス処理途中のとき\r\n            var seq = this._sequence[this._sequenceIdx]; // 現在の処理シーケンス位置\r\n            // holdリソースを取得する\r\n            if (seq.hold && seq.hold !== \"\") {\r\n                // holdリソースが指定されているとき、指定リソースを確保する（確保できたとき[this]が戻り値）\r\n                ret = system.getResouce(seq.hold).hold(system, this); // #61\r\n                events = ret.events;\r\n            } else {\r\n                // holdリソースが指定されていないとき、無条件に自身をスケジュール対象に加える\r\n                events = [this];\r\n            }\r\n            // リソースを確保できたとき、該当シーケンスを完了させる\r\n            if (0 < events.length && (0 <= this._times) && ret.result) { // #61\r\n                // 完了した処理の処理時間を加える\r\n                var tatAdd = Math.ceil(__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"h\" /* Random */]().exponential(seq.tat - seq.tatMin));\r\n                this.setSequenceTime(this._sequenceTime += seq.tatMin + tatAdd, seq.hold); // #61\r\n                // シーケンスのfreeで指定されているリソースの解放\r\n                if (seq.free) {\r\n                    for (var i = 0; i < seq.free.length; i++) {\r\n                        events = events.concat(system.getResouce(seq.free[i]).free(this));\r\n                    }\r\n                }\r\n                // 次の処理を参照する（ シミュレータに登録したイベントシーケンスの位置）\r\n                this._sequenceIdx++;\r\n            }\r\n            return events;\r\n        }\r\n\r\n        // イベントシーケンスを終えたときTATログを出力する(this._sequenceIdx >= this._sequence.length)\r\n        var vApp = this._finish(system, \"N_000\");\r\n        // シーケンスをstart状態に設定する\r\n        // this._sequenceTime = system.getTime(); はfinishで更新されるので不可\r\n        // this._startTime = this._sequenceTime; finishで設定する\r\n        // 繰返し処理を継続する場合、自アプリケーションを再スケジュールする\r\n        if (vApp) {\r\n            events.push(this);\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * Freeに伴い、次の状態に遷移する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            [time | 変更しない} イベント時刻（UNIX時刻：ミリ秒）\r\n     * @param {String}\r\n     *            status ログに追記する時刻設定理由文字列\r\n     * @return {Object} 仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.setSequenceTime = function(time, status) {\r\n        status = status || \"\"; \r\n        // 解放された時刻をイベント時刻に設定する\r\n        this._sequenceTime = time;\r\n        // ログに状態遷移履歴を追記する\r\n        return this.addHistory(status);\r\n    };\r\n\r\n    /**\r\n     * ログにステータス変更履歴を追記する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {String}\r\n     *            status ログに追記する状態遷移の理由文字列\r\n     * @param {Number}\r\n     *            time 状態遷移時刻（ミリ秒）\r\n     * @return {Object} 仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.addHistory = function(status, time) {\r\n// var timeStr = \"\";\r\n// if (typeof(time) === \"number\") {\r\n// timeStr = Util.D2S(time, \"mm:ss.ppp\", true) + \" seq:\"\r\n// }\r\n// this._message += \" [\" + this._sequenceIdx + \":\" + status + \"]\" // #61\r\n// + timeStr + Util.D2S(this._sequenceTime, \"mm:ss.ppp\", true);\r\n        // 状態遷移履歴（ログ出力用）を追加する\r\n        this._history.push({ // #62\r\n            sequenceIdx : this._sequenceIdx,\r\n            status : status,\r\n            time : time,\r\n            sequenceTime : this._sequenceTime\r\n        });\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * アベンド処理（holdしている可能性のあるリソースを解放し、イベントシーケンスを強制終了する）\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {Object}\r\n     *            holdedResource アベンドさせたVirtualResource\r\n     * @param {String}\r\n     *            [logID=\"E_600\"] ログID\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Boolean}\r\n     *            [isHolding=true] リソース(holdedResource)をholdしているか否か<br>\r\n     * @param {Number}\r\n     *            [abendTime=sytem.getTime()] abend時刻\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualApp.prototype.abend = function(system, holdedResource, \r\n                                    logID, logMesseage, isHolding, abendTime) {\r\n        logID = logID || \"E_600\";\r\n        abendTime = abendTime || system.getTime();\r\n        isHolding = (typeof(isHolding) === \"boolean\") ? isHolding : true; // #61\r\n        var events = []; // 戻り値\r\n        this.logger(3, system._log, this._sequenceTime, this, holdedResource, 'abend', undefined);\r\n        var seq = this._sequence[this._sequenceIdx];\r\n        // 現在のシーケンスでholdするリソースがあるとき、waitしている可能性があるため、waitから削除する\r\n        if (seq && seq.hold) { // #61\r\n            system._resources[seq.hold].release(this);\r\n        }\r\n        // holdingリソースを開放する\r\n        var holdings;\r\n        // シーケンスから、holdingリソース一覧を取得する #59\r\n        if (seq) holdings = seq.holding;\r\n        if (holdings) { // シーケンス上holdingリソースがあるとき(undefined対策） #61\r\n            for (var i = holdings.length - 1; 0 <= i; i--) { // #61\r\n                // holdedResourceは削除処理対象外（呼び出し元リソースは、呼び出し前に削除済なので）\r\n                if (holdings[i] !== holdedResource._name || isHolding){ // #61\r\n                    // holdingリソースを開放し、使用リソース減に伴って新たにスケジュールするvAppを取得 #59\r\n                    events = events.concat(system._resources[holdings[i]].free(this));\r\n                }\r\n            }\r\n        }\r\n        // イベントシーケンスを強制終了する\r\n        this.setSequenceTime(abendTime, logID); // #59\r\n        var vApp = this._finish(system, logID, logMesseage);\r\n        // 自vAppに継続処理があれば、自vAppをスケジュール対象に加える\r\n        if (vApp && (0 <= this._times)) { // #61\r\n            events = events.concat([vApp]);\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * イベント終了時処理（ログ出力と、繰り返し判定）\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {String}\r\n     *            [logID=\"N_000\"] ログID（ログメッセージの先頭文字）\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Number}\r\n     *            [forceTime] 強制終了時刻を指定する（ミシュレーション停止後のeTat強制出力用）\r\n     * @return {Object|undefined} 再スケジュールするときthis、再スケジュールしないときundefined\r\n     */\r\n    VirtualApp.prototype._finish = function(system, logID, logMesseage, forceTime) {\r\n        logID = logID || \"N__00\";\r\n        logMesseage = logMesseage || \"\";\r\n        var events = []; // 戻り値\r\n        var logText = logID + \" \" + this._userName + \" \" + logMesseage + \" \" + this._message;\r\n        var now = this._sequenceTime;\r\n\r\n        // 強制終了時（シミュレーション終了時刻到来時）、自APのシミュレーションを強制終了する\r\n        if (typeof(forceTime) === \"number\") {\r\n            // 起動済処理はTATログを出力する #59\r\n            if (this._startTime <= forceTime) { \r\n                // TATログを出力する\r\n                system.eTat.push( { x: forceTime, \r\n                                    y: Math.round(forceTime - this._startTime),\r\n                                    sTatIdx: 0,\r\n                                    message: logText,\r\n                                    history: this._history} ); // #62\r\n                this.logger(2, system._log, forceTime, this, undefined, 'finish() FORCE\"', logText);\r\n            }\r\n            this._sequenceIdx = this._sequence.length; // #61 処理完了状態にする\r\n            this._startTime = this._sequenceTime; // #61 念のため設定\r\n            return undefined;\r\n        }\r\n\r\n        // 起動済処理はTATログを出力する #59\r\n        if (this._startTime <= now ) { // || this._sequenceIdx ===\r\n                                        // this._sequence.length) {\r\n            system.eTat.push( { x: now,\r\n                                y: Math.round(now - this._startTime),\r\n                                sTatIdx: 0,\r\n                                message: logText,\r\n                                history: this._history} ); // #62\r\n            this.logger(2, system._log, now, this, undefined, 'finish() \"', logText);\r\n        } else  {\r\n            this.logger(0, system._log, now, this, undefined,\r\n                    'finish() Unexpected error★ _startTime > _sequenceTime:'\r\n                    + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](this._startTime, \"hh:mm:ss.ppp\", true)\r\n                            + \" \" + this._startTime + \" > \" + now\r\n                            + \" Idx:\" + this._sequenceIdx \r\n                    , logText);\r\n        }\r\n        this._message = this._baseMessage; // ログ末尾に追加するメッセージの初期化\r\n \r\n        // 継続判定\r\n        if (0 < this._times) { // イベントシーケンスを繰り返すとき\r\n            // イベント時刻にThink time（指数分布）を加える\r\n            var nextTime = this.getTime() + this._thinkTimeMin;\r\n            if (this._thinkTimeMin < this._thinkTime) {\r\n                nextTime += Math.ceil(Math.abs( // #61\r\n                        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"h\" /* Random */]().exponential(this._thinkTime - this._thinkTimeMin)));\r\n            }\r\n            // 処理の先頭に戻る\r\n            return this.start(nextTime);\r\n        }\r\n        // イベントシーケンスを継続しない時(this._times < 0)\r\n        this._times--;       // イベントシーケンスの繰り返し回数を1減らす\r\n        this._sequenceIdx = this._sequence.length; // #61 処理完了状態にする\r\n        this._startTime = this._sequenceTime; // #61\r\n        return undefined;\r\n    };\r\n\r\n    /* new */\r\n    return VirtualApp;\r\n}());\n\n/***/ }),\n/* 35 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualResource\r\n * @classdesc 仮想リソース\r\n * \r\n * @param {Object}\r\n *            system 仮想システム（シミュレーション中の現在時刻取得等に用いる）\r\n * @param {String}\r\n *            [name = \"unlimited\"] リソース名（\"unlimited\"はリソース解放待ちを管理しない）\r\n * @param {Number}\r\n *            [holdCapacity = 1.0] 保有リソース総量（数）\r\n * @param {Number}\r\n *            [timeout = 10秒] 処理のタイムアウト時間（未使用）\r\n * @param {Number}\r\n *            [waitCapacity = Number.MAX_SAFE_INTEGER]\r\n *            リソース取得待ちキューの深さ（数）、キュー溢れ時は即時エラー終了しリソース処理しない\r\n * @param {Number}\r\n *            [queueWait = 10秒] 最大キュー滞留時間（リソース取得待ちタイムアウト時間）\r\n * @param {Boolean}\r\n *            [log=false] 詳細ログ出力有無\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #53\r\n    /** @constructor */\r\n    function VirtualResource(system, name,\r\n                        holdCapacity, timeout, waitCapacity, queueWait, log){\r\n        if(!(this instanceof VirtualResource)){\r\n            return new VirtualResource(system, name,\r\n                        holdCapacity, timeout, waitCapacity, queueWait, log);\r\n        }\r\n        this._system = system;\r\n        this._name = name || \"unlimited\";\r\n        this._log = log ? +log : 0; // #59\r\n\r\n        // 処理待ち管理用\r\n        this._waitTimeout = (typeof(queueWait) !== \"undefined\")\r\n                                ? queueWait : 10000;   // キュー滞留時間上限\r\n        this._waitCapacity  = (typeof(waitCapacity) !== \"undefined\")\r\n                                ? waitCapacity : Number.MAX_SAFE_INTEGER; // キューの深さ\r\n        this._waitHeap = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"e\" /* Heap */](    // リソース解放待ちキュー（登録時間順）\r\n                function(obj){ return obj.getTime(); });\r\n        \r\n        // リソース管理用\r\n        this._holdTimeout  = (typeof(timeout)  !== \"undefined\") \r\n                                ? timeout : 10000;   // 処理のタイムアウト時間\r\n        this._holdCapacity = (typeof(holdCapacity) !== \"undefined\")\r\n                                ? holdCapacity : 1.0;   // 保有リソース量（数）\r\n        this._holdingQty = 0;   // 使用リソース量\r\n        this._holdHeap = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"e\" /* Heap */]( // 処理のタイムアウト管理用ヒープ{obj:,val:} #59\r\n                 function(node){ return node.val; }, // valはタイムアウト時刻\r\n                 function(node){ return node.obj; }); // objはvApp\r\n        \r\n        // イベントスケジュール制御用\r\n        this._sequenceTime = 0;   // シミュレータに登録したイベントの時刻（タイムアウトチェック用）\r\n        this._isScheduled = false; // シミュレータにタイムアウトチェックイベントをスケジュールしたか\r\n        if (0 < this._waitTimeout && 0 < this._holdTimeout){ // スケジュール間隔 #61\r\n            this._interval = Math.min(this._waitTimeout, this._holdTimeout);\r\n        } else if (0 < this._waitTimeout) {\r\n            this._interval = this._waitTimeout;\r\n        } else if (0 < this._holdTimeout) {\r\n            this._interval = this._holdTimeout;\r\n        } else {\r\n            this._interval = 0;\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * リソースチェックイベント（タイムアウトチェック）を開始する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Number}\r\n     *            startTime 開始時刻（UNIX時刻：ミリ秒）\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Object} イベント(this)\r\n     */\r\n    VirtualResource.prototype.start = function(startTime, system) { // #59\r\n        this._sequenceTime = startTime + this._interval; // シミュレータに登録するイベントの時刻\r\n        system.setEvent(this);    // シミュレータにタイムアウトチェックイベントをスケジュールする\r\n        this._isScheduled = true; // 「シミュレータにタイムアウトチェックイベントをスケジュールしたかフラグ」をON\r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * イベント時刻を返却する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualResource.prototype.getTime = function() {\r\n        return this._sequenceTime;\r\n    };\r\n    \r\n    /**\r\n     * タイムアウトチェック用仮想イベント\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualResource.prototype.next = function(system) {\r\n        var events = []; // 戻り値\r\n        var now = this.getTime();\r\n        // リソース解放待ち時間がタイムアウトしたappをタイムアウトさせる\r\n        var queuedTime = Number.MIN_SAFE_INTEGER; \r\n        while (0 < this._waitHeap.size() && this._waitTimeout <= now - queuedTime) {\r\n            queuedTime = this._waitHeap.top().getTime();\r\n            if (this._waitTimeout <= now - queuedTime) { // キューイング取引がタイムアウトしているとき\r\n                // リソース解放待ちHeapからfreeするappを取り出す\r\n                var app = this._waitHeap.pop();\r\n                // appをアベンドさせる(holdリソース解放なし）\r\n                var apps = app.abend(system, this, \"E_QTO\", this._name + \" queue timeout\",\r\n                        false, queuedTime + this._waitTimeout); // appにfree時刻をセットする\r\n                // appsをスケジュールイベント登録対象に加える\r\n                if (apps.length){\r\n                    events = events.concat(apps);\r\n                }\r\n            }\r\n        }\r\n        // リソース使用時間がタイムアウトしたappをタイムアウトさせる #59\r\n        var holdTimeoutTime = Number.MIN_SAFE_INTEGER;\r\n        while (0 < this._holdHeap.size() && holdTimeoutTime <= now) {\r\n            var top = this._holdHeap.top();\r\n            holdTimeoutTime = top.val;\r\n            if (holdTimeoutTime <= now) { // 処理中取引がタイムアウトしているとき #61\r\n                var app = top.obj;\r\n                // appがスケジュールされている場合削除する（スケジューラに登録されていない場合何も起きない）\r\n                system.removeEvent(app);\r\n                // appの使用時間がタイムアウトしたリソースを解放する（注：abendで解放させると永久ループする）\r\n                events = events.concat(this.free(app));                \r\n                // appをタイムアウト時刻にアベンドさせる(holdリソース解放を伴う）\r\n                events = events.concat(app.abend(system, this,\"E_HTO\", \r\n                            this._name + \" hold timeout\", false, holdTimeoutTime));\r\n            }\r\n        }\r\n        // 次回タイムアウトチェック時刻を設定する\r\n        if ((0 < this._waitHeap.size()) || (0 < this._holdHeap.size())) {\r\n            // タイムアウトの設定があるとき、 #61\r\n            // リソース解放待ちvAppがあるとき、(タイムアウトしていない)最古vAppのタイムアウト時刻\r\n            // リソース解放待ちvAppがないとき、現在からタイムアウト時刻後 にスケジュールする\r\n            var nextWaitTimeout = Number.MAX_SAFE_INTEGER;\r\n            if (0 < this._waitTimeout) {\r\n                if ( 0 < this._waitHeap.size() \r\n                        && now <= this._waitTimeout + this._waitHeap.top().getTime()) {\r\n                    nextWaitTimeout = this._waitHeap.top().getTime() + this._waitTimeout; \r\n                } else {\r\n                    nextWaitTimeout = now + this._waitTimeout;\r\n                }\r\n            }            \r\n            var nextHoldTimeout = Number.MAX_SAFE_INTEGER;\r\n            if (0 < this._holdTimeout) {\r\n                if(0 < this._holdHeap.size()) {\r\n                    nextHoldTimeout = this._holdHeap.top().val;\r\n                } else {\r\n                    nextHoldTimeout = now + this._holdTimeout;\r\n                }\r\n            }\r\n            this._sequenceTime = Math.min(nextWaitTimeout, nextHoldTimeout);\r\n            if (this._sequenceTime < Number.MAX_SAFE_INTEGER) {\r\n                events.push(this); // タイムアウトチェックイベントをケジュールイベント登録対象に加える\r\n            } else {\r\n                this._isScheduled = false;\r\n            }\r\n        } else { \r\n            // 以外のとき、シミュレータにタイムアウトチェックイベントを再スケジュールしない\r\n            this._isScheduled = false;\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * リソースを取得する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {Object}\r\n     *            vApp リソースにhold要求する仮想AP\r\n     * @return {Objcet} 処理結果{result:boolean, events:Array}<br>\r\n     *         {boolean} result :\r\n     *         true:正常（リソース取得、取得待ち、取得不要）、false:エラー（リソース枯渇E_QOF)）<br>\r\n     *         {Array} :events リソース取得後、スケジューラに登録するイベントの配列<br>\r\n     *         [vApp]： リソースを取得できたとき、もしくはリソース枯渇時でvApp再処理の場合、スケジュール対象の vApp\r\n     *         が登録された配列[vApp]を返却<br>\r\n     *         []： リソース待ちに登録されたとき、既にリソースが管理するスケジューラに登録さているので、空の配列[]を返却<br>\r\n     *         もしくはリソース枯渇時で繰返し完了時、再スケジュールしないので[]を返却\r\n     */\r\n    VirtualResource.prototype.hold = function(system, vApp) {\r\n        var ret = { result : true,\r\n                    events : [vApp] }; // 戻り値 #61\r\n        if (this._name === \"unlimited\") return ret; // [vApp] リソース解放待ちを管理しないとき\r\n        vApp.logger(4, this._log, vApp._sequenceTime, vApp, this, 'HOLD' , undefined);\r\n        // タイムアウトチェックイベントがスケジュールされていないとき、スケジュールする\r\n        if (!this._isScheduled && (0 < this._interval)) {\r\n            this.start(system.getTime(), system);\r\n        }\r\n        // リソースを取得できるとき、使用リソース量（数）を増やし、実行中処理管理ヒープに登録し、スケジュール対象とする\r\n        var amount = vApp.getAmount(this); // 消費リソース量(デフォルト1.0）\r\n        if (amount <= (this._holdCapacity - this._holdingQty)) {\r\n            // 使用リソースを増やす\r\n            this._holdingQty += amount;\r\n            // タイムアウト管理対象リソースのとき、vAppをタイムアウト管理対象に加える #59\r\n            if (0 < this._holdTimeout) {\r\n                this._holdHeap.push({obj: vApp, val: system.getTime() + this._holdTimeout});\r\n            }\r\n            vApp.logger(3, this._log, system.getTime(), vApp, this, 'hold' , undefined);\r\n            return ret; // [vApp]\r\n        }\r\n\r\n        // リソース解放待ちキューに空きがあるとき、vAppをリソース解放待ちに 登録する（スケジュールしない）\r\n        if ((this._waitHeap.size() < this._waitCapacity) && (0 < this._waitTimeout)){\r\n            // リソース解放待ちタイムアウト管理対象に加える\r\n            this._waitHeap.push(vApp);\r\n            vApp.addHistory(\"wait:\" + this._name, system.getTime()); // #61\r\n            vApp.logger(3, this._log, system.getTime(), vApp, this, 'wait' , undefined);\r\n            return { result: true, events: [] };\r\n        }\r\n        \r\n        // リソース解放待ちキューが溢れていた時、リソースを取得できずにアベンド（リソース解放なし、自AP継続の場合[vApp]をリターン） #61\r\n        var apps = vApp.abend(system, this, \"E_QOF\",\r\n                    \"[\" + this._name + \"] over flow\", false);\r\n        vApp.logger(3, this._log, system.getTime(), vApp, this, 'over' , undefined);\r\n        return { result: false, events: apps }; // #61\r\n    };\r\n\r\n    /**\r\n     * 引数vAppが使用していたリソースを解放する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            vApp リソースにfree要求する仮想AP\r\n     * @param {Boolean}\r\n     *            [isHolding=true] 該当vAppが自リソースをholdしているか否か<br>\r\n     *            false指定時、指定vAppはリソースをholdしていない前提で、hold vApp一覧からの削除処理を行わない\r\n     * @return {Array} スケジューラに登録するイベントの配列([vApp] | [])\r\n     */\r\n    VirtualResource.prototype.free = function(vApp, isHolding) { // #59\r\n        vApp.logger(4, this._log, this._system.getTime(), vApp, this, 'FREE' , undefined);\r\n        isHolding = (typeof(isHolding) === \"boolean\") ? isHolding : true;\r\n        if (this._name === \"unlimited\") return []; // リソース解放待ちを管理しないとき\r\n        var vApps = []; // 戻り値\r\n        // 自リソースを使用している可能性があるとき、使用リソースを解放する\r\n        // 解放したvAppが使用していたリソース量(デフォルト1.0）を、使用リソース量（数）から減らす #59\r\n        if (isHolding === true) { // #61\r\n            this._holdingQty -= vApp.getAmount(this);\r\n            // タイムアウト管理対象リソースのとき、vAppをタイムアウト管理対象から削除する #61\r\n            if (0 < this._holdTimeout) { // #61\r\n                var app = this._holdHeap.del(vApp);\r\n            }\r\n            vApp.addHistory(\"free:\" + this._name, this._system.getTime());\r\n            vApp.logger(3, this._log, this._system.getTime(), vApp, this, 'del' , undefined);\r\n        }\r\n        // リソース解放待ちキューから、空きリソースで処理できるようになったvAppを取り出しスケジュールする #61\r\n        var marginQty = this._holdCapacity - this._holdingQty;\r\n        var addQty = this._waitHeap.top()\r\n                    ? this._waitHeap.top().getAmount(this) // 次のリソース解放待ちキューの使用量\r\n                    : Number.MAX_SAFE_INTEGER;\r\n        for (var i = this._waitHeap.size() && addQty <= marginQty; 0 < i; i--) {\r\n            // リソース解放待ちキューからfreeするappを取り出す\r\n            var app = this._waitHeap.pop();\r\n            // appにfree時刻をセットし、スケジュールイベント登録対象に加える\r\n            // (注：リソース取得はスケジュール後、E_HTOに伴う他のリソースの時刻は将来）\r\n            app.setSequenceTime(this._system.getTime(), \"release:\" + this._name);\r\n            vApps.push(app);\r\n            // 次のappのリソース量を加える\r\n            addQty += this._waitHeap.top() \r\n                    ? this._waitHeap.top().getAmount(this) // 次のリソース解放待ちキューの使用量\r\n                    : Number.MAX_SAFE_INTEGER;\r\n        }\r\n        return vApps;\r\n    };\r\n\r\n\r\n    /**\r\n     * 引数vAppをリソース開放待ちキューからリリースする\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            vApp リリースする仮想AP\r\n     * @return {Object | undefined} リリースした仮想AP\r\n     */\r\n    VirtualResource.prototype.release = function(vApp) { // #61\r\n        var app = this._waitHeap.del(vApp);\r\n        if (app) vApp.addHistory(\"release\", this._system.getTime());\r\n        return app;\r\n    }\r\n\r\n    \r\n    \r\n    /**\r\n     * イベント終了時処理（リソースが管理しているvAppをfinishさせる（強制終了させ処理中vAppはTATログ出力する）\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {String}\r\n     *            [logID=\"N_000\"] ログID（ログメッセージの先頭文字）\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Number}\r\n     *            forceTime 強制終了時刻を指定する（ミシュレーション停止後のeTat強制出力用）\r\n     * @return {null}\r\n     */\r\n    VirtualResource.prototype._finish = function(system, logID,\r\n                                        logMesseage, forceTime) { // #59\r\n        // シミュレーション終了後処理（処理中のvAppを強制終了する）\r\n        logID = logID || \"N_EoS\";\r\n        logMesseage = logMesseage || \"\";\r\n        while(0 < this._waitHeap.size()){\r\n            event = this._waitHeap.pop();\r\n            if (event._finish) {\r\n                event._finish(system, logID,\r\n                        \"[\" + this._name + \"] \" + logMesseage , forceTime);\r\n            }\r\n        }\r\n    }\r\n\r\n    /* new */\r\n    return VirtualResource;\r\n}());\n\n/***/ }),\n/* 36 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * @memberOf Simulator\r\n * @class virtualSystemByJson\r\n * @classdesc 仮想システム生成ツール(virtualSystemByJson)\r\n *            <p>\r\n *            Util管理用クラス（スタティックメソッドのみ）のためコンストラクタは使用しない\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #53\r\n    /** @constructor */\r\n    function virtualSystemByJson(){\r\n        if(!(this instanceof virtualSystemByJson)){\r\n            return new virtualSystemByJson();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n\r\n    // static\r\n    /**\r\n     * 初期表示用サンプルデータ(ETAT)を自動生成する\r\n     * \r\n     * @memberof Simulator.VirtualSystemByJson\r\n     * @param {String}\r\n     *            [jsonText] シミュレーション条件JSONテキスト\r\n     * @return {ETAT} 終了時刻のTAT（応答時間）時系列データ [{x:終了時刻(UNIX時刻の経過時間(秒)),\r\n     *         y:レスポンス(秒)}]\r\n     */\r\n    // CreateSampleTatLog\r\n    virtualSystemByJson.Execute = function(jsonText){ // #53\r\n        var vSys = {};\r\n        // parse\r\n        var json = JSON.parse(jsonText)\r\n        // virtual system と resources の設定\r\n        var log = (json.log !== undefined) ? json.log : false; // #59\r\n        var start = (json.start !== undefined) \r\n                    ? __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"i\" /* S2D */](json.start) : new Date(1970,1,2);\r\n        var end = start + __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](json.end, \"24*h\");\r\n        var resources = json.resources;\r\n        for (var i = 0; i < resources.length; i++) {\r\n            resources[i].timeout = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](resources[i].timeout, \"10*sec\");\r\n            resources[i].qWait = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](resources[i].qWait, \"10*sec\");\r\n        }\r\n        vSys = Object(__WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__[\"a\" /* default */])(start, end, json.resources, log);\r\n        // model の取得\r\n        var models = json.models;\r\n        for (var i = 0; i < models.length; i++) {\r\n            var model = models[i];\r\n            var name = Object.keys(model)[0]; // モデルの名称\r\n            var m = model[name]; // モデル\r\n            var baseModel = m.baseModel; // baseModel\r\n            for (var j = 0; j < m.sequence.length; j++) {\r\n                // 時間指定文字列を、ミリ秒数値に変換する（例：\"3*sec\"->3000)\r\n                m.sequence[j].tatMin = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](m.sequence[j].tatMin);\r\n                m.sequence[j].tat = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](m.sequence[j].tat);\r\n            }\r\n            // sequenceに、baseModelを展開し、未開放リソースの開放処理を登録する\r\n            models[name] = __WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__[\"a\" /* default */].getModel(\r\n                        baseModel.holds, \r\n                        __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](baseModel.tatMin), __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](baseModel.tat),\r\n                        m.sequence, \r\n                        (typeof(m.times) === \"number\") ? m.times : 1, // #61\r\n                        __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](m.thinkTimeMin), __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](m.thinkTime)); \r\n        }\r\n        // client の設定\r\n        var clients = json.clients;\r\n        for (var i = 0; i < clients.length; i++) {\r\n            var c = clients[i];\r\n            var cStart = start + __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](c.start, 0);\r\n            var cEnd   = start + __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](c.end, 24*60*60*1000);\r\n            vSys.setClients(c.user, c.message, c.num, cStart, cEnd, models[c.model]);\r\n        }\r\n        if (1 < log) console.log(vSys); // #59\r\n        return vSys.execute();\r\n    }\r\n\r\n    /**\r\n     * シミュレーション条件JSONテキストを作成する\r\n     * \r\n     * @memberof Simulator.VirtualSystemByJson\r\n     * @param {Number}\r\n     *            [n = 0] シナリオ番号\r\n     * @return {String} シミュレーション条件JSONテキスト\r\n     */\r\n    // CreateSampleTatLogJson\r\n    virtualSystemByJson.GetJsonConfig = function(n){ // #53\r\n        n = (typeof(n) !== \"undefined\") ? n : 0;\r\n        var jsonText = \"\";\r\n        if (n === 0) {\r\n            jsonText =  '{\\n'\r\n                + '\"log\" : 1,\\n'\r\n                + '\"start\" : \"2017/01/02 00:00:00.000\",\\n'\r\n                + '\"end\"   : \"17.0*h\",\\n'\r\n                + '\"resources\" : [\\n'\r\n                + '  {\"type\" :\"WEB\", \"thread\":1024,\"timeout\":\"300*sec\", \"q\":1280, \"qWait\":0},\\n'\r\n                + '  {\"type\" :\"AP\",  \"thread\":20,  \"timeout\":\"300*sec\", \"q\":1280, \"qWait\":0},\\n'\r\n                + '  {\"type\" :\"DB\",  \"thread\":10,  \"timeout\": \"10*sec\", \"q\":10,  \"qWait\":\"10*sec\"}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"models\" : [\\n' // 取引モデル一覧\r\n                + '  { \"ON-1\" : {\\n' // オンライン取引1\r\n                + '    \"times\": 60, \"thinkTimeMin\":\"3*sec\", \"thinkTime\": \"10*sec\",\\n'\r\n                + '    \"baseModel\":  {\"holds\": [\"WEB\",\"AP\",\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":30, \"tat\":50, \"note\":\"select A\"},\\n'\r\n                + '      {\"tatMin\":50, \"tat\":50, \"note\":\"updateB\", \"hold\":\"TBL_B\"},\\n'\r\n                + '      {\"tatMin\":80, \"tat\":100,\"note\":\"updateC\", \"hold\":\"TBL_C\"}\\n'\r\n                + '    ]}},\\n'\r\n                + ' { \"ON-2\" : {\\n' // オンライン取引2\r\n                + '    \"times\": 60, \"thinkTimeMin\":\"500*ms\", \"thinkTime\": \"1*sec\",\\n'\r\n                + '    \"baseModel\":  {\"holds\": [\"WEB\",\"AP\",\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":\"100*ms\", \"tat\":\"500*ms\", \"hold\":\"\"}\\n'\r\n                + '    ]}},\\n'\r\n                + ' { \"BATCH-1\" : {\\n' // バッチ取引3\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":\"2*sec\",\"tat\":\"5*sec\",\"note\":\"updateB\",\"hold\":\"TBL_B\"}\\n'\r\n                + '    ]}}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"clients\" : [\\n' // ユーザ作成条件\r\n                + '  {\"num\":100,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"ON-1\",  \"user\" :\"userU\", \"message\":\"select A update B,C\"},\\n'\r\n                + '  {\"num\": 20,\"start\":\"16.5*h\", \"end\":\"16.6*h\", \"model\":\"ON-1\",  \"user\" :\"userT\", \"message\":\"select A update B,C 【増】\"},\\n'\r\n                + '  {\"num\":100,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"ON-2\",  \"user\" :\"userS\", \"message\":\"排他なし(WEBのみ)\"},\\n'\r\n                + '  {\"num\": 20,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"BATCH-1\",\"user\":\"userB\", \"message\":\"バッチ処理 update B＊＊＊＊＊\"}\\n'\r\n                + ']\\n'\r\n                + '}\\n';\r\n        } else if (n === 1) {\r\n            // test用\r\n            jsonText =  '{\\n'\r\n                + '\"//\" : \"log（任意、デフォルト3）:詳細ログ出力指定(0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)\",\\n'\r\n                + '\"//\" : \"start/end:シミュレーション開始時刻/終了時刻\",\\n'\r\n                + '\"log\" : 1,\\n'\r\n                + '\"start\" : \"1970/01/02 00:00:00.000\",\\n'\r\n                + '\"end\"   : \"30.0*sec\",\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"resources:sequenceのhold/freeで指定するリソース名の定義\",\\n'\r\n                + '\"//\" : \"type:リソース名、thread:最大同時hold数、timeout：holdタイムアウト時間\",\\n'\r\n                + '\"//\" : \"　　　　　　　　　　　q:最大hold待ち数、qWait:最大hold待ち時間\",\\n'\r\n                + '\"resources\" : [\\n'\r\n                + '  {\"type\" :\"DB\",  \"thread\":2,  \"timeout\": \"5*sec\", \"q\":1,  \"qWait\":\"2*sec\"}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"models:clientsで指定するモデル名(model)の定義、以下modelsで指定できる項目\",\\n'\r\n                + '\"//\" : \"baseModel:複数リソースのsequenceをまとめて宣言できる、sequenceに展開した後処理される、任意指定\",\\n'\r\n                + '\"//\" : \"sequence:指定された順にリソースを取得する、配列内に複数指定可、sequenceも複数指定可\",\\n'\r\n                + '\"//\" : \"hold：リソース名、holds(baseModelのみ指定可）：リソース一覧、各々にtat/tatMinが適用される\",\\n'\r\n                + '\"//\" : \"tat/tatMin：リソースの取得に要する平均/最小時間、tatMinのデフォルトはtat\",\\n'\r\n                + '\"//\" : \"　　　　　　★注：tatはリソースの使用時間ではない、リソース使用時間を指定す場合はfreeで指定\",\\n'\r\n                + '\"//\" : \"数値はミリ秒単位、*ms,*sec,*min,*h,*day 指定可\",\\n'\r\n                + '\"//\" : \"times：繰返し回数\",\\n'\r\n                + '\"//\" : \"thinkTime/thinkTimeMin：繰返し時の間隔の平均/最小時間、thinkTimeMinのデフォルトはthinkTime\",\\n'\r\n                + '\"//\" : \"free：[リソース名の配列]、指定リソースを開放する、free指定の無いリソースはシーケンスの最後にfreeされる\",\\n'\r\n                + '\"models\" : [\\n' // 取引モデル一覧\r\n                + ' { \"TEST-AB\" : {\\n' // テスト取引\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"2*ms\"},\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_A\", \"tatMin\":\"1*sec\", \"tat\":\"1*sec\"}],\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_B\", \"tatMin\":\"3*sec\", \"tat\":\"3*sec\"}],\\n'\r\n                + '    \"times\": 2, \"thinkTimeMin\":\"1*sec\", \"thinkTime\": \"1*sec\"}},\\n'\r\n                + ' { \"TEST-BA\" : {\\n' // テスト取引\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"2*ms\"},\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_B\", \"tatMin\":\"1*sec\", \"tat\":\"1*sec\"}],\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_A\", \"tatMin\":\"3*sec\", \"tat\":\"3*sec\"}],\\n'\r\n                + '    \"times\": 2, \"thinkTimeMin\":\"1*sec\", \"thinkTime\": \"1*sec\"}}\\n'\r\n                + '    ],\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"clients：仮想アプリケーションの起動クライアントの定義\",\\n'\r\n                + '\"//\" : \"num:作成クライアント数、start～endの間で、ランダム（指数分布）に指定回数起動する\",\\n'\r\n                + '\"//\" : \"start/end:仮想クライアント作成/終了時刻、先頭で宣言したstartからの相対時刻\",\\n'\r\n                + '\"//\" : \"model:modelsで宣言したモデル名\",\\n'\r\n                + '\"//\" : \"user:user+通番 のユーザ名で仮想クライアントが作成される\",\\n'\r\n                + '\"clients\" : [\\n' // ユーザ作成条件\r\n                + '  {\"num\": 1,\"start\":\"0*sec\", \"end\":\"0*sec\", \"model\":\"TEST-AB\",\"user\" :\"testAB1\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"1*sec\", \"end\":\"1*sec\", \"model\":\"TEST-AB\",\"user\" :\"testAB2\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"3*sec\", \"end\":\"3*sec\", \"model\":\"TEST-BA\",\"user\" :\"testBA3\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"4*sec\", \"end\":\"4*sec\", \"model\":\"TEST-BA\",\"user\" :\"testBA4\"}\\n'\r\n                + ' ]\\n'\r\n                + '}\\n';\r\n        }\r\n\r\n        return jsonText; \r\n    }\r\n\r\n    /* new */\r\n    return virtualSystemByJson;\r\n}());\n\n/***/ }),\n/* 37 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = MenuConfig;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Init_js__ = __webpack_require__(5);\n\r\n\r\n\r\n/**\r\n * @memberOf Simulator\r\n * @class MenuConfig\r\n * @classdesc シミュレータ用メニューHTML定義\r\n * \r\n */\r\nfunction MenuConfig() {} // #74\r\n\r\nMenuConfig.config = function() {\r\n    // Simulator Config用関数定義(radio用） #53\r\n    var func_S_SIMU_000 = function(){ Object(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Init_js__[\"a\" /* CreateSampleTatLogAndChartShow */])(0); };\r\n    var func_S_SIMU_001 = function(){ Object(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Init_js__[\"a\" /* CreateSampleTatLogAndChartShow */])(1); };\r\n    // Simulator Config設定画面定義 #53\r\n    var prefix = \"Simulator\";\r\n    var c = new  __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */](prefix);\r\n        c    // #53\r\n         .n(\"<br>\")\r\n         .label(null,\" If you change the scenario below,\").n()\r\n         .label(null,\"JSON is initialized and re-simulated.\").n()\r\n         .n(\"<br>\")\r\n         .name(\"S_SIMU\")\r\n             .radio(\"S_SIMU_000\", null, \r\n                       \"1 hour with table(B) lock.<br>\"\r\n                     + \"- online[100-500ms 2-5tps]<br>\" \r\n                     + \"- batch[2-5sec evry3min]\",\r\n                     true ,null, func_S_SIMU_000).n()\r\n             .radio(\"S_SIMU_001\", null, \"for test\", \r\n                     false ,null, func_S_SIMU_001).n()\r\n     ;\r\n}\n\n/***/ }),\n/* 38 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Menu;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__simulator_simulator_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tatLogDiver_MenuConfigDetailGraph_js__ = __webpack_require__(13);\n\r\n\r\n\r\n\r\n/**\r\n * tatLogDiverのメニューを追加する\r\n * \r\n * @memberof tatLogDiver\r\n */\r\nfunction Menu(that) {\r\n    // メニュー用のエレメントを取得する\r\n    var divMenuId = that.chartIdName + \"_menu\";\r\n    var divMenu = document.getElementById(divMenuId);\r\n    // menu用divがないとき、chartの直前に追加する #13\r\n    if (!divMenu) {\r\n        var div = document.createElement('div');\r\n        div.id = divMenuId;\r\n        div.className = \"menuBar\";\r\n        divMenu = that.chartId.parentNode.insertBefore(div, that.chartId);\r\n    }\r\n    // メニューボタン定義を登録する\r\n    var g = that.globalName;\r\n    // 上下段共通ボタンの定義(Download Menu)\r\n    var menuDownloadImg = { // getATag\r\n        menuLabel : \"graph image(.png)\",\r\n        funcName : g + \".menuDownloadImg\",\r\n        menuId : divMenuId + \"_DownloadImg\",\r\n        fileName : \"graph.png\"\r\n    };\r\n    var menuDownloadCsv = { // getATag\r\n        menuLabel : \"graph data(.csv)\",\r\n        funcName : g + \".menuDownloadCsv\",\r\n        menuId : divMenuId + \"_DownloadCsv\",\r\n        fileName : \"graph.csv\"\r\n    };\r\n    var menuDownloadLog = { // getATag\r\n        menuLabel : \"graph log records(.csv)\",\r\n        funcName : g + \".menuDownloadLog\",\r\n        menuId : divMenuId + \"_DownloadLog\",\r\n        fileName : \"tatlog.csv\"\r\n    };\r\n    var menuDownloadConc = { // getATag\r\n        menuLabel : \"conc log records(.csv)\",\r\n        funcName : g + \".menuDownloadConc\",\r\n        menuId : divMenuId + \"_DownloadConc\",\r\n        fileName : \"conclog.csv\"\r\n    };\r\n\r\n    // メニューを追加する\r\n    var accordion = document.createElement('div'); // 要素の作成\r\n    var _id = 0;\r\n    if (HJN.chart.chartId === that.chartId) { // 上段グラフ用機能のメニュー追加\r\n        // File Menu\r\n        var menuOpenCsv = { // getInputTag\r\n            menuLabel : \"Open csv data file\",\r\n            funcName : g + \".menuOpenCsv\",\r\n            menuId : divMenuId + \"_OpenCsv \"\r\n        };\r\n        var menuSaveConfig = { // getATag\r\n            menuLabel : \"save format (.json)\",\r\n            funcName : g + \".menuSaveConfig\",\r\n            menuId : divMenuId + \"_SaveCongig\",\r\n            fileName : \"hjnconfig.json\"\r\n        };\r\n        var menuLoadConfig = { // getInputTag #10\r\n            menuLabel : \"load format (.json)\",\r\n            funcName : g + \".menuLoadConfig\",\r\n            menuId : divMenuId + \"_LoadCongig\"\r\n        };\r\n        accordion.innerHTML = '<li class=\"hjnMenuLv1\">'\r\n                + getAccordionTag(that, ++_id, \"File\")\r\n                + '<ul class=\"hjnMenuLv2\">'\r\n                + getInputTag(menuOpenCsv)     // オープンボタン #24\r\n                + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].File.getHtml()          // 設定HTML #76\r\n                + getATag(menuSaveConfig)        // セーブボタン\r\n                + getInputTag(menuLoadConfig) // ロードボタン #10\r\n                + '</ul>' + '</li>';\r\n\r\n        // Filter Menu #34\r\n        var menuFilterApply = { // getFuncTag #34\r\n            menuLabel : \"Apply filter & reload\",\r\n            funcName : g + \".menuFilterApply\",\r\n            menuId : divMenuId + \"_FilterApply\"\r\n        };\r\n        var menuFilterReset = { // getFuncTag #34\r\n            menuLabel : \"Reset filter condition\",\r\n            funcName : g + \".menuFilterReset\",\r\n            menuId : divMenuId + \"_FilterClear\"\r\n        };\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Filter\">'\r\n                + getAccordionTag(that, ++_id, \"Filter\")   \r\n                + '<ul class=\"hjnMenuLv2\">'   // #24\r\n                + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].Filter.getHtml()     // 設定HMTL #76\r\n                + getFuncTag(menuFilterApply)  // フィルターボタン\r\n                + getFuncTag(menuFilterReset)   // クリアボタン\r\n                + '</ul>' + '</li>';\r\n\r\n        // Simulator Menu #53\r\n        var menuSimulatorSimulate = {\r\n            menuLabel : \"Simulate\",\r\n            funcName : g + \".menuSimulatorSimulate\",\r\n            menuId : divMenuId + \"_SimulatorSimulate\"\r\n        };\r\n        var menuSimulatorEditor = {\r\n            menuLabel : \"JSON Editor(Open/Close)\",\r\n            funcName : g + \".menuSimulatorEditor\",\r\n            menuId : divMenuId + \"_SimulatorEditor\"\r\n        };\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Simulator\">'\r\n                + getAccordionTag(that, ++_id, \"Simulator\")\r\n                + '<ul class=\"hjnMenuLv2\">' \r\n                + getFuncTag(menuSimulatorSimulate) // シミュレート実行ボタン\r\n                + getFuncTag(menuSimulatorEditor)     // JSONエディタボタン\r\n                + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].Simulator.getHtml()        // 設定HTML #74\r\n                + '</ul>' + '</li>';\r\n        // シミュレーション条件JSON Editエリアを設定する\r\n        var divSimulator = document.getElementById(\"Simulator\");\r\n        var jsonEditor = document.createElement('div'); // 要素の作成\r\n        jsonEditor.innerHTML = '<textarea id=\"SimulatorEditor\" '\r\n                + 'style=\"width:100%;border:none;resize:none;background:rgba(255,255,255,0.5);height:100%;\">'\r\n        divSimulator.appendChild(jsonEditor);\r\n        var divSimulatorEditor = document.getElementById(\"SimulatorEditor\");\r\n        // divSimulatorEditor.readOnly = true; // #22\r\n        divSimulatorEditor.value = __WEBPACK_IMPORTED_MODULE_1__simulator_simulator_js__[\"d\" /* virtualSystemByJson */]\r\n                .GetJsonConfig(); // デフォルトJSON\r\n\r\n        // View Menu\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_View\">'\r\n                + getAccordionTag(that, ++_id, \"View\", true)\r\n                + '<ul class=\"hjnMenuLv2\">' // \r\n                + '<li><div id=\"' + that.chartIdName + '_legend\"></div></li>'\r\n                + '</ul>' + '</li>';\r\n\r\n        // Download Menu\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Download\">'\r\n                + getAccordionTag(that, ++_id, \"Download\")\r\n                + '<ul class=\"hjnMenuLv2\">'\r\n                + getATag(menuDownloadImg, \"Upper \")   // 上段画像ダウンロード ボタン\r\n                + getATag(menuDownloadCsv, \"Upper \")    // 上段グラフcsvダウンロード ボタン\r\n                + getATag(menuDownloadLog, \"Upper \")    // 上段生データダウンロードボタン\r\n                + '</ul>' + '</li>';\r\n\r\n        // メニュー登録\r\n        divMenu.appendChild(accordion);\r\n        // イベントリスナー登録\r\n        document.getElementById(menuOpenCsv.menuId).addEventListener('change',\r\n                that.menuOpenCsv.bind(that), false); // File Open用\r\n        document.getElementById(menuLoadConfig.menuId).addEventListener(\r\n                'change', that.menuLoadConfig.bind(that), false); // LoadConfig用\r\n\r\n    } else { // 下段用グラフ機能のメニュー追加\r\n        _id += 100;\r\n        // Download Menu\r\n        var chartDownloadUl = document.createElement('ul');\r\n        chartDownloadUl.className = \"hjnMenuLv2\";\r\n        chartDownloadUl.innerHTML = '' //\r\n                + getATag(menuDownloadImg, \"Detail \")    // 下段画像ダウンロードボタン\r\n                + getATag(menuDownloadCsv, \"Detail \")     // 下段グラフcsvダウンロードボタン\r\n                + getATag(menuDownloadLog, \"Detail \")     // 下段生データダウンロードボタン\r\n                + getATag(menuDownloadConc, \"Detail \"); // 下段conc csvダウンロードボタン\r\n        var chartDownload = document.getElementById(\"menu_Download\");\r\n        chartDownload.appendChild(chartDownloadUl);\r\n\r\n        // View Menu\r\n        var chartViewUl = document.createElement('ul');\r\n        chartViewUl.className = \"hjnMenuLv2\";\r\n        chartViewUl.innerHTML = '<li><div id=\"' + that.chartIdName\r\n                + '_legend\"></div></li>';\r\n        var chartView = document.getElementById(\"menu_View\");\r\n        chartView.appendChild(chartViewUl);\r\n\r\n        // \"Bottom detail graph\" Menu\r\n        accordion.innerHTML = ''\r\n                + '<li class=\"hjnMenuLv1\">'\r\n                +   getAccordionTag(that, ++_id, \"Bottom detail graph\", true)\r\n                +   '<ul class=\"hjnMenuLv2\">'\r\n                +     '<ol><div id=\"detailTimeRange\">' \r\n                +     __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getHtml()     // 設定HMTL #76\r\n                +     '</div></ol>' // #51\r\n                +   '<li><div id=\"chartPlots\"></div></li>' // Plot一覧用タグ\r\n                +   '</ul>'\r\n                + '</li>';\r\n\r\n        // Help Menu\r\n        var menuHelpUsage = { // getAlertTag #84\r\n                menuLabel : \"Usage of TAT log diver\",\r\n                menuId : divMenuId + \"_HelpUsage\",\r\n                strFuncName : \"HJN.init.Usage()\",\r\n                dialogId : \"HJN.dialogUsage\",\r\n                w : 50,\r\n                h : 40                    \r\n            };\r\n        var menuHelpAbout = { // getAlertTag\r\n                menuLabel : \"about TAT log diver\",\r\n                menuId : divMenuId + \"_HelpAbout\",\r\n                strFuncName : \"HJN.init.Copyright()\",\r\n                dialogId : \"HJN.dialogAbout\",\r\n                w : 30,\r\n                h : 50                   \r\n        };\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\">'\r\n                + getAccordionTag(that, ++_id, \"Help\")\r\n                + '<ul class=\"hjnMenuLv2\" style=\"width: 100%;\">' //\r\n                + getAlertTag(menuHelpUsage) // #84\r\n                + getAlertTag(menuHelpAbout)\r\n                + '</ul>' + '</li>';\r\n\r\n        // メニュー登録\r\n        divMenu.appendChild(accordion);\r\n    }\r\n\r\n    // アコーディオンラベル用<input><label>タグ編集（内部関数宣言） #31\r\n    // idは、ユニークな英数字なら何でもよい（ラベル押下時のアコーディオン開閉ラジオボタン連動用の接尾語）\r\n    function getAccordionTag(that, id, labelText, isChecked) {\r\n        var isAccordion = true, // true:アコーディオン型 false:折りたたみ型 #21\r\n        typeStr = isAccordion ? ' type=\"checkbox\" name=\"accordion\" '\r\n                : ' type=\"radio\" name=\"accordion\" ', //\r\n        checkedStr = ' checked=\"checked\" ';\r\n        return ''\r\n                + '<input id=\"ac-' + that.chartIdName + id + '\"' + typeStr\r\n                + (isChecked ? checkedStr : '') + '\">' + '<label for=\"ac-'\r\n                + that.chartIdName + id + '\">' + labelText + '</label>';\r\n    }\r\n\r\n    // File Open用<input>タグ編集（内部関数宣言）\r\n    // '<ol><a><label>Child Menu<input type=\"file\" id=\"xxx\"\r\n    // multiple/></label></a></ol>\r\n    function getInputTag(arg) {\r\n        return ''\r\n                + '<ol><a><label class=\"hjnButton4Input\">' + arg.menuLabel // #51\r\n                + '<input type=\"file\" id=\"' + arg.menuId + '\"  multiple />'\r\n                + '</label></a></ol>';\r\n    }\r\n\r\n    // ダウンロード用<A>タグ編集（内部関数宣言）\r\n    // '<li><a id=\"xxx\" href=\"#\">Child Menu</a><li/>'\r\n    function getATag(arg, preLabel) {\r\n        preLabel = preLabel || \"\";\r\n        return '' + '<li><a id=\"' + arg.menuId + '\" '\r\n                + 'class=\"hjnButton4Input\" href=\"#\" ' // #51\r\n                + 'download=\"' + arg.fileName + '\" ' //\r\n                + 'onclick=\"' + arg.funcName + '(' + \"'\" + arg.menuId + \"', '\"\r\n                + arg.fileName + \"'\" + ')\" ' + '>' + preLabel + arg.menuLabel\r\n                + '</a></li>';\r\n    }\r\n\r\n    // グローバルメソッド呼出用<A>タグ編集（内部関数宣言） #34\r\n    // '<li><a id=\"xxx\" href=\"#\">Child Menu</a></li>'\r\n    function getFuncTag(arg, preLabel) {\r\n        preLabel = preLabel || \"\";\r\n        return '' \r\n                + '<li><a id=\"' + arg.menuId + ' \"'\r\n                + 'class=\"hjnButton4Input\" href=\"#\" ' // #51\r\n                + 'onclick=\"' + arg.funcName + '()\">' //\r\n                + preLabel + arg.menuLabel + '</a></li>';\r\n    }\r\n\r\n    // Alert用<A>タグ編集（内部関数宣言）\r\n    // '<a id=\"xxx\" onclick=Alert(\"xxx\")>Child Menu</a>'\r\n    function getAlertTag(arg) {\r\n        var w = arg.w || 40;\r\n        var h = arg.h || 40;\r\n        return '' \r\n                + '<ol><a id=\"' + arg.menuId + '\"'\r\n                + 'class=\"hjnButton4Input\" ' // #51\r\n                + ' onclick=\"HJN.init.ShowDialog(' + arg.strFuncName\r\n                    + \", '\"+ arg.dialogId + \"'\" // #84\r\n                    + \",\" + w + \",\" + h \r\n                    +\")\" + '\"' + '>' // #79\r\n                + '<label>' + arg.menuLabel + '</label></a></ol>';\r\n    }\r\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = MenuConfigFilter;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__ = __webpack_require__(1);\n\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class MenuConfigFilter\r\n * @classdesc FileParser用メニューHTML定義\r\n * \r\n */\r\nfunction MenuConfigFilter() {} // #76\r\n\r\nMenuConfigFilter.config = function () {\r\n    var prefix = \"Filter\";\r\n    var c = new  __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */](prefix);\r\n    // Filter Config用関数定義(radio用） #51\r\n    var func_F_SYNC_UPPER = function(){ __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__[\"a\" /* default */].DrawCallback(HJN.chart.graph); };\r\n    var func_F_SYNC_DETAIL = function(){ __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__[\"a\" /* default */].DrawCallback(HJN.chartD.graph); };\r\n    // Filter Config設定画面定義 #51\r\n    c // #53\r\n        .name(\"F_SYNC\").label(null,\"Sync\") // #50\r\n            .radio(\"F_SYNC_UPPER\", null, \"Upper\", false ,null, func_F_SYNC_UPPER) // #51\r\n            .radio(\"F_SYNC_DETAIL\", null, \"Detail\", false, null, func_F_SYNC_DETAIL)\r\n            .radio(\"F_ASYNC\", null, \"Async\", true).n()\r\n        .label(null,\"----- Data filter condition--------\").n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TIME\").label(null, \"[Date filter]\").n()\r\n            .label(null,\"Include if end time is between\").n()\r\n                .text(\"F_TIME_FROM\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"')\r\n                .label(null,\"and\").n()\r\n                .text(\"F_TIME_TO\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TAT\").label(null,\"[Turnaround time(TAT) filter]\").n()\r\n            .label(null,\"Include if TAT is between\").n()\r\n                .number(\"F_TAT_FROM\", null, null, \"0\", 'style=\"width:80px;\"')\r\n                .number(\"F_TAT_TO\", \"and\", null, null, 'style=\"width:80px;\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TEXT\").label(null,\"[Text filter]\")\r\n                .radio(\"F_TEXT_NON\", null, \"Don't use.\", true).n()\r\n                .radio(\"F_TEXT_INCLUDE\", null, \"Include \")\r\n                .radio(\"F_TEXT_EXCLUDE\", null, \"Exclude \").n()\r\n                .number(\"F_TEXT_LEN\", \"if \", \" bytes\", null, 'style=\"width:40px;\"')\r\n                .number(\"F_TEXT_POS\", \"from the \", \"th byte\", \"1\", 'style=\"width:40px;\"').n()\r\n                .number(\"F_TEXT_COL\", \"from head of the\", \"th column of CSV\", \"3\", 'style=\"width:40px;\"').n()\r\n                .text(\"F_TEXT_REG\", \"match the regular expression\", null, null, 'size=\"7\" placeholder=\".*\"').n()\r\n            .n(\"<br>\")\r\n    ;\r\n}\r\n\r\nMenuConfigFilter.reset = function () {\r\n    // メニュー画面フィルタ条件に、初期値を設定する\r\n    var c = new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */](\"Filter\");\r\n    c.setText(\"F_TIME_FROM\", null);\r\n    c.setText(\"F_TIME_FROM\", null);\r\n    c.setText(\"F_TIME_TO\", null);\r\n    c.setText(\"F_TAT_FROM\", 0);\r\n    c.setText(\"F_TAT_TO\", null);\r\n    c.setSelector(\"F_TEXT_NON\");\r\n    c.setText(\"F_TEXT_LEN\", null);\r\n    c.setText(\"F_TEXT_POS\", 1);\r\n    c.setText(\"F_TEXT_COL\", 3);\r\n    c.setText(\"F_TEXT_REG\", null);\r\n}\r\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Copyright; });\nvar Copyright = {\r\n    name : \"TAT log diver\",\r\n    Version : \"b19.06.01\",\r\n    text : \"&copy; 2017-\" + (new Date()).getFullYear() + \" Junichiroh Hirose\",\r\n    url : \"https://github.com/hirosejn/\",\r\n};\r\n\r\n\r\n\r\nCopyright.getAboutText = function(){\r\n    return Copyright.name + \" (\" + Copyright.Version + \")<br>\"\r\n        + Copyright.text + \" <br> \"\r\n        + Copyright.getGitHubHTML() + \" <br> \"\r\n        + Copyright.getJSDocHTML() + \" <br> \"\r\n        + Copyright.getHtmlHTML();  // #84\r\n}\r\n\r\n// GitHubリンク\r\nCopyright.getGitHubHTML = function(text){\r\n    text = text || Copyright.url;\r\n    return '<a class=\"hjnLabel4Input\" href=\"' + Copyright.url+ '\"'\r\n        + ' target=”_hirosejnGit”>' + text + '</a>'\r\n}\r\n\r\n// JSDocリンク\r\nCopyright.getJSDocHTML = function(name){\r\n    name = name || \"JSDoc\";\r\n    return '<a class=\"hjnLabel4Input\" href=\"../jsdoc/index.html\"'\r\n        +  'target=”_hirosejnJSDoc3”>' + name +'</a><BR>'\r\n}\r\n\r\n// HTMLリンク #84\r\nCopyright.getHtmlHTML = function(name){\r\n    var url = \"https://hirosejn.github.io/HJN/\";\r\n    name = name || \"HTML : \" + url;\r\n    return '<a class=\"hjnLabel4Input\" href=\"' + url + '\"'\r\n        +  'target=”_hirosejnHTML”>' + name +'</a><BR>'\r\n}\r\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export default */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__ = __webpack_require__(3);\n\r\n\r\n\r\n\r\n/**\r\n * グラフの点をクリックした際に決まる下段グラフの表示条件\r\n * \r\n * @memberof tatLogDiver\r\n * @class Plot\r\n */\r\nfunction Plot(){};\r\n__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot = Plot;\r\n\r\n/**\r\n * Plotの一覧\r\n * \r\n * @type array.<String, Boolean, Boolean, index, xMs, Number, Number, Number>\r\n * @prop {String} label Plot一覧に表示する文字列\r\n * @prop {Boolean} ckBox チェックボックスの選択状態<br>\r\n *       （選択後すぐに削除されるのでtrueとなることはない）\r\n * @prop {Boolean} radio ラジオボタンの選択状態\r\n * @prop {index} n グラフ番号\r\n * @prop {xMs} x xの値\r\n * @prop {Number} y yの値\r\n * @prop {Number} rangeMinus 表示幅時間マイナス（秒）\r\n * @prop {Number} rangePlus 表示幅時間プラス（秒）\r\n * @prop {Number} rangeUnit 表示幅時間 単位（sec:1/min:60/hour:3600/day:86400)\r\n * \r\n */\r\n__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List = [];\r\n\r\n/**\r\n * point/baloonクリック時呼出し用関数<br>\r\n * 詳細グラフを描画し、Plotを更新する\r\n * \r\n * @param {Objcet}\r\n *            point dygraph の point\r\n */\r\nPlot.PointClickCallback = function(point) {\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[0:PointClickCallback]start---------------\",\"calc\");\r\n    var n = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.seriesConfig.findIndex(function(e){ return e.key === point.name; }),// シリーズ番号\r\n        x = point.xval, // ミリ秒\r\n        y = point.yval; // 秒\r\n\r\n    // ETPS,EMPS,EAPSのとき、TATが幅に含まれるよう、幅(range)を拡大する #57\r\n    var rangeTagUnit = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getConfig(\"D_UNIT\"); \r\n    var rangeUnit  = rangeTagUnit  ? rangeTagUnit : __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE;\r\n    if ((n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.ETPS.N || n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.EMPS.N || n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.EAPS.N) \r\n            && rangeUnit < __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE) {\r\n        rangeUnit = __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE;\r\n        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.setValueByKey(\"D_UNIT\", rangeUnit);\r\n\r\n        // selectリストの選択を、rangeUnitに合わせる #57\r\n        var options = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getKeyConfig(\"D_UNIT\"); // option一覧\r\n        var valueArray = Object.keys(options).sort(function(a,b){return a - b}); // optionの値の一覧(降順)\r\n        for (var i = 0; i < valueArray.length; i++) { // #27\r\n            if (rangeUnit <= +valueArray[i]) {\r\n               var optionKey = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getOptionKey(\"D_UNIT\", valueArray[i]);\r\n               __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.setText(\"D_UNIT\", optionKey)\r\n               break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // グラフの日時で、詳細グラフを再作成する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.SetDetailDateTime(x);\r\n    var tat = new __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */](__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.GetSliderRangedEtat()); // #57\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.setSeriesSet(tat); // #75\r\n    \r\n    // 下段の残処理終了後、下段データを登録描画する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.graph.ready(function(){ __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.update(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.seriesSet, n); }); // #57\r\n    // Hover表示しているplotを、Plot.Listに登録し、plotsアイコンを再描画する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.Add(n, x, y);\r\n    // Balloonを再描画する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.ShowBalloon();\r\n};\r\n\r\n/**\r\n * point/baloonダブルクリック時呼出し用関数<br>\r\n * Plotを削除する\r\n * \r\n * @param {object}\r\n *            plot dygraphのpoint\r\n */\r\nPlot.PointDblClickCallback = function(point) {\r\n    // 指定plotを削除する\r\n    var n = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.seriesConfig.findIndex(function(e){ return e.key === point.name; }),\r\n        x = point.xval, // ミリ秒\r\n        i = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.findIndex(function(p){\r\n                return(p.n === n && p.x === x) ||   // 完全一致\r\n                        (\"tpsPlot\" in p &&          // 詳細一致\r\n                        p.tpsPlot.n === n && p.tpsPlot.x === x); });\r\n    if(0 <= i) __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.splice(i, 1);\r\n    \r\n    Plot.Render();\r\n    // グラフ内の吹き出しを再表示する\r\n    Plot.ShowBalloon();\r\n};\r\n\r\n/**\r\n * クリック時のHoverからPlot.Listを設定する\r\n * \r\n * @param {index}\r\n *            n グラフのシリーズ番号\r\n * @param {xMs}\r\n *            x マウスクリック時のxの値（ミリ秒）\r\n * @param {Number}\r\n *            y マウスクリック時のyの値\r\n * @return {index} i plots内のplotの位置\r\n */\r\nPlot.Add=function(n, x, y) {\r\n    // 各plotを非選択状態とする\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.forEach(function(e){e.radio = false;});\r\n    // ラベルフォーマットの設定\r\n    var format = (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.ETPS.N || n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.CTPS.N) ? \"hh:mm:ss\" : \"hh:mm:ss.ppp\",\r\n        label = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](x, format, true) + \" \" + // #61\r\n                __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.seriesConfig[n].label.replace(\"%N\",__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"g\" /* N2S */](y));\r\n    // 幅(range)を取り込む（秒）\r\n    var rangePlusTag  =  document.getElementById(\"DetailRangePlus\"),\r\n        rangeMinusTag =  document.getElementById(\"DetailRangeMinus\"),\r\n        rangeUnitTag  =  document.getElementById(\"DetailRangeUnit\"), // #48\r\n        rangeUnit  = rangeUnitTag  ? +rangeUnitTag.value : __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE, // #57\r\n        rangePlus  = rangePlusTag  ? +rangePlusTag.value  : 1,  // 幅\r\n        rangeMinus = rangeMinusTag ? +rangeMinusTag.value : 1;\r\n\r\n    // 既存Poltを検索する\r\n    var i = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.findIndex(function(p){\r\n                return(p.n === n && p.x === x) ||   // 完全一致\r\n                        (\"tpsPlot\" in p &&          // 詳細一致\r\n                        p.tpsPlot.n === n && p.tpsPlot.x === x); });\r\n    // Plotを設定する\r\n    var plot;\r\n    if(0 <= i){ // 既存Plotsにある時、選択状態とし、rangeを再設定する\r\n        plot = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List[i];\r\n        plot.radio = true;\r\n        plot.rangePlus  = rangePlus; // 秒\r\n        plot.rangeMinus = rangeMinus;\r\n        plot.rangeUnit  = rangeUnit; // #48\r\n    }else{      // 既存に無いときPlotを追加する\r\n        // ETAT,STATのとき、TATが幅に含まれるよう、幅(range)を拡大する #30 #48 #57\r\n        if (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.ETAT.N){\r\n            rangeMinus = Math.max(rangeMinus, \r\n                    Math.floor(x / rangeUnit) - Math.floor((x - y) / rangeUnit)); // #48\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.setText(\"D_RANGE_MINUS\", rangeMinus);\r\n        }else if (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.STAT.N){\r\n            rangePlus = Math.max(rangePlus,\r\n                    Math.floor((x + y) / rangeUnit)) - Math.floor(x / rangeUnit) ; // #48\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.setText(\"D_RANGE_PLUS\", rangePlus);\r\n        }\r\n        // Plotを追加する\r\n        plot = {label: label, ckBox:false,\r\n                 radio:true, n: n, x: x, y: y, \r\n                 rangePlus: rangePlus, rangeMinus: rangeMinus, rangeUnit: rangeUnit };\r\n        if (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.CTPS.N){          // CTPSのとき秒内最大CONCとして登録する\r\n            adjustPlotToY(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.conc, x, x + __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.cTpsUnit.unit, y, \r\n                    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.CONC.N, plot, rangePlus, rangeMinus, rangeUnit);\r\n        }else if (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.EMPS.N){    // EMPSのとき秒内最大ETATとして登録する\r\n            adjustPlotToY(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.eTat, x, x + __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE, y, \r\n                    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.ETAT.N, plot, rangePlus, rangeMinus, rangeUnit);\r\n        }else { // CTPS,EMPS以外の時、選択Plotを追加する\r\n            __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.push(plot);\r\n        }\r\n        // Plotsを時刻順にソートする\r\n        __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.sort(\r\n                function(a, b) { return a.x - b.x; });\r\n        i = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.findIndex(\r\n                function(p){ return(p.n === n && p.x === x); });\r\n    }\r\n    Plot.Render();\r\n    return i;   // plots内のplotの位置\r\n\r\n    \r\n    // 内部関数：プロット位置を、指定秒から詳細グラフの最大時刻に変更する #19\r\n    function adjustPlotToY(conc, x, toX, y, n, plot, rangePlus, rangeMinus, rangeUnit){\r\n        if (!conc) return;\r\n        var maxTime = 0,\r\n            concMax = 0,\r\n            i = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"l\" /* binarySearch */](x, conc, function(e){ return e.x; });\r\n        for (; i < conc.length && conc[i].x < toX; i++){    // #26\r\n            if (concMax <= conc[i].y){\r\n                    maxTime = conc[i].x;\r\n                    concMax = conc[i].y;\r\n            }\r\n        }\r\n        if (concMax === y) { // 補正すべき時刻が求まったときCONC,ETATを追加する #23\r\n            x = maxTime;\r\n            format = \"hh:mm:ss.ppp\";\r\n            label = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* D2S */](x, format, true) + \" \" + // #61\r\n                    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Tat.seriesConfig[n].label.replace(\"%N\",__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"g\" /* N2S */](y));\r\n            __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.push( {label: label, ckBox:false,\r\n                 radio:true, n: n, x: x, y: y, \r\n                 rangePlus: rangePlus , rangeMinus: rangeMinus, rangeUnit: rangeUnit,\r\n                 tpsPlot: plot} );  // 詳細plotには、tpsのplot情報も保持する\r\n        } else { // 補正すべき時刻がない場合、元のPlotを追加する\r\n            __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.push(plot);\r\n        }\r\n\r\n    }\r\n};\r\n\r\n/**\r\n * Plot.Listを再表示する\r\n */\r\nPlot.Render = function() {\r\n    var divCheckedPlots =  document.getElementById(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartName + \"Plots\");\r\n    // 既存のアイコンを削除する\r\n    while (divCheckedPlots.firstChild){\r\n        divCheckedPlots.removeChild(divCheckedPlots.firstChild);\r\n    }\r\n    // 登録されているplots分のアイコンを追加する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.forEach( function(e, i){\r\n        var div = document.createElement('div'),        // 要素の作成\r\n            radio = e.radio ? 'checked=\"checked\"' : '', // radio選択指定\r\n            ckBox = e.ckBox ? 'checked=\"checked\"' : ''; // check boxのチェック指定\r\n        div.className = \"hjnPlot\";\r\n        div.innerHTML =\r\n            '<input type=\"checkbox\" value=\"' + e.x + '\" id=\"checkBox_' + i + '\" ' + ckBox +\r\n                    ' title=\"delete\" onclick=\"HJN.Plot.CheckBox(' + i + ')\">' +\r\n            '<label for=\"checkBox_' + i + '\"></label>' +\r\n            '<input type=\"radio\" name=\"CheckedPlot\" id=\"SaveTime_' + i + '\" ' + radio +\r\n                    ' onclick=\"HJN.Plot.CheckRadio(' + i + ')\">' +\r\n            '<label for=\"SaveTime_' + i + '\">' + e.label + '</label>';\r\n        divCheckedPlots.appendChild(div);\r\n    } );\r\n};\r\n/**\r\n * PlotのChekBox変更時呼出用関数<br>\r\n * 指定Plotを削除し、PlotsとBaloonを再描画する\r\n * \r\n * @param {index}\r\n *            i 削除対象plotの、plots内位置\r\n */\r\nPlot.CheckBox = function(i) {\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.splice(i,1);      // checkされたplotを削除する\r\n    Plot.Render();          // Plotsを再描画する\r\n    Plot.ShowBalloon();     // グラフのBalloonを再描画する\r\n};\r\n/**\r\n * PlotのRadioボタン変更時呼出用関数<br>\r\n * radio選択時に下段グラフを更新する\r\n * \r\n * @param {index}\r\n *            i 選択されたplotの、plots内位置\r\n */\r\nPlot.CheckRadio = function(i) {\r\n    // Plot.Listにradioの状態を反映する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.forEach(function(e){ e.radio = false; });\r\n    var plot = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List[i];\r\n    plot.radio = true;\r\n    // グラフの日時で、詳細グラフを再作成する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.SetDetailDateTime(plot.x); // 中心時刻に設定する\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.setText(\"D_RANGE_PLUS\", plot.rangePlus); // 幅を設定する\r\n                                                                        // #74\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.setText(\"D_RANGE_MINUS\", plot.rangeMinus);\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.setText(\"D_UNIT\", \r\n                __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].DetailGraph.getOptionKey(\"D_UNIT\", plot.rangeUnit)); // #48\r\n    var n = plot.tpsPlot ? plot.tpsPlot.n : plot.n; // #61\r\n    var tat = new __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */](__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.GetSliderRangedEtat()); // #75\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.setSeriesSet(tat); // #57\r\n    // 下段データを登録描画する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.update(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.seriesSet, n); // #57\r\n    // Balloonを再描画する\r\n    Plot.ShowBalloon();\r\n};\r\n/**\r\n * Balloonを再描画する\r\n */\r\nPlot.ShowBalloon =function(){\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.showBalloon();\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.showBalloon();\r\n    // タッチデバイスでないとき、lineViewerに表示をクリップボードにコピーする #78\r\n    if (!__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"k\" /* TouchPanel */].isTouchableDevice()) { // #22\r\n        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"m\" /* copyToClipboard */](\"lineViewer\"); // #61\r\n    }\r\n};\n\n/***/ }),\n/* 42 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Usage; });\n/**\r\n * \r\n */\r\n\r\n/** @namespace */\r\nvar Usage = {};\r\n\r\nUsage.TopHtml = ''\r\n+ ''\r\n/*\r\n+ '<!DOCTYPE html>'\r\n+ '<html>'\r\n+ '<head>'\r\n+ '<meta charset=\"UTF-8\">'\r\n+ '<title>Insert title here</title>'\r\n+ '</head>'\r\n+ '<body>' */\r\n+ '<p>Ver. b18.02.25, Last update: 2019/06/01, (c)2017-2019 hirosejn </p>'\r\n+ '<h1 id=\"index\">Index</h1>'\r\n+ '<p><a href=\"#environment\"><strong>Environment　動作環境</strong></a></p>'\r\n+ '<p><a href=\"#items\"><strong>Items　画面の構成要素</strong></a></p>'\r\n+ '<p><a href=\"#graph\"><strong>Graph　グラフの操作方法</strong></a></p>'\r\n+ '<p><a href=\"#menu\"><strong>Menu　メニューの操作方法</strong></a></p>'\r\n+ '<ol>'\r\n+ '<li><a href=\"#menu-file\">&gt; File</a></li>'\r\n+ '<li><a href=\"#menu-filter\">&gt; Filter</a></li>'\r\n+ '<li><a href=\"#menu-simulator\">&gt; Simulator</a></li>'\r\n+ '<li><a href=\"#menu-view\">&gt; View</a></li>'\r\n+ '<li><a href=\"#menu-download\">&gt; Download</a></li>'\r\n+ '<li><a href=\"#menu-bottomdetailgraph\">&gt; Bottom detail graph</a></li>'\r\n+ '<li><a href=\"#menu-help\">&gt; Help</a></li>'\r\n+ '</ol>'\r\n+ '<p><a href=\"#simulator\"><strong>Simulator　シミュレーションシナリオの仕様</strong></a></p>'\r\n+ '<ol>'\r\n+ '<li><a href=\"#simulator-01\">Simulator-01　サンプル01(1 hour with table block.)の仕様</a></li>'\r\n+ '<li><a href=\"#simulator-99\">Simulator-99　サンプル99(for test)の仕様</a></li>'\r\n+ '</ol>'\r\n+ '<hr>'\r\n+ '<h2 id=\"environment\">Environment</h2>'\r\n+ '<h2 id=\"動作環境-↑\">動作環境　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><p>Chrome：Ver74以降にて動作検証（推奨）</p>'\r\n+ '</li>'\r\n+ '<li><p>Edge：基本動作検証済</p>'\r\n+ '</li>'\r\n+ '<li><p>ie8 ：基本動作検証済、注：Chroneに比べ5倍程度遅い。</p>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<hr>'\r\n+ '<h2 id=\"items\">Items</h2>'\r\n+ '<h2 id=\"画面の構成要素-↑\">画面の構成要素　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><strong>右メニュー</strong> ：機能をアコーディオンメニュー形式で表示</li>'\r\n+ '<li><strong>右上メッセージエリア</strong> ：ファイル読込処理結果等のメッセージを表示（ダイアログの操作で移動／リサイズ可）</li>'\r\n+ '<li><strong>上段全体グラフ</strong> ：指定ファイルを、フィルター条件でフィルターしたデータを表示</li>'\r\n+ '<li><strong>下段詳細グラフ</strong> ：上段表示データのうち「下段詳細グラフ表示条件」による指定期間のデータを表示</li>'\r\n+ '<li><strong>下段データ表示エリア</strong> ：下段詳細グラフで、マウスオーバにより選択されたプロットに該当する、ファイルのレコードを表示。（ダイアログの操作で移動／リサイズ可）</li>'\r\n+ '<li><strong>ダイアログ</strong> ：【閉じる】：ダイアログ右上のバツボタン。【移動】：上部にマウスオーバすると表示されるグレーのバーをドラッグする。【リサイズ】：四隅四辺にマウスオーバし、マウスがリサイズアイコンになった状態からドラッグする。</li>'\r\n+ '</ul>'\r\n+ '<hr>'\r\n+ '<h2 id=\"graph\">Graph</h2>'\r\n+ '<h2 id=\"グラフの操作方法-↑\">グラフの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><p><strong>マウスオーバー</strong> ：X軸の最も近い時刻のプロットが選択され強調表示される。</p>'\r\n+ '<blockquote>'\r\n+ '<p>　下段グラフの場合は、選択プロットの時刻に同時処理(CONC)している処理の開始時刻―終了時刻を結ぶ線が表示される（同時処理が視認し易く表示されるので、容易に排他解放待ちの有無を特定できる）。下部データ表示エリアに、選択プロットの元ファイルのレコードが表示される（排他処理を容易に特定できる）。</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>マウスクリック／タッチ</strong> ：選択されたプロットを基準に、下段詳細グラフが更新され、「下段詳細グラフ表示条件」アイコンが追加される。</p>'\r\n+ '</li>'\r\n+ '<li><p><strong>マウスドラッグ（横／縦）</strong> ：指定範囲を横幅／縦幅としてグラフを拡大表示する。</p>'\r\n+ '</li>'\r\n+ '<li><p><strong>マウスダブルクリック</strong> ：マウスドラッグによるグラフの拡大表示をリセットする。（左上の「reset zoom」ボタンも同一機能）</p>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<hr>'\r\n+ '<h2 id=\"menu\">Menu</h2>'\r\n+ '<h2 id=\"メニューの操作方法-↑\">メニューの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><strong>メッセージ表示エリア</strong> ：処理結果メッセージを表示する。マウスによる移動（エリア上部選択）／リサイズに対応。</li>'\r\n+ '<li><strong>Place on/side</strong> ボタン：メニューをグラフに「重ねる／重ねない」を切り替える。</li>'\r\n+ '<li><strong>reset zoom</strong> ボタン：グラフの描画サイズを初期化する。（Androidでグラフのダブルクリックができないため設置）</li>'\r\n+ '<li><strong>バツ／ハンバーガー</strong> ボタン：メニューの「表示／非表示」を切り替える</li>'\r\n+ '</ul>'\r\n+ '<h3 id=\"menu-file\">Menu-File</h3>'\r\n+ '<h2 id=\"メニュー／fileの操作方法-↑\">メニュー／Fileの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><p><strong>Open csv data file</strong> ボタン：CSVファイルを選択。ファイルを選択するとグラフを表示する。</p>'\r\n+ '</li>'\r\n+ '<li><p><strong>Registered</strong> ：データ読込モード指定</p>'\r\n+ '<blockquote>'\r\n+ '<p> <strong>◎newly</strong> ：新規に読み込む（既存データを破棄） <strong>○additionally</strong> ：既存データに指定ファイルの内容を追加する</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>[Line feed code]</strong> ：CSVファイルの改行コードを指定</p>'\r\n+ '<blockquote>'\r\n+ '<p><strong>○固定長 &quot;80&quot;byte</strong> ／ <strong>◎Windows:CR(13)+CF(10)</strong> ／ <strong>○UNIX/Linux:LF(10)</strong> ／ <strong>○zOS:NEL(15)</strong> ／ <strong>○Max:CR(13)</strong> ／ <strong>○other charcode (&quot; &quot;)</strong> 文字コード番地を10進で指定</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>[CSV delimiter]</strong> ：CSVファイルのデリミタを指定</p>'\r\n+ '<blockquote>'\r\n+ '<p><strong>◎comma</strong> ：カンマ区切り／ <strong>○tab</strong> ：タブ区切り／ <strong>○other &quot;,&quot;</strong>  区切り文字を指定する</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>[Timestamp field]</strong> ：終了時刻のフィールドの位置とフォーマットを指定</p>'\r\n+ '<blockquote>'\r\n+ '<p><strong>&quot;1&quot;th column of CSV</strong>：CSVのカラム位置を指定（デフォルト1カラム目、固定長レコードの場合1を指定）</p>'\r\n+ '<p><strong>Position(byte): from &quot;1&quot; length &quot; &quot;</strong>：レコード内の固定バイト位置指定　レコードのfromバイト目から、length指定バイト長</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<blockquote>'\r\n+ '<p><strong>Format</strong> :時刻のフォーマット</p>'\r\n+ '<p><strong>◎text &quot;YYYY/MM/DD hh.mm.ss.ppp&quot;</strong> ：指定カラムのYYYY MM DD hh mm ss pppの位置から値を取得（エクセルの表示フォーマット： YYYY/MM/DD hh:mm:ss.000 に相当）</p>'\r\n+ '<p>　／ <strong>◎(num)text</strong> ／ <strong>○long</strong> ：text：ユリウス日0:00との時差数値　テキスト数値／long(4バイト)数値（別途エンディアン指定)</p>'\r\n+ '<p><strong>Units of numbers:</strong> <strong>○msec</strong> ／ <strong>◎sec</strong> ：(num)textもしくはlong選択時に、数値の単位をmsec/secから選択</p>'\r\n+ '</blockquote>'\r\n+ '<ul>'\r\n+ '<li><strong>[Turnaround time(TAT) field]</strong> ：処理時間(TAT)フィールドの位置とフォーマットを指定<blockquote>'\r\n+ '<p><strong>&quot;2&quot;th column of CSV</strong>：CSVのカラム位置を指定（デフォルト2カラム目、固定長レコードの場合1を指定）</p>'\r\n+ '<p><strong>Position(byte): from &quot;1&quot; length &quot; &quot;</strong>：固定バイト位置指定　指定カラムのfromバイト目から、length指定バイト長</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<blockquote>'\r\n+ '<p><strong>Units of numbers:</strong> <strong>○msec</strong> ／ <strong>◎sec</strong> ：処理時間の単位　msec/secから選択</p>'\r\n+ '</blockquote>'\r\n+ '<blockquote>'\r\n+ '<p><strong>Format:○(num)text</strong> ／ <strong>○long</strong> ：処理時間のフォーマット　テキスト数値／long(4バイト)数値（別途エンディアン指定)</p>'\r\n+ '</blockquote>'\r\n+ '<blockquote>'\r\n+ '<p><strong>for long Endian:  ◎little</strong> ／ <strong>○big</strong> ：long指定時のエンディアンを選択　リトルエンディアン／ビッグエンディアン</p>'\r\n+ '</blockquote>'\r\n+ '<h3 id=\"menu-filter\">Menu-Filter</h3>'\r\n+ '<h2 id=\"メニュー／filterの操作方法-↑\">メニュー／Filterの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><p><strong>Sync ○Upper ○Detail ◎Async</strong> 指定：表示しているグラフの条件をフィルター条件に取り込む</p>'\r\n+ '<blockquote>'\r\n+ '<p>　Upperを選択したタイミングで上段グラフを取り込む／Detailを選択したタイミングで下段グラフ／Asyncを選択した際には何も変更しない</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>[Date filter]</strong> 指定機能</p>'\r\n+ '<blockquote>'\r\n+ '<p><strong>Include if end time is between &quot;YYYY/MM/DD hh.mm.ss.ppp&quot; and &quot;YYYY/MM/DD hh.mm.ss.ppp&quot;</strong> ：</p>'\r\n+ '<p>　指定期間のデータのみを上段グラフの表示対象とする。時刻を手入力する作業は時間がかかるので Sync Upper/Detail で現在描画している情報を取り込んでから修正する操作を想定</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>[Turnaround time(TAT) filter]</strong> 指定機能：</p>'\r\n+ '<blockquote>'\r\n+ '<p><strong>Include if TAT is between &quot;0①&quot; and &quot;数値②&quot;</strong> ：</p>'\r\n+ '<p>　処理時間(TAT)が①～②のデータのみを上段グラフの表示対象とする</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>[Text filter]</strong> 指定機能：</p>'\r\n+ '<blockquote>'\r\n+ '<p><strong>◎Don&#39;t use. ○Include ○Exclude</strong></p>'\r\n+ '<p> <strong>if &quot;数値①&quot; bytes from the &quot;1②&quot;th byte from head of the &quot;3③&quot;th column of CSV match the regular expression &quot;④&quot;</strong> ：</p>'\r\n+ '<p>　テキストフィルターを使わない／正規表現に合致するデータを処理対象とする／正規表現に合致しないデータを処理対象とする</p>'\r\n+ '<p>　CSVレコードの、③番目のカラムの、先頭②バイト目から、①バイトの文字列を、正規表現④に照らして評価</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<h3 id=\"menu-simulator\">Menu-Simulator</h3>'\r\n+ '<h2 id=\"メニュー／simulatorの操作方法-↑\">メニュー／Simulatorの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<p>TAT log diver を起動すると、サンプルシミュレーションシナリオ１を初期表示する。</p>'\r\n+ '<ul>'\r\n+ '<li><strong>Simulate</strong> ボタン：指定したシミュレーションシナリオを実行しグラフを表示する。</li>'\r\n+ '<li><strong>JSON Editor(Open/Close)</strong> ボタン：シミュレーションシナリオ編集画面を開く／編集画面が開いている場合は閉じる。</li>'\r\n+ '<li><strong>サンプルシナリオ選択機能</strong> ：サンプルシナリオを選択します。異なるシナリオを選択したタイミングでシミュレーション実行しグラフを再描画する。</li>'\r\n+ '</ul>'\r\n+ '<h3 id=\"menu-view\">Menu-View</h3>'\r\n+ '<h2 id=\"メニュー／viewの操作方法-↑\">メニュー／Viewの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<p>上4つのチェックボックス（一部機能）で、上段全体グラフ上の表示有無を指定</p>'\r\n+ '<p>下7つのチェックボックス（全機能）で、下段詳細グラフ上の表示有無を指定</p>'\r\n+ '<ul>'\r\n+ '<li><p><strong>多重度（詳細）</strong> ：青　左Y軸　上段なし／下段☒</p>'\r\n+ '<blockquote>'\r\n+ '<p>同時処理数（多重度）をヒストグラム形式で表示</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>多重度（区間最大）/sec</strong> ：水色　左Y軸　上段☒／下段☒</p>'\r\n+ '<blockquote>'\r\n+ '<p>1秒間の区間の多重度の最大値</p>'\r\n+ '<p>上段グラフ：透過プロットで表示。同一多重度が連続するとプロットが重なり濃く見える</p>'\r\n+ '<p>下段グラフ：ヒストグラム形式で表示。多重度（詳細）と重ねて表示すると秒間最大値との関係を把握できる</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>average tps / min (end) [line]</strong> ：緑　左Y軸　上段☒／下段☒</p>'\r\n+ '<blockquote>'\r\n+ '<p>1分間の平均tps。コンピュータの処理数は1分毎にとられることが多いため、突合しやすいように表示</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>response by start time [Y2軸:plot]</strong> ：黄　右Y軸　上段なし／下段☒</p>'\r\n+ '<blockquote>'\r\n+ '<p>X軸：処理開始時刻、Y軸(点の高さ)は処理時間</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>response by end time [Y2軸:plot]</strong> ：茶　右Y軸　上段なし／下段☒</p>'\r\n+ '<blockquote>'\r\n+ '<p>X軸：処理終了時刻、Y軸(点の高さ)は処理時間</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>max response / min (end) [Y2軸:line]</strong> ：赤　右Y軸　上段☒／下段☒</p>'\r\n+ '<blockquote>'\r\n+ '<p>1分間の最大レスポンス（処理終了時刻ベース）、ヒストグラム風折れ線で表示</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>average response / min (end) [Y2軸:line]</strong> ：ピンク　右Y軸　上段☒／下段☐</p>'\r\n+ '<blockquote>'\r\n+ '<p>1分間の平均レスポンス（処理終了時刻ベース）、ヒストグラム風折れ線で表示。コンピュータの処理数は1分毎にとられることが多いため、突合しやすいように表示機能を設けているがデフォルト非表示</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<h3 id=\"menu-download\">Menu-Download</h3>'\r\n+ '<h2 id=\"メニュー／downloadの操作方法-↑\">メニュー／Downloadの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><strong>Upper graph image(.png)</strong> ボタン：上段グラフの図をpng形式で、初期ファイル名 graph.png でダウンロード。</li>'\r\n+ '<li><strong>Upper graph data(.csv)</strong> ボタン：上段グラフに表示しているデータを、CSV形式で（改行コード、デリミタはFileメニューの指定値を適用）初期ファイル名 graph.csv でダウンロード。</li>'\r\n+ '<li><strong>Upper graph log records(.csv)</strong> ボタン：上段グラフに表示しているデータの元データを、処理終了時刻順に、入力ファイルのレコードフォーマット（改行コード、デリミタ等も元ファイルのまま加工せずに適用）で、初期ファイル名 tatlog.csv でダウンロード。<blockquote>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><strong>Detail graph image(.png)</strong> ボタン：下段グラフに対して上段と同じ処理。</li>'\r\n+ '<li><strong>Detail graph data(.csv)</strong> ボタン：下段グラフに対して上段と同じ処理。</li>'\r\n+ '<li><strong>Detail graph log records(.csv)</strong> ボタン：下段グラフに対して上段と同じ処理。</li>'\r\n+ '<li><strong>Detail conc log records(.csv)</strong> ボタン：下段グラフに表示用に選択したCONC（同時処理数）時に処理しているデータを、処理終了時刻順に、入力ファイルのレコードフォーマットで、初期ファイル名 conclog.csv でダウンロード。（CONC指定時以外の場合はCONC最大値を基準）。</li>'\r\n+ '</ul>'\r\n+ '<h3 id=\"menu-bottomdetailgraph\">Menu-BottomDetailGraph</h3>'\r\n+ '<h2 id=\"メニュー／bottom-detail-graphの操作方法-↑\">メニュー／Bottom detail graphの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<p>下段詳細グラフの表示条件を指定する</p>'\r\n+ '<ul>'\r\n+ '<li><p><strong>Range: - &quot;1①&quot; + &quot;2②&quot; &quot;10sec③&quot;</strong> 指定機能：下段グラフの期間を指定する</p>'\r\n+ '<blockquote>'\r\n+ '<p>「下段詳細グラフ表示条件」の基準時刻を③単位で切り捨てた時刻を基準に、-①数値×③単位　～ +②数値×③単位　を下段グラフの表示データ抽出期間とする。③単位はsec/10sec/min/hour/6hour/day/year から選択</p>'\r\n+ '<p>指定値を変更する都度、指定値を「下段詳細グラフ表示条件」に反映し下段グラフを再描画する。なお、グラフ上の範囲指定による表示期間変更は描画のみで「下段詳細グラフ表示条件」には反映されない。</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>「下段詳細グラフ表示条件」</strong> アイコン ：下段グラフに表示する条件を選択する機能（初期表示：同時処理数が最大となるタイミングを１つ）</p>'\r\n+ '<blockquote>'\r\n+ '<p>上段／下段グラフの任意の点をクリックすると、「下段詳細グラフ表示条件」アイコン　が追加される。アイコンは基準時刻順に縦に並ぶ。</p>'\r\n+ '<p>下段グラフに表示している「下段詳細グラフ表示条件」アイコンは背景グレー。他のアイコンは背景白</p>'\r\n+ '<p>アイコンにマウスをのせると、アイコンの左側にマイナス「－」アイコンが表示され、「－」をクリックすると該当「下段詳細グラフ表示条件」アイコンが削除される。</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<h3 id=\"menu-help\">Menu-Help</h3>'\r\n+ '<h2 id=\"メニュー／helpの操作方法-↑\">メニュー／Helpの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><strong>about TAT log diver</strong> ボタン：&quot;TAT log diver&quot;のコピーライト、関連ＵＲＬをダイアログ表示</li>'\r\n+ '</ul>'\r\n+ '<hr>'\r\n+ '<h2 id=\"simulator\">Simulator</h2>'\r\n+ '<h2 id=\"シミュレーションシナリオの仕様-↑\">シミュレーションシナリオの仕様　<a href=\"#\">↑</a></h2>'\r\n+ '<h3 id=\"simulator-01\">Simulator-01</h3>'\r\n+ '<h2 id=\"サンプル011-hour-with-table-blockの仕様-↑\">サンプル01(1 hour with table block.)の仕様　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li>概要</li>'\r\n+ '</ul>'\r\n+ '<p><strong>数秒のバッチが、通常0.5秒以下の更新系オンのレスポンス遅延を起こす。更新系集中時に滞留増により遅延長時間化</strong></p>'\r\n+ '<p>online[100-500ms 2-5tps]：レスポンス100～500ミリ秒のオンライン取引を２～５tpsで発行。16:30～16:36に更新系オン2割増</p>'\r\n+ '<p>batch[2-5sec evry3min]：処理時間２～５秒のオン中バッチ取引（DB更新あり）を３分毎に起動</p>'\r\n+ '<ul>'\r\n+ '<li>詳細</li>'\r\n+ '</ul>'\r\n+ '<p>{'\r\n+ '&quot;log&quot; : 1,</p>'\r\n+ '<blockquote>'\r\n+ '<p>エラーログのみ出力</p>'\r\n+ '<p>　log（任意、デフォルト3）:詳細ログ出力指定(0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)</p>'\r\n+ '</blockquote>'\r\n+ '<p>&quot;start&quot; : &quot;2017/01/02 00:00:00.000&quot;,'\r\n+ '&quot;end&quot;   : &quot;17.0*h&quot;,</p>'\r\n+ '<blockquote>'\r\n+ '<p>2017/01/02 00:00:00.000 を基準、最大17時間後までシミュレーション実行</p>'\r\n+ '<p>シミュレーション開始時刻/終了時刻&quot;,</p>'\r\n+ '</blockquote>'\r\n+ '<p>&quot;resources&quot; : [</p>'\r\n+ '<blockquote>'\r\n+ '<p>システム構成定義： &quot;type:リソース名、thread:最大同時hold数、timeout：holdタイムアウト時間&quot;、q:最大hold待ち数、qWait:最大hold待ち時間&quot;</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;type&quot; :&quot;WEB&quot;, &quot;thread&quot;:1024,&quot;timeout&quot;:&quot;300*sec&quot;, &quot;q&quot;:1280, &quot;qWait&quot;:0},</p>'\r\n+ '<blockquote>'\r\n+ '<p>WEBサーバ：1024スレッド、タイムアウトエラー：300秒、スレッド溢れ時：即時エラー</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;type&quot; :&quot;AP&quot;,  &quot;thread&quot;:20,  &quot;timeout&quot;:&quot;300*sec&quot;, &quot;q&quot;:1280, &quot;qWait&quot;:0},</p>'\r\n+ '<blockquote>'\r\n+ '<p>APサーバ：20スレッド、タイムアウトエラー：300秒、スレッド溢れ時：即時エラー</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;type&quot; :&quot;DB&quot;,  &quot;thread&quot;:10,  &quot;timeout&quot;: &quot;10<em>sec&quot;, &quot;q&quot;:10,  &quot;qWait&quot;:&quot;10</em>sec&quot;}</p>'\r\n+ '<blockquote>'\r\n+ '<p>DBサーバ：10スレッド、SQL処理タイムアウトエラー：10秒、コネクションプール：10個、コネクション取得待ち：10秒でエラー</p>'\r\n+ '</blockquote>'\r\n+ '<p>],</p>'\r\n+ '<p>&quot;models&quot; : [</p>'\r\n+ '<blockquote>'\r\n+ '<p> &quot;models:clientsで指定するモデル名(model)の定義、以下modelsで指定できる項目&quot;,</p>'\r\n+ '<p> &quot;baseModel:複数リソースのsequenceをまとめて宣言できる、sequenceに展開した後処理される、任意指定&quot;,</p>'\r\n+ '<p> &quot;sequence:指定された順にリソースを取得する、配列内に複数指定可、sequenceも複数指定可&quot;,</p>'\r\n+ '<p> &quot;hold：リソース名、holds(baseModelのみ指定可）：リソース一覧、各々にtat/tatMinが適用される&quot;,</p>'\r\n+ '<p> &quot;tat/tatMin：リソースの取得に要する平均/最小時間、tatMinのデフォルトはtat&quot;,</p>'\r\n+ '<p> &quot;　　　　　　★注：tatはリソースの使用時間ではない、リソース使用時間を指定す場合はfreeで指定&quot;,</p>'\r\n+ '<p> &quot;数値はミリ秒単位、<em>ms,</em>sec,<em>min,</em>h,*day 指定可&quot;,</p>'\r\n+ '<p> &quot;times：繰返し回数&quot;,</p>'\r\n+ '<p> &quot;thinkTime/thinkTimeMin：繰返し時の間隔の平均/最小時間、thinkTimeMinのデフォルトはthinkTime&quot;,</p>'\r\n+ '<p> &quot;free：[リソース名の配列]、指定リソースを開放する、free指定の無いリソースはシーケンスの最後にfreeされる&quot;,</p>'\r\n+ '</blockquote>'\r\n+ '<p>  { &quot;ON-1&quot; : {'\r\n+ '    &quot;times&quot;: 60, &quot;thinkTimeMin&quot;:&quot;3<em>sec&quot;, &quot;thinkTime&quot;: &quot;10</em>sec&quot;,'\r\n+ '    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;WEB&quot;,&quot;AP&quot;,&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;5</em>ms&quot;},'\r\n+ '    &quot;sequence&quot;: ['\r\n+ '      {&quot;tatMin&quot;:30, &quot;tat&quot;:50, &quot;note&quot;:&quot;select A&quot;},'\r\n+ '      {&quot;tatMin&quot;:50, &quot;tat&quot;:50, &quot;note&quot;:&quot;updateB&quot;, &quot;hold&quot;:&quot;TBL_B&quot;},'\r\n+ '      {&quot;tatMin&quot;:80, &quot;tat&quot;:100,&quot;note&quot;:&quot;updateC&quot;, &quot;hold&quot;:&quot;TBL_C&quot;}'\r\n+ '    ]}},</p>'\r\n+ '<blockquote>'\r\n+ '<p>オンライン取引１(ON-1)：１ユーザあたり3～10秒の取引を60回発行、Web-AP-DBの３層AP、各レイヤ呼出し時に2～5msの通信遅延あり、'\r\n+ '　処理内容 30～50ms 参照排他なしSQL　＞　50ms TBL_B排他SQL　＞ 80~100ms TBL_C排他SQL（更新処理を想定）</p>'\r\n+ '</blockquote>'\r\n+ '<p> { &quot;ON-2&quot; : {'\r\n+ '    &quot;times&quot;: 60, &quot;thinkTimeMin&quot;:&quot;500<em>ms&quot;, &quot;thinkTime&quot;: &quot;1</em>sec&quot;,'\r\n+ '    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;WEB&quot;,&quot;AP&quot;,&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;5</em>ms&quot;},'\r\n+ '    &quot;sequence&quot;: ['\r\n+ '      {&quot;tatMin&quot;:&quot;100<em>ms&quot;, &quot;tat&quot;:&quot;500</em>ms&quot;, &quot;hold&quot;:&quot;&quot;}'\r\n+ '    ]}},</p>'\r\n+ '<blockquote>'\r\n+ '<p>オンライン取引２(ON-2)：１ユーザあたり500ミリ秒~1秒の取引を60回発行、Web-AP-DBの３層AP、各レイヤ呼出し時に2～5msの通信遅延あり、'\r\n+ '　処理内容 100～500ms 排他なし（一覧参照処理を想定）</p>'\r\n+ '</blockquote>'\r\n+ '<p> { &quot;BATCH-1&quot; : {'\r\n+ '    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;5</em>ms&quot;},'\r\n+ '    &quot;sequence&quot;: ['\r\n+ '      {&quot;tatMin&quot;:&quot;2<em>sec&quot;,&quot;tat&quot;:&quot;5</em>sec&quot;,&quot;note&quot;:&quot;updateB&quot;,&quot;hold&quot;:&quot;TBL_B&quot;}'\r\n+ '    ]}}</p>'\r\n+ '<blockquote>'\r\n+ '<p>バッチ取引２(BATCH-1)：１ユーザあたり１ジョブ実行、DB更新のみ、各レイヤ呼出し時に2～5msの通信遅延あり、'\r\n+ '処理内容 2～5秒 TBL_Bを排他（長時間トランザクションのオン中バッチを想定）</p>'\r\n+ '</blockquote>'\r\n+ '<p>],</p>'\r\n+ '<p>&quot;clients&quot; : [</p>'\r\n+ '<blockquote>'\r\n+ '<p> &quot;clients：仮想アプリケーションの起動クライアントの定義&quot;,'\r\n+ ' &quot;num:作成クライアント数、start～endの間で、ランダム（指数分布）に指定回数起動する&quot;,'\r\n+ ' &quot;start/end:仮想クライアント作成/終了時刻、先頭で宣言したstartからの相対時刻&quot;,'\r\n+ ' &quot;model:modelsで宣言したモデル名&quot;,'\r\n+ ' &quot;user:user+通番 のユーザ名で仮想クライアントが作成される&quot;,</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;:100,&quot;start&quot;:&quot;16.0<em>h&quot;, &quot;end&quot;:&quot;17.0</em>h&quot;, &quot;model&quot;:&quot;ON-1&quot;,  &quot;user&quot; :&quot;userU&quot;, &quot;message&quot;:&quot;select A update B,C&quot;},</p>'\r\n+ '<blockquote>'\r\n+ '<p>16:00～17:00の 1時間に、userU00～userU99の100ユーザが、各々ON-1（更新系）を100回発行</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;: 20,&quot;start&quot;:&quot;16.5<em>h&quot;, &quot;end&quot;:&quot;16.6</em>h&quot;, &quot;model&quot;:&quot;ON-1&quot;,  &quot;user&quot; :&quot;userT&quot;, &quot;message&quot;:&quot;select A update B,C 【増】&quot;},</p>'\r\n+ '<blockquote>'\r\n+ '<p>16:30～16:36 の6分間に、userT00～userT19の20ユーザが、各々ON-1（更新系）を20回発行（一時的に更新オン取引200%増）</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;:100,&quot;start&quot;:&quot;16.0<em>h&quot;, &quot;end&quot;:&quot;17.0</em>h&quot;, &quot;model&quot;:&quot;ON-2&quot;,  &quot;user&quot; :&quot;userS&quot;, &quot;message&quot;:&quot;排他なし(WEBのみ)&quot;},</p>'\r\n+ '<blockquote>'\r\n+ '<p>16:00～17:00 の1時間に、userS00～userS99の100ユーザが、各々ON-2（参照系）を100回発行</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;: 20,&quot;start&quot;:&quot;16.0<em>h&quot;, &quot;end&quot;:&quot;17.0</em>h&quot;, &quot;model&quot;:&quot;BATCH-1&quot;,&quot;user&quot;:&quot;userB&quot;, &quot;message&quot;:&quot;バッチ処理 update B＊＊＊＊＊&quot;}</p>'\r\n+ '<blockquote>'\r\n+ '<p>16:00～17:00 に、userBが、BATCH-1（更新系）を20回発行</p>'\r\n+ '</blockquote>'\r\n+ '<p>]'\r\n+ '}</p>'\r\n+ '<blockquote>'\r\n+ '</blockquote>'\r\n+ '<h3 id=\"simulator-99\">Simulator-99</h3>'\r\n+ '<h2 id=\"サンプル99for-testの仕様-↑\">サンプル99(for test)の仕様　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li>概要</li>'\r\n+ '</ul>'\r\n+ '<p><strong>デッドロックが発生し、タイムアウトで解消</strong></p>'\r\n+ '<p>デグレードテスト用シナリオを兼ねる（描画バリエーションの網羅率の高い短いシナリオ）</p>'\r\n+ '<ul>'\r\n+ '<li>詳細</li>'\r\n+ '</ul>'\r\n+ '<p>{'\r\n+ '&quot;log&quot; : 1,'\r\n+ '&quot;start&quot; : &quot;1970/01/02 00:00:00.000&quot;,'\r\n+ '&quot;end&quot;   : &quot;30.0*sec&quot;,</p>'\r\n+ '<blockquote>'\r\n+ '<p>2017/01/02 00:00:00.000 を基準、最大30秒後までシミュレーション実行、エラーログのみ出力</p>'\r\n+ '</blockquote>'\r\n+ '<p>&quot;resources&quot; : ['\r\n+ '  {&quot;type&quot; :&quot;DB&quot;,  &quot;thread&quot;:2,  &quot;timeout&quot;: &quot;5<em>sec&quot;, &quot;q&quot;:1,  &quot;qWait&quot;:&quot;2</em>sec&quot;}'\r\n+ '],</p>'\r\n+ '<blockquote>'\r\n+ '<p>DBサーバ：2スレッド、DBトランザクションタイムアウトエラー：5秒、コネクションプール：1個、コネクション取得待ち：2秒でエラー</p>'\r\n+ '</blockquote>'\r\n+ '<p>&quot;models&quot; : ['\r\n+ ' { &quot;TEST-AB&quot; : {'\r\n+ '    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;2</em>ms&quot;},'\r\n+ '    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_A&quot;, &quot;tatMin&quot;:&quot;1<em>sec&quot;, &quot;tat&quot;:&quot;1</em>sec&quot;}],'\r\n+ '    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_B&quot;, &quot;tatMin&quot;:&quot;3<em>sec&quot;, &quot;tat&quot;:&quot;3</em>sec&quot;}],'\r\n+ '    &quot;times&quot;: 2, &quot;thinkTimeMin&quot;:&quot;1<em>sec&quot;, &quot;thinkTime&quot;: &quot;1</em>sec&quot;}},</p>'\r\n+ '<blockquote>'\r\n+ '<p>バッチ取引AB(TEST-AB)：１ユーザあたり１秒毎に２回迄ジョブ起動、DB更新のみ、</p>'\r\n+ '<p>処理内容 3.007秒処理（開始 ＞ 1+2ms&gt;DB排他&gt;TBL_A排他 ＞ 1+2ms+３秒&gt;TBL_B排他 ＞ 1ms&gt;排他解放 ＞ 1ms終了）＋1秒＋3.008秒処理</p>'\r\n+ '</blockquote>'\r\n+ '<p> { &quot;TEST-BA&quot; : {'\r\n+ '    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;2</em>ms&quot;},'\r\n+ '    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_B&quot;, &quot;tatMin&quot;:&quot;1<em>sec&quot;, &quot;tat&quot;:&quot;1</em>sec&quot;}],'\r\n+ '    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_A&quot;, &quot;tatMin&quot;:&quot;3<em>sec&quot;, &quot;tat&quot;:&quot;3</em>sec&quot;}],'\r\n+ '    &quot;times&quot;: 2, &quot;thinkTimeMin&quot;:&quot;1<em>sec&quot;, &quot;thinkTime&quot;: &quot;1</em>sec&quot;}}'\r\n+ '    ],</p>'\r\n+ '<blockquote>'\r\n+ '<p>バッチ取引BA(TEST-BA)：１ユーザあたり１秒毎に２回迄ジョブ起動、DB更新のみ、</p>'\r\n+ '<p>処理内容 3.007秒処理（開始 ＞ 1+2ms&gt;DB排他&gt;TBL_B排他 ＞ 1+2ms+３秒&gt;TBL_A排他 ＞ 1ms&gt;排他解放 ＞ 1ms終了）＋1秒＋3.008秒処理</p>'\r\n+ '</blockquote>'\r\n+ '<p>&quot;clients&quot; : [</p>'\r\n+ '<blockquote>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;0<em>sec&quot;, &quot;end&quot;:&quot;0</em>sec&quot;, &quot;model&quot;:&quot;TEST-AB&quot;,&quot;user&quot; :&quot;testAB1&quot;},</p>'\r\n+ '<blockquote>'\r\n+ '<p>1回目：0.001秒に、ユーザtestAB10が、TEST-AB起動（排他待ちなし、3.007秒で正常終了:N_000)</p>'\r\n+ '<p>2回目：4.007秒に、ユーザtestAB10が、TEST-AB起動（DBコネクションキューオーバフロー、0.001秒で終了:E_QoF）</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;1<em>sec&quot;, &quot;end&quot;:&quot;1</em>sec&quot;, &quot;model&quot;:&quot;TEST-AB&quot;,&quot;user&quot; :&quot;testAB2&quot;},</p>'\r\n+ '<blockquote>'\r\n+ '<p>1回目：1.000秒に、ユーザtestAB20が、TEST-AB起動（デッドロック DBトランザクションタイムアウト5.000秒でエラー終了:E_HTO）</p>'\r\n+ '<p>2回目：7.000秒に、ユーザtestAB20が、TEST-AB起動（3.007秒で正常終了:N_000）</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;3<em>sec&quot;, &quot;end&quot;:&quot;3</em>sec&quot;, &quot;model&quot;:&quot;TEST-BA&quot;,&quot;user&quot; :&quot;testBA3&quot;},</p>'\r\n+ '<blockquote>'\r\n+ '<p>1回目：3.000秒に、ユーザtestBA30が、TEST-BA起動（testAB10のDB解放待ち0.007秒を加えた、3.014秒で正常終了:N_000）</p>'\r\n+ '<p>2回目：7.014秒に、ユーザtestBA30が、TEST-BA起動（5.005秒で正常終了:N_000）</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;4<em>sec&quot;, &quot;end&quot;:&quot;4</em>sec&quot;, &quot;model&quot;:&quot;TEST-BA&quot;,&quot;user&quot; :&quot;testBA4&quot;}</p>'\r\n+ '<blockquote>'\r\n+ '<p>1回目：4.001秒に、ユーザtestBA40が、TEST-BA起動（5.014秒で正常終了:N_000）</p>'\r\n+ '<p>2回目：3.000秒に、ユーザtestBA40が、TEST-BA起動（デッドロック DBトランザクションタイムアウト5.000秒でエラー終了:E_HTO）</p>'\r\n+ '</blockquote>'\r\n+ '<p> ]'\r\n+ '}</p>'\r\n+ '<blockquote>'\r\n+ '</blockquote>'\r\n+ '<p>　<a href=\"#\">go to top ↑</a></p>'\r\n/* + '</body>'\r\n+ '</html>' */\r\n\r\n+ '';\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// tatLogDiver.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3807bfb294e1c3ddde6e","import TouchPanel         from './util-TouchPanel.js';\r\nimport {DateToString, S2D, D2S, N2S, S2N} from './util-string.js';\r\nimport Random             from './util-Random.js';\r\nimport addEventListener   from './util-addEventListener.js';\r\nimport setZeroTimeout     from './util-setZeroTimeout.js';\r\nimport Logger             from './util-Logger.js';\r\nimport copyToClipboard    from './util-copyToClipboard.js';\r\nimport binarySearch       from './util-binarySearch.js';\r\nimport Heap               from './util-Heap.js';\r\nimport Element            from './util-Element.js';\r\nimport {Config}           from './config/config.js';\r\n\r\n/** @namespace Util */\r\nexport {\r\n    TouchPanel,\r\n    S2D,\r\n    DateToString,\r\n    D2S,\r\n    N2S,\r\n    S2N,\r\n    Random,\r\n    addEventListener,\r\n    setZeroTimeout,\r\n    Logger,\r\n    copyToClipboard,\r\n    binarySearch,\r\n    Heap,\r\n    Element,\r\n    Config\r\n};\r\n\r\n\r\n/** ie11 互換用 * */\r\nif(!Number.MAX_SAFE_INTEGER) Number.MAX_SAFE_INTEGER = 9007199254740991; // #59\r\nif(!Number.MIN_SAFE_INTEGER) Number.MIN_SAFE_INTEGER = -9007199254740991;\r\n\r\nif(!Uint8Array.prototype.indexOf){\r\n    Uint8Array.prototype.indexOf = function(target,index){\r\n        index = (index === undefined) ? 0 : index;  // #29\r\n        for(var i = index, last = index + 4096; i < last; i++){ // 暫定：1レコード4KBまでチェック\r\n            if(this[i] === target) return i; \r\n        }\r\n        return -1;\r\n    };\r\n}\r\nif (!Uint8Array.prototype.slice) {  // #29\r\n    Uint8Array.prototype.slice = function(begin, end) {\r\n        return this.subarray(begin, end);\r\n    };\r\n}\r\n// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\r\nif (!Array.prototype.findIndex) {\r\n    Array.prototype.findIndex = function(predicate) {\r\n      if (this === null) throw new TypeError('Array.prototype.findIndex called on null or undefined');\r\n      if (typeof predicate !== 'function') throw new TypeError('predicate must be a function');\r\n      var list = Object(this), length = list.length >>> 0, thisArg = arguments[1], value;\r\n      for (var i = 0; i < length; i++) {\r\n        value = list[i];\r\n        if (predicate.call(thisArg, value, i, list)) return i;\r\n      }\r\n      return -1;\r\n    };\r\n  }\r\n// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\nif (!Array.prototype.find) {\r\n    Array.prototype.find = function(predicate) {\r\n      if (this === null) throw new TypeError('Array.prototype.find called on null or undefined');\r\n      if (typeof predicate !== 'function')  throw new TypeError('predicate must be a function');\r\n      var list = Object(this), length = list.length >>> 0, thisArg = arguments[1], value;\r\n      for (var i = 0; i < length; i++) {\r\n        value = list[i];\r\n        if (predicate.call(thisArg, value, i, list))  return value;\r\n      }\r\n      return undefined;\r\n    };\r\n  }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util.js\n// module id = 0\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport * as Simulator from '../simulator/simulator.js';\r\nimport Menu from'./tatLogDiver-Menu.js';\r\nimport {CreateSampleTatLogAndChartShow} from'./tatLogDiver-Init.js';\r\nimport * as TimeSeries from '../timeSeries/timeSeries.js';\r\n\r\n\r\n/* ******1*********2*********3*********4*********5*********6*********7****** */\r\n\r\n/**\r\n * インスタンス内の定数を設定する。併せて性能対策として頻繁に使うDOM要素を取り込む\r\n *\r\n * @memberof tatLogDiver\r\n * @class Graph\r\n * @classdesc TAT(Turnaround time)ログ分析用グラフ\r\n * @param {string}\r\n *            chartIdName グラフを作成するHTML要素のID\r\n * @param {string}\r\n *            [globalName=\"HJN.chartD\"] グラフのID\r\n * @param {Object}\r\n *            [config] グラフの設定\r\n * @example HJN.chart = new HJN(chartName, \"HJN.chart\"); HJN.chart.init();\r\n *          HJN.chartD = new HJN(chartName + \"Detail\", \"HJN.chartD\");\r\n *          HJN.chartD.init();\r\n */\r\nexport default function Graph(chartIdName, globalName, config) {\r\n    /* メンバ変数 */\r\n    this.seriesSet = [];\r\n    this.chartIdName = chartIdName; // arg0 \"chart\",\"chartD\"\r\n    this.globalName = globalName || \"HJN.chartD\"; // arg1\r\n    if (!config) { // arg2\r\n        var isMain = (globalName === \"HJN.chart\") ? true : false;\r\n        config = {\r\n            SERIESES: [ \r\n                { n: HJN.Tat.CONC.N, process: !isMain, visiblity: !isMain, renderer: 'area' },\r\n                { n: HJN.Tat.CTPS.N, process: true,    visiblity: true,    renderer: isMain ? 'scatterplot' : 'bar' },\r\n                { n: HJN.Tat.ETPS.N, process: true,    visiblity: isMain,  renderer: 'line' },\r\n                { n: HJN.Tat.STAT.N, process: !isMain, visiblity: !isMain, renderer: 'scatterplot' },\r\n                { n: HJN.Tat.ETAT.N, process: !isMain, visiblity: !isMain, renderer: 'scatterplot' },\r\n                { n: HJN.Tat.EMPS.N, process: true,    visiblity: true,    renderer: 'line' }, \r\n                { n: HJN.Tat.EAPS.N, process: true,    visiblity: isMain,  renderer: 'line' } ],\r\n            height : 0.40,\r\n            isVisiblity : true\r\n        };\r\n    }\r\n\r\n    // File.Parserを設定する\r\n    this.fileParser = TimeSeries.FileParser(); // #24\r\n   \r\n    // グラフ定義領域の宣言\r\n    this.windowId = document.getElementById(\"hjn_chart\");\r\n    this.menuId = document.getElementById(\"hjnBoxBuger\");\r\n    this.menuPlaceOnId = document.getElementById(\"hjnBoxPlaceOn\");\r\n    this.chartId = document.getElementById(this.chartIdName);\r\n    this.dyData = [];\r\n    this.dySeries = {};\r\n\r\n    this.scale = [ null, null ];\r\n    this.graph = null;\r\n    this.cTpsUnit = TimeSeries.Tat.UNIT_CTPS[0]; // #75\r\n\r\n    // グラフの設定(処理対象データの設定のみ this.SERIESES[] に取り込む）\r\n    this.SERIESES = [];\r\n    this.labels = [ 'Date' ];\r\n    for (var i = 0, j = 0; i < config.SERIESES.length; i++) {\r\n        if (config.SERIESES[i].process === true) {\r\n            this.SERIESES[j] = {\r\n                key : '',\r\n                name : '',\r\n                visiblity : false,\r\n                renderer : '',\r\n                order : 0,\r\n                scale : 0,\r\n                color : ''\r\n            };\r\n            // 定数(HJN.Tat.seriesConfig)指定項目を設定する\r\n            for ( var attr in HJN.Tat.seriesConfig[i]) {\r\n                this.SERIESES[j][attr] = HJN.Tat.seriesConfig[i][attr];\r\n            }\r\n            // 引数(config)指定項目を設定する\r\n            this.SERIESES[j].visiblity = config.SERIESES[i].visiblity;\r\n            this.SERIESES[j].renderer = config.SERIESES[i].renderer;\r\n\r\n            var renderer = config.SERIESES[i].renderer;\r\n            if (renderer === 'scatterplot') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    drawPoints : true\r\n                };\r\n            } else if (renderer === 'line') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 2.0,\r\n                    connectSeparatedPoints : true,\r\n                    stepPlot : true\r\n                };\r\n            } else if (renderer === 'area') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    stepPlot : true,\r\n                    fillGraph : true\r\n                };\r\n            } else { // if (renderer === 'bar' ) {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    connectSeparatedPoints : true,\r\n                    stepPlot : true,\r\n                    fillGraph : true\r\n                };\r\n            }\r\n            this.dySeries[this.SERIESES[j].key].color = this.SERIESES[j].color;\r\n\r\n            if (this.SERIESES[j].scale === 1) {\r\n                this.dySeries[this.SERIESES[j].key].axis = 'y2';\r\n            }\r\n\r\n            this.labels.push(this.SERIESES[j].key);\r\n            j++;\r\n        }\r\n    }\r\n\r\n    this.height = config.height;\r\n    this.isVisiblity = config.isVisiblity;\r\n};\r\n\r\n/**\r\n * クラス定数\r\n */\r\n// Graph.prototype = {};\r\n\r\n/**\r\n * クラスメソッド：menuのFilterのｘｙ幅指定エリアにグラフのｘｙ幅を設定する<br>\r\n * dygraphのdrawCallbackに設定する関数<br>\r\n * menuのRadio(F_SYNC)選択時に呼び出す関数（このためにクラスメソッド）\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.DrawCallback = function (g, is_initial) { // #50 #51\r\n    // 初期表示時は、メニューを設定しない\r\n    if (is_initial)\r\n        return;\r\n    // Filterメニューで指定されている F_SYNC の状態を取得する\r\n    var syncMode = Util.Config.Filter.getValueByKey(\"F_SYNC\"); // #59\r\n    // \"F_SYNC_UPPER\"かつ上段グラフ もしくは、\"F_SYNC_DETAIL\"かつ下段グラフのとき処理する\r\n    if ((syncMode === \"F_SYNC_UPPER\" && g.HJN === HJN.chart)\r\n            || (syncMode === \"F_SYNC_DETAIL\" && g.HJN === HJN.chartD)) {\r\n        // ｘ軸の幅をFilterメニューフェールドに反映する\r\n        setText(\"Filter.F_TIME_FROM\", Util.D2S(g.xAxisRange()[0],\r\n                \"yyyy/MM/dd hh:mm:ss.ppp\", true));\r\n        setText(\"Filter.F_TIME_TO\", Util.D2S(g.xAxisRange()[1],\r\n                \"yyyy/MM/dd hh:mm:ss.ppp\", true));\r\n        // ｙ軸(右)の幅をFilterメニューフェールドに反映する\r\n        setText(\"Filter.F_TAT_FROM\", +(g.yAxisRange(1)[0].toPrecision(4)));\r\n        setText(\"Filter.F_TAT_TO\", +(g.yAxisRange(1)[1].toPrecision(4)));\r\n    }\r\n\r\n    function setText(id, val) {\r\n        document.getElementById(id).value = val;\r\n        document.getElementById(id).onchange();\r\n    }\r\n};\r\n\r\n/**\r\n * グラフを初期化する\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.init = function () {\r\n    // メニューを作成する\r\n    Menu(this);\r\n    // 凡例を作成する\r\n    if (this.isVisiblity)\r\n        addLegend(this);\r\n    // 既にグラフがあるときは削除する\r\n    if (this.graph) {\r\n        this.graph.HJN = null; // （注：循環参照対策\r\n        this.graph.destroy();\r\n    }\r\n    // ウィンドウ枠に合わせて描画領域をリサイズするイベントを登録し、リサイズする\r\n    window.addEventListener(\"resize\", this.resize.bind(this));\r\n    // tablet回転時も、リサイズする #22\r\n    window.addEventListener(\"orientationchange\", this.resize.bind(this));\r\n    var resizes = document.getElementsByClassName(\"hjnResize\");\r\n    for (var i = 0; i < resizes.length; i++) {\r\n        resizes[i].addEventListener(\"change\", this.resize.bind(this)); // メニュ－の開閉\r\n        // #31\r\n    }\r\n\r\n    // legendを追加する（内部関数）\r\n    function addLegend(that) { // arg0 : this\r\n        var chartIdName = that.chartIdName;\r\n        var serieses = that.SERIESES;\r\n        var divLegend = document.getElementById(chartIdName + \"_legend\");\r\n        var formName = chartIdName + \"_LegendForm\";\r\n        var htmlText = '<form name=\"' + formName + '\">';\r\n        for (var i = 0; i < serieses.length; i++) {\r\n            var ckBox = serieses[i].visiblity ? 'checked=\"checked\"' : '';\r\n            htmlText += '<label class=\"legend\" style=\"background:'\r\n                        + serieses[i].color + ';\">' \r\n                    + '<input type=\"checkbox\" '\r\n                        + 'name=\"' + serieses[i].key + '\"' + 'onclick=\"'\r\n                        + that.globalName + '.onClickSetVisibility(' + i + ');\" '\r\n                        + ckBox + '>' \r\n                    + serieses[i].name \r\n                    + '</label><BR>';\r\n        }\r\n        htmlText += '</form>';\r\n        divLegend.innerHTML = htmlText;\r\n    }\r\n};\r\n\r\n/**\r\n * legendの表示指定をグラフに反映する(onclick呼出用）\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {index}\r\n *            i seriesSet配列の設定変更するグラフのインデックス\r\n */\r\nGraph.prototype.onClickSetVisibility = function (i) { //\r\n    var formName = this.chartIdName + \"_LegendForm\";\r\n    var ck = document[formName].elements[i].checked;\r\n    this.graph.setVisibility(i, ck);\r\n};\r\n\r\n/**\r\n * ウィンドウ枠に合わせて描画領域をリサイズする（dygraphは幅は自動、高さは指定）\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.resize = function () {\r\n    // 幅（メニューの状態に合わせて計算） #31\r\n    var dWidth = 0;\r\n    if (this.menuId.checked && !this.menuPlaceOnId.checked) {\r\n        dWidth = this.menuId.parentNode.clientWidth;\r\n    }\r\n    var width = window.innerWidth - dWidth;\r\n    this.windowId.style.width = width + \"px\";\r\n    // 高さ（ウィンドウサイズの比率(this.height)をかけて算出）\r\n    var height = Math.floor(window.innerHeight * this.height);\r\n    this.chartId.style.height = height + \"px\";\r\n\r\n    if (this.graph)\r\n        this.graph.resize(width, height);\r\n    return height;\r\n};\r\n\r\n/**\r\n * seriesSetを取り込む\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Obcjet}\r\n *            [tat] 応答時間(Turnaround time)の時系列データ管理クラス\r\n * @param {array}\r\n *            [seriesSet] tat内の応答時間の時系列データ管理配列\r\n */\r\nGraph.prototype.setSeriesSet = function (tat, seriesSet) { // #30\r\n    if(tat) {\r\n        this.seriesSet = tat.getSeriesSet();\r\n        this.cTpsUnit = tat.getCTpsUnit(); // #75\r\n    }\r\n    if(seriesSet){\r\n        this.seriesSet = seriesSet;\r\n    }\r\n    HJN.Tat.seriesConfig.forEach(function (e) {\r\n        this[e.key] = this.seriesSet[e.N];\r\n    }, this);\r\n};\r\n\r\n\r\n/**\r\n * データを変更し描画する\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {seriesSet}\r\n *            seriesSet dygraph用時系列データ配列\r\n * @param {Integer}\r\n *            n 選択されたグラフのseriesSet配列位置\r\n */\r\nGraph.prototype.update = function (seriesSet, n) {\r\n    // 指定データがあるとき取り込む\r\n    if (seriesSet) this.setSeriesSet(undefined, seriesSet);\r\n    // dygraph用表示データを作成する\r\n    var xy = [[{x:0,y:0}],[{x:0,y:0}],[{x:0,y:0}],[{x:0,y:0}]], // グラフデータの一覧（グラフ１本が配列要素）\r\n        idx = [], // グラフデータの処理中配列位置を保有する配列\r\n        x = [], // グラフデータの処理中配列のｘ(時刻)の値を保有する配列\r\n        row = [], // dygraph１レコードワーク配列：（[x,y0,y1...]の配列）の一レコード分を保持する配列\r\n        minX = 0,\r\n        i = 0; // グラフ番号用ワーク\r\n    // 表示対象データがないとき空データのdygraphを表示する #72\r\n    if (this.seriesSet.length === 0) {\r\n        var cols = [0]; // 日時（ミリ秒）\r\n        for (i = 0; i < this.SERIESES.length; i++) cols[i+1] = null;\r\n        this.dyData = [cols];\r\n        if (this.graph) {\r\n            // 既にグラフがあるときはデータのみ変更する（注：ここでdestroy()すると下段のpointClickCallback時にエラー）\r\n            this.graph.updateOptions( {\r\n                file : this.dyData\r\n            } );\r\n            this.graph.resetZoom(); // #51\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    // xy[] に処理対象seriesを指定する\r\n    for (i = 0; i < this.SERIESES.length; i++) {\r\n        xy[i] = this.seriesSet[this.SERIESES[i].N];\r\n        idx[i] = 0;\r\n    }\r\n    // dygraph表示時間帯を設定する（上段グラフは全期間が処理対象）\r\n    var xRangeMin = Number.MIN_VALUE;\r\n    var xRangeMax = Number.MAX_VALUE;\r\n    var xRangeUnit = Util.Config.DetailGraph.getConfig(\"D_UNIT\"); // #61\r\n    if (HJN.chartD === this) { // 詳細（下段グラフ）のとき画面で指定された期間を設定する // ミリ秒\r\n        var detailRangePlus = Util.Config.DetailGraph.getConfig(\"D_RANGE_PLUS\"); // #27\r\n        var detailRangeMinus = Util.Config.DetailGraph.getConfig(\"D_RANGE_MINUS\");\r\n        var detailRangeUnit = Util.Config.DetailGraph.getConfig(\"D_UNIT\");\r\n        var detailDateTime = Util.Config.DetailGraph.getConfig(\"D_TIME\");\r\n        if ((n === HJN.Tat.ETPS.N || n === HJN.Tat.EMPS.N || n === HJN.Tat.EAPS.N)  // #57\r\n                && xRangeUnit < TimeSeries.Tat.CYCLE){ // #61\r\n            var dt = Math.floor(detailDateTime / TimeSeries.Tat.CYCLE) * TimeSeries.Tat.CYCLE;\r\n            xRangeMin = dt - detailRangeMinus * detailRangeUnit;\r\n            xRangeMax = dt + detailRangePlus * detailRangeUnit;\r\n        } else { // undefined, HJN.Tat.CTPS.N, HJN.Tat.CONC.N,\r\n                    // HJN.Tat.STAT.N, HJN.Tat.ETAT.N\r\n            var dt = Math.floor(detailDateTime / xRangeUnit) * xRangeUnit; // #61\r\n            xRangeMin = dt - detailRangeMinus * detailRangeUnit; // #48\r\n            xRangeMax = dt + detailRangePlus * detailRangeUnit; // #48\r\n        }\r\n    }\r\n\r\n    // dygraph用arrayを空にする\r\n    this.dyData = [];\r\n\r\n    // 指定範囲の先頭が秒単位の端数のとき、dygraph用arrayに、先頭ワークデータを登録する #3\r\n    var xVal = Math.floor(xRangeMin / 1000) * 1000;\r\n    if (Number.MIN_VALUE < xRangeMin && xRangeMin !== xVal) { // 範囲指定（＝下段）\r\n        var firstRow = [ xRangeMin ]; // 先頭はx（時刻）\r\n        xy.forEach(function (xyData, i) {\r\n            // 秒間最大値系のyは最大値or０を、他はnullを設定する\r\n            var yVal = null;\r\n            if (this.SERIESES[i].key === HJN.Tat.CTPS.key) {\r\n                // 始端時刻を含む秒の値（最大値）を、始端時刻にセットする\r\n                var j = Util.binarySearch(xVal, xyData, function (e) {\r\n                    return e.x;\r\n                });\r\n                yVal = (0 <= j) ? xyData[j].y : 0;\r\n            }\r\n            firstRow.push(yVal);\r\n        }, this);\r\n        this.dyData.push(firstRow);\r\n    }\r\n\r\n    // dygraph用arrayに表示データを登録する\r\n    while (xy.some(function (e, i) {\r\n        return (idx[i] < e.length);\r\n    })) {\r\n        // dygraph１レコードワーク配列 を空にする\r\n        row = [];\r\n        // dygraph１レコードワーク配列 の先頭に、次に追加するｘ（時刻＝各ｘｙ処理位置が持つｘの最小値）を設定する\r\n        xy.forEach(function (e, i) {\r\n            x[i] = (idx[i] < e.length) ? e[idx[i]].x : Number.MAX_VALUE;\r\n        });\r\n        minX = x[0]; // minX = Math.min.apply(null, x);\r\n        for (i = 1; i < x.length; i++) {\r\n            if (x[i] < minX)\r\n                minX = x[i];\r\n        }\r\n        row.push(minX); // ミリ秒\r\n        // dygraph１レコードワーク配列 の２番目以降に、各ｘｙのｘを設定する\r\n        xy.forEach(function (e, i) {\r\n            if (e.length <= idx[i]) {\r\n                row.push(null); // 末尾を過ぎたｘｙのyはnull\r\n            } else if (e[idx[i]].x === minX) {\r\n                // ｘｙのｘ(e[idx[i]].x)が、出力するｘ(minX)と同じとき、ｙを設定し、ｘｙの処理位置(idx[i])を次に進める\r\n                row.push(e[idx[i]].y);\r\n                idx[i]++;\r\n            } else {\r\n                row.push(null); // xと ｘｙのｘが異なる場合 null\r\n            }\r\n        });\r\n        // dygraph用arrayに、編集したdygraph１レコードワーク配列 を登録する\r\n        if (xRangeMin <= minX && minX <= xRangeMax) {\r\n            this.dyData.push(row);\r\n        }\r\n    }\r\n    // 指定範囲の先頭が秒単位の端数のとき、dygraph用arrayに、末尾ワークデータを登録する #3\r\n    if (xRangeMax < Number.MAX_VALUE && // 範囲指定（＝下段）\r\n    xRangeMax !== Math.floor(xRangeMax / 1000) * 1000) {\r\n        var lastRow = [ xRangeMax ]; // 先頭はx（時刻）\r\n        xy.forEach(function (e, i) { // 秒間最大値系のyは始端：最大値、終端：０を、他はnullを設定\r\n            lastRow.push((this.SERIESES[i].key === HJN.Tat.CTPS.key) ? 0 : null);\r\n        }, this);\r\n        this.dyData.push(lastRow);\r\n    }\r\n\r\n    Util.Logger.ShowLogText(\"[7:dygraph data created] \"\r\n            + this.dyData.length + \" rows\", \"calc\");\r\n\r\n    // グラフの設定\r\n    var visibility = [];\r\n    if (this.isVisiblity) {\r\n        // visiblity指定できるとき画面の表示指定を取り込む\r\n        var inputs = document[this.chartIdName + \"_LegendForm\"];\r\n        for (i = 0; i < this.SERIESES.length; i++) {\r\n            visibility.push(inputs[this.SERIESES[i].key].checked);\r\n        }\r\n    } else {\r\n        // visiblity指定できないとき、デフォルト設定を取り込む\r\n        for (i = 0; i < this.SERIESES.length; i++) {\r\n            visibility.push(this.SERIESES[i].visiblity);\r\n        }\r\n    }\r\n\r\n    // グラフの作成\r\n    if (this.graph) {\r\n        // 既にグラフがあるときはデータのみ変更する（注：ここでdestroy()すると下段のpointClickCallback時にエラー）\r\n        this.graph.updateOptions( {\r\n            file : this.dyData\r\n        } );\r\n        this.graph.resetZoom(); // #51\r\n    } else {\r\n        // グラフが無いときは新規作成する\r\n        this.graph = new Dygraph(this.chartId, this.dyData, {\r\n            height : this.resize(),\r\n            labels : this.labels,\r\n            title : this === HJN.chart ? '' : '', // タイトル\r\n            titleHeight : 10, // タイトルの高さ＆フォントサイズ（デフォルト18px)\r\n            legend : 'always', // 'follow', //\r\n            showLabelsOnHighlight : false, // 効果不明\r\n            // labelsDiv : document.getElementById(HJN.chartName + 'Labels'), //\r\n            // ラベル表示先の変更\r\n            labelsSeparateLines : false,\r\n            // legendFormatter: this.legendFormatter, // コメントアウトでlegendが非表示\r\n            axes : {  // 軸の設定\r\n                x : { // X軸の設定\r\n                    axisLabelFormatter : xAxisLabelFormatter, // ラベル表示文字列編集関数\r\n                    axisLabelWidth : 100        // X軸ラベルの表示幅（幅が不足すると文字が切れる）\r\n                },\r\n                y : { // Y2（左）軸の設定\r\n                    independentTicks : true,    // 目盛合わせ（falseはY2軸に合わせる）\r\n                    axisLabelWidth : 40,        // ラベル表示幅\r\n                    // axisLineColor : 'rgb(0,0,0)',// 軸の色\r\n                    // axisLabelFontSize : 14, // ラベルのフォントサイズ(デフォルト:14)\r\n                    logscale : false            // 対数軸\r\n                },\r\n                y2 : { // Y2（右）軸の設定\r\n                    axisLabelFormatter : yAxisLabelFormatter, // ラベル表示文字列編集関数\r\n                    independentTicks : true,    // 目盛合わせ（falseはY1軸に合わせる）\r\n                    axisLabelWidth : 65,        // ラベル表示幅\r\n                    drawGrid : true,            // 横罫線\r\n                    gridLinePattern : [ 1, 2 ], // 罫線形状（破線）\r\n                    logscale : false            // 対数軸\r\n                }\r\n            },\r\n            includeZero : true,\r\n            // axisLabelFontSize: 10,\r\n            axisLineColor : 'rgba(0, 0, 0, 0.2)',\r\n            gridLineColor : 'rgba(0, 0, 0, 0.2)',\r\n            strokeWidth : 2,\r\n            pointSize : 3,\r\n            ylabel: 'Number of transactions',\r\n            y2label : 'Sec', // this === HJN.chart ? '' : 'Sec',\r\n            // rollPeriod: 7,\r\n            // errorBars: true,\r\n            // showRangeSelector: true\r\n            // drawPointCallback: drawPointCallback,\r\n            drawHighlightPointCallback : drawHighlightPointCallback,\r\n            highlightCircleSize : 3,\r\n            highlightCallback : highlightCallback,\r\n            pointClickCallback : pointClickCallback,\r\n            annotationClickHandler : annotationClickHandler,\r\n            annotationDblClickHandler : annotationDblClickHandler,\r\n            // clickCallback: clickCallback,\r\n            drawCallback : Graph.DrawCallback, // #50 #51\r\n            highlightSeriesOpts : {\r\n            // strokeWidth: 3,\r\n            // strokeBorderWidth: 1,\r\n            // highlightCircleSize: 5\r\n            },\r\n            series : this.dySeries,\r\n            labelsKMB : true,\r\n            visibility : visibility,\r\n            interactionModel: { // #22\r\n                mousedown: Dygraph.defaultInteractionModel.mousedown,\r\n                willDestroyContextMyself: true,\r\n                // touchstart: function(){}, 空functionと未登録は同じ効果\r\n                // touchmove: function(){},\r\n                // touchend: function(){},\r\n                dblclick: Dygraph.defaultInteractionModel.dblclick\r\n            },\r\n            animatedZooms : true, // ズームするときのアニメーション有無（デフォルト:false）\r\n            connectSeparatedPoints : true\r\n        });\r\n        // dygraphイベント処理でHJJを取れるように（注：循環参照）\r\n        this.graph.HJN = this;\r\n        // スマフォ対応 #22\r\n        Util.TouchPanel.DispatchEventTouchToMouse(this.graph.canvas_);\r\n        Util.TouchPanel.DispatchEventTouchToMouse(this.graph.canvas_ctx_.canvas);\r\n    }\r\n    // zoom reset ボタン追加 #22\r\n    // this.addIcon_ZoomReset(); #78 グラフ毎から全体で一つに変更に伴いcall停止\r\n    Util.Logger.ShowLogText(\"[8:dygraph showen] \", \"calc\");\r\n\r\n    // 初期表示の不活性グラフの設定\r\n    function xAxisLabelFormatter(d, gran, opts) {\r\n        // return Dygraph.dateAxisLabelFormatter(new Date(d), gran, opts); #63\r\n        var isTop = (this.xAxisRange()[0] === d);\r\n        var format = \"\";\r\n        var diffTime = this.xAxisRange()[1] - this.xAxisRange()[0];\r\n        if (diffTime < 60000) { \r\n            format = isTop ? \"hh:mm:ss.ppp\" : \"ss.ppp\";\r\n        } else if (diffTime < 86400000) { // 1日未満\r\n            format = \"hh:mm:ss\";\r\n        } else if (diffTime < 31536000000) { // 365日未満\r\n            format = isTop ? \"yyyy/MM/dd\": \"MM/dd hh\";\r\n        } else { // 365日以上\r\n            format = \"yyyy/MM/dd\";\r\n        }\r\n        return Util.D2S(d,format,true);\r\n    }\r\n    function yAxisLabelFormatter(d, gran, opts) { // #63\r\n        var range = this.yAxisRanges()[1];\r\n        var format = \"\";\r\n        var diff = range[1] - range[0];\r\n        if (diff < 300000) { // 300秒未満\r\n            return \"\" + d / 1000;\r\n        } else if (diff < 86400000) { // 1日未満\r\n            return Util.D2S(d, \"hh:mm:ss\", true);\r\n        } else if (diff < 172800000) { // 2日未満\r\n            var hours = Math.ceil(d / 3600000) + \":\";\r\n            return hours + Util.D2S(d, \"mm:ss\", true);\r\n        } else { // 2日以上\r\n            var days = Math.ceil(d / 86400000) + \" days+\";\r\n            var time = Util.D2S(d, \" hh:mm:ss\", false);\r\n            return (d < 172800000) ? time : days; // 2日未満？\r\n        }\r\n    }\r\n\r\n    // 再描画する\r\n    this.showBalloon();\r\n    Util.Logger.ShowLogText(\"[9:balloon showen] \", \"calc\");\r\n\r\n    // updateメソッド内部関数宣言\r\n    // 点がハイライトになったときの描画処理（内部関数宣言） g:{dygraph} HJN.chartD.graph\r\n    function drawHighlightPointCallback(g, name, ctx, cx, cy, color, r, idx) {\r\n        // file dropのとき、新グラフデータに更新後に、旧グラフのidx値が引き渡されたとき 処理しない #12\r\n        if (!g.rawData_ || g.rawData_.length - 1 < idx)\r\n            return;\r\n        var x = g.rawData_[idx][HJN.Tat.CONC.N]; // 選択されている点(時刻)のCONCのxの値（無いときundefined)\r\n        var eTat = HJN.chart.eTat;\r\n        var sTat = HJN.chart.sTat;\r\n        var n = 0;\r\n\r\n        // ETAT,STATのときlogレコードを表示する #28\r\n        if ((name === HJN.Tat.STAT.key || name === HJN.Tat.ETAT.key)\r\n                && typeof x != 'undefined') { // #41\r\n            // eTatの配列位置をを求める\r\n            if (name === HJN.Tat.ETAT.key) {\r\n                // ETATのとき、終了時刻(x)からeTatの配列位置(n)を検索する\r\n                n = Util.binarySearch(x, eTat, \r\n                                    function (e) { return e.x; });\r\n            } else {\r\n                // STATのとき、開始時刻(x)からsTatの配列位置(sTatN)を検索し、sTatからeTatの配列位置を取得する\r\n                var sTatN = Util.binarySearch(x, sTat, \r\n                                    function (e) { return e.x; });\r\n                n = sTat[sTatN].eTatIdx;\r\n            }\r\n            // ログデータを表示し、線を引く\r\n            if (0 <= n) {\r\n                var e = eTat[n];\r\n                // ログデータを表示する\r\n                document.getElementById(\"lineViewer\").innerHTML =\r\n                            this.HJN.fileParser.getRecordAsText(e); // #62\r\n                // 線を引く #30\r\n                drawTatLine(ctx, e.x, e.y, 2, color);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n\r\n        // CONCのとき同時処理の線を引く\r\n        if (name === HJN.Tat.CONC.key && typeof eTat.tatMap != 'undefined') { // #17\r\n            // #41\r\n            // 指定時刻に動いているeTatの一覧(trans)を取得する\r\n            var trans = eTat.tatMap.search(x, x, 1000); // #18\r\n            // 以前に選択した線を消す\r\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            // 同時処理の線を引く\r\n            if (0 <= i && 0 < trans.length) {\r\n                // TRANS分の線を引く\r\n                trans.forEach(function (e) {\r\n                    drawTatLine(ctx, e.x, e.y, 1, HJN.Tat.CONC.color);\r\n                });\r\n            }\r\n            ctx.stroke();\r\n        }\r\n\r\n        // 選択点の点と数値を表示する\r\n        var val = \"\";\r\n        var time = \"\";\r\n        if (0 <= idx) {\r\n            time = g.rawData_[idx][0]; // #60\r\n            val = name ? g.rawData_[idx][g.setIndexByName_[name]] : \"\";\r\n            // valが時間のとき、 時間表記に文字列編集する\r\n            if (name === HJN.Tat.STAT.key || name === HJN.Tat.ETAT.key \r\n                    || name === HJN.Tat.EMPS.key || name === HJN.Tat.EAPS.key) {\r\n                val = Util.D2S(val);\r\n            }\r\n        }\r\n        drawPoint(ctx, cx, cy, r, color, val, time);\r\n        // 縦線を引く\r\n        drawLine(ctx, [ {\r\n            x : cx,\r\n            y : 0\r\n        }, {\r\n            x : cx,\r\n            y : ctx.canvas.height\r\n        } ], 1, \"rgba(127,127,127,0.5)\", [ 1, 2 ]);\r\n\r\n        // drawHighlightPointCallback 内部関数宣言\r\n        // TAT線を表示する（内部関数）\r\n        function drawTatLine(ctx, x, y, heigth, color) {\r\n            // isXend指定の始点(false)／終点（true)に合わせて、線の座標を求める\r\n            var tXs = g.toDomXCoord(x - y), // ミリ秒\r\n            tXe = g.toDomXCoord(x), // ミリ秒\r\n            tY = g.toDomYCoord(y, 1); // 第二軸:1\r\n            drawLine(ctx, [ {\r\n                x : tXs,\r\n                y : tY\r\n            }, {\r\n                x : tXe,\r\n                y : tY\r\n            } ], heigth, color);\r\n            drawPoint(ctx, tXs, tY, r, HJN.Tat.STAT.color);\r\n            drawPoint(ctx, tXe, tY, r, HJN.Tat.ETAT.color);\r\n        }\r\n\r\n        // 線を表示する（内部関数）\r\n        function drawLine(ctx, plots, r, color, lineDashSegments) {\r\n            ctx.beginPath();\r\n            ctx.lineWidth = r;\r\n            ctx.lineCap = \"round\";\r\n            ctx.strokeStyle = color;\r\n            if (lineDashSegments)\r\n                ctx.setLineDash(lineDashSegments); // lineDashは[num]\r\n            ctx.moveTo(plots[0].x, plots[0].y);\r\n            plots.forEach(function (p) {\r\n                ctx.lineTo(p.x, p.y);\r\n            });\r\n            ctx.stroke();\r\n        }\r\n\r\n        // 点を表示する（内部関数）\r\n        function drawPoint(ctx, cx, cy, r, color, val, time) {\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = color;\r\n            ctx.fillStyle = color;\r\n            ctx.arc(cx, cy, r, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            var text = \"\";\r\n            if (val || time) {\r\n                if (typeof(val) === \"number\") {\r\n                    text += Math.round(val * 10) / 10;\r\n                } else if (typeof(val) === \"string\") { // #60\r\n                    text += val;\r\n                }\r\n                if (val && time) text += \" \";\r\n                if (time) text += \"[\" + Util.D2S(time, \"hh:mm:ss.ppp\", true) + \"]\"; // #60\r\n                ctx.beginPath();\r\n                ctx.fillStyle = color.replace(/\\,[\\s\\.0-9]*\\)/,\",1)\"); // #60\r\n                ctx.textAlign = \"left\"; // \"rigth\" \"center\" #60\r\n                ctx.fillText(text, cx, cy - 12);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 点がハイライトになったときの処理（内部関数宣言）\r\n    function highlightCallback(e, x, pts, row, seriesName) {\r\n        // マウスクリック用に座標をHJN.hoverXYに退避する\r\n        HJN.hoverXY = {\r\n            x : x,\r\n            pts : pts,\r\n            row : row,\r\n            seriesName : seriesName\r\n        };\r\n    }\r\n\r\n    // 点をクリックしたときの処理(内部関数宣言）\r\n    function pointClickCallback(event, p) {\r\n        if (!p.annotation)\r\n            HJN.Plot.PointClickCallback(p);\r\n    }\r\n\r\n    // アノテーション（グラフ中の吹出し）をクリックしたときの処理(内部関数宣言）\r\n    function annotationClickHandler() { // annotation, p, dygraph, event\r\n        HJN.Plot.PointClickCallback(arguments[1]);\r\n    }\r\n\r\n    // アノテーション（グラフ中の吹出し）をダブルクリックしたときの処理(内部関数宣言）\r\n    function annotationDblClickHandler() { // annotation, p, dygraph, event\r\n        // 指定ポイントを削除する\r\n        HJN.Plot.PointDblClickCallback(arguments[1]);\r\n    }\r\n\r\n    // グラフをクリックしたときの処理(内部関数宣言）\r\n    // function clickCallback(e, x, pts) {}\r\n};\r\n\r\n/**\r\n * dygraphのBalloonを再描画する\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.showBalloon = function () {\r\n    if (this.cTps.length === 0)\r\n        return; // ctpsが空の時何もしない\r\n\r\n    var ann = {\r\n        series : \"\",\r\n        xval : 0,\r\n        shortText : \"\",\r\n        text : \"\"\r\n    }, anns = [];\r\n    // 表示時間帯を求める\r\n    var ctps = this.cTps, minX = ctps[0].x, maxX = ctps[ctps.length - 1].x;\r\n    // アノテーションをdygparhに追加する\r\n    HJN.Plot.List.forEach(function (e) {\r\n        if (minX <= e.x && e.x <= maxX) {\r\n            ann = {\r\n                series : HJN.Tat.seriesConfig[e.n].key,\r\n                xval : e.x, // ミリ秒\r\n                shortText : e.y,\r\n                text : e.label\r\n            };\r\n            anns.push(ann);\r\n            // 詳細Plot＆詳細グラフデータが無いとき、詳細Plot内のTPS Plotを追加する #7\r\n            if (\"tpsPlot\" in e) { // 詳細plotのとき\r\n                if (this.SERIESES.findIndex(function (s) {\r\n                    return s.N === e.n;\r\n                }) < 0) { // 詳細グラフデータが無いとき\r\n                    ann = {\r\n                        series : HJN.Tat.seriesConfig[e.tpsPlot.n].key,\r\n                        xval : e.tpsPlot.x, // ミリ秒\r\n                        shortText : e.tpsPlot.y,\r\n                        text : e.tpsPlot.label\r\n                    };\r\n                    anns.push(ann);\r\n                }\r\n            }\r\n        }\r\n    }, this);\r\n    // dygraphの残描画処理が完了してからアノテーションをセットする\r\n    this.graph.ready(function () {\r\n        this.setAnnotations(anns);\r\n    });\r\n};\r\n\r\n/**\r\n * dygraphのlegendを編集する(dygraph オプション登録用関数）\r\n * {@link http://dygraphs.com/options.html#legendFormatter}\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {ETAT}\r\n *            data [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]\r\n * @return {string} dygraphのlegendに表示する文字（HTML)\r\n */\r\nGraph.prototype.legendFormatter = function (data) {\r\n    // legend: 'always'指定のとき、マウスがグラフ外にあると dataに値が設定されていなことを考慮\r\n    var html = (typeof data.x === \"undefined\") ? '' : Util.DateToString(\r\n            new Date(data.xHTML), \"yyyy/MM/dd hh:mm:ss.ppp\");\r\n    html = '<label class=\"datetime\">' + html + '</label>';\r\n    data.series\r\n            .forEach(function (series) {\r\n                if (!series.isVisible)\r\n                    return;\r\n                var val = (typeof series.yHTML === \"undefined\") ? \"\"\r\n                        : series.yHTML, text = '<label '\r\n                        + getStyle(series.label)\r\n                        + '\">'\r\n                        + \"&nbsp;\"\r\n                        + series.labelHTML\r\n                        + ':'\r\n                        + ('####' + val.replace(/\\.[0-9]*/, \"\")).slice(-4)\r\n                                .replace(/#/g, \"&nbsp;\") + '</label>';\r\n                html += series.isHighlighted ? '<b>' + text + '</b>' : text;\r\n                html += '&nbsp;';\r\n            });\r\n    return html;\r\n    // keyに設定された色指定するstyle文字列を取得する（legendFormatter内部関数宣言）\r\n    function getStyle(key) {\r\n        var i = HJN.Tat.seriesConfig.findIndex(function (e) {\r\n            return (e.key === key);\r\n        });\r\n        return 'style=\"background:' + HJN.Tat.seriesConfig[i].color + ';';\r\n    }\r\n};\r\n\r\n\r\n\r\n/**\r\n * メニュー機能：CSVデータファイルを開く\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {evt}\r\n *            evt ファイルオープンイペント\r\n */\r\nGraph.prototype.menuOpenCsv = function (evt) {\r\n    var file_list = evt.target.files;\r\n    // 指定されたファイルを処理する\r\n    HJN.init.FileReader(file_list);\r\n};\r\n\r\n/**\r\n * メニュー機能：画面設定をJSON形式のセーブファイルとしてダウンロードする\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuSaveConfig = function (menuId, fileName) {\r\n    // plotsをjsonに変換する\r\n    var save = {\r\n        \"HJN.Plot.List\" : HJN.Plot.List,\r\n        \"HJN.Config.File\" : HJN.Config.File.__config, // #76\r\n        \"HJN.Config.Filter\" : HJN.Config.Filter.__config\r\n    };\r\n    var json = JSON.stringify(save, null, 4);\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(this.menuBuffToBlob(json), menuId, fileName);\r\n};\r\n/**\r\n * メニュー機能：JSON形式の画面設定ファイルをロードし画面表示に反映する TODO\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ？\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名 ？\r\n */\r\nGraph.prototype.menuLoadConfig = function (evt) { // #10\r\n    // 指定されたファイルを開く\r\n    var files = evt.target.files;\r\n    for (var i = 0; i < files.length; i++) { // データを順番に取得する\r\n        try {\r\n            // ファイルを取得する\r\n            var file = files[i];\r\n            // ログ出力用にファイル名（サイズ）を編集する\r\n            if (10000 < file.size) {\r\n                var msg = \"Too large(>10KB) \" + file.name + \" [\" + file.size\r\n                        + \"byte]\";\r\n                Util.Logger.ShowText([ \"<mark>\" + msg + \"</mark>\" ]);\r\n                return;\r\n            }\r\n            // ファイルの読み込みに成功したら、その内容をドロップエリアに追記して表示する\r\n            var reader = new FileReader();\r\n            reader.onloadend = funcOnloadend.bind(this, files[i], i);\r\n            // ファイルにArrayBufferで参照を取得する（onloadendイベントを起こす）\r\n            reader.readAsArrayBuffer(files[i]);\r\n        } catch (e) {\r\n            // 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n            var msg = \"The \" + i + \"th dropped object is not a file\";\r\n            Util.Logger.ShowText([ \"<mark>\" + msg + \"</mark>\" ]);\r\n            console.error(\"[%o]%o\", msg, e);\r\n        }\r\n    }\r\n\r\n    // 内部関数：ファイルを読み込み後の処理（指定ファイルを読み込んだ後に呼び出される）\r\n    function funcOnloadend(file, i, evt) {\r\n        if (evt.target.readyState === FileReader.DONE) {\r\n            // ファイルからjsonを読み込む\r\n            var filesArrayBuffer = evt.target.result;\r\n            var buf = new Uint8Array(filesArrayBuffer);\r\n            var json = String.fromCharCode.apply(null, buf);\r\n            alert(json);\r\n            var jsonObj = JSON.parse(json);\r\n\r\n            // jsonからHJN.chartD.fileParserに登録されているConfig の定義を作成する\r\n            var conf = jsonObj[\"HJN.chart.fileParser\"];\r\n            HJN.chart.fileParser._config_File.__config = conf;\r\n            var confD = jsonObj[\"HJN.chartD.fileParser\"];\r\n            HJN.chartD.fileParser._config_File.__config = confD;\r\n\r\n            // jsonからHJN.Plot.Listを作成する\r\n            var tmpPlots = jsonObj[\"HJN.Plot.List\"];\r\n            var plots = [];\r\n            // フォーマットに合致する項目のみ抽出する\r\n            if (isSameType([], tmpPlots)) { // 最上位が配列\r\n                tmpPlots.forEach(function (e) { // 2層目がオブジェクト\r\n                    if (isSameType(0, e.x))\r\n                        plots.push(e);\r\n                });\r\n            }\r\n            if (0 < plots.length) {\r\n                HJN.Plot.List = plots;\r\n            }\r\n            HJN.Plot.Render();\r\n            // グラフ内の吹き出しを再表示する\r\n            HJN.Plot.ShowBalloon();\r\n\r\n            // 型判定\r\n            function isSameType(sample, obj) {\r\n                var clas0 = Object.prototype.toString.call(sample);\r\n                var clas1 = Object.prototype.toString.call(obj);\r\n                return clas0 === clas1;\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * メニュー機能：メニューで指定されたフィルタの条件で再描画する\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuFilterApply = function () { // #34\r\n    if (HJN.files && HJN.files.length === 0) {\r\n        // 自動生成データのグラフを表示しているとき\r\n        HJN.init.ChartShow(HJN.chart.eTatOriginal)\r\n    } else {\r\n        // ファイル指定のグラフを表示しているとき\r\n        HJN.init.FileReader(HJN.files);\r\n    }\r\n};\r\n/**\r\n * メニュー機能：フィルタ条件を初期値にし、再描画する\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuFilterReset = function () { // #34\r\n    TimeSeries.MenuConfigFilter.reset();\r\n};\r\n\r\n/**\r\n * メニュー機能：シミュレータ 指定JSONでシミュレートする\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuSimulatorSimulate = function () { // #53\r\n    // グラフを再生成する\r\n    Util.Logger.ResetTimestamp(); // #79\r\n    var json = document.getElementById(\"SimulatorEditor\").value;\r\n    HJN.files = []; // #61\r\n    HJN.Plot.List = [];\r\n    CreateSampleTatLogAndChartShow(json);\r\n\r\n};\r\n/**\r\n * メニュー機能：シミュレータ JSON入力エリアを広げる\r\n *\r\n */\r\nGraph.prototype.menuSimulatorEditor = function () { // #53\r\n    var divSimulator = document.getElementById(\"Simulator\");\r\n    var divSimulatorEditor = document.getElementById(\"SimulatorEditor\");\r\n    if (divSimulator.style.height === \"100%\") { // #60\r\n        // 開いているとき、textareaの親を閉じる\r\n        divSimulator.style.visibility = \"hidden\"; // #79\r\n        divSimulator.style.height = \"0\";\r\n        divSimulator.style.width = \"190px\";\r\n    } else{ // 閉じているとき\r\n        // textareaを一度閉じる（textareaが大きいとき親が大きくなりスクロールが出るため）\r\n        divSimulatorEditor.style.height = \"0\";\r\n        // textareaの親を開く\r\n        divSimulator.style.height = \"100%\";\r\n        divSimulator.style.width = \"70%\";\r\n//        divSimulatorEditor.style.height = (divSimulator.scrollHeight - 10) + \"px\";\r\n        divSimulatorEditor.style.height = divSimulator.clientHeight + \"px\";\r\n        divSimulator.style.visibility = \"visible\"; // #79\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * メニュー機能：canvas画像をファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadImg = function (menuId, fileName) {\r\n    var type = 'image/png';\r\n    // canvas から DataURL で画像を出力\r\n    var canvas = this.chartId.getElementsByTagName('canvas')[0], dataurl = canvas\r\n            .toDataURL(type);\r\n    // DataURL のデータ部分を抜き出し、Base64からバイナリに変換\r\n    var bin = atob(dataurl.split(',')[1]);\r\n    // Uint8Array ビューに 1 バイトずつ値を埋める\r\n    var buffer = new Uint8Array(bin.length);\r\n    for (var i = 0; i < bin.length; i++) {\r\n        buffer[i] = bin.charCodeAt(i);\r\n    }\r\n    // Uint8Array ビューのバッファーを抜き出し、それを元に Blob を作る\r\n    var blob = new Blob([ buffer.buffer ], {\r\n        type : type\r\n    });\r\n    // var url = window.URL.createObjectURL(blob);\r\n\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(blob, menuId, fileName);\r\n};\r\n\r\n/**\r\n * メニュー機能：グラフ全データをCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadCsv = function (menuId, fileName) {\r\n    var bom = new Uint8Array([ 0xEF, 0xBB, 0xBF ]), // Excel対応UTF8のBOMコード指定\r\n    csv = this.labels.join(','); // csvヘッダ行の作成\r\n    this.dyData.forEach(function (e) {\r\n        csv += \"\\r\\n\" + e.join(',');\r\n    }); // csvデータ展開\r\n    var blob = new Blob([ bom, csv ], {\r\n        \"type\" : \"text/csv\"\r\n    }); // blob変換\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(blob, menuId, fileName);\r\n};\r\n\r\n/**\r\n * メニュー機能：グラフ全データの編集元に該当するTATログの該当行をCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadLog = function (menuId, fileName) {\r\n    var eTat = this.eTat;\r\n    if (0 < eTat.length) { // 出力対象データがあるとき\r\n        if (typeof eTat[0].pos === \"undefined\") { // 生成データのとき\r\n            // 生成データをCSVに編集する\r\n            var eTatCsv = \"\";\r\n            var delimiter = '\"';\r\n            var separator = delimiter + Util.Config.File.getConfig(\"SEP\") + delimiter; // #76\r\n            eTat.forEach(function (e) {\r\n                eTatCsv += delimiter + Util.D2S(e.x, 'yyyy/MM/dd hh:mm:ss.ppp') + separator\r\n                        + e.y + separator + e.message + delimiter + '\\r\\n'; // #61\r\n            });\r\n            // ダウンロードする\r\n            this.menuDownloadBlob(this.menuBuffToBlob(eTatCsv), menuId,\r\n                    fileName);\r\n        } else { // ファイル読込のとき\r\n            // 出力データを元ファイルのpos順にソートする（改行コードのないファイル末尾レコートがある場合も最後に来るように） #45\r\n            eTat.sort(function (a, b) {\r\n                return a.pos - b.pos;\r\n            });\r\n            // 最大作業領域として元ファイルサイズの合計分のメモリを確保する #23\r\n            var maxSize = HJN.filesArrayBuffer.reduce(function (p, c) {\r\n                return p + c.byteLength + 2;\r\n            }, 0);\r\n            var buff = new Uint8Array(maxSize), offset = 0;\r\n            // ファイルの該当行を Uint8Arrayに登録する\r\n            eTat.forEach(function (e) {\r\n                buff.set(new Uint8Array(HJN.filesArrayBuffer[e.fileIdx], e.pos,\r\n                        Math.min(e.len + 2,\r\n                                HJN.filesArrayBuffer[e.fileIdx].byteLength\r\n                                        - e.pos)), offset);\r\n                offset += (e.len + 2);\r\n            });\r\n            // 未使用作業領域を削除する\r\n            var buff2 = new Uint8Array(buff.slice(0, offset));\r\n            // ダウンロードする\r\n            this.menuDownloadBlob(this.menuBuffToBlob(buff2), menuId, fileName);\r\n        }\r\n    } else { // 出力対象データがないとき\r\n        var str = \"No log in the time.\";\r\n        // ダウンロードする\r\n        this.menuDownloadBlob(this.menuBuffToBlob(str), menuId, fileName);\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー機能：plotsでconcが選択されているとき、同時処理に該当するTATログの該当行をCSVファイルとしてダウンロードする\r\n *\r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadConc = function (menuId, fileName) {\r\n    var plot = HJN.Plot.List.find(function (e) {\r\n        return e.radio;\r\n    });\r\n    if (plot.n === HJN.Tat.CONC.N || plot.n === HJN.Tat.STAT.N || plot.n === HJN.Tat.ETAT.N) {\r\n        // CONC|STAT|ETATが選択されているとき\r\n        var trans = this.eTat.tatMap.search(plot.x); // #18\r\n        if (0 < trans.length) { // 出力テキストを編集する\r\n            if (typeof trans[0].pos === \"undefined\") {\r\n                // 初期表示データのとき、CSVを編集する\r\n                // 生成データをCSVに編集する\r\n                var csv = \"\";\r\n                trans.forEach(function (e) {\r\n                    csv += Util.D2S(e.x, \"yyyy/MM/dd hh:mm:ss.ppp\") + \",\"\r\n                            + e.y + \"\\r\\n\";\r\n                });\r\n                // ダウンロードする\r\n                this.menuDownloadBlob(this.menuBuffToBlob(csv), menuId,\r\n                        fileName);\r\n            } else {\r\n                // ファイル読み込みの時、対象レコードを表示する\r\n                // 出力データを元ファイルのpos順にソートする（改行コードのないファイル末尾レコートがある場合も最後に来るように） #45\r\n                trans.sort(function (a, b) {\r\n                    return a.pos - b.pos;\r\n                });\r\n                // 最大作業領域として元ファイルサイズの合計分のメモリを確保する #23\r\n                var maxSize = HJN.filesArrayBuffer.reduce(function (p, c) {\r\n                    return p + c.byteLength + 2;\r\n                }, 0);\r\n                var buff = new Uint8Array(maxSize), offset = 0;\r\n                // ファイルの該当行を Uint8Arrayに登録する\r\n                trans.forEach(function (e) {\r\n                    buff.set(new Uint8Array(HJN.filesArrayBuffer[e.fileIdx],\r\n                            e.pos, Math.min(e.len + 2,\r\n                                    HJN.filesArrayBuffer[e.fileIdx].byteLength\r\n                                            - e.pos)), offset);\r\n                    offset += (e.len + 2);\r\n                });\r\n                // 未使用作業領域を削除する\r\n                var buff2 = new Uint8Array(buff.slice(0, offset));\r\n                // ダウンロードする\r\n                this.menuDownloadBlob(this.menuBuffToBlob(buff2), menuId,\r\n                        fileName);\r\n            }\r\n        }\r\n\r\n    } else { // CONCが選択されていないとき\r\n        var msg = \"抽出対象データがありません。空データがダウンロードされます\\r\\n\"\r\n                + \"conc：多重度（詳細）の点を選択した状態で行ってください\";\r\n        alert(msg);\r\n        this.menuDownloadBlob(this.menuBuffToBlob(msg), menuId, fileName);\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー共通機能：BinaryString, UintXXArray, ArrayBuffer をBlobに変換する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Object}\r\n *            arrayBuffer 変換元\r\n * @return {Blob}\r\n *            変換後\r\n */\r\nGraph.prototype.menuBuffToBlob = function (arrayBuffer) {\r\n    return new Blob([ arrayBuffer ], {\r\n        type : \"application/octet-stream\"\r\n    });\r\n};\r\n\r\n/**\r\n * メニュー共通機能：指定blobをファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Objcet}\r\n *            blob ダウンロードさせるblogデータ\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadBlob = function (blob, menuId, fileName) {\r\n    if (window.navigator.msSaveBlob) { // ie11以降のとき\r\n        window.navigator.msSaveBlob(blob, fileName);\r\n        // msSaveOrOpenBlobの場合はファイルを保存せずに開ける\r\n        window.navigator.msSaveOrOpenBlob(blob, fileName);\r\n    } else { // Chrome, FireFoxのとき\r\n        document.getElementById(menuId).href = window.URL.createObjectURL(blob);\r\n    }\r\n};\r\n\r\n/**\r\n * Zoomリセットアイコンを追加する\r\n *\r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.addIcon_ZoomReset = function () {\r\n    var divChart = this.chartId; // document.getElementById(\"Icons\");\r\n    var idName = this.chartIdName + \"Zoom\";\r\n    var input = document.getElementById(idName);\r\n    if (input !== null) { // 既にある場合削除する\r\n        var div = input.parentElement;\r\n        div.parentElement.removeChild(div);\r\n    }\r\n\r\n    if (divChart) {\r\n        var div = document.createElement('div');\r\n        var htmlText = '<input id=\"' + idName + '\" type=\"buttom\" class=\"hjnBoxSwitch hjnResize\" '\r\n                                + 'onClick=\"HJN.' + this.chartIdName + '.graph.resetZoom()\">'\r\n                     + '<label for=\"' + idName + '\" class=\"hjnCtrlBox\"><span></span></label>';\r\n        div.innerHTML = htmlText;\r\n        divChart.insertBefore(div, divChart.firstChild);\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Graph.js\n// module id = 1\n// module chunks = 0","/* ******1*********2*********3*********4*********5*********6*********7****** */\r\nimport * as Util from '../util/util.js';\r\nimport Tat from '../timeSeries/timeSeries-Tat.js';\r\n\r\n/** @namespace */\r\nexport var HJN = {};\r\nwindow.HJN = HJN; // #67\r\n\r\nHJN.init = {}; // 初期登録処理関連\r\nHJN.Config = HJN.Config || Util.Config; // #76\r\nHJN.Tat = Tat;\r\n\r\nHJN.chart = HJN.chartD = null;\r\nHJN.chartName = \"chart\";\r\n\r\nHJN.files = [];\r\nHJN.filesArrayBuffer = [];\r\n\r\nHJN.timer = {};\r\nUtil.Config(\"DetailGraph\").setValueByKey(\"D_TIME\", +(new Date()));  // 下段表示時刻 #27\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-HJN.js\n// module id = 4\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport * as TimeSeries from '../timeSeries/timeSeries.js';\r\nimport * as Simulator from '../simulator/simulator.js';\r\nimport {HJN} from './tatLogDiver-HJN.js';\r\nimport {Copyright} from \"./tatLogDiver-Copyright.js\";\r\nimport {Usage} from './tatLogDiver-Usage.js'; // #84\r\nimport Graph from './tatLogDiver-Graph.js';\r\nimport Plot  from './tatLogDiver-Plot.js';\r\nimport MenuConfigDetailGraph from './tatLogDiver-MenuConfigDetailGraph.js';\r\n\r\n\r\n/* *****1*********2*********3*********4*********5*********6*********7******* */\r\n/**\r\n * HTMLから呼び出すAPI\r\n * \r\n * @memberof Init\r\n * @param {string}\r\n *            [chartName=HJN.chartName=\"chart\"] グラフを作成するHTMLタグ名\r\n * @return {ETAT} 終了時刻のTAT（応答時間）時系列データ\r\n * @example <!doctype html> <html> <head> <meta charset=\"UTF-8\"> <link\r\n *          type=\"text/css\" rel=\"stylesheet\" href=\"../libs/dygraph.css\"> <link\r\n *          type=\"text/css\" rel=\"stylesheet\" href=\"./tatLogDiver.css\"> </head>\r\n *          <body> <div id=\"hjn_chart\"></div> <script src=\"../libs/dygraph.js\"></script>\r\n *          <script src=\"../libs/extras/synchronizer.js\"></script> <script\r\n *          type=\"module\"> import {HJN_init_ChartRegist} from\r\n *          \"./tatLogDiver-Init.js\";\r\n *          window.addEventListener(\"DOMContentLoaded\",function(eve){\r\n *          Bundle(\"chart\"); // チャートを作成する }); </script> </body> </html>\r\n */\r\nexport default function Init(chartName){ // #70\r\n\t// 引数１ ：デフォルトHJN.chartName(\"chart\")\r\n\tHJN.chartName = chartName = chartName || HJN.chartName;\r\n\t// タイトルを設定する #57\r\n\tdocument.title = \"tat log diver \" + Copyright.Version; \r\n\t// htmlを作成する #52\r\n\tvar html_chart = document.getElementById(\"hjn_\" + chartName) || document.body;\r\n\thtml_chart.innerHTML = ''\r\n\t    + '<div id=\"' + chartName + '\"></div>'\r\n        + '<div id=\"' + chartName + 'D\"></div>'\r\n    // CONCデータ表示領域 #78\r\n        + '<div class=\"lineViewer hjnDraggableBox hjnCode\" >' // #79\r\n        + '<div id=\"lineViewer\" readonly>logdata</div></div>';\r\n\t// 手前にメニュ－用htmlを作成する #52\r\n\tvar html_nav = document.createElement('nav');\r\n\thtml_nav.innerHTML = ''\r\n\t    + '<header>'\r\n        // シミュレータ JSON Edit画面 領域 #53\r\n        + '<div id=\"Simulator\" class=\"hjnDraggableBox\" style=\"visibility:hidden\"></div>'\r\n        // ハンバーガーメニュー 領域\r\n        + '<div class=\"hjnBurgerTray\">'\r\n            // ステータスバー（ログ表示）領域\r\n        +   '<div class=\"statusbar hjnDraggableBox\">'\r\n        +   '<iframe id=\"fileInfo\" style=\"height:100%;\"></iframe></div>' // #79\r\n            // ×ボタン\r\n        +   '<input id=\"hjnBoxBuger\" type=\"checkbox\" class=\"hjnBurger hjnResize\" checked=\"checked\" />'\r\n        +     '<label for=\"hjnBoxBuger\" class=\"hjnCtrlBox\"><span></span></label>'\r\n        // グラフZoomリセットボタン #78\r\n        +     '<input id=\"chartZoom\" type=\"buttom\" class=\"hjnBoxSwitch hjnResize\" '\r\n        +     'onClick=\"HJN.init.ResetStyle();\" />'\r\n        +       '<label for=\"chartZoom\" class=\"hjnCtrlBox\"><span></span></label>'\r\n            // メニュー上部タイトル\r\n        +   '<div class=\"hjnBurgerTitle\">'\r\n                // メニューオーバレイモード変更 ボタン\r\n        +     '<input id=\"hjnBoxPlaceOn\" type=\"checkbox\" class=\"hjnBoxSwitch hjnResize\" />'\r\n        +       '<label for=\"hjnBoxPlaceOn\" class=\"hjnCtrlBox\"><span></span></label>'\r\n                // メニュー上部テキスト 領域\r\n        +     '<p>'\r\n                    // ツール名称＆JSDocリンク\r\n        +       '<a class=\"hjnLabel4Input\" href=\"../jsdoc/index.html\" '\r\n        +                 'target=”_hirosejnJSDoc3”>TAT log diver</a><BR>'\r\n        +     '</p>'\r\n        +   '</div>'\r\n        // メニュー画面本体（左右開閉ラッパー）\r\n        +   '<div class=\"hjnBurgerWrap\">'\r\n            // アコーディオンメニュー\r\n        +     '<div class=\"hjnAccordion\">'\r\n        +       '<div id=\"' + chartName + '_menu\"></div>'\r\n        +       '<div id=\"' + chartName + 'D_menu\"></div>'\r\n        +     '</div>'\r\n        +   '</div>'\r\n        + '</div>'\r\n        + '</header>';\r\n\thtml_chart.parentNode.insertBefore(html_nav, html_chart);\r\n    HJN.init.ResetStyle(true); // #79\r\n\t\r\n\tvar dropFieldName = chartName;\t// ファイルドロップを受け付けるタグ名\r\n\tUtil.Logger.ShowLogTextInit(); // 処理時間計測の初期化\r\n\r\n\t// コンフィグプロパティを初期化する #74\r\n\t// HJN.Config = HJN.Config || Util.Config;\r\n    TimeSeries.MenuConfigFile.config();\r\n    TimeSeries.MenuConfigFilter.config();\r\n    Simulator.MenuConfig.config();\r\n    MenuConfigDetailGraph.config();\r\n\t\r\n\t// グラフのインスタンスを作成し初期化する\r\n\tHJN.chart = new Graph(chartName, \"HJN.chart\");\r\n\tHJN.chart.init();\r\n\tHJN.chartD = new Graph(chartName + \"D\", \"HJN.chartD\");\r\n\tHJN.chartD.init();\r\n\t// ドロップフィールドに、処理を登録する(注：dygraphはイベントリスナーを登録しないとクリック時にエラーが出る）\r\n\tInit.DropField(dropFieldName);\r\n\tInit.DropField(dropFieldName+ \"D\");\r\n\r\n\t// 初期表示データを自動生成する // #53\r\n\tUtil.Config.GetConfig(\"Simulator\").getFunctionByKey(\"S_SIMU\")(); // #53\r\n\t\r\n\t// イベントハンドラを登録する\r\n\tUtil.Element.enableDraggableClass();\r\n}\r\n\r\n/**\r\n * スタイルを初期設定する（Reset zoomボタンからも呼ばれる）\r\n * \r\n * @param {Boolean}\r\n *            [isInit=false] リセット時true：初期設定値も再設定する\r\n *            シミュレーション条件JSONテキスト、もしくはサンプルJSON番号\r\n * \r\n * @memberof Init\r\n */\r\nHJN.init.ResetStyle = Init.ResetStyle = function(isInit){ // #79\r\n    // 指定クラス名が設定された要素にスタイルを設定する\r\n    var elements = document.getElementsByClassName(\"lineViewer\");\r\n    for(var i = 0; i < elements.length; i++){\r\n        Util.Element.SetStyles(elements[i],\r\n                { bottom: 0, left: \"\", top: \"\", width: \"70%\", height: \"10vh\"});\r\n    }\r\n    elements = document.getElementsByClassName(\"statusbar\");\r\n    for(var i = 0; i < elements.length; i++){\r\n        Util.Element.SetStyles(elements[i],\r\n                { left: \"10px\", top: 0, width: \"155px\", height: \"40px\"});\r\n    }\r\n    Util.Element.SetStyles(document.getElementById(\"Simulator\"),\r\n                { left: 0, top: 0, width: \"190px\", height: 0});\r\n    // 別途初期設定される値を再設定する\r\n    if (!isInit) {\r\n        HJN.chart.graph.resetZoom();\r\n        HJN.chartD.graph.resetZoom();\r\n    }\r\n}\r\n/**\r\n * データを自動生成し表示する\r\n * \r\n * @memberof Init\r\n * @param {String|Number}\r\n *            [json = Simulator.virtualSystemByJson.GetJsonConfig(0)]\r\n *            シミュレーション条件JSONテキスト、もしくはサンプルJSON番号\r\n */\r\nexport function CreateSampleTatLogAndChartShow(json){ // #53\r\n    var jsonText;\r\n    if (typeof(json) === \"number\") { // #53\r\n        jsonText = Simulator.virtualSystemByJson.GetJsonConfig(json);\r\n    } else{\r\n        jsonText = json || Simulator.virtualSystemByJson.GetJsonConfig(0);\r\n    }\r\n    // JSON Editorを更新する\r\n    document.getElementById(\"SimulatorEditor\").value = jsonText;\r\n    // 初期表示データを自動生成する\r\n    HJN.chart.eTatOriginal = Simulator.virtualSystemByJson.Execute(jsonText);\r\n    // データを表示する\r\n    Init.ChartShow(HJN.chart.eTatOriginal);\r\n}\r\n\r\n/**\r\n * 終了時刻とtatの配列をグラフ表示する（Menuイベントから呼び出される）\r\n * \r\n * @memberof Init\r\n * @param {ETAT}\r\n *            HJN.chart.eTatOriginal 終了時刻とtatを含む配列\r\n */\r\nHJN.init.ChartShow = Init.ChartShow = function(eTatOriginal){\r\n    // フィルタしたeTatを取得する #34\r\n    var eTat = HJN.chart.fileParser.createFilter().filter(eTatOriginal);\r\n\r\n    // グラフを初期表示する\r\n    HJN.Plot.List = []; // #53\r\n    // 上段\r\n    if (eTat.length === 0) eTat = [{x:0, y:0}]; // #72\r\n    var tat = new TimeSeries.Tat(eTat); // #75\r\n    HJN.chart.setSeriesSet(tat);\r\n    HJN.chart.update();\r\n    showLogForUpperGraph(\"Simulator\"); // #79\r\n\r\n    // 下段(非同期）\r\n   Util.setZeroTimeout( function(){\r\n       HJN.chartD.update(Init.ChartRegistDetail(HJN.chart.cTps));\r\n       HJN.chart.showBalloon();    // 上段のBalloonを描画する\r\n       if (HJN.chartD.eTat){\r\n           showLogForLowerGraph(\"Simulator\"); // #79\r\n       } else { // #72\r\n           Util.Logger.ShowLogText(\"<mark>表示データがありません</mark>\", \"msg\");\r\n       }\r\n       // 上下段のマウス操作同期設定 #49\r\n       var sync = Dygraph.synchronize(\r\n                 [ HJN.chart.graph, HJN.chartD.graph ],\r\n                 {selection: true, zoom: false});\r\n    });\r\n}\r\nfunction showLogForUpperGraph(fileName){\r\n    var text = \"+ \";\r\n    Util.Logger.ShowLogText(text, \"elaps\");       // 処理時間ログ出力\r\n}\r\nfunction showLogForLowerGraph(fileName){\r\n    var text = \"下段[\" + HJN.chartD.eTat.length + \"]行\";\r\n    Util.Logger.ShowLogText(text, \"elaps\", true);\r\n    text = \"<mark>\" + fileName + \" [\" \r\n            + HJN.chart.eTat.length.toString()\r\n             .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n            + \"]行を表示</mark>\"; // 整数文字列のカンマ編集\r\n    Util.Logger.ShowLogText(text, \"msg\");\r\n}\r\n\r\n/**\r\n * HTMLタグに、CSVファイルのドロップを受付けイベントを登録する\r\n * \r\n * @memberof Init\r\n * @param {string}\r\n *            dropFieldName ファイルのドロップイベントを受けるフィールド名\r\n */\r\nInit.DropField = function (dropFieldName) {\r\n\t// 第一引数で指定された名前の ID 属性のエレメントを取得する\r\n\tvar element = document.getElementById(dropFieldName);\r\n\t\r\n\t// ドラッグ操作中に実行されるイベント（マウスカーソルが要素内に滞在中）\r\n\telement.addEventListener(\"dragover\" , function (e){\r\n\t\te.preventDefault();   // ドロップを許可し受け入れを表明\r\n\t});\r\n\t\r\n\t// ドロップ時に実行されるイベント\r\n\telement.addEventListener(\"drop\", function (e){\r\n\t\t\tvar data_transfer = e.dataTransfer;\t\t// DataTransfer オブジェクトを取得する\r\n\t\t\tif(!data_transfer.types) return;\t\t// ファイルのコンテンツタイプを取得できたことを確認する\r\n\t\t\tvar files = data_transfer.files;\t// ファイルのリストを取得する\r\n\t\t\tInit.FileReader(files);\r\n\t\t\te.preventDefault();\t\t// デフォルトのドロップ機能を無効化\r\n\t});\r\n};\r\n\r\n/**\r\n * 指定されたファイルを読込んで処理する\r\n * \r\n * @memberof Init\r\n * @param {Object}\r\n *            files ファイルハンドラ\r\n */\r\nHJN.init.FileReader = Init.FileReader = function (files){  // #15\r\n\tfor(var i = 0; i < files.length; i++){\t// データを順番に取得する\r\n\t\ttry{\r\n\t\t\t// ファイルを取得する\r\n\t\t\tvar file = files[i];\r\n\t\t\t// ログ出力用にファイル名（サイズ）を編集する\r\n\t\t\tvar textArray =\t\"<BR><mark><b>\" + file.name + \"</b></mark> \" +\r\n\t\t\t\t\t\t\t\"[\"+ file.size + \"byte] \" + \r\n\t\t\t\t\t\t\tfile.lastModifiedDate.toLocaleString() +\"<BR>\";\r\n\t\t\t// ファイルの読み込みに成功したら、その内容をドロップエリアに追記して表示する\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.onloadend = funcOnloadend.bind(this, files[i], i);\r\n\t\t\t// ファイルにArrayBufferで参照を取得する（loadイベントを起こす）\r\n\t\t    reader.readAsArrayBuffer(files[i]);\r\n\t\t}catch(e){\r\n\t\t\t// 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n\t\t\tvar msg = \"The \" + i + \"th dropped object is not a file\";\r\n\t\t\tUtil.Logger.ShowText( [\"<mark>\"+msg+\"</mark>\"] );\r\n\t\t\tconsole.error(\"[%o]%o\",msg,e );\r\n\t\t}\r\n\t}\r\n\r\n\t// 内部関数：ファイルを読み込みｸﾞﾗﾌを表示する（指定ファイルを読み込んだ後に呼び出される） #23\r\n    function funcOnloadend(file, i, evt) {\r\n        if (evt.target.readyState === FileReader.DONE) { // DONE == 2\r\n            var filesIdx = HJN.files.length;\r\n            // ファイルの先頭2行をログ表示する\r\n            HJN.filesArrayBuffer[filesIdx] = evt.target.result;\r\n            Util.Logger.ResetTimestamp();              // 情報表示 : 初期化\r\n            Util.Logger.ShowLogText(textArray, \"msg\");  // 情報表示：ドロップファイル情報\r\n            // 指定ファイルを読み込む\r\n            // CSVファイルを上段用eTatに展開する[{x:, y:,pos:,len:},...] 全件展開する\r\n            if (i === 0 && HJN.chart.fileParser.isNewETAT()){\r\n                // 新規モードかつ、同時複数ファイル指定時の最初のファイルのとき、新たに作成する\r\n                HJN.files = [file];\r\n                HJN.chart.eTatOriginal = getTatLogArray(HJN.filesArrayBuffer, filesIdx);\r\n            } else { // 2件目以降のファイルのとき、もしくは、追加モード\"ADDDATA\"のとき、追加する\r\n                HJN.files.push(file);\r\n                HJN.chart.eTatOriginal = HJN.chart.eTatOriginal.concat(\r\n                        getTatLogArray(HJN.filesArrayBuffer, filesIdx));\r\n            }\r\n\r\n            // 全ファイルを読み込んだらグラフを描画する\r\n            if (HJN.files[HJN.files.length - 1] === file){ // 指定ファイル群の最後のファイルを処理しているとき\r\n                // フィルタしたeTatを取得する #34\r\n                var eTat = HJN.chart.fileParser.createFilter().filter(HJN.chart.eTatOriginal);\r\n\r\n                // 上段グラフを描画する（ eTatから上段用 時系列分析データ(seriesSet)を展開する）\r\n                if (eTat.length === 0) eTat = [{x:0, y:0}]; // #72\r\n                var tat = new TimeSeries.Tat(eTat); // #75\r\n                HJN.chart.setSeriesSet(tat);\r\n                HJN.chart.update();\r\n                showLogForUpperGraph(HJN.files[0].name); // #79\r\n\r\n                // 下段用データの展開とグラフ描画（非同期処理）\r\n                HJN.Plot.List = [];\r\n                Util.setZeroTimeout(function(){\r\n                    if (HJN.chart.cTps) {\r\n                        // 下段グラフを描画する（下段用 時系列分析データ(seriesSet)を展開する）\r\n                        HJN.chartD.update(Init.ChartRegistDetail(HJN.chart.cTps));\r\n                        // 上段のBalloonを描画する(上段update時にはplots登録されていないので、ここで処理）\r\n                        HJN.chart.showBalloon();\r\n                        showLogForLowerGraph(HJN.files[0].name); // #79\r\n                    } else { // #72\r\n                        Util.Logger.ShowLogText(\"<mark>表示データがありません</mark>\", \"msg\");\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\t// 内部関数： 指定ファイルの先頭ｎ行を、改行文字<BR> のテキストに変換してリターンする\r\n\tfunction topLines(file, n) {\r\n\t    var fileInfo = \"\",\r\n\t        line;\r\n\t    try{    // 先頭からnレコード取得\r\n\t        var getterOfLine = HJN.chart.fileParser.createGetterOfLine(file);\r\n\t        for (var i = 0; i < n; i++) {\r\n\t            line = getterOfLine.next();\r\n\t            fileInfo += line.str + \"<BR>\";\r\n\t        }\r\n\t    }catch (e) {\r\n\t        alert(\"[Init.DropField 改行コードの無いファイルは扱えません]\");\r\n\t        console.error(e);\r\n\t    }\r\n\t    return fileInfo;\r\n\t}\r\n\r\n    // 内部関数： CSVファイルを読み込み、TatLog用アレイ[{x:日時, y:値, pos:レコード開始位置,\r\n    // len:レコード長},...]に展開する\r\n\tfunction getTatLogArray(files, idx) { // arg0:csvﾌｧｲﾙのファイルﾊﾟｽ\r\n\t    Util.Logger.ShowLogText(\"----- read file -----------------------------\",\"calc\");\r\n\t    var file = files[idx], // #23\r\n\t        eTat = [],\r\n\t        xy = {date: 0, value: 0, isError: false },\r\n\t        i = 0,  // timelog用\r\n\t        getterOfLine = HJN.chart.fileParser.createGetterOfLine(file),\r\n\t        getterOfXY = HJN.chart.fileParser.createGetterOfXY(),\r\n\t        line = getterOfLine.next();     // 先頭行の初期処理\r\n\t    while (!line.isEoF) {               // 以降最終行まで処理する\r\n\t        try {\r\n\t            Util.Logger.ByInterval(i++, line); // 一定時刻毎に進捗を出力する\r\n\t            xy = getterOfXY.parse(line);\r\n\t            if(!xy.isError){\r\n\t                eTat.push( {x: xy.x, y: xy.y, fileIdx: idx, // #23\r\n\t                    pos: line.pos, len: line.array.byteLength, sTatIdx: 0} );\r\n\t            }\r\n\t            line = getterOfLine.next(); // #24\r\n\t        } catch (e) {   /* 改行だけレコードをスキップ */\r\n\t            console.error(e);\r\n\t            console.err(\"err: %o\",e);\r\n\t        }\r\n\t    }\r\n\t    Util.Logger.ShowLogText(\"[0:file readed & got eTat]---------------\",\"calc\");\r\n\t    return eTat;\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * 詳細グラフ用機能： 表示対象期間のcTpsから、eTps範囲を取得し、詳細Seriesを生成する。併せてPlotsを登録する。\r\n * \r\n * @memberof Init\r\n * @param {xMs}\r\n *            cTps 日時（ミリ秒単位）\r\n * @return {seriesSet} dygraph用時系列データ配列\r\n */\r\nInit.ChartRegistDetail = function(cTps){\r\n\t// CTPSの最大値となるplotを取得する\r\n\tvar maxY =Number.MIN_VALUE,\r\n\t\tmaxYIdx = -1;\r\n\tcTps.forEach(function(c, i){\r\n\t\tif (maxY < c.y){\r\n\t\t\tmaxY = c.y;\r\n\t\t\tmaxYIdx = i;\r\n\t\t}\r\n\t});\r\n\tif(0 <= maxYIdx){\t// #26\r\n\t\t// 秒単位より大きいとき、最大値を含む時刻(秒)に補正する #38\r\n\t\tvar x = cTps[maxYIdx].x;\r\n\t\tif(HJN.chart.cTpsUnit.unit >= 1000){\r\n\t\t\tvar cTpsIdx = HJN.chart.conc.findIndex(function(e,i){return e.y === cTps[maxYIdx].y;});\r\n\t\t\tx = HJN.chart.conc[cTpsIdx].x;\r\n\t\t}\r\n\t\t// slider rangeに、下段の表示時刻を設定する\r\n\t\tHJN.init.SetDetailDateTime(x);\r\n\t\t// eTpsの範囲を取得し、詳細用seriesSet(HJN.chartD.seriesSet）を設定する\r\n\t    var tat = new TimeSeries.Tat(HJN.init.GetSliderRangedEtat()); // #75\r\n\t    HJN.chartD.setSeriesSet(tat);\r\n\t\t// plotsアイコン用 HJN.Plot.Listに、下段表示したplotを登録する\r\n\t\tHJN.Plot.Add(HJN.Tat.CTPS.N, cTps[maxYIdx].x, cTps[maxYIdx].y);\r\n\t}\r\n\tUtil.Logger.ShowLogText(\"[6:Plot added] \" + HJN.Plot.List.length + \" plots\",\"calc\");\r\n\r\n\treturn HJN.chartD.seriesSet;\r\n};\r\n/**\r\n * 詳細グラフ用機能： sliderRangeで指定された範囲のeTatを返却する（グラフの点クリックイベント時に呼び出される）\r\n * \r\n * @memberof Init\r\n * @return {ETAT} 詳細グラフ用eTat\r\n */\r\nHJN.init.GetSliderRangedEtat = function() {\r\n    // 指定時刻（ｄｔ ± range）を取得し、HJNグローバル変数に退避する #27\r\n    var rangeTagPlus  = Util.Config.DetailGraph.getConfig(\"D_RANGE_PLUS\");\r\n    var rangeTagMinus = Util.Config.DetailGraph.getConfig(\"D_RANGE_MINUS\");\r\n    var rangeTagUnit  = Util.Config.DetailGraph.getConfig(\"D_UNIT\"); // #48\r\n    var rangeCycle = HJN.chart.cTpsUnit.unit / 1000; // 変動する #38\r\n\r\n    rangeTagPlus = rangeTagPlus  ? +rangeTagPlus : 1 + rangeCycle;     // 幅（秒）\r\n    rangeTagMinus = rangeTagMinus ? +rangeTagMinus : rangeCycle;     // 幅（秒）\r\n    rangeTagUnit = rangeTagUnit  ? +rangeTagUnit : TimeSeries.Tat.CYCLE; // #48\r\n\r\n    Util.Config.DetailGraph.setValueByKey(\"D_RANGE_PLUS\",rangeTagPlus);\r\n    Util.Config.DetailGraph.setValueByKey(\"D_RANGE_MINUS\",rangeTagMinus);\r\n    Util.Config.DetailGraph.setValueByKey(\"D_UNIT\",rangeTagUnit);\r\n\r\n    var detailDateTime = Util.Config.DetailGraph.getValueByKey(\"D_TIME\");\r\n    var eTatDetail = (new TimeSeries.ETat(HJN.chart.eTat)).sliceByRangeUnit(detailDateTime,\r\n                rangeTagMinus, rangeTagPlus, rangeTagUnit); // #75\r\n\r\n    Util.Logger.ShowLogText(\"[0:HJN.init.GetSliderRangedEtat] \",\"calc\");\r\n    return eTatDetail;  // 詳細グラフ用eTatを返却する\r\n};\r\n/**\r\n * 詳細グラフ用機能： 指定日時を秒単位に丸めて、FORMのslider Rangeに設定する（Plotから呼び出される）\r\n * \r\n * @memberof Init\r\n * @param {xMs}\r\n *            date 日時（ミリ秒単位）\r\n */\r\nHJN.init.SetDetailDateTime=function(date) {\r\n    Util.Config.DetailGraph.setValueByKey(\"D_TIME\",\r\n            Math.floor(date / 1000) * 1000); // 秒単位に丸める #27\r\n};\r\n\r\n\r\n/**\r\n * ダイアログを表示する\r\n * \r\n * @memberof Init\r\n * @param {String}\r\n *            iHtml ダイアログのiHtmlに設定する文字列\r\n */\r\nHJN.init.ShowDialog = function(iHtml, id, w, h, style){\r\n    var element;\r\n    Util.Element.createDialog(iHtml, element, id, w, h, style);\r\n};\r\n\r\n/**\r\n * 使い方HTMLを取得する（Menuイベントから呼び出される） #84\r\n * \r\n * @memberof Init\r\n * @return {String} str 使い方HTML\r\n */\r\nHJN.init.Usage=function(){\r\n    var url = \"https://github.com/hirosejn/HJN/wiki/Usage(JP)\";\r\n    var label = \"GitHub wiki : \" + url;\r\n    var html = 'Usage of TAT log diver'\r\n    + '<br>'\r\n    + '<br>'\r\n    + '<a class=\"hjnLabel4Input\" href=\"' + url + '\"'\r\n    +  'target=”_hirosejnUsage”>' + label +'</a><BR>';\r\n    \r\n    return Usage.TopHtml;\r\n// return html;\r\n};\r\n\r\n/**\r\n * 著作権表記文字を取得する（Menuイベントから呼び出される）\r\n * \r\n * @memberof Init\r\n * @return {String} str 著作権表記文字\r\n */\r\nHJN.init.Copyright=function(){\r\n    return Copyright.getAboutText();\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Init.js\n// module id = 5\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 6\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 7\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport MappedETat from './timeSeries-MappedETat.js';\r\nimport ETat from './timeSeries-ETat.js';\r\nimport Cash from './timeSeries-Cash.js';\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class Tat\r\n * @classdesc Tat 応答時間(Turnaround time)の時系列データ管理クラス\r\n * @param {ETAT}\r\n *            [eTat] [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]<br>\r\n *            eTatが指定されているとき、this.seriesSet を設定する\r\n */\r\nexport default function Tat(eTat) {\r\n    \r\n    this.cTpsUnit = Tat.UNIT_CTPS[0];\r\n    this.seriesSet = [];\r\n\r\n    if (eTat){\r\n        this.createSeries(eTat);\r\n    }\r\n}\r\n\r\n/**\r\n * クラス定数\r\n */\r\nTat.UNIT_CTPS = [\r\n        { label: \"/sec\",   unit: 1000 },\r\n        { label: \"/min\",   unit: 60000 },\r\n        { label: \"/hour\",  unit: 3600000 },\r\n        { label: \"/day\",   unit: 86400000 }];\r\nTat.CYCLE = 60000;  // ミリ秒 #57\r\n\r\n// グラフ定数\r\nTat.CONC = {\r\n        key : 'conc',\r\n        name : '多重度（詳細）',\r\n        label : 'conc:%N',\r\n        N : 0,\r\n        scale : 0,\r\n        color : 'rgba(  0,  0,127, 0.3)',\r\n        tpsN : 1\r\n    }; // #7\r\nTat.CTPS = {\r\n        key : 'cTps',\r\n        name : '多重度（区間最大）',\r\n        label : 'conc(max):%N',\r\n        N : 1,\r\n        scale : 0,\r\n        color : 'rgba(  0,  0,127, 0.1)',\r\n        detailN : 0\r\n    };\r\nTat.ETPS = {\r\n        key : 'eTps',\r\n        name : 'average tps / min (end) [line]', // #57\r\n        label : 'end:%Ntps',\r\n        N : 2,\r\n        scale : 0,\r\n        color : 'rgba(  0, 127, 127, 0.3)'\r\n    };\r\nTat.STAT = {\r\n        key : 'sTat',\r\n        name : 'response by start time [Y2軸:plot]',\r\n        label : 'start:%Nms',\r\n        N : 3,\r\n        scale : 1,\r\n        color : 'rgba(127, 127, 0, 0.3)'\r\n    };\r\nTat.ETAT = {\r\n        key : 'eTat',\r\n        name : 'response by end time   [Y2軸:plot]',\r\n        label : 'end:%Nms',\r\n        N : 4,\r\n        scale : 1,\r\n        color : 'rgba(127,  0,  0, 0.3)'\r\n    };\r\nTat.EMPS = {\r\n        key : 'eMps',\r\n        name : 'max response / min (end) [Y2軸:line]', // #57\r\n        label : 'max:%Nms',\r\n        N : 5,\r\n        scale : 1,\r\n        color : 'rgba(127,   0,  64, 0.3)'\r\n    };\r\nTat.EAPS = {\r\n        key : 'eAps',\r\n        name : 'average response / min (end) [Y2軸:line]', // #57\r\n        label : 'ave:%Nms',\r\n        N : 6,\r\n        scale : 1,\r\n        color : 'rgba(127,   0,  64, 0.1)'\r\n    };\r\nTat.toSeriesArray = function(conc, cTps, eTps, sTat, eTat, eMps, eAps) {\r\n    return [ conc, cTps, eTps, sTat, eTat, eMps, eAps ];\r\n}\r\nTat.seriesConfig = Tat.toSeriesArray(\r\n        Tat.CONC, Tat.CTPS, Tat.ETPS, Tat.STAT, Tat.ETAT,\r\n        Tat.EMPS, Tat.EAPS);\r\n\r\n/**\r\n * 終了時刻のTAT時系列データ(eTat)から、描画用時系列データ配列を作成する\r\n * \r\n * @memberOf TimeSeries\r\n * @param {ETAT}\r\n *            eTat [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]\r\n * @return {seriesSet} dygraph用時系列データ配列\r\n */\r\nTat.prototype.createSeries = function (eTat) {\r\n    // 時系列データを初期化する\r\n    var conc = [], cTps = [], eTps = [], sTat = [], eMps = [], eAps = [];\r\n\r\n    // 集計対象データがないとき\r\n    if (eTat.length === 0)\r\n        return Tat.toSeriesArray(conc, cTps, eTps, sTat, eTat, eMps, eAps);\r\n\r\n    /** eTatをソートする * */\r\n    // 開始時刻でソートする #35\r\n    eTat.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    Util.Logger.ShowLogText(\"[1:eTat sorten ] \" + eTat.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** eTps(時間あたり処理件数),eMps,eAps(時間あたり最大/平均応答時間)時系列データを作成する * */\r\n    var dFrom = Math.floor(eTat[0].x / Tat.CYCLE) * Tat.CYCLE,\r\n        dTo = dFrom + Tat.CYCLE,\r\n        num = 0, // #39\r\n        maxTat = 0.0, // #19\r\n        aveTmp = 0.0;\r\n    eTat.forEach(function (e) {\r\n        if (e.x < dTo) {\r\n            num += 1;\r\n            if (maxTat < e.y) maxTat = e.y; // #19\r\n            aveTmp += e.y;\r\n        } else {\r\n            eTps.push({x : dFrom, y : num * 1000 / Tat.CYCLE}); // #57\r\n            eMps.push({x : dFrom, y : maxTat}); // #19\r\n            eAps.push({x : dFrom, y : aveTmp / num});\r\n            dFrom = Math.floor(e.x / Tat.CYCLE) * Tat.CYCLE;\r\n            dTo = dFrom + Tat.CYCLE;\r\n            num = 1;\r\n            maxTat = e.y; // #19 #39\r\n            aveTmp = e.y; // #39\r\n        }\r\n    }, this);\r\n    eTps.push({x : dFrom,             y : num * 1000 / Tat.CYCLE}); // #57\r\n    eTps.push({x : dFrom + Tat.CYCLE, y : num * 1000 / Tat.CYCLE}); // #57\r\n    eMps.push({x : dFrom,             y : maxTat}); // #19\r\n    eMps.push({x : dFrom + Tat.CYCLE, y : maxTat}); // #57\r\n    eAps.push({x : dFrom,             y : aveTmp / num});\r\n    eAps.push({x : dFrom + Tat.CYCLE, y : aveTmp / num}); // #57\r\n    \r\n    Util.Logger.ShowLogText(\"[3:eTps,eMps,eAps created] \" + eTps.length\r\n            + \" plots\", \"calc\");\r\n\r\n    /** sTat（開始時間）時系列データを作成する,同時に入力eTatを補正する * */\r\n    // eTatからsTatを登録する\r\n    eTat.forEach(function (e, i) {\r\n        // 処理時間=0 のとき、1マイクロ秒とみなす(有効桁0.2マイクロ秒に切上される）\r\n        if (e.y === 0) {\r\n            e.y = 0.001;\r\n            e.x += e.y;\r\n        } // ミリ秒\r\n        // sTatにeTatデータを登録する\r\n        sTat.push({\r\n            x : e.x - e.y,\r\n            y : e.y,\r\n            eTatIdx : i\r\n        });\r\n    });\r\n    // 開始時刻でソートする\r\n    sTat.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    // eTatにsTatの位置を設定する\r\n    sTat.forEach(function (s, i) {\r\n        eTat[s.eTatIdx].sTatIdx = i;\r\n    });\r\n    Util.Logger.ShowLogText(\"[2:sTat created] \" + sTat.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** CONC(多重度)時系列データを作成する * */\r\n    var concTmp = [];\r\n    // eTatから、多重度が変化した時刻の一覧を作成する\r\n    eTat.map(function (e, i) {\r\n        // 開始時刻にカウントアップ情報を追加する\r\n        concTmp.push({x : e.x - e.y, y : 1});\r\n        // 終了時刻をカウントダウン情報を追加する\r\n        concTmp.push({x : e.x, y : -1});\r\n    });\r\n    // concを変化した時刻（開始or終了）でソートする\r\n    concTmp.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    // concに同時取引数を設定する\r\n    var concNum = 0;\r\n    concTmp.forEach(function (c, i, a) {\r\n        // 重複削除用フラグを立てる #23\r\n        if (i > 0 && c.x === a[i - 1].x) {\r\n            a[i - 1].del = true;\r\n        }\r\n        // 同時取引数を集計する(前提：c.y に、開始なら1、終了なら(-1)が設定されている)\r\n        concNum += c.y;\r\n        c.y = concNum;\r\n    });\r\n    // concの同じ時刻の点を削除する #23\r\n    conc = concTmp.filter(function (c) {\r\n        return !c.del;\r\n    });\r\n    Util.Logger.ShowLogText(\"[4:conc created] \" + conc.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** cTPS秒間同時処理件数（concurrent transactions/sec）時系列データを作成する #18 * */\r\n    var XSec = floorTime(conc[0].x, Tat.CYCLE), // ミリ秒\r\n    YMax = conc[0].y, YNext = conc[0].y;\r\n    // concの先頭と末尾の時刻(x)の差よりPlot数を求め、Plot数が規定数(8000個)を超えたら、桁上げする #38\r\n    var cTpsMaxPlots = 8000, // 桁上げするPlot数\r\n    cTpsUnits = Tat.UNIT_CTPS, // #48\r\n    concTerm = conc[conc.length - 1].x - conc[0].x, // ミリ秒\r\n    cTpsIdx = 0;\r\n    while (cTpsIdx < cTpsUnits.length\r\n            && concTerm / cTpsUnits[cTpsIdx].unit > cTpsMaxPlots) {\r\n        cTpsIdx++;\r\n    }\r\n    cTpsIdx = (cTpsUnits.length > cTpsIdx) ? cTpsIdx : cTpsUnits.length - 1;\r\n    this.cTpsUnit = cTpsUnits[cTpsIdx];\r\n    // メニューのViewのcTPSのラベルに単位を追加する\r\n    var pos = (this === HJN.chart) ? 0 : 1;\r\n    document.getElementsByName(\"cTps\")[pos]\r\n                .parentNode.lastChild.data = HJN.Tat.CTPS.name + this.cTpsUnit.label;\r\n\r\n    // 規定時間単位の最大同時処理数cTPSを作成する\r\n    conc.forEach(function (c) {\r\n        if (floorTime(c.x, this.cTpsUnit.unit) === XSec) { // c.xは ミリ秒\r\n            YMax = Math.max(YMax, c.y);\r\n        } else {\r\n            cTps.push({x : XSec, y : Math.max(YMax, YNext)});\r\n            for (var t = XSec + this.cTpsUnit.unit;\r\n                    t < floorTime(c.x, this.cTpsUnit.unit);\r\n                    t += this.cTpsUnit.unit) { // c.xはミリ秒\r\n                        cTps.push({x : t, y : YNext});\r\n                if (YNext === 0) break;\r\n            }\r\n            XSec = floorTime(c.x, this.cTpsUnit.unit);\r\n            YMax = Math.max(YNext, c.y);\r\n        }\r\n        YNext = c.y;\r\n    }, this);\r\n    cTps.push({x : XSec, y : YMax});\r\n    cTps.push({x : XSec + this.cTpsUnit.unit, y : YNext});\r\n\r\n    // Util.Logger.ShowLogText(\"[5-1:cTps created] \" + cTps.length + \"\r\n    // plots\",\"calc\");\r\n\r\n    // cTpsのxからindexを引くMapを作成する #18\r\n    eTat = new ETat(eTat); // #75\r\n    Util.Logger.ShowLogText(\"[5:cTps created] \" + cTps.length + \" plots(\"\r\n            + +Math.floor(concTerm / 1000) + \"sec\" + cTpsUnits[cTpsIdx].label\r\n            + \")\", \"calc\");\r\n\r\n    // 集計結果をHJN.Graphに設定する 注）this.SERIESESと同じ順番にすること\r\n    this.seriesSet = Tat.toSeriesArray(conc, cTps, eTps, sTat, eTat, eMps, eAps);\r\n\r\n    return this;\r\n\r\n    \r\n    // 時刻を指定ミリ秒間隔で切り捨てる（内部関数）\r\n    function floorTime(t, cycle) {\r\n        return Math.floor(Math.floor(t / cycle) * cycle);\r\n    }\r\n};\r\n\r\n/**\r\n * cTpsの集計単位を取得する\r\n * \r\n * @memberOf TimeSeries\r\n * @return {object} 単位構造体 { label: \"/sec\", unit: 1000 }\r\n */\r\nTat.prototype.getCTpsUnit = function () {\r\n    return this.cTpsUnit;\r\n}\r\n\r\n/**\r\n * seriesSetを取得する\r\n * \r\n * @memberOf TimeSeries\r\n * @return {array} seriesSet\r\n */\r\nTat.prototype.getSeriesSet = function () {\r\n    return this.seriesSet;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-Tat.js\n// module id = 8\n// module chunks = 0","/**\r\n * @memberOf TimeSeries\r\n * @class MappedETat\r\n * @classdesc 期間指定eTat取得用Map\r\n *            <p>\r\n *            指定期間に動いているeTatの一覧を、高速に取得するマップ\r\n * @param {ETAT}\r\n *            eTat インデックスを追加するETAT\r\n * @example eTat.tatMap = new HJN_util.MappedETat(eTat); var trans =\r\n *          eTat.tatMap.search(x, x, 1000);\r\n */\r\nexport default (function() { // #18\r\n    /** @static */\r\n    MappedETat.prototype = {\r\n            _abscissa: [],\r\n            _conf :[{ms:      10, step:5, label:\"0_10ms_\"},\r\n                    {ms:      50, step:2, label:\"1_50ms_\"},\r\n                    {ms:     100, step:5, label:\"2_100ms_\"},\r\n                    {ms:     500, step:2, label:\"3_500ms_\"},\r\n                    {ms:    1000, step:5, label:\"4_1sec_\"},\r\n                    {ms:    5000, step:4, label:\"5_5sec_\"},\r\n                    {ms:   20000, step:3, label:\"6_20sec_\"},\r\n                    {ms:   60000, step:5, label:\"7_1min_\"},\r\n                    {ms:  300000, step:4, label:\"8_5min_\"},\r\n                    {ms: 1200000, step:3, label:\"9_20min_\"},\r\n                    {ms: 3600000, step:6, label:\"10_1h_\"},\r\n                    {ms:21600000, step:4, label:\"11_6h_\"},\r\n                    {ms:Number.MAX_VALUE, step:1, label:\"12_overDay_\"}] // 最後はstep:１\r\n        };\r\n    /** @constructor */\r\n    function MappedETat(eTat){\r\n        if(!(this instanceof MappedETat)) return new MappedETat(eTat);\r\n        // MappedArrayを作成する\r\n        this._tatMap = new MappedArray(eTat, this._getKey, true);\r\n    }\r\n\r\n    /** @private */\r\n    MappedETat.prototype._row = function(label, step) {return label + step;};\r\n\r\n    /** @private */\r\n    // MapKey取得関数\r\n    MappedETat.prototype._getKey = function(e, i) {        // MapedMap用Key配列関数\r\n        var start = e.x - e.y,      // x,yはミリ秒\r\n            end = e.x,\r\n            _conf = MappedETat.prototype._conf,\r\n            _row = MappedETat.prototype._row,\r\n            term = _conf[0].ms,\r\n            rowLv = 0;\r\n        if(Math.ceil(end / term) - 1 === Math.floor(start / term)){ // 最小BOX\r\n            return [_row(_conf[0].label, 0),\r\n                    (Math.ceil(e.x / _conf[0].ms) - 1) * _conf[0].ms];\r\n        }\r\n        for (i = 1; i < _conf.length; i++) {                // 最下位から上に評価\r\n            term = _conf[i].ms;\r\n            if(Math.floor(end / term) === Math.floor(start / term) \r\n                    || end - start < term){                      // 上位BOXを起点\r\n                term = _conf[i-1].ms;   // ひとつ下位のBOX期間（下から評価したので二段下となることは無い\r\n                rowLv = Math.floor(end / term) - Math.floor(start / term);\r\n                return [_row(_conf[i-1].label, rowLv),\r\n                        (Math.ceil(e.x / _conf[i-1].ms) - 1) * _conf[i-1].ms];\r\n            }\r\n        }\r\n        return \"error\";\r\n    };\r\n\r\n    // static メンバーの設定\r\n    // _confから_abscissa(横軸）を生成する\r\n    var c = MappedETat.prototype._conf,\r\n        e2 = c[c.length - 2],\r\n        \r\n        e  = c[c.length - 1];\r\n    MappedETat.prototype._abscissa.push(\r\n            {label: MappedETat.prototype._row(e.label, e.step), ms: e.ms ,i: 1,\r\n                step: e.step, from: e2.ms * e2.step, to: e.ms} );   // 末尾を先頭に追加\r\n    for (var j = c.length - 1; 0 <= j; j--){    // 降順に追加\r\n        e = c[j];\r\n        for (var i = e.step; 0 < i; i--){ // #39\r\n            MappedETat.prototype._abscissa.push(\r\n                    {label: MappedETat.prototype._row(e.label, i), ms: e.ms, i: i, \r\n                                step: e.step, from: e.ms * i, to: e.ms * (i + 1)} );\r\n        }\r\n    }\r\n    MappedETat.prototype._abscissa.push( \r\n            {label: MappedETat.prototype._row(c[0].label, 0), ms: c[0].ms, i: 0,\r\n                step: 0, from: 0, to: c[0].ms} );   // 先頭を末尾に追加\r\n\r\n    \r\n    // public\r\n    /**\r\n     * 指定期間に動いているeTatを検索する\r\n     * \r\n     * @memberOf Util.MappedETat\r\n     * @parm {Number} from 指定期間(from)\r\n     * @parm {Number} [to=from] 指定期間(to)\r\n     * @parm {Number} [cap] cap件数となったら抽出を終了する（指定なしの時：全件）\r\n     * @return {ETAT} eTatArr 指定期間内のeTat配列\r\n     */\r\n    MappedETat.prototype.search = function (from, to, cap) {\r\n        to = to || from;    // to省略時は時刻指定(from=to)\r\n        cap = cap || Number.MAX_VALUE; // 指定なしの時：全件\r\n        var map = this._tatMap._map,\r\n            eTat = this._tatMap._arr,\r\n            abscissa = this._abscissa,\r\n            eTatArr = [],\r\n            start = 0,\r\n            end = 0;\r\n        // 検索対象のBOX一覧を生成する\r\n        abscissa.forEach(function(e){   // 存在しうる横軸のうち（tatが長時間の方から）\r\n            if (map[e.label]){          // 横軸が存在するものについて\r\n                var boxNum = e.i + Math.ceil(to / e.ms) - Math.floor(from / e.ms), // #45\r\n                    key = Math.floor(from / e.ms) * e.ms;\r\n                // 存在しうるKey値を終了時間が早い方から集計する\r\n                for(var j = 0; j <= boxNum; j++){\r\n                    // Key値が存在するものみが集計対象\r\n                    if (map[e.label][key]){ \r\n                        // かつ、Keyが持っている要素(eTatへの参照:k)が集計対象\r\n                        map[e.label][key].forEach(function(k){\r\n                            // かつ、from-toの期間に動いている要素(eTatのindex)が集計対象\r\n                            start = eTat[k].x - eTat[k].y;\r\n                            end   = eTat[k].x;\r\n                            if((start <= to) && (from <= end)){\r\n                                // かつ、戻り値の配列要素数がcap未満の場合が集計対象\r\n                                if(eTatArr.length < cap){\r\n                                    // 集計対象条件に合致する要素を、戻り値の配列に追加する\r\n                                    eTatArr = eTatArr.concat(eTat[k]);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    key += e.ms;    // 次のKey値\r\n                }\r\n            }\r\n        }, this);\r\n        return eTatArr;\r\n    };\r\n    \r\n    // newの戻り値\r\n    return MappedETat;\r\n}());\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class MappedArray\r\n * @classdesc 配列位置逆引きマップ\r\n *            <p>\r\n *            配列に格納されているオブジェクトのx値で、配列位置を高速検索するマップ<br>\r\n *            指定関数の戻り値(x)をキーとするマップを作成する\r\n *            <p>\r\n *            参考 {@link http://qiita.com/alucky0707/items/10052866719ba5c5f5d7}\r\n * \r\n * @param {Array}\r\n *            arr インデクスをつける対象の配列\r\n * @param {String|function}\r\n *            [getKey=\"\"] MappedArrayのKey値の取得方法\r\n *            <p>\r\n *            String指定のとき（デフォルト\"\"を含む）、配列要素の値(valueOf)\r\n *            <p>\r\n *            注： 0,00,\"0\"は同値、1,01,\"1\"は同値 Stringのとき、 配列要素が持つ指定要素の値\r\n *            <p>\r\n *            functionのとき、配列要素に指定関数を適用した戻り値\r\n *            <p>\r\n *            関数の引数：(配列要素オブジェクト、配列のインデックス、作成中のMappedArrayへの参照）\r\n * @param {Boolean}\r\n *            [isMappedMap] getKeyが2段Map用の配列を返却する\r\n * @return {object} Index arrに対するインデックス（連想配列名で検索）\r\n * @example _tatMap = new HJN_util.MappedArray(eTat, this._getKey, true);\r\n */\r\nvar MappedArray = (function() {    // #18\r\n    /** @constructor */\r\n    function MappedArray(arr, getKey, isMappedMap){\r\n        if(!(this instanceof MappedArray)) return new MappedArray();\r\n        this._arr = arr;\r\n        // getKeyによりIndex作成関数を設定する\r\n        if(!getKey || getKey === \"\"){\r\n            // getKey指定がないとき、配列の値\r\n            this._getKey = function(e){ return e.valueOf(); };\r\n        }else if ((typeof(getKey) === \"string\") && (getKey !== \"\")){    // #29\r\n            // getKeyが文字列のとき、配列内オブジェクトのgetKey要素の値\r\n            this._getKey = function(e){ return e[getKey]; };\r\n        }else if (typeof(getKey) === \"function\" ){  // #29\r\n            // getKeyが関数のとき、配列内オブジェクトに関数を適用した戻り値\r\n            this._getKey = getKey;\r\n        }else{  // 以外のときエラーログを出力し、getKey指定なしと同様、配列の値\r\n            console.error(\"MappedArrayの第二引数エラー：[ %o ]を無視します \",getKey);\r\n            this._getKey = function(e){ return e.valueOf(); };\r\n        }\r\n        // MappedArrayを作成する\r\n        if(!isMappedMap){\r\n            this._createMappedArray();          \r\n        }else{\r\n            this._createMappedMappedArray();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    MappedArray.prototype._createMappedArray = function() {\r\n        var key = \"\"; \r\n        this._map = this._arr.reduce(function(m, a, i) {\r\n            key = this._getKey.call(a, a, i, m);\r\n            m[key] = (m[key] || []).concat(i);\r\n            return m;\r\n        }, {});\r\n    };\r\n    /** @private */\r\n    MappedArray.prototype._createMappedMappedArray = function() {\r\n        var keys = [],\r\n            key = \"\",\r\n            mKey = \"\",\r\n            _getKey = this._getKey;\r\n        this._map = this._arr.reduce(function(m, a, i) {\r\n            keys = _getKey.call(a, a, i, m);\r\n            key = keys[1] || \"error\";\r\n            mKey = keys[0] || \"error\";\r\n            if(m[mKey] === undefined) m[mKey] = {};\r\n            m[mKey][key] = (m[mKey][key] || []).concat(i);\r\n            return m;\r\n        }, {});\r\n    };\r\n\r\n    // public\r\n    /**\r\n     * 値の存在チェック\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.has = function (keyValue) {\r\n        return keyValue in this._map;\r\n    };\r\n    /**\r\n     * 該当位置を配列で返す\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.indexes = function (keyValue) {\r\n        return this._map[keyValue] || [];\r\n    };\r\n    /**\r\n     * 該当する要素を配列で返す\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.search = function (keyValue) {    \r\n        var arr = this._arr;\r\n        return this.indexes(keyValue).reduce(function(m, i) {\r\n            m.push(arr[i]);\r\n            return m;\r\n        }, []);\r\n    };\r\n    /**\r\n     * Array.prototype.indexOf() 同等\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.indexOf = function (keyValue) {\r\n        var idxArr = this._map[keyValue],\r\n            i = idxArr ? idxArr.length : -1;\r\n        return (0 < i) ? idxArr[0] : -1;\r\n    };\r\n    /**\r\n     * Array.prototype.lastIndexOf() 同等\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.lastIndexOf = function (keyValue) {\r\n        var idxArr = this._map[keyValue],\r\n            i = idxArr ? idxArr.length : -1;\r\n        return (0 < i) ? idxArr[i-1] : -1;\r\n    };\r\n    \r\n    \r\n    return MappedArray;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-MappedETat.js\n// module id = 9\n// module chunks = 0","import MappedETat from './timeSeries-MappedETat.js';\r\nimport Cash from './timeSeries-Cash.js';\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class ETat\r\n * @extends Array\r\n * @classdesc eTat管理クラス、Arrayのメソッドを継承\r\n * @param {Array}\r\n *            [that] ETAT構造の配列\r\n */\r\nexport default function ETat(that) {\r\n    /** @private */\r\n    // cTpsのxからindexを引くMapを作成する #18\r\n    that.tatMap = new MappedETat(that);\r\n    // キャッシュを作成する\r\n    that.cash = Cash();\r\n\r\n    /**\r\n     * 指定期間のeTatを取得する<br>\r\n     * 性能対策としてキャッシュを持っている\r\n     * \r\n     * @memberof TimeSeries.ETat\r\n     * @param {Number}\r\n     *            [detailDateTime] 期間の基準時刻(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangeMinus] 抽出開始時刻を求める基準時刻から引く時間(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangePlus] 抽出終了時刻を求める基準時刻に足す時間(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangeUnit] 抽出開始終了時刻を丸める時間の単位(ミリ秒)\r\n     * @return {ETAT} 指定期間のETAT配列\r\n     */\r\n    that.sliceByRangeUnit = function (detailDateTime, detailRangeMinus, detailRangePlus, detailRangeUnit){\r\n        var rangeUnit = detailRangeUnit || TimeSeries.Tat.CYCLE;\r\n        var dt = Math.floor(detailDateTime / rangeUnit) * rangeUnit; // 中央時刻(ミリ秒)\r\n        var from = dt - detailRangeMinus * rangeUnit;  // #48\r\n        var to = dt + detailRangePlus  * rangeUnit;  // 幅（ミリ秒）\r\n        var eTatDetail = [{x: 0, y: 0.001, sTatIdx: 0}];    // tatMapが無い場合の返却値\r\n        if (this.tatMap){ // #18\r\n            // eTatDetailがレンジキャッシュにあるか確認する #30\r\n            eTatDetail = this.cash.getRangedCash(from, to);\r\n            if(eTatDetail === undefined){\r\n                // キャッシュヒットしないとき、eTatDetailを抽出し、キャッシュにセットする\r\n                eTatDetail = this.tatMap.search(from,to);\r\n                this.cash.setRangedCash(eTatDetail, from, to);\r\n            }\r\n        }\r\n        return eTatDetail;\r\n    }\r\n\r\n    return that\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-ETat.js\n// module id = 10\n// module chunks = 0","/**\r\n * @memberOf TimeSeries\r\n * @class Cash\r\n * @classdesc キャッシュ\r\n *            <p>\r\n *            キャッシュを保持させるオブジェクト\r\n * @param {Number}\r\n *            [size=10] キャッシュ最大件数（未対応機能、設定は無視される）\r\n */\r\nexport default (function() {\r\n    /** constructor */\r\n    function Cash(size){\r\n        size = size || 10;  // TODO 未使用\r\n        if(!(this instanceof Cash)) return new Cash(size);\r\n        // インスタンス変数\r\n        this._cash = {};    // キャッシュ {data:, count:, lastTime:}\r\n        this._ranges = [];  // RangedCash用 {key: ,from: , to:, }\r\n        this._size = size;  // キャッシュ最大件数\r\n    }\r\n    \r\n    /* method */\r\n    /**\r\n     * 第一引数のargumentsを配列に変換する<br>\r\n     * （注：引数が１つ以上あることを前提）\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            args 引数一覧（arguments）\r\n     * @return {Array} 引数の配列\r\n     */\r\n    Cash._arg2arr = function(args) {\r\n            return args.length === 1 ? [args[0]] : Array.apply(null, args);\r\n        };\r\n    /**\r\n     * cash判定Keyを取得する<br>\r\n     * （注：引数を'.'でつないだ文字列をkeyとするので、関数名長の上限を超える大きな配列は不可）\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            args 引数一覧（argumentsオブジェクト）\r\n     * @return {String} キャッシュキー用の文字列\r\n     */\r\n    Cash._getKey = function(args) {\r\n            var argsArr = this._arg2arr(args);\r\n            return argsArr.reduce(function(a,b){return a+'.'+b; });\r\n        };\r\n        \r\n    /* private */\r\n\r\n    /* public */\r\n    /**\r\n     * cashオブジェクトを、cashが無いときはundefinedを返却する<br>\r\n     * cashヒットした場合、cashの使用回数をカウントアップする\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            arguments 引数からキー文字列を定める\r\n     * @return {Number|undefined} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.getCash = function () {\r\n            if (arguments.length < 1) return undefined;\r\n            var args = Cash._arg2arr(arguments),\r\n                key = Cash._getKey(args);\r\n            if (key in this._cash){\r\n                var cash = this._cash[key];\r\n                cash.lastTime = new Date();\r\n                cash.count++;\r\n                return cash.data;\r\n            }else{\r\n                return undefined;\r\n            }\r\n        };\r\n    /**\r\n     * オブジェクトをcashする\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            cashVal キャッシュするオブジェクト\r\n     * @param {Object}\r\n     *            arguments 第二引数以降の、引数からキー文字列を定める\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.setCash = function () {\r\n            if (arguments.length < 2) return undefined;\r\n            var cashVal = arguments[0],\r\n                args = Cash._arg2arr(arguments).slice(1, arguments.length),\r\n                key = Cash._getKey(args);\r\n            this._cash[key] = {data: cashVal, count: 0, lastTime:new Date()};\r\n            return cashVal;\r\n        };\r\n\r\n    /**\r\n     * レンジキー(form,to)範囲内でキーマッチするcashを、cashが無いときはundefinedを返却する<br>\r\n     * キーは大小比較できる数値であることが前提\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            from 抽出するキャッシュキー最小値\r\n     * @param {Number}\r\n     *            to 抽出するキャッシュキーの最大値\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.getRangedCash = function (from, to) {\r\n            var range = this._ranges.find(function(e){\r\n                    return (e.from <= from && to <= e.to);\r\n                });\r\n            return (range !== undefined) ? this.getCash(range.from,range.to) : undefined;\r\n        };\r\n    /**\r\n     * レンジキー(from,to)指定でキャッシュする<br>\r\n     * キーは大小比較できること（通常、数値）、from-to期間内の既存のキャッシュは削除される\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            cashVal キャッシュするオブジェクト\r\n     * @param {Number}\r\n     *            from 抽出するキャッシュキー最小値\r\n     * @param {Number}\r\n     *            to 抽出するキャッシュキーの最大値\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.setRangedCash = function (cashVal, from, to) {\r\n            if (arguments.length < 3) return undefined;\r\n            // 登録キー範囲に包含される既存キャッシュを削除する\r\n            var count = 0;\r\n            this._ranges = this._ranges.filter(function(e){\r\n                    if (from <= e.from && e.to <= to){\r\n                        // 登録キャッシュ範囲内のキャッシュを削除する\r\n                        count += this._cash[e.key].count;   // 削除分のカウンタ合算\r\n                        delete this._cash[e.key];\r\n                        return false;\r\n                    }else{  // 登録キャッシュの範囲外の一覧を返却する\r\n                        return true;\r\n                    }\r\n                }, this);\r\n            // 引数をキャッシュに登録する\r\n            var key = Cash._getKey([from, to]);\r\n            this._ranges.push( {from: from, to: to, key: key} );\r\n            this.setCash(cashVal, from, to);\r\n            this._cash[key].count= count + 1;   // 再作成時はカウンタ合算値\r\n            return cashVal;\r\n        };\r\n\r\n    // newの戻り値\r\n    return Cash;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-Cash.js\n// module id = 11\n// module chunks = 0","import {VirtualResource} from './simulator.js';\r\nimport {VirtualApp} from './simulator.js';\r\nimport * as Util from '../util/util.js';\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualSystem\r\n * @classdesc 仮想システム\r\n *            <p>\r\n *            Web3層(Web-AP-DB)をシミュレートしたWebのTATログ生成する\r\n *            <p>\r\n *            Webサーバ<br>\r\n *            最大スレッド数： Apache 2.4 [MaxClients = 1024]<br>\r\n *            JBossトランザクションタイムアウト [default-timeout = 300 秒]<br>\r\n *            キュー長 ： Apache 2.4 ListenBackLog (511) + Linux\r\n *            tcp_max_syn_backlog(769=1024*0.75+1)、タイムアウトなし<br>\r\n *            APサーバ<br>\r\n *            最大スレッド数(maxThreads)<br>\r\n *            JBossトランザクションタイムアウト [default-timeout=300 秒]<br>\r\n *            DBサーバ 最大コネクション数(max_connections)\r\n * \r\n * @param {Number}\r\n *            [start = 1970/01/02 00:00:00)] シミュレート開始時刻（UNIX日付（ミリ秒））\r\n * @param {Number}\r\n *            [end = startの24時間後] シミュレート終了時刻（UNIX日付（ミリ秒））\r\n * @param {String}\r\n *            [resourcesJson] リソース指定JSONテキスト\r\n * @param {Boolean}\r\n *            [log=false] 詳細ログ出力有無\r\n * @example sim = simulator.VirtualSystem()\r\n */\r\nexport default (function() { // #53　\r\n    /** @constructor */\r\n    function VirtualSystem(start, end, resourcesJson, log){\r\n        if(!(this instanceof VirtualSystem)){\r\n            return new VirtualSystem(start, end, resourcesJson, log);\r\n        }\r\n        if (!resourcesJson) {\r\n            var jsonText =  '['\r\n                +   '{\"type\" :\"WEB\",\"thread\":1024,\"timeout\":300000, \"q\":1280, \"qWait\":0},'\r\n                +   '{\"type\" :\"AP\", \"thread\":20,  \"timeout\":300000, \"q\":1280, \"qWait\":0},'\r\n                +   '{\"type\" :\"DB\", \"thread\":2,   \"timeout\": 10000, \"q\":1000, \"qWait\":10000}'\r\n                + ']';\r\n            resourcesJson = JSON.parse(jsonText);\r\n        }\r\n        this.eTat = []; // シミュレートにより生成するTATログ出力先\r\n        var _resources = resourcesJson;\r\n        this._log = log ? log : false; // #53\r\n        this._start = +start || new Date(1970, 1, 2);   // シミュレート開始時刻\r\n        this._end = end || this._start + 24*60*60*1000; // シミュレート終了時刻（デフォルト：24時間後)\r\n        this._simulator = Util.Heap(                // イベント予約スケジュール（ヒープ）\r\n                function(obj){ return obj.getTime(); }, // プライオリティの判定\r\n                function(obj){ return obj; });  // 削除対象の判定 #61\r\n        this._now = 0; // シミュレーション時の現在時刻\r\n        // リソースを設定する\r\n        this._resources = {}\r\n        for (var i = 0; i < _resources.length; i++) {\r\n            var e = _resources[i];\r\n            e.log = e.log ? e.log : this._log; // #53\r\n            this._resources[e.type] = VirtualResource(this, // #61\r\n                    e.type, e.thread, e.timeout, e.q, e.qWait, e.log);\r\n        };\r\n        VirtualSystem.debug = this; // ★\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * 仮想クライアントをスケジューラに登録する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {String}\r\n     *            [userName = \"Default_\"] ログに出力するユーザ名\r\n     * @param {String}\r\n     *            [message = \"\"] ログの末尾に出力するデータ\r\n     * @param {Number}\r\n     *            [num = 3] 期間内に生成する仮想クライアントの数\r\n     * @param {Number}\r\n     *            [start = Util.S2D(\"1970/01/02 00:00:00\")]\r\n     *            仮想クライアント生成開始時刻（UNIX時刻の数値、ミリ秒）\r\n     * @param {Number}\r\n     *            [end = startの0.1秒後] 仮想アプリケーション強制終了時刻（UNIX時刻の数値、ミリ秒）\r\n     * @param {Object}\r\n     *            model 仮想クライアントが実行する取引モデル\r\n     */\r\n    VirtualSystem.prototype.setClients = function(userName, message, num, start, end, model) {\r\n        userName = userName || \"Default_\";\r\n        message = message || \"\";\r\n        num = (typeof(num) === \"number\") ? num : 1; // #61\r\n        start = +start || Util.S2D(\"1970/01/02 00:00:00\");\r\n        end = +end || start + 100;\r\n        // baseModelが指定されているとき、modelに展開する\r\n        if (model.baseModel){\r\n            model = VirtualSystem.getModel(\r\n                model.baseModel.holds, model.baseModel.tatMin, model.baseModel.tat,\r\n                model.sequence, model.times, model.thinkTimeMin, model.thinkTime);\r\n        }\r\n        // modelにmessageを設定する\r\n        if (typeof(model.message) === \"string\") {\r\n            model.message += message;\r\n        } else {\r\n            model.message = message;\r\n        }\r\n        // 仮想APを登録する\r\n        var checkStart = start;\r\n        var r = Util.Random((end - start) / num);\r\n        var t = start;\r\n        for (var i = 0; i < num; i++) {\r\n            // 仮想APを作成する\r\n            var vApp = VirtualApp(userName + i, model);\r\n            // 仮想APに開始時刻（指数分布）を設定し、登録する\r\n            t += Math.round(r.exponential());\r\n            this.setEvent(vApp.start(t));\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * イベントをスケジューラに登録する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Object}\r\n     *            event 仮想クライアントもしくは仮想リソースのイベント\r\n     */\r\n    VirtualSystem.prototype.setEvent = function(event) {\r\n        this._simulator.push(event);\r\n    }\r\n\r\n    /**\r\n     * スケジューラからイベントを削除する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Object}\r\n     *            event 仮想クライアントもしくは仮想リソースのイベント\r\n     */\r\n    VirtualSystem.prototype.removeEvent = function(event) {\r\n        this._simulator.del(event);\r\n    }\r\n\r\n    /**\r\n     * シミュレーションを実行する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @return {eTat} シミュレート実行結果のログ（this.eTat）\r\n     */\r\n    VirtualSystem.prototype.execute = function() {\r\n        var event, events;\r\n        // 処理対象がなくなるか、シミュレート終了時刻になるまでシミュレートする\r\n        while(0 < this._simulator.size() &&\r\n                this._simulator.top().getTime() <= this._end ) {\r\n            // 次にイベントを迎える仮想APを取り出し、「次の処理」をシミュレートする\r\n            event = this._simulator.pop();\r\n            this._now = event.getTime(); // #59\r\n            events = event.next(this);\r\n            // 「次の処理」のシミュレートに伴い発生したイベントを、スケジュールする\r\n            while (events.length) {\r\n                this._simulator.push(events.pop());\r\n            }\r\n        }\r\n        // シミュレーション終了後処理（処理中のvAppを強制終了する） #59\r\n        while(0 < this._simulator.size()){\r\n            event = this._simulator.pop();\r\n            if (event._finish) {\r\n                event._finish(this, \"N_EoS\", \"\", this._end);\r\n            }\r\n        }\r\n        // シミュレーション終了後処理（リソース開放待ちのvAppを強制終了する） #59\r\n        for (var key in this._resources){\r\n            this._resources[key]._finish(this, \"N_EoS\", \"\", this._end);\r\n        }\r\n        \r\n        return this.eTat;\r\n    };\r\n\r\n    /**\r\n     * リソースを取得する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {String}\r\n     *            [name = \"unlimited\"] 仮想リソース名\r\n     * @return {Object} 仮想リソース（登録されていないときは、新たにholdCapacity=1の仮想リソースを登録）\r\n     */\r\n    VirtualSystem.prototype.getResouce = function(name) {\r\n        if (typeof(this._resources[name]) === \"undefined\") {\r\n            this._resources[name] = VirtualResource(this, name);\r\n        }\r\n        return this._resources[name];\r\n    };\r\n\r\n    /**\r\n     * シミュレーション現在時刻（処理中のイベントの時刻）を返却する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualSystem.prototype.getTime = function() {\r\n        return this._now;\r\n    };\r\n\r\n\r\n    // Static Method\r\n    /**\r\n     * 取引モデルを取得する（ユーティリティ）\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Array}\r\n     *            [baseModel = []] 使用リソースの一覧[\"WEB\",\"AP\",\"DB\"]\r\n     * @param {Number}\r\n     *            [tat = 5] 使用リソースの平均取得時間＆平均開放時間\r\n     * @param {Number}\r\n     *            [tatMin = 2] 使用リソースの最小取得時間＆最小開放時間\r\n     * @param {Array}\r\n     *            [sequence = []] イベントシーケンス\r\n     * @param {Number}\r\n     *            [times = undefined] イベントシーケンスの繰り返し回数（未指定時:1)\r\n     * @param {Number}\r\n     *            [thinkTime= undefined] イベントシーケンス終了時に再実行する場合の平均再開時間（未指定時:500)\r\n     * @param {Number}\r\n     *            [thinkTimeMin = undefined]\r\n     *            イベントシーケンス終了時に再実行する場合の最小再開時間（未指定時:thinkTimeと同じ）\r\n     * @param {String}\r\n     *            [message = \"\"] 自動生成ログの末尾に追加する文字列\r\n     * @return {Object} 取引モデル\r\n     */\r\n    VirtualSystem.getModel = function(baseModel, tatMin, tat, sequence, times, thinkTimeMin, thinkTime, message) {\r\n        baseModel = baseModel || [];\r\n        tatMin = tatMin || 2;\r\n        tat = tat || 5;\r\n        message = message || \"\";\r\n        sequence = sequence || [\r\n                {tatMin:6,   tat:15,  note:\"Req\",     hold:\"DB\",    free:[]},\r\n                {tatMin:70,  tat:100, note:\"selectA\", hold:\"TBL_A\", free:[\"TBL_A\"]},\r\n                {tatMin:150, tat:200, note:\"updateB\", hold:\"TBL_B\", free:[]},\r\n                {tatMin:30,   tat:50,  note:\"Res\",     hold:\"\",      free:[\"TBL_B\",\"DB\"]}\r\n            ];\r\n        var model = {sequence :[], message : message}; // 戻り値\r\n        if (typeof(times) === \"number\") model.times = times;\r\n        if (typeof(thinkTimeMin) === \"number\") model.thinkTimeMin = thinkTimeMin;\r\n        if (typeof(thinkTime) === \"number\") model.thinkTime = thinkTime;\r\n        \r\n        // baseModelを返却用シーケンスに展開する\r\n        baseModel.forEach( function(e) {\r\n            model.sequence.push({hold:e, tatMin:tatMin, tat:tat, free:[]});\r\n        });\r\n        // 指定シーケンスを返却用シーケンスに追加する\r\n        model.sequence = model.sequence.concat(sequence);\r\n\r\n        // 返却用シーケンスに、holdingを追加するとともにシーケンス終了時未開放リソースを取得する\r\n        var resources = []; // #61\r\n        var holding = []; // #59\r\n        model.sequence.forEach( function(tran) { // #61\r\n            // tatMinがtatより大きいとき、tatをtatMin一定とする #59\r\n            if (tran.tat < tran.tatMin) tran.tat = tran.tatMin;\r\n            // 処理開始時にholdしているリソース一覧をholdingに登録する #59\r\n            tran.holding = [];\r\n            resources.forEach(function(r) {tran.holding.push(r)});\r\n            // 未開放リソース一覧を更新する\r\n            if (typeof(tran.hold) !== \"undefined\" && tran.hold !== \"\") {\r\n                resources.push(tran.hold);                \r\n            }\r\n            if (tran.free) {\r\n                tran.free.forEach( function(free){\r\n                    resources.some( function(r, i){\r\n                        if (r == free) {\r\n                            resources.splice(i,1);\r\n                            return true;\r\n                        }\r\n                    })    \r\n                })\r\n            }\r\n        }, this);\r\n        // シーケンス終了時未開放リソースが残っているとき、返却用シーケンスにリソース開放処理を追加する\r\n        if (0 < resources.length){\r\n            model.sequence = model.sequence.concat(\r\n                    [{hold: \"\", tatMin: tatMin * baseModel.length, tat: tat * baseModel.length,\r\n                        free: resources.reverse()}]);\r\n        }\r\n        return model;\r\n    };\r\n    \r\n    /* new */\r\n    return VirtualSystem;\r\n}());\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-VirtualSystem.js\n// module id = 12\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport Graph from '../tatLogDiver/tatLogDiver-Graph.js';\r\nimport * as TimeSeries from '../timeSeries/timeSeries.js';\r\n\r\n/**\r\n * @memberOf tatLogDiver\r\n * @class MenuConfigDetailGraph\r\n * @classdesc DetailGraph用メニューHTML定義\r\n * \r\n */\r\nexport default function MenuConfigDetailGraph() {} // #27\r\n\r\nMenuConfigDetailGraph.config = function () {\r\n    var prefix = \"DetailGraph\";\r\n    var c = new  Util.Config(prefix);\r\n    // Config設定画面定義\r\n    c \r\n        .name(\"D_RANGE\").label(null,\"Range:\")\r\n            .number(\"D_RANGE_MINUS\", \" - \", \"\", \"1\", 'style=\"width:40px;\"', func_D)\r\n            .number(\"D_RANGE_PLUS\"  , \" + \", \"\", \"2\", 'style=\"width:40px;\"', func_D)\r\n        .name(\"D_UNIT\").startTag(\"select\")\r\n            .option(c.def(\"D_UNIT_SEC\",         1000), null, \"sec\",   false, null, func_D) // #48\r\n            .option(c.def(\"D_UNIT_10SEC\",      10000), null, \"10sec\", true,  null, func_D)\r\n            .option(c.def(\"D_UNIT_MIN\",        60000), null, \"min\",   false, null, func_D)\r\n            .option(c.def(\"D_UNIT_HOUR\",     3600000), null, \"hour\",  false, null, func_D)\r\n            .option(c.def(\"D_UNIT_6HOUR\",   21600000), null, \"6hour\", false, null, func_D)\r\n            .option(c.def(\"D_UNIT_DAY\",     86400000), null, \"day\",   false, null, func_D)\r\n            .option(c.def(\"D_UNIT_YEAR\", 31536000000), null, \"year\",  false, null, func_D)\r\n        .endTag()\r\n    ;\r\n}\r\n\r\n// Config登録関数定義\r\nfunction func_D(){\r\n    clearTimeout(HJN.timer);\r\n    HJN.timer = setTimeout(function(){\r\n            Util.Logger.ShowLogTextInit(\"[-:HJN.init.setDetailRange]start---------------\",\"calc\");\r\n            // 表示中Plotsのrangeを更新する #30\r\n            var i = HJN.Plot.List.findIndex(function(e){ return (e.radio === true); });\r\n            var plot = HJN.Plot.List[i];\r\n            plot.rangePlus  = Util.Config.DetailGraph.getConfig(\"D_RANGE_PLUS\"); // #27\r\n            plot.rangeMinus = Util.Config.DetailGraph.getConfig(\"D_RANGE_MINUS\");\r\n            plot.rangeUnit = Util.Config.DetailGraph.getConfig(\"D_UNIT\"); // #48\r\n            plot.rangeUnit = plot.rangeUnit  ? plot.rangeUnit  : TimeSeries.Tat.CYCLE; // #57\r\n            Util.Config.DetailGraph.setValueByKey(\"D_UNIT\", plot.rangeUnit);\r\n\r\n            // 下段データを登録する\r\n            var tat = new TimeSeries.Tat(HJN.init.GetSliderRangedEtat()); // #75\r\n            HJN.chartD.setSeriesSet(tat);\r\n            // 下段グラフを描画する\r\n            Graph.prototype.update.call(HJN.chartD, HJN.chartD.seriesSet);\r\n        }, 750);    // 750ms 値の変更がなかった時に、処理を開始する\r\n };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-MenuConfigDetailGraph.js\n// module id = 13\n// module chunks = 0","import css from '../../libs/dygraph.css';\r\nimport css from './tatLogDiver.css';\r\nimport Init from \"./tatLogDiver-Init.js\";\r\nimport {HJN} from \"./tatLogDiver-HJN.js\";\r\nimport Graph from \"./tatLogDiver-Graph.js\";\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\",function(eve){\r\n    Init(\"chart\");      // チャートを作成する\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver.js\n// module id = 14\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!./dygraph.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./dygraph.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./dygraph.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/dygraph.css\n// module id = 15\n// module chunks = 0","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * Default styles for the dygraphs charting library.\\n */\\n\\n.dygraph-legend {\\n  position: absolute;\\n  font-size: 14px;\\n  z-index: 10;\\n  width: 250px;  /* labelsDivWidth */\\n  /*\\n  dygraphs determines these based on the presence of chart labels.\\n  It might make more sense to create a wrapper div around the chart proper.\\n  top: 0px;\\n  right: 2px;\\n  */\\n  background: white;\\n  line-height: normal;\\n  text-align: left;\\n  overflow: hidden;\\n}\\n\\n/* styles for a solid line in the legend */\\n.dygraph-legend-line {\\n  display: inline-block;\\n  position: relative;\\n  bottom: .5ex;\\n  padding-left: 1em;\\n  height: 1px;\\n  border-bottom-width: 2px;\\n  border-bottom-style: solid;\\n  /* border-bottom-color is set based on the series color */\\n}\\n\\n/* styles for a dashed line in the legend, e.g. when strokePattern is set */\\n.dygraph-legend-dash {\\n  display: inline-block;\\n  position: relative;\\n  bottom: .5ex;\\n  height: 1px;\\n  border-bottom-width: 2px;\\n  border-bottom-style: solid;\\n  /* border-bottom-color is set based on the series color */\\n  /* margin-right is set based on the stroke pattern */\\n  /* padding-left is set based on the stroke pattern */\\n}\\n\\n.dygraph-roller {\\n  position: absolute;\\n  z-index: 10;\\n}\\n\\n/* This class is shared by all annotations, including those with icons */\\n.dygraph-annotation {\\n  position: absolute;\\n  z-index: 10;\\n  overflow: hidden;\\n}\\n\\n/* This class only applies to annotations without icons */\\n/* Old class name: .dygraphDefaultAnnotation */\\n.dygraph-default-annotation {\\n  border: 1px solid black;\\n  background-color: white;\\n  text-align: center;\\n}\\n\\n.dygraph-axis-label {\\n  /* position: absolute; */\\n  /* font-size: 14px; */\\n  z-index: 10;\\n  line-height: normal;\\n  overflow: hidden;\\n  color: black;  /* replaces old axisLabelColor option */\\n}\\n\\n.dygraph-axis-label-x {\\n}\\n\\n.dygraph-axis-label-y {\\n}\\n\\n.dygraph-axis-label-y2 {\\n}\\n\\n.dygraph-title {\\n  font-weight: bold;\\n  z-index: 10;\\n  text-align: center;\\n  /* font-size: based on titleHeight option */\\n}\\n\\n.dygraph-xlabel {\\n  text-align: center;\\n  /* font-size: based on xLabelHeight option */\\n}\\n\\n/* For y-axis label */\\n.dygraph-label-rotate-left {\\n  text-align: center;\\n  /* See http://caniuse.com/#feat=transforms2d */\\n  transform: rotate(90deg);\\n  -webkit-transform: rotate(90deg);\\n  -moz-transform: rotate(90deg);\\n  -o-transform: rotate(90deg);\\n  -ms-transform: rotate(90deg);\\n}\\n\\n/* For y2-axis label */\\n.dygraph-label-rotate-right {\\n  text-align: center;\\n  /* See http://caniuse.com/#feat=transforms2d */\\n  transform: rotate(-90deg);\\n  -webkit-transform: rotate(-90deg);\\n  -moz-transform: rotate(-90deg);\\n  -o-transform: rotate(-90deg);\\n  -ms-transform: rotate(-90deg);\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./libs/dygraph.css\n// module id = 16\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 17\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver.css\n// module id = 18\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@CHARSET \\\"UTF-8\\\";\\r\\n/*   ****1**** ****2**** ****3**** ****4**** ****5**** ****6**** ****7***** */\\r\\n/* リセットCSS */\\r\\nhtml, body, h1, h2, h3, h4, ul, ol, dl, li, dt, dd, p, div, span, img, a, table, tr, th, td, selector{\\r\\n margin: 0; padding: 0; border: 0; font-weight: normal; font-size: 100%; vertical-align:baseline;\\r\\n -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }\\r\\narticle, header, footer, aside, figure, figcaption, nav, section { display:block; }\\r\\nbody { line-height: 1; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; }\\r\\nol, ul { list-style: none; list-style-type: none; }\\r\\n*:focus { outline: 0; }\\r\\n\\r\\n/* TAT log diver */\\r\\nbody\\t{ font-size: 12px; font-family: \\\"\\\\30E1\\\\30A4\\\\30EA\\\\30AA\\\",\\\"Meiriyo\\\",\\\"\\\\30D2\\\\30E9\\\\30AE\\\\30CE\\\\89D2\\\\30B4   ProN W3\\\",\\\"Hiragino Kaku Gothic ProN\\\",\\\"sans-serif\\\"; }\\r\\nnav \\t{ height: 36px; }\\r\\ninput\\t{ border-width: 1px; font-size: 12px; }\\r\\nselect  { background: #eee;}\\r\\n#Simulator {overflow: auto; resize: both; position: absolute; z-index: 100; background: rgba(255,255,255,0.5); }\\r\\n.statusbar\\t{ z-index: 99; visibility:visible; padding: 5px; background: #fff; }\\r\\n.statusbar > iframe { overflow: hidden; border: 0; width: 100%; }\\r\\n.lineViewer {margin: 10px 0px 2px; overflow: hidden; padding: 0px; border: 1px #cccccc dotted; }\\r\\n.hjnCode { font-family: \\\"monospace\\\",\\\"Consolas\\\", \\\"\\\\FF2D\\\\FF33\\\\30B4\\\\30B7\\\\30C3\\\\30AF\\\";}\\r\\n/* draggable box */\\r\\n.hjnDraggableBox {}\\r\\n.hjnDraggableItem:hover {background: rgba(128, 128, 128, 0.2); transition: all 0.2s; }\\r\\nfooter { position: fixed; bottom: 0%; text-align: right; font-size: smaller; }\\r\\n\\r\\n/* ハンバーガーメニュー */\\r\\n.hjnBurgerTray { position :fixed; display: inline-block; visibility: hidden; z-index: 96;\\r\\n\\ttop :0; right :0; width :305px; height:100%; padding :0 18px 0 0; background :#fff; }\\r\\n/* ハンバーガーボタン */\\r\\n.hjnCtrlBox { position: relative; float: right; cursor: pointer; z-index: 98;\\r\\n\\twidth: 40px; height: 40px; background-color: #fff; visibility: visible;\\r\\n\\tborder: 1px solid #ccc; box-shadow:\\t1px 1px 1px #ccc; border-radius: 4px; \\r\\n\\tline-height: 12px; box-sizing: border-box;\\ttransition: all 0.1s; }\\r\\n.hjnCtrlBox:hover { border: #ccc; }\\r\\n.hjnCtrlBox:active { border: 1px solid #999;  }\\r\\n.hjnBurger { display: none; }\\r\\n.hjnBurger + label span { top: 17px; height: 4px; border-radius: 2px;\\r\\n\\tposition: absolute; left: 6px; width: 69%; background-color: #888; }\\r\\n.hjnBurger + label span::before, .hjnBurger + label span::after { border-radius: 2px;\\r\\n\\tposition: absolute; width: 26px; height: 4px; background: #888;\\r\\n\\tdisplay: block; content: ''; transition: transform 0.1s; }\\r\\n.hjnBurger + label span::before { top: -8px; }\\r\\n.hjnBurger + label span::after { top: 8px; }\\r\\n.hjnBurger:checked + label span { background: transparent; }\\r\\n.hjnBurger:checked + label span::before { transform: translateY(8px) rotate(-45deg); }\\r\\n.hjnBurger:checked + label span::after { transform: translateY(-8px) rotate(45deg); }\\r\\n\\r\\n/* メニュー 全体 */\\r\\n.hjnBurgerTitle { /* ハンバーガーメニューオープン時の見出し */\\r\\n\\tposition: absolute; visibility: visible; color: #999; background:#fff; width: 100%;\\r\\n\\tpadding: 0 98px 0 15px; opacity: 0; z-index: 97; background-color: transparent;\\r\\n\\ttransform: translate3d(0, -15px, 0); transition: transform 0.1s, opacity 0.5s; }\\r\\n.hjnBurgerTitle p { word-wrap: break-word; line-height: 18px; width: 160px; }\\r\\n.hjnBurger:checked ~ .hjnBurgerTitle { transform: none;  opacity: 1; }\\r\\n.hjnBurgerWrap { position: absolute;  visibility: visible; width :100%; height :100%;\\r\\n\\tbackground: #fff; opacity: 0.9;\\ttop: 0; right: -100%; transition: right 0.1s;\\r\\n\\tpadding: 43px 0 0 0; overflow: scroll;}\\r\\n.hjnBurger:checked ~ .hjnBurgerWrap { right: 0; }\\r\\n/* Copyright表示 */\\r\\n.hjnBurgerTitle a {\\r\\n    color: #4d4e53; text-decoration: none; border-bottom: 1px dotted #afafaf; }\\r\\n/* モードボタン */\\r\\n.hjnBoxSwitch { display: none; }\\r\\n.hjnBoxSwitch + label span::before, .hjnBoxSwitch + label span::after\\r\\n\\t\\t{ display: inline-block; text-align:center; transition: all 0.1s; width: 100%}\\r\\n.hjnBoxSwitch + label span::before, .hjnBoxSwitch:checked + label span::after\\r\\n\\t\\t{ color: #ddd; }\\r\\n.hjnBoxSwitch + label span::after, .hjnBoxSwitch:checked + label span::before \\r\\n\\t\\t{ color: #888; font-weight: bold; }\\r\\n\\r\\n#hjnBoxPlaceOn + label span::before { content: \\\"Place on\\\"; }\\r\\n#hjnBoxPlaceOn + label span::after  { content: \\\"side\\\"; }\\r\\n#chartZoom + label span::before, #chartDZoom + label span::before  { content: \\\"reset zoom\\\"; }\\r\\n/* スイッチラベル */\\r\\n.hjnBoxOn { display: none; }\\r\\n.hjnBoxOn + label { text-align:center; color: #ddd; }\\r\\n.hjnBoxOn:checked + label { color: #888; font-weight: bold;}\\r\\n\\r\\n /* アコーデオンメニュー */\\r\\n.hjnAccordion { list-style-type: none; margin: 0; padding: 0; }\\r\\n.hjnMenuLv1 { position:rerative; margin: 0 0 0 10px; }\\r\\n.hjnMenuLv1 > input { display: none; }\\r\\n.hjnMenuLv1 > label::before { content: \\\"\\\"; transition: 0.1s; transform: rotate(-90deg);\\r\\n /* ▲ */border-style: solid; border-color: #aaa transparent transparent transparent; border-width: 10px 5px 0 5px;\\r\\n\\t\\tdisplay: inline-block; vertical-align: middle; margin: 10px 5px 10px 10px; }\\r\\n.hjnMenuLv1 > input:checked ~ label::before { transform: rotate(0deg); }\\r\\n\\r\\n.hjnMenuLv1 > label, .hjnMenuLv1 > a { display: block; cursor: pointer;\\r\\n\\t\\tborder-bottom: 1px solid #fff; background: #eee; transition: all 0.1s; }\\r\\n.hjnMenuLv1 > label:hover { background: rgba(0,0,0,0.2); }\\r\\n.hjnMenuLv1 > label:active { background: #999;  }\\r\\n.hjnMenuLv1 > input:checked ~ .hjnMenuLv2 { height: auto; padding: 10px; }\\r\\n\\r\\n/* 詳細メニューリスト   */\\r\\n.hjnMenuLv2 { transition: 0.1s; height: 0; overflow: hidden; padding: 0 10px; background: #ddd; }\\r\\n.hjnMenuLv2 ol { display: block; margin: 2px 0; }\\r\\n.hjnMenuLv2 label { height: 12px; }\\r\\n.hjnLabel4Input:hover,  .hjnButton4Input:hover { background: rgba(0,0,0,0.2); }\\r\\n.hjnLabel4Input:active, .hjnButton4Input:active { background: #999; }\\r\\n/* 詳細メニューリスト  ボタン */\\r\\n.hjnMenuLv2 .hjnButton4Input label, .hjnMenuLv2 label.hjnButton4Input, .hjnPlot \\r\\n\\t\\t{ display: block; padding: 8px 12px 8px 22px;}\\r\\n.hjnButton4Input { position: relative; display: block; overflow: hidden; transition: all 0.1s;\\r\\n\\t\\ttext-decoration: none; color: #000; border: outset #fff; border-radius: 14px; }\\r\\n.hjnButton4Input:active { border: inset #fff; }\\r\\n.hjnMenuLv2 li .hjnButton4Input { padding: 8px 12px 8px 22px; } /* Download用 */\\r\\n.hjnMenuLv2 .hjnButton4Input input[type=\\\"file\\\"] { display: none; } /* File Open用 */\\r\\n/* 詳細メニューリスト  文字 */\\r\\n.hjnMenuLv2 .hjnLabel4Input { display: inline-block; position: relative;\\r\\n\\t\\t border-radius: 14px; padding-left: 1em; cursor: pointer; transition: all 0.1s; }\\r\\n.hjnMenuLv2 input { height: 12px; text-align: right; border-radius: 5px; }\\r\\n.hjnMenuLv2 .hjnLabel4Input input[type=\\\"radio\\\"] { position: absolute;\\r\\n\\t\\t top: 0; bottom: 0; left: 0; margin: auto;  cursor: pointer; }\\r\\n.hjnMenuLv2 select.hjnLabel4Input  {padding-left: 0; }\\r\\n/* 詳細メニューリスト  Legend */\\r\\n.hjnMenuLv2 .legend {cursor: pointer; width:206px; height: auto;\\r\\n \\t\\tdisplay: inline-block; padding: 8px 12px 8px 22px; border-radius: 14px;}\\r\\n.hjnMenuLv2 .legend > input { display: inline; cursor: pointer; margin: auto -15px; }\\r\\n.hjnMenuLv1 > input:checked ~ .hjnMenuLv2 .legend > input { position: absolute; }\\r\\n.hjnMenuLv2 .legend:hover { font-style: oblique; } \\r\\n\\r\\n/* dygraph用設定 */\\r\\n.item.active{ background: rgba(0,0,0,0.2) !important; border: rgba(0,0,0,0.2) !important; }\\r\\n.column { display: inline-block; }\\r\\n.dygraph-annotation { color: rgba(0,0,0,0.8) !important;\\r\\n\\t\\tbackground-color: rgba(256,256,256,0.2) !important; width: 40px !important; }\\r\\n\\r\\n/* Bottom detail graph用設定 */\\r\\n#detailTimeRange { padding: 8px; }\\r\\n#chartPlots div { float: left; padding: 2px 0; top: 5vh; }\\r\\n.hjnPlot { margin: 2px 0; width:250px; }\\r\\n.hjnPlot > label { position:relative; margin: 2px 0px; background-color: #eee;\\r\\n\\t\\tpadding: 0px 5px; cursor: pointer; border-radius: 5px; }\\r\\n.hjnPlot > input[type=checkbox] { /* 削除アイコン */\\r\\n\\t\\tvisibility: hidden; z-index: 98; float: left; margin: -2px 0 0 0;\\r\\n\\t\\tbackground-color: #fff; box-shadow: 1px 1px 1px #ccc; height: 16px; width: 16px; }\\r\\n.hjnPlot > input[type=checkbox] + label{ /* 削除アイコンの横棒*/\\r\\n\\t\\tvisibility: hidden; z-index: 97; float: left; left: -13px; top: 2px;\\r\\n\\t\\tbackground: #aaa; height: 3px; width: 9px; padding: 0; border-radius: 2px; }\\r\\n.hjnPlot:hover > input[type=checkbox], .hjnPlot:hover > input[type=checkbox] + label\\r\\n\\t\\t{ visibility: visible; cursor: pointer; }\\r\\n.hjnPlot > input[type=radio] { display:none; }\\r\\n.hjnPlot > input[type=radio]:checked + label { background-color: #ccc; }\\r\\n.hjnPlot:hover { font-weight: bold; }\\r\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./src/tatLogDiver/tatLogDiver.css\n// module id = 19\n// module chunks = 0","import {Logger} from './util.js';\r\n\r\n/**\r\n * @memberOf Util\r\n * @class TouchPanel\r\n * @classdesc タッチパネル用ツール\r\n *            <p>\r\n *            参考 {@link https://code.i-harness.com/ja/q/4f2389}\r\n * \r\n * @param {Number}\r\n *            [average=0.5] 平均値\r\n * @example var r = HJN_util.TouchPanel(10), val = r.exponential();\r\n */\r\nexport default (function() { // #56\r\n    /** @constructor */\r\n    function TouchPanel(average){\r\n        if(!(this instanceof TouchPanel)) return new TouchPanel(average);\r\n        this._average = average || 0.5;\r\n    }\r\n    /** @private */\r\n\r\n    // public\r\n    /**\r\n     * タッチデバイスか判定する\r\n     * <p>\r\n     * クラスロード後、touchstart と mouosemove の初回のイベントがどちらが先に発生したかにより判定する 参考\r\n     * {@link https://lab.syncer.jp/Web/JavaScript/Snippet/44/}\r\n     * \r\n     * @memberof TouchPanel\r\n     * @return {String} 先に検出したイベントがマウス移動のとき false、以外のときtrue\r\n     * \r\n     */\r\n    TouchPanel.isTouchableDevice = function() {\r\n        Logger.ShowText([TouchPanel._deviceType]);\r\n        return  (TouchPanel._deviceType === \"MOUSE\") ? false : true; // #78\r\n    }\r\n\r\n    // タッチデバイスか判定する（クラス定数）\r\n    TouchPanel._deviceType = \"SHIMULATED_TOUCH\";\r\n    function detectDeviceType(event) {\r\n        TouchPanel._deviceType = event.changedTouches ? \"TOUCH\" : \"MOUSE\" ;\r\n        document.removeEventListener(\"touchstart\", detectDeviceType) ;\r\n        document.removeEventListener(\"mousemove\", detectDeviceType) ;\r\n    }\r\n    document.addEventListener(\"touchstart\", detectDeviceType) ;\r\n    document.addEventListener(\"mousemove\", detectDeviceType) ;\r\n\r\n    /**\r\n     * タッチパネル操作をマウス操作に転送する\r\n     * <p>\r\n     * 参考 {@link https://code.i-harness.com/ja/q/4f2389}\r\n     * \r\n     * @memberof Util.TouchPanel\r\n     * @param {Object}\r\n     *            element 対象dom要素\r\n     * @param {Boolean}\r\n     *            [isStopTouch=false] 元のタッチのデフォルトイベントを消すか（個別に登録されているリスナーには無関係）\r\n     * \r\n     * @example HJN_util.DispatchEventTouchToMouse();\r\n     */\r\n    TouchPanel.DispatchEventTouchToMouse = function(element, isStopTouch) { // #22\r\n        element.addEventListener(\"touchstart\", touchHandler, true);\r\n        element.addEventListener(\"touchmove\", touchHandler, true);\r\n        element.addEventListener(\"touchend\", touchHandler, true);\r\n        element.addEventListener(\"touchcancel\", touchHandler, true);\r\n        return;\r\n\r\n        function touchHandler(ev) {\r\n            var bIgnoreChilds = false;\r\n            if( !window.__TOUCH_TYPES ) {\r\n                window.__TOUCH_TYPES  = { touchstart:'mousedown', touchmove:'mousemove', touchend:'mouseup' };\r\n                window.__TOUCH_INPUTS = { INPUT: 1, TEXTAREA: 1, SELECT: 1, OPTION: 1,\r\n                                         'input':1,'textarea':1,'select':1,'option':1 };\r\n            }\r\n            var bSame = (ev.target == this);\r\n            if (bIgnoreChilds && !bSame) { return; }\r\n            // Get if object is already tested or input type\r\n            var b = (!bSame && ev.target.__ajqmeclk);\r\n            // allow multi-touch gestures to work\r\n            if (b === true || !ev.touches || ev.touches.length > 1 || !window.__TOUCH_TYPES[ev.type]) { return; }\r\n\r\n            var oEv = (!bSame && typeof b != 'boolean') ? ev.target.getAttribute('events') : false;\r\n            var b = (!bSame)\r\n                  ? (ev.target.__ajqmeclk = oEv\r\n                      ? (oEv['click'] || oEv['mousedown'] || oEv['mouseup'] || oEv['mousemove']) \r\n                      : false )\r\n                  :false;\r\n            // allow default clicks to work (and on inputs)\r\n            if (b || window.__TOUCH_INPUTS[ev.target.tagName]) { return; } \r\n\r\n            var touch = ev.changedTouches[0];\r\n            var tmpClientX = touch.clientX;\r\n            var tmpClientY = touch.clientY;\r\n            // クリックに変換するタップ誤差範囲\r\n            var CLICK_MARGIN = 20; // px\r\n            var CLICK_DELAY = 1000; // ms\r\n\r\n            // 前回touchstart時の座標と時刻が一定範囲内の時、dygraphがクリックと判定するよう補正する\r\n            if ((ev.type === \"touchstart\" || ev.type === \"touchend\") &&\r\n                    this.startTouch &&\r\n                    Math.abs(this.startTouch.x - touch.clientX) < CLICK_MARGIN && // タッチ補正幅(px)\r\n                    Math.abs(this.startTouch.y - touch.clientY) < CLICK_MARGIN &&\r\n                    +new Date() - this.startTouch.t < CLICK_DELAY) { // タッチ時間(ms)\r\n                // 位置補正\r\n                tmpClientX = this.startTouch.x;\r\n                tmpClientY = this.startTouch.y;\r\n            } else if (ev.type === \"touchstart\"){\r\n                // touchstart時の座標と時刻を退避する\r\n                this.startTouch = {x: touch.clientX, y: touch.clientY, t: +new Date()};\r\n            } else if (ev.type === \"touchend\") {  \r\n                // touchstart時の座標と時刻を初期化する\r\n                this.startTouch = {};\r\n            }\r\n            // マウスイベントを発生させる\r\n            var newEvent = document.createEvent(\"MouseEvent\");\r\n            newEvent.initMouseEvent(\r\n                window.__TOUCH_TYPES[ev.type],    // type\r\n                true,             // bubbles\r\n                true,             // cancelable\r\n                window,           // view\r\n                1,                // detail\r\n                touch.screenX,    // screenX スクリーンサイズ\r\n                touch.screenY,    // screenY\r\n                tmpClientX,       // clientX タッチ座標\r\n                tmpClientY,       // clientY\r\n                false,            // ctrlKey\r\n                false,            // altKey\r\n                false,            // shiftKey\r\n                false,            // metaKey\r\n                0,                // button\r\n                null              // relatedTarget\r\n              );\r\n            touch.target.dispatchEvent(newEvent);\r\n\r\n            // タッチイベントを止める #22\r\n            if(isStopTouch) {\r\n                ev.stopImmediatePropagation();\r\n                ev.stopPropagation();\r\n                ev.preventDefault();\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n\r\n    /* new */\r\n    return TouchPanel;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-TouchPanel.js\n// module id = 20\n// module chunks = 0","/**\r\n * 日時(Date)から、ローカル時刻に基づく、指定フォーマットの文字列を取得する\r\n * \r\n * @memberOf Util\r\n * @param {Date}\r\n *            dt Date型（内部実装はミリ秒単位）\r\n * @param {String}\r\n *            str フォーマット yyyy-MM-dd hh:mm:ss.ppp （戻り値で上書きされる）\r\n * @return {String} str 編集後文字列\r\n */\r\nexport var DateToString = function() {\r\n    var dt = arguments[0],  // arg0\r\n        str = arguments[1]; // arg1\r\n    // if (typeof(dt) === \"number\") dt = new Date(dt);\r\n    str = str.replace(/yyyy/, dt.getFullYear() );\r\n    str = str.replace(/MM/, ('0' + (dt.getMonth() + 1) ).slice(-2) );\r\n    str = str.replace(/dd/, ('0' + dt.getDate()).slice(-2) );\r\n    str = str.replace(/hh/, ('0' + dt.getHours()).slice(-2) );\r\n    str = str.replace(/mm/, ('0' + dt.getMinutes()).slice(-2) );\r\n    str = str.replace(/ss/, ('0' + dt.getSeconds()).slice(-2) );\r\n    str = str.replace(/ppp/,('00' + dt.getMilliseconds()).slice(-3) ); // #60\r\n    // str = str.replace(/ppp/,('00' + Math.floor(dt % 1000)).slice(-3) );\r\n\r\n    return str;\r\n};\r\n\r\n/**\r\n * 日時文字列を指定フォーマットでパースして数値(ミリ秒単位）を取得する\r\n * @memberOf Util\r\n * @param {String}\r\n *            str\r\n * @param {Object|String}\r\n *            [conf={YYYY: 0, MM: 5, DD: 8, hh: 11, mm: 14, ss: 17, ppp: 20}]\r\n *            Object指定のとき：年月日時分秒ミリ秒の先頭位置を示す構造体オブジェクト<br>\r\n *            String指定とき：フォーマットを示す文字列<br>\r\n *            デフォルト値は、\"YYYY/MM/DD hh:mm:ss.ppp\"相当\r\n * @return {Number} timeNum 日時（１ミリ秒を１とする数値、エラーのときNumber.NaN）\r\n */\r\nexport var S2D = function(str, conf){ // #34\r\n    if(!str) return Number.NaN;\r\n\r\n    if(typeof(conf) === \"Object\"){\r\n        // confが\"Object\"のとき、指定された構造体オブジェクトの条件でパースする（最も高速な処理）\r\n        return parse(str, conf);\r\n    } else if (typeof(conf) === \"string\") {\r\n        // confが\"String\"のとき、指定された文字列フォーマットから構造体オブジェクトを作成し、パースする（準高速処理）\r\n        var config = {  // YYYY/MM/DD hh:mm:dd.ss.ppp #41\r\n                YYYY: conf.indexOf(\"YYYY\"),\r\n                MM: conf.indexOf(\"MM\"),\r\n                DD: conf.indexOf(\"DD\"),\r\n                hh: conf.indexOf(\"hh\"),\r\n                mm: conf.indexOf(\"mm\"),\r\n                ss: conf.indexOf(\"ss\"),\r\n                ppp: conf.indexOf(\"p\")};\r\n        return parse(str, config);\r\n    } else {\r\n        // confが指定されていないとき、デフォルト条件でパースする（汎用処理）\r\n        // デフォルトフォーマット：\"YYYY/MM/DD hh:mm:dd.ss.ppp\" #42\r\n        var config = {YYYY: 0, MM: 5, DD: 8, hh: 11, mm: 14, ss: 17, ppp: 20};\r\n        return parse(str, config);\r\n    }\r\n\r\n    // 内部関数：構造体オブジェクトで指定された条件でパースする\r\n    function parse(str, conf){\r\n        var y   = (0 <= conf.YYYY) ? parseInt( str.substr( conf.YYYY, 4), 10) : 1970,\r\n                m   = (0 <= conf.MM)   ? parseInt( str.substr( conf.MM, 2), 10) - 1 : 0, // デフォルト1月\r\n                // 1970/1/1だと時差でマイナスになることがあるので日付のデフォルトは2日\r\n                d   = (0 <= conf.DD)   ? parseInt( str.substr( conf.DD, 2), 10) : 2,\r\n                h   = (0 <= conf.hh)   ? parseInt( str.substr( conf.hh, 2), 10) : 0,\r\n                min = (0 <= conf.mm)   ? parseInt( str.substr( conf.mm, 2), 10) : 0,\r\n                sec = (0 <= conf.ss)   ? parseInt( str.substr( conf.ss, 2), 10) : 0,\r\n                // ミリ秒以下を指定すると丸め誤差が生じるため、秒以下のミリ秒は個別に加算\r\n                p   = (0 <= conf.ppp)  \r\n                    ? (\"0.\" + str.substr( conf.ppp).match(/[0-9]*/)[0]) * 1000.0 \r\n                    : 0;\r\n        return +(new Date( y, m, d, h, min, sec )) + p;  // #14\r\n    }\r\n};\r\n\r\n/**\r\n * 日時(ミリ秒：Ｘ軸用）から、時差補正のない、指定フォーマットの文字列を取得する\r\n * \r\n * @memberOf Util\r\n * @param {Number|Date}\r\n *            ds 時刻をUNIX経過時間（ミリ秒）で表した数値、もしくはDate(日付）\r\n * @param {String}\r\n *            [str=自動] フォーマット yyyy-MM-dd hh:mm:ss.ppp （戻り値で上書きされる）<br>\r\n *            自動のとき 日数+ hh:mm:ss.ppp 表示単位に至らない単位は表示しない、ミリ秒は分単位以下の時表示<br>\r\n *            例： 日数表示：\"1 02:03:04\",時表示\"02:03:04\" 分表示\"0:03:04.567\" 秒表示\"04.567\"\r\n * @param {Boolean}\r\n *            [isLocal=false] trueのとき時差補正をしない\r\n * @return {String} str 編集後文字列\r\n */\r\nexport var D2S = function(ds, str, isLocal){ // #60\r\n    var minus = \"\";\r\n    var ret = \"\";\r\n    if (ds < 0) {\r\n        minus = \"-\";\r\n        ds = -1 * ds;\r\n    }\r\n    var datetime = new Date(ds);\r\n    if (!isLocal) { // #60\r\n        datetime = new Date(+datetime + 60000 * datetime.getTimezoneOffset()); // 環境タイムゾーンの補正\r\n    }\r\n    if(str){ // フォーマット指定があるとき\r\n        ret = DateToString(datetime, str);\r\n    } else if (ds < 1000) { // 自動で1秒(1000)未満のとき\r\n        ret = \"0.\" + Math.round(ds);\r\n    } else if (ds < 60000) { // 自動で1分(1*60*1000)未満のとき\r\n        ret = DateToString(datetime, \"ss.ppp\");\r\n    } else if (ds < 3600000) { // 自動で1分以上、1時間(1*60*60*1000)未満のとき\r\n        ret = \"0:\" + DateToString(datetime, \"mm:ss.ppp\");\r\n    } else if (ds < 86400000) { // 自動で1時間以上、1日(1*24*60*60*1000)未満のとき\r\n        ret = DateToString(datetime, \"hh:mm:ss\");\r\n    } else { // 自動で1日以上のとき\r\n        ret = Math.floor(ds / 86400000) + \" \";\r\n        ret += DateToString(datetime, \"hh:mm:ss\");\r\n    }\r\n    return minus + ret;\r\n};\r\n\r\n/**\r\n * 数値(Ｙ軸用）から、誤差のない表示用文字列を取得する<br>\r\n * （hover、legendなどでY軸の値を使うときに使用する）\r\n * \r\n * @memberOf Util\r\n * @param {Number|Date}\r\n *            y 時刻をUNIX経過時間（ミリ秒）で表した数値、もしくはDate(日付）\r\n * @return {String} str 編集後文字列\r\n *         {@linkhttps://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat}\r\n */\r\nexport var N2S = function(y){\r\n    return Intl.NumberFormat('en-IN').format(y);\r\n};\r\n\r\n/**\r\n * 文字列を数値に変換する\r\n * \r\n * @memberOf Util\r\n * @param {String|Number}\r\n *            [str = sub] 計算式（日時分秒ミリ秒(d,h,mim,sec,ms)の文字は、ミリ秒に変換する）\r\n * @param {String|Number}\r\n *            [sub] 第一引数が指定されていない(undefined)ときの代用\r\n * @return {Number} n eval(str||sub)で取得した数値\r\n * \r\n */\r\nexport var S2N = function(str, sub){ // #53\r\n    var s = (typeof(str) !== \"undefined\") ? str : sub;\r\n    var h = 3600000; // 1時間（ミリ秒）\r\n    var min = 60000; // 1分（ミリ秒）\r\n    var sec =  1000; // 1秒（ミリ秒）\r\n    var ms =      1; // 1ミリ秒\r\n\r\n    return eval(s);\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-string.js\n// module id = 21\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class Random\r\n * @classdesc Random 乱数取得\r\n *            <p>\r\n *            ある事象の単位時間あたりの発生回数がポアソン分布, その発生間隔が指数分布に従う<br>\r\n *            M/M/1モデルは、到着がポアソン過程となり、(したがって到着間隔は指数分布に従う)、サービス時間が指数分布に従う\r\n *            <p>\r\n *            参考 {@link http://www.ishikawa-lab.com/montecarlo/4shou.html}\r\n * \r\n * @param {Number}\r\n *            [average=0.5] 平均値\r\n * @example var r = HJN_util.Random(10), val = r.exponential();\r\n */\r\nexport default (function() { // #56\r\n    /** @constructor */\r\n    function Random(average){\r\n        if(!(this instanceof Random)) return new Random(average);\r\n        this._average = average || 0.5;\r\n    }\r\n\r\n    /** @private */\r\n\r\n    // public\r\n    /**\r\n     * 一様分布となる乱数を返却する\r\n     *\r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.uniform = function(average) {\r\n        average = average || this._average;\r\n        return  2.0 * average * Math.random();\r\n    };\r\n\r\n    /**\r\n     * 指数分布となる乱数を返却する(lambda = 1/average)\r\n     *\r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値=1/λ、分散=1/(λ^2)<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.exponential = function(average) {\r\n        average = average || this._average;\r\n        return (-1.0 * average) * Math.log(1.0 - Math.random());\r\n    };\r\n    \r\n    /**\r\n     * ポアソン分布となる乱数を返却する(lambda = average)\r\n     * \r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値=分散=λ<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.poisson = function(average) {\r\n        var lambda = average || this._average;\r\n        var xp = Math.random();\r\n        var k = 0;\r\n        while (xp >= Math.exp(-lambda)) {\r\n            xp = xp * Math.random();\r\n            k = k + 1;\r\n        }\r\n        return (k);\r\n    };\r\n    \r\n    /* new */\r\n    return Random;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-Random.js\n// module id = 22\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class setZeroTimeout\r\n * 非同期化\r\n * \r\n * @param {function}\r\n *            global 非同期化して実行する関数\r\n *            <p>\r\n *            参考 {@link https://jsfiddle.net/kou/j73tLum4/8/}\r\n *            {@link https://gist.github.com/mathiasbynens/579895}\r\n *            {@link http://dbaron.org/log/20100309-faster-timeouts}\r\n */\r\nexport default (function(global) {\r\n    var timeouts = [], \r\n        messageName = \"zero-timeout-message\";\r\n    function handleMessage(event) {\r\n        if (event.source === global && event.data === messageName) {\r\n            if (event.stopPropagation)  event.stopPropagation();\r\n            if (timeouts.length) timeouts.shift()();\r\n        }\r\n    }\r\n    if (global.postMessage) {\r\n        if (global.addEventListener) {\r\n            global.addEventListener(\"message\", handleMessage, true); \r\n        }else if (global.attachEvent) {\r\n            global.attachEvent(\"onmessage\", handleMessage); \r\n        }\r\n        return function (fn) { timeouts.push(fn); global.postMessage(messageName, \"*\"); };\r\n    } \r\n    else {\r\n        return function (fn) { setTimeout(fn, 0); }; \r\n    }\r\n}(window));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-setZeroTimeout.js\n// module id = 24\n// module chunks = 0","import {D2S} from './util.js';\r\n\r\n/**\r\n * @memberOf Util\r\n * @class Logger\r\n * @classdesc ロガー\r\n *            <p>\r\n *            モードに応じたログを出力する。画面ログ表示領域、コンソールログへの出力に対応\r\n * \r\n * @param {String}\r\n *            [mode=0] ログ出力モード\r\n */\r\nexport default (function() { // #27\r\n    /** @static */\r\n    Logger.prototype = {\r\n            _logText: [],\r\n            _timestamp : new Date(),\r\n            _logtime : new Date()\r\n        };\r\n    /** @constructor */\r\n    function Logger(mode){\r\n        if(!(this instanceof Logger)) return new Logger(mode);\r\n        this._mode = mode || 0;\r\n        // getKeyによりIndex作成関数を設定する\r\n    }\r\n    /**\r\n     * 一定時間（１分）経過後、最初に本メソッドが呼ばれたときのみログ出力する（ループ用）\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {Number}\r\n     *            i 参考番号<br>\r\n     *            経過時間内のループ回数などの表示に使用することを想定\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     */\r\n    Logger.ByInterval = function(i, text) {\r\n        var ts = new Date(),\r\n            freq = 60000;   // 1分毎\r\n        if (freq < ts - Logger._logtime){\r\n            var t = D2S(ts, \"hh:mm:ss.ppp\"); // #60\r\n            console.log(t + \"[\" + i + \"]~~~~\" + text);\r\n            Logger._logtime = ts;\r\n        }\r\n    };\r\n    /**\r\n     * ログ出力： ログテキストおよびタイムスタンプを初期化する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     * @param {String}\r\n     *            [type] ログ区分（\"calc\"：計算用ログ、\"msg\"：メッセージのみ（タイムスタンプなし））\r\n     */\r\n    Logger.ShowLogTextInit=function(text, type) {\r\n        Logger._timestamp = new Date();\r\n        Logger._logText = [];\r\n        if(text) Logger.ShowLogText(text, type);\r\n    };\r\n    /**\r\n     * ログ出力： タイムスタンプを初期化する\r\n     * \r\n     * @memberof Util.Logger\r\n     */\r\n    Logger.ResetTimestamp=function() {\r\n        Logger._timestamp = new Date();\r\n    };\r\n    /**\r\n     * ログ出力： ログテキストをテキストアレイに追記し、表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     * @param {String}\r\n     *            [type] ログ区分（\"calc\"：計算用ログ、\"msg\"：メッセージのみ（タイムスタンプなし））\r\n     * @param {Boolean}\r\n     *            [isSameline=false] 直前のログと同一ラインにするか\r\n     */\r\n    Logger.ShowLogText=function(text, type, isSameline) {\r\n        if (type === \"calc\") return; // 集計時評価用ログ出力抑止\r\n        // \"msg\"指定のときは経過時間を取らずに、ログのみ出力する\r\n        if (type !== \"msg\"){\r\n            // 処理時間情報を追加する\r\n            var lastTimestamp = Logger._timestamp;\r\n            Logger._timestamp = new Date();\r\n            text = (Math.round( Logger._timestamp - lastTimestamp ) / 1000.0)\r\n                    + \"s \" + text;\r\n            // 数値のカンマ編集（小数部もカンマが入る）\r\n            text = text.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n        }\r\n        if (isSameline){\r\n            var last = Logger._logText.length - 1;\r\n            Logger._logText[last] += text;\r\n        } else {\r\n            Logger._logText.push(text);\r\n        }\r\n        Logger.ShowText(Logger._logText);\r\n        if(true) console.log(D2S(Logger._timestamp, \"hh:mm:ss.ppp     \") + text); // #60\r\n    };\r\n    /**\r\n     * 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            textArray 出力するログ（配列１行がログ１件）\r\n     */\r\n    Logger.ShowText=function(textArray) {\r\n        var iHtmlBody = \"\";\r\n        for (var i = textArray.length - 1; 0 <= i; i--){\r\n            iHtmlBody += textArray[i] + \"<BR>\"; \r\n        }\r\n        Logger.ShowIHtmlBody('fileInfo',iHtmlBody);\r\n    };\r\n    /**\r\n     * 第一引数のID名のiframeに、第二引数のログ（HTML化）を表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            elementId iframeのID名\r\n     * @param {String}\r\n     *            iHtmlBody ログ（HTML化）\r\n     */\r\n    Logger.ShowIHtmlBody=function(elementId, iHtmlBody){\r\n        var body = document.createElement('body');\r\n        body.innerHTML = \"\"\r\n            + \"<style>body{font-size: x-small; margin: 0; }</style>\"\r\n            + \"<body id='iHtmlBody'>\" + iHtmlBody + \"</body>\";\r\n        var iframe = document.getElementById(elementId);\r\n        iframe.contentDocument.body = body;\r\n    };\r\n    \r\n    // newの戻り値\r\n    return Logger;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-Logger.js\n// module id = 25\n// module chunks = 0","/**\r\n * 指定されたelementIDのテキストをクリップボードにコピーする<br>\r\n * 一時的にdocument.bodyの下にコピー処理用要素を作成する<br>\r\n * スマフォ等で書き込み可能なtextareaにフォーカスが移らないよう一時的にreadonlyにする\r\n * \r\n * @memberof Util\r\n * @param {String}\r\n *            elementID textareaのID名\r\n */\r\nexport default function copyToClipboard(elementId) { // #61\r\n    // コピー元要素を取得する\r\n    var el = document.getElementById(elementId);\r\n    // ワーク領域を作成する\r\n    var input = document.createElement('textarea');\r\n    input.setAttribute('id', 'copyinput');\r\n    document.body.appendChild(input);\r\n    // クリップボードにコピーする\r\n    input.value = (el.innerText === \"\") ? el.value : el.innerText;\r\n    copy2Clipboard(input); // 内部関数\r\n    // ワーク領域を削除する\r\n    document.body.removeChild(input);\r\n}\r\n\r\n/**\r\n * textareaをクリップボードにコピーする<br>\r\n * iOSに対応したtextareaのselect機能 #78\r\n * {@link https://marmooo.blogspot.jp/2018/02/javascript.html}\r\n */\r\nfunction copy2Clipboard(el){\r\n    // handle iOS as a special case\r\n    if (navigator.userAgent.match(/ipad|ipod|iphone/i)) {\r\n        // save current contentEditable/readOnly status\r\n        var editable = el.contentEditable;\r\n        var readOnly = el.readOnly;\r\n        // convert to editable with readonly to stop iOS keyboard opening\r\n        el.contentEditable = true;\r\n        el.readOnly = true;\r\n        // create a selectable range\r\n        var range = document.createRange();\r\n        range.selectNodeContents(el);\r\n        // select the range\r\n        var selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        el.setSelectionRange(0, 999999);\r\n        // restore contentEditable/readOnly to original state\r\n        el.contentEditable = editable;\r\n        el.readOnly = readOnly;\r\n    }\r\n    else {\r\n        el.select();\r\n    }\r\n    // execute copy command\r\n    document.execCommand('copy');\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-copyToClipboard.js\n// module id = 26\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class binarySearch\r\n * @classdesc 配列二分木検索\r\n * \r\n * @param {Number}\r\n *            val 検索する値\r\n * @param {Array}\r\n *            arr 検索対象の配列\r\n * @param {Function}\r\n *            [func=function(val){return val.valueOf();}] 配列要素に対して、値を取得する関数\r\n * @param {Index}\r\n *            [low=0] 配列の検査範囲の下限\r\n * @param {Index}\r\n *            [high=arr.length-1] 配列の下限検査範囲の上限\r\n * @param {Boolean}\r\n *            [isEqual=false] 完全一致しないときのリターン値：trueのとき-1、falseのとき値との差が最も少ない位置\r\n * @example i=Util.binarySearch(x,arrXY,function(e){return e.x;});\r\n */\r\nexport default function (val, arr, func, low, high, isEqual) {\r\n    func = func || function(val){ return val.valueOf(); };\r\n    low = low || 0;\r\n    if (!arr) return -1;\r\n    high = high || arr.length - 1;\r\n    isEqual = isEqual || false;\r\n    var middle,\r\n        valMiddle;\r\n    while( low <= high ){\r\n        middle = Math.floor(low + high) / 2 | 0;\r\n        valMiddle = func(arr[middle]);\r\n        if(valMiddle === val) return middle;\r\n        else if(val < valMiddle) high = middle - 1;\r\n        else low = middle + 1;\r\n    }\r\n    // 値が完全一致する要素がなかった場合の戻り値を編集する\r\n    if (isEqual){\r\n        return -1;  // 完全一致指定のとき(-1)をリターンする\r\n    } else {        // 完全一致指定でないとき、値との差が最も少ない位置をリターンする #46\r\n        // low,middle,high を補正する\r\n        low = Math.min(Math.max(0, low), arr.length - 1);\r\n        high = Math.max(0, Math.min(high, arr.length - 1));\r\n        middle = Math.max(low, Math.min(middle, high));\r\n        if(high < low){\r\n            var tmp = high;\r\n            high= low;\r\n            low = tmp;\r\n        }\r\n        // low,middle,high のうち、値との差が最も少ない位置をリターンする\r\n        if(func(arr[middle]) < val){\r\n            if (val - func(arr[middle]) < func(arr[high]) - val) {\r\n                return middle;\r\n            } else {\r\n                return high;\r\n            }\r\n        }else{\r\n            if (func(arr[high]) <= val && val < func(arr[middle])){\r\n                return high;\r\n            } else if (val - func(arr[low]) < func(arr[middle]) - val){\r\n                return low;\r\n            } else {\r\n                return middle;\r\n            }\r\n        }\r\n        return -1;  // 指定範囲外\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-binarySearch.js\n// module id = 27\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class Heap\r\n * @classdesc Heap ヒープ(二分ヒープ)\r\n *            <p>\r\n *            最小値(最大値)を効率よく取り出すことができるデータ構造\r\n *            <p>\r\n *            参考 {@link http://d.hatena.ne.jp/otaks/20121220/1355993039}\r\n * \r\n * @param {Function}\r\n *            [func=function(obj){ return +obj; }]\r\n *            pushで登録するオブジェクトからヒープの大小比較判定値を取り出す関数\r\n * @param {Function}\r\n *            [delFunc=function(obj){ return obj; }] 削除対象ノードを特定する関数<br>\r\n *            「delの引数オブジェクト === delFunc(heapのノードのオブジェクト)」 で判定する\r\n * \r\n * @example h = HJN_util.Heap( function(obj){ return +obj; } );<br>\r\n *          h.push(\"12.34\") // データを登録する ;<br>\r\n *          h.push(0.12) // ;<br>\r\n *          h.pop() // => 0.12 最小値のオブジェクトを取り出す ;<br>\r\n *          h.pop() // => \"12.34\" ;<br>\r\n *          h.top() // =>undefined 最小値のオブジェクト ;<br>\r\n *          h.size() // =>0 登録オブジェクト数\r\n */\r\nexport default (function() { // #55\r\n    /** @constructor */\r\n    function Heap(func, delFunc){ \r\n        if(!(this instanceof Heap)) return new Heap(func, delFunc);\r\n\r\n        this._func = (typeof(func) === \"function\")\r\n                ? func\r\n                : function(node){\r\n                    if (typeof(node.val) === \"undefined\") { return node }\r\n                    else { return node.val}; \r\n                  };\r\n        this._delFunc = (typeof(delFunc) === \"function\")\r\n                ? delFunc\r\n                : function(node){\r\n                    if(typeof(node.obj) === \"undefined\"){ return node }\r\n                    else { return node.obj};\r\n                  };\r\n        this._heap = []; // Heap構造体（大小比較数値用）\r\n    }\r\n\r\n    //\r\n    /**\r\n     * upheap：root方向へheapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     */\r\n    Heap.prototype._upHeap = function(k) {\r\n        // 指定位置のオブジェクトとその値の控えを取る\r\n        var obj = this._heap[k];\r\n        var val = this._func(obj);\r\n        while( 0 < k ) {\r\n            // 親ノードの配列位置を求める\r\n            var p = Math.floor( (k - 1) / 2 );\r\n            // 逆転していなければ処理終了\r\n            if( this._func(this._heap[p]) <= val ) break;\r\n            // 親ノードと処理対象を入れ替える\r\n            this._heap[k] = this._heap[p];\r\n            this._heap[p] = obj;\r\n            k = p;\r\n        }\r\n    };\r\n    /**\r\n     * downheap：reaf方向へheapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     */\r\n    Heap.prototype._downHeap = function(k) {\r\n        // 指定位置のオブジェクトとその値を控えを取る\r\n        var obj = this._heap[k];\r\n        var val = this._func(obj);\r\n        var size = this._heap.length;\r\n        // 子ノードが無くなるまで繰り返す\r\n        while( k * 2 + 1 < size) {\r\n            var a = k * 2 + 1;  // 子ノード（左）\r\n            var b = a + 1;      // 子ノード（右）\r\n            // aが大小比較対象先となる小さい子ノードを指すようにする\r\n            if( b < size && this._func(this._heap[a]) > this._func(this._heap[b]) ) a = b;\r\n            // 逆転していなければ処理終了\r\n            if( val < this._func(this._heap[a]) ) break;\r\n            // 子ノード（比較対象）と処理対象を入れ替える\r\n            this._heap[k] = this._heap[a];\r\n            this._heap[a] = obj;\r\n            k = a;\r\n        }\r\n    };\r\n    /**\r\n     * _heapのk番目を削除し、_heapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     * @return {object|undefined} 削除したオブジェクト（削除対象が無いとき undefined）\r\n     */\r\n    Heap.prototype._del = function(k) {\r\n        if (this._heap.length <= k) return undefined; // ヒープ外を指定したとき\r\n\r\n        var ret = this._heap[k]; // 削除したオブジェクト\r\n        var obj = this._heap.pop(); // 末尾ノードを取り出す\r\n        var size = this._heap.length;\r\n        if (k === size) return ret; // 末尾ノードを削除したとき再構築不要\r\n\r\n        this._heap[k] = obj; // 末尾ノードを指定位置に移動する\r\n        if (size === 1) return ret; // ヒープが１個のとき、再構築不要\r\n\r\n        // upHeapの判定\r\n        var val = this._func(obj); // 末尾ノードにあったオブジェクトの値\r\n        var p = Math.floor( (k - 1) / 2 );\r\n        if (0 < k && val < this._func(this._heap[p])) {\r\n            // 親ノードより小さいときupheapする\r\n            this._upHeap(k);\r\n        } else {\r\n            var a = k * 2 + 1;  // 子ノード（左）\r\n            var b = a + 1;      // 子ノード（右）\r\n            if (a < size) { // 子ノードがあるとき（末端の枝葉でないとき）のみdownHeapする\r\n                // aに、子ノードの小さい方のノードを設定する\r\n                if( b < size && (this._func(this._heap[a]) > this._func(this._heap[b])) ) a = b;\r\n                // 自分より小さい子ノードがあるとき、downheapする\r\n                if( this._func(this._heap[a]) < val ) this._downHeap(k);\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    // public\r\n    /**\r\n     * データを追加する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @param {Object}\r\n     *            obj 登録オブジェクト\r\n     */\r\n    Heap.prototype.push = function(obj) {\r\n        // 末尾に追加し、upHeapする\r\n        this._heap.push(obj);\r\n        this._upHeap(this._heap.length - 1);\r\n        if (this._deletable) {\r\n            this._deleteMap = {};\r\n        }\r\n    };\r\n    /**\r\n     * 最小値のデータを取り出す\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Object|undefined} 最小値\r\n     */\r\n    Heap.prototype.pop = function() {\r\n        // 先頭ノードを戻り値用に退避する\r\n        var ret = this._heap[0];\r\n        // 末尾ノードを退避し削除する\r\n        var obj = this._heap.pop();\r\n        if(0 < this._heap.length){\r\n            // ヒープが空でないとき、末尾ノードを先頭に移動し、downHeapする\r\n            this._heap[0] = obj;\r\n            this._downHeap(0);\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * 指定データを削除する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @param {Object}\r\n     *            obj 削除対象と同一オブジェクト(=== で判定)\r\n     * @return {Object|undefined} 削除したオブジェクト（undefined：合致するオブジェクトが無いとき）\r\n     */\r\n    Heap.prototype.del = function(obj) { // #59\r\n        // 削除対象オブジェクトのHeap配列位置を取得する\r\n        var k = -1;\r\n        if (this._heap.some(find, this)){\r\n            // 合致するオブジェクトのノードを削除し、合致ノードをリターンする\r\n            return this._del(k);\r\n        }\r\n        // 合致するオブジェクトが無いとき\r\n        return undefined;\r\n        \r\n        function find(e, i) {\r\n            if(this._delFunc(e) === obj){\r\n                k = i;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * 最小値を返却する（登録データは変更しない）\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Object|undefined} 最小値\r\n     */\r\n    Heap.prototype.top = function() {\r\n        return this._heap[0];\r\n    };\r\n    /**\r\n     * ヒープのサイズを返却する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Number} ヒープサイズ（0以上）\r\n     */\r\n    Heap.prototype.size = function() {\r\n        return this._heap.length;\r\n    };\r\n    \r\n    /* new */\r\n    return Heap;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-Heap.js\n// module id = 28\n// module chunks = 0","import {Logger} from './util.js';\r\n\r\n/**\r\n * @memberOf Util\r\n * @class Element\r\n * @classdesc 追加する挙動の操作要素は、後に記述した挙動の要素が上位になる 参考\r\n *            {@link https://q-az.net/elements-drag-and-drop/}\r\n * @param {DOM}\r\n *            element ドラッグ機能を付与するDOM要素\r\n * @constructor\r\n */\r\nexport default function Element(element){\r\n    this._element = element;    // 挙動を追加する要素\r\n    this._wrapper = {};         // マウスイベントを取得するdivを追加する下地要素\r\n\r\n    // width,height :100%が有効となるようposition: absoluteを指定する\r\n    element.style.position = \"absolute\";\r\n    // ドラッグ＆ドロップ用divを作成する(下地のみクリック透過）\r\n    this._wrapper = document.createElement('div');\r\n    setStyles(this._wrapper, { background : \"rgba(192,192,192,0.1)\",\r\n        position : \"absolute\", width : \"100%\", height : \"100%\", top : \"0\", left : \"0\",\r\n        \"pointer-events\": \"none\"});\r\n    // ドラッグ＆ドロップ用divを登録する\r\n    this._element.appendChild(this._wrapper);\r\n}\r\n\r\n// グローバル（のような）変数\r\nvar pos = {};        // マウス押下時の位置情報の保管用\r\n\r\n/**\r\n * CSSクラス名\"hjnDraggableBox\"が付いた要素をドラッグ＆ドロップで移動できるようにする\r\n * \r\n * @memberOf Util\r\n * @example .hjnDraggableBox {} .hjnDraggableItem:hover {cursor: move;\r\n *          background: rgba(128, 128, 128, 0.5); transition: all 0.2s; }\r\n * @example <div class=\"hjnDraggableBox\"></div>\r\n */\r\nElement.enableDraggableClass = function(){\r\n    var elements = document.getElementsByClassName(\"hjnDraggableBox\");  // 要素の取得\r\n    // マウスが要素内で押されたとき、又はタッチされたとき発火\r\n    for(var i = 0; i < elements.length; i++){\r\n        var element = new Element(elements[i]);\r\n        element     // 移動指定要素がリサイズ指定要素よりが下になるよう、移動を先に記述する\r\n            .makeMoveable()\r\n            .makeResizable();\r\n    }\r\n}\r\n\r\n/**\r\n * ダイアログを生成し表示する\r\n * \r\n * @memberOf Util\r\n * @param {String}\r\n *            [iHtml=\"no message\"] ダイアログのinnerHTMLに設定する文字列\r\n * @param {DOM}\r\n *            [element=document.body] ダイアログの位置とサイズを指定する際の基準となる要素\r\n * @param {String}\r\n *            [id=\"HJN.dialog\"] ダイアログ要素のid名、同一名称のダイアログを閉じて作成する\r\n * @param {Number}\r\n *            [w=40] elementに対するダイアログの幅の比率％\r\n * @param {Number}\r\n *            [h=40] elementに対するダイアログの高さの比率％\r\n * @param {Object}\r\n *            [style={ width: w+\"%\", height: h+\"%\", left: 50-w/2+\"%\", top:\r\n *            50-h/2+\"%\", position: \"absolute\", background: \"rgba(255, 255, 255,\r\n *            0.8)\", border: \"medium solid #aaa\"}] ダイアログ背景のCSSスタイル\r\n * @memberOf Util.Element\r\n */\r\nElement.createDialog = function(iHtml, element, id, w, h, style){\r\n    iHtml = iHtml || \"no message\";\r\n    element = element || document.body;\r\n    style = style || {};\r\n    id = id || \"HJN.dialog\";\r\n    w = w || 40; // 幅40%\r\n    h = h || 40; // 高さ40%\r\n    // 既存の同一idの要素を削除する\r\n    var div = document.getElementById(id);\r\n    if (div) { div.parentElement.removeChild(div);}\r\n    // ダイアログ要素を作成する\r\n    div = document.createElement('div');\r\n    div.id = id;\r\n    element.appendChild(div);\r\n    div.innerHTML =\"<iframe></iframe>\";\r\n    setStyles(div.children[0],\r\n            {width: \"100%\", height: \"100%\", border: 0, \"pointer-events\": \"auto\"});\r\n    var body = document.createElement('body');\r\n    body.innerHTML = \"<body>\" + iHtml + \"</body>\";\r\n    div.children[0].contentDocument.body = body;\r\n    // スタイルを設定する（デフォルト：縦横40%（親サイズに連動）で中央に配置）\r\n    setStyles(div, style, \r\n            { width: w+\"%\", height: h+\"%\", left: 50-w/2+\"%\", top: 50-h/2+\"%\",\r\n              position: \"absolute\", \"z-index\" : \"80\",\r\n              background: \"rgba(255, 255, 255, 0.8)\", border: \"medium solid #aaa\"});\r\n    var draggable = new Element(div);\r\n    draggable        // 移動指定要素がリサイズ指定要素よりが下になるよう、×ボタン、移動、リサイズの順に記述する\r\n        .makeRemovable()\r\n        .makeMoveable()\r\n        .makeResizable();\r\n}\r\n\r\n/**\r\n * ×ボタンによる要素削除機能を付与する\r\n * \r\n * @memberOf Util\r\n * @param {Object}\r\n *            [style={cursor: \"move\", top:\"0\", left:\"50%\", width:\"100%\",\r\n *            height:\"20px\"};] ×ボタン要素のCSSスタイル\r\n * @return this\r\n */\r\nElement.prototype.makeRemovable = function(style) {\r\n    // inputタグを追加する\r\n    // <input id=\"hjnDialog\" type=\"checkbox\" class=\"hjnBurger\" checked=\"checked\"\r\n    // onChange=\"...\"/>\r\n    var input = document.createElement(\"input\");\r\n    input.type = \"checkbox\";\r\n    input.id = \"hjnDialog\";\r\n    input.classList.add(\"hjnBurger\");\r\n    input.checked = true;\r\n    input.onchange = function(){\r\n                var e = this.parentElement.parentElement;\r\n                e.parentElement.removeChild(e); // ToDo: 自分ではなく先に開いたダイアログから閉じる\r\n                };\r\n    this._wrapper.appendChild(input);\r\n    // ×ボタンlabelタグを追加する\r\n    // <label for=\"hjnDialog\"><span></span></label>\r\n    var label = document.createElement(\"label\");\r\n    label.classList.add(\"hjnCtrlBox\");\r\n    label.htmlFor = input.id;\r\n    label.appendChild(document.createElement(\"span\"));\r\n    setStyles(label, style, { top:\"4px\", right: \"4px\", \r\n        position: \"absolute\", background: \"transparent\"});\r\n    this._wrapper.appendChild(label);\r\n    return this;\r\n}\r\n/**\r\n * ドラッグによる移動機能を付与する\r\n * \r\n * @memberOf Util\r\n * @param {Object}\r\n *            [style={cursor: \"move\", top:\"0\", left:\"50%\", width:\"100%\",\r\n *            height:\"20px\"};] ドラッグ移動機能要素のCSSスタイル\r\n * @return this\r\n */\r\nElement.prototype.makeMoveable = function(style) {\r\n    // 制御用divを追加する\r\n    this.addHandleElement(elementMove, style, // 上：20px\r\n            {cursor: \"move\", top:\"0\",  left:\"50%\", width:\"100%\", height:\"20px\"},\r\n            \"inside\");\r\n    return this;\r\n}\r\n/**\r\n * ドラッグによる リサイズ機能を付与する\r\n * \r\n * @param {object}\r\n *            [style] リサイズ機能要素のCSSスタイルを、デフォルトから変更する際に指定\r\n * \r\n * @return this\r\n */\r\nElement.prototype.makeResizable = function(style) {\r\n    // 制御用divを追加する\r\n    this.addHandleElement(elementUpper,  style,  // 上:Upper\r\n            {cursor: \"ns-resize\", top:\"0\",    left:\"50%\", width:\"100%\"});\r\n    this.addHandleElement(elementBottom, style,  // 下:Bottom\r\n            {cursor: \"ns-resize\", top:\"100%\", left:\"50%\", width:\"100%\"});\r\n    this.addHandleElement(elementLeft,   style,  // 左:Left\r\n            {cursor: \"ew-resize\", top:\"50%\",  left:\"0\",   height:\"100%\"});\r\n    this.addHandleElement(elementRight,  style,  // 右:Right\r\n            {cursor: \"ew-resize\", top:\"50%\",  left:\"100%\",height:\"100%\"});\r\n    this.addHandleElement(elementUpperLeft,  style,  // 左上:UpperLeft\r\n            {cursor: \"nwse-resize\", top:\"0\",    left:\"0\"});\r\n    this.addHandleElement(elementUpperRight, style,  // 右上:UpperRight\r\n            {cursor: \"nesw-resize\", top:\"0\",    left:\"100%\"});\r\n    this.addHandleElement(elementBottomLeft, style,  // 左下:BottomLeft\r\n            {cursor: \"nesw-resize\", top:\"100%\", left:\"0\"});\r\n    this.addHandleElement(elementBottomRight,style,  // 右下:BottomRight\r\n            {cursor: \"nwse-resize\", top:\"100%\", left:\"100%\"});\r\n   return this;\r\n}\r\n/**\r\n * マウスクリック用要素を追加\r\n * \r\n * @param {Function}\r\n *            func マウス押下時に発火する処理\r\n * @param {object}\r\n *            [style] elementに設定するスタイル\r\n * @param {object}\r\n *            [styleD={top:\"0\", left:\"0\" width:\"5px\", height:\"5px\"}]\r\n *            elementに設定するデフォルトスタイル（styleに同じ属性がある場合styleが優先される）\r\n * @param {String}\r\n *            [transform=\"over\"] paddingに対する要素の位置\r\n *            \"onFrame\":線上、\"inside\":内側、その他：指定文字列をtransformスタイルに設定\r\n * @param {String}\r\n *            [className=\"hjnDraggableItem\"] マウスイベントを取得するdivに設定するCSSクラス名\r\n */\r\nElement.prototype.addHandleElement = function(func, style, styleD, transform, className) {\r\n    style = style || {};\r\n    styleD = styleD || {};\r\n    transform = transform || \"onFrame\";\r\n    for (var property in style) styleD[property] = style[property];\r\n\r\n    var div = document.createElement('div');\r\n    div.classList.add(className || \"hjnDraggableItem\");\r\n    // 要素がpaddingの内側になるtransform設定値を求める\r\n    // 例：上下左右中央の時\"translateY(-50%) translateX(-50%)\"\r\n    if (transform === \"onFrame\") {\r\n        transform = 'translateX(-50%) translateY(-50%)';\r\n    } else if (transform === \"inside\"){\r\n        transform = 'translateX(-' + (styleD.left || 0) + ') translateY(-' + (styleD.top || 0) + ')';\r\n    }\r\n    // スタイルを設定する（デフォルト：縦横10pxで左上{top:0,ledt:0}に配置）\r\n    setStyles(div, styleD, \r\n            { width : \"5px\", height : \"5px\", position : \"absolute\", transform : transform });\r\n    // 要素を追加する\r\n    this._wrapper.appendChild(div);\r\n    // 追加した要素に、マウス押下時の処理を登録する\r\n    div.addEventListener(\"mousedown\", func, false);\r\n    div.addEventListener(\"touchstart\", func, false);\r\n};\r\n\r\n\r\n// マウス押下後の発火関数定義（イベントリスナーに登録する関数を指定）\r\nfunction elementMove(e)       {dragStart(e, this, draggingMove,        dragEndMove       ); }\r\nfunction elementUpper(e)      {dragStart(e, this, draggingUpper,       dragEndUpper      ); }\r\nfunction elementBottom(e)     {dragStart(e, this, draggingBottom,      dragEndBottom     ); }\r\nfunction elementLeft(e)       {dragStart(e, this, draggingLeft,        dragEndLeft       ); }\r\nfunction elementRight(e)      {dragStart(e, this, draggingRight,       dragEndRight      ); }\r\nfunction elementUpperLeft(e)  {dragStart(e, this, draggingUpperLeft,   dragEndUpperLeft  ); }\r\nfunction elementUpperRight(e) {dragStart(e, this, draggingUpperRight,  dragEndUpperRight ); }\r\nfunction elementBottomLeft(e) {dragStart(e, this, draggingBottomLeft,  dragEndBottomLeft ); }\r\nfunction elementBottomRight(e){dragStart(e, this, draggingBottomRight, dragEndBottomRight); }\r\n// マウスドラッグ時の挙動定義（マウス移動距離に乗算する値を定義）\r\nfunction draggingMove(e)       {dragging(e, {posX: 1, posY: 1, width: 0, height: 0 }); }  // 移動\r\nfunction draggingUpper(e)      {dragging(e, {posX: 1, posY: 1, width: 0, height:-1 }); }  // 上リサイズ\r\nfunction draggingBottom(e)     {dragging(e, {posX: 0, posY: 0, width: 0, height: 1 }); }  // 下リサイズ\r\nfunction draggingLeft(e)       {dragging(e, {posX: 1, posY: 0, width:-1, height: 0 }); }  // 左リサイズ\r\nfunction draggingRight(e)      {dragging(e, {posX: 0, posY: 0, width: 1, height: 0 }); }  // 右リサイズ\r\nfunction draggingUpperLeft(e)  {dragging(e, {posX: 1, posY: 1, width:-1, height:-1 }); }  // 左上リサイズ\r\nfunction draggingUpperRight(e) {dragging(e, {posX: 0, posY: 1, width: 1, height:-1 }); }  // 右上リサイズ\r\nfunction draggingBottomLeft(e) {dragging(e, {posX: 1, posY: 0, width:-1, height: 1 }); }  // 左下リサイズ\r\nfunction draggingBottomRight(e){dragging(e, {posX: 0, posY: 0, width: 1, height: 1 }); }  // 右下リサイズ\r\n// マウス解放後の発火関数定義（イベントリスナーから解放する関数を指定）\r\nfunction dragEndMove(e)       {dragEnd(draggingMove,        dragEndMove       ); }\r\nfunction dragEndUpper(e)      {dragEnd(draggingUpper,       dragEndUpper      ); }\r\nfunction dragEndBottom(e)     {dragEnd(draggingBottom,      dragEndBottom     ); }\r\nfunction dragEndLeft(e)       {dragEnd(draggingLeft,        dragEndLeft       ); }\r\nfunction dragEndRight(e)      {dragEnd(draggingRight,       dragEndRight      ); }\r\nfunction dragEndUpperLeft(e)  {dragEnd(draggingUpperLeft,   dragEndUpperLeft  ); }\r\nfunction dragEndUpperRight(e) {dragEnd(draggingUpperRight,  dragEndUpperRight ); }\r\nfunction dragEndBottomLeft(e) {dragEnd(draggingBottomLeft,  dragEndBottomLeft ); }\r\nfunction dragEndBottomRight(e){dragEnd(draggingBottomRight, dragEndBottomRight); }\r\n\r\n/**\r\n * DOM要素にスタイル設定\r\n * \r\n * @param {DOM}\r\n *            element CSSスタイルを設定するDOM要素\r\n * @param {object}\r\n *            [style] elementに設定するスタイル {top:\"50%\", left:\"50%\"}\r\n * @param {object}\r\n *            [styleD] elementに設定するデフォルトスタイル {top:\"50%\", left:\"50%\"}\r\n */\r\nElement.SetStyles = setStyles;\r\nfunction setStyles(element, style, styleD){\r\n    // ポインタ操作の透過が指定されていないとき有効化にする（ダイアログなど上位レイヤで透過となっていることがあるため）\r\n    styleD = styleD || {};\r\n    styleD[\"pointer-events\"] = styleD[\"pointer-events\"] || \"auto\";\r\n    // デフォルトスタイルを設定する\r\n    for (var property in styleD) element.style[property] = styleD[property];\r\n    // 指定スタイルを設定する\r\n    for (var property in style) element.style[property] = style[property];\r\n}\r\n\r\n/**\r\n * マウス押下したときに発火する関数から呼ばれる\r\n * \r\n * @private\r\n * @param {Event}\r\n *            e 発火イベント\r\n * @param {DOM}\r\n *            element マウス押下を発火したDOM要素（CALL元のthis)\r\n * @param {function}\r\n *            dragging マウス移動イベントに登録する関数消去するイベントに登録されている関数\r\n * @param {function}\r\n *            dragEnd 消去するイベントに登録する関数\r\n */\r\nfunction dragStart(e, element, dragging, dragEnd) {\r\n    // タッチイベントとマウスのイベントの差異を吸収する\r\n    var event = (e.type === \"mousedown\") ? e : e.changedTouches[0];\r\n    pos.pageX = event.pageX; \r\n    pos.pageY = event.pageY;\r\n    // 親の親要素(hjnDraggableBox指定)内の相対座標を取得\r\n    var grandparent = element.parentNode.parentNode;\r\n    pos.offsetLeft = grandparent.offsetLeft;\r\n    pos.offsetTop = grandparent.offsetTop;\r\n    // margin補正値、縦横を取得\r\n    var style = document.defaultView.getComputedStyle(grandparent);\r\n    pos.marginLeft = parseInt(style.getPropertyValue(\"margin-left\")) || 0;\r\n    pos.marginTop = parseInt(style.getPropertyValue(\"margin-top\")) || 0;\r\n    pos.width = grandparent.clientWidth || 0;\r\n    pos.height = grandparent.clientHeight || 0;\r\n\r\n    // 処理範囲外のとき何もしない\r\n    // if (pos.y > 10) return;\r\n\r\n    // 全画面にマウスアップ用要素を被せる\r\n    var hjnDrag = document.getElementById(\"hjnDrag\");\r\n    if (!hjnDrag) {\r\n        hjnDrag = document.createElement('div');\r\n        hjnDrag.id = \"hjnDrag\";\r\n        element.parentElement.appendChild(hjnDrag);\r\n    }\r\n    setStyles(hjnDrag,  \r\n            { width  : window.innerWidth + \"px\",\r\n              height : window.innerHeight + \"px\",\r\n              position : \"fixed\", top : \"0\", left : \"0\",\r\n              });\r\n    // 親の親要素（hjnDraggableBox指定)に、CSSクラス\"drag\"を追加\r\n    grandparent.classList.add(\"drag\");\r\n    // addEventListenerの第三引数を判定\r\n    var isPassive = isSupportsPassive() ? {passive: false} : false;\r\n    // ムーブイベントにコールバック\r\n    document.body.addEventListener(\"mousemove\", dragging, isPassive);\r\n    document.body.addEventListener(\"touchmove\", dragging, isPassive);\r\n    // マウスボタンが離されたとき、またはカーソルが外れたときに発火するイベントを登録する\r\n    hjnDrag.addEventListener(\"mouseup\", dragEnd, isPassive);\r\n    hjnDrag.addEventListener(\"touchend\", dragEnd, isPassive);\r\n    document.body.addEventListener(\"mouseleave\", dragEnd, isPassive);\r\n    document.body.addEventListener(\"touchleave\", dragEnd, isPassive);\r\n}\r\n\r\n// addEventListenerの第三引数を判定するためにがpassive対応かどうか判定する\r\nfunction isSupportsPassive(){\r\n    var supportsPassive = false;\r\n    try {\r\n      var opt = {\r\n        get passive() {\r\n          supportsPassive = true;\r\n        }\r\n      },\r\n      handler = function() {};\r\n\r\n      window.addEventListener(\"checkpassive\", handler, opt);\r\n      window.removeEventListener(\"checkpassive\", handler, opt);\r\n    } catch (err) {}\r\n    return supportsPassive; \r\n}\r\n/**\r\n * 親の親要素をマウス押下後、マウスカーソルが動いたときに発火する関数から呼ばれる\r\n * \r\n * @private\r\n * @param {Event}\r\n *            e 発火イベント\r\n * @param {Object}\r\n *            multiply 補正スタイル毎のマウスカーソル移動幅の掛け目<br>\r\n *            要素を移動する場合 {posX:1, posY:1, width:0, height:0}<br>\r\n *            左上リサイズの場合 {posX:1, posY:1, width:-1, height:-1}<br>\r\n *            右下リサイズの場合 {posX:0, posY:0, width:1, height:1}\r\n */\r\nfunction dragging(e, multiply) {\r\n    // タッチイベントとマウスのイベントの差異を吸収する\r\n    var event = (e.type === \"mousemove\") ? e : e.changedTouches[0];\r\n    // フリックしたときに画面を動かさないようにデフォルト動作を抑制する\r\n    e.preventDefault();\r\n    // マウスが動いた場所に要素を動かす（\"drag\"は同時に一つしか存在しない前提）\r\n    var drag = document.getElementsByClassName(\"drag\")[0];\r\n    if (drag) {\r\n        drag.style.left = pos.offsetLeft - pos.marginLeft \r\n            + multiply.posX * (event.pageX - pos.pageX) + \"px\";\r\n        drag.style.top  = pos.offsetTop  - pos.marginTop\r\n            + multiply.posY * (event.pageY - pos.pageY) + \"px\";\r\n        drag.style.width  = pos.width\r\n            + multiply.width  * (event.pageX - pos.pageX) + \"px\";\r\n        drag.style.height = pos.height\r\n            + multiply.height * (event.pageY - pos.pageY) + \"px\";\r\n    }\r\n}\r\n/**\r\n * マウスボタンが上がった場合、もしくは画面外にマウスが出た場合に発火する関数から呼ばれる\r\n * \r\n * @private\r\n * @param {function}\r\n *            dragging 消去するイベントに登録されている関数\r\n * @param {function}\r\n *            dragEnd 消去するイベントに登録されている関数\r\n */\r\nfunction dragEnd(dragging, dragEnd) {\r\n    // イベントハンドラを消去する\r\n    document.body.removeEventListener(\"mousemove\", dragging, false);\r\n    document.body.removeEventListener(\"touchmove\", dragging, false);\r\n    document.body.removeEventListener(\"mouseleave\", dragEnd, false);\r\n    document.body.removeEventListener(\"touchleave\", dragEnd, false);\r\n    // クラス名 .drag を外す\r\n    var drag = document.getElementsByClassName(\"drag\")[0];\r\n    if (drag) drag.classList.remove(\"drag\");\r\n    // マウスアップ検知用要素を削除する\r\n    var hjnDrag = document.getElementById(\"hjnDrag\");\r\n    if (hjnDrag) { hjnDrag.parentElement.removeChild(hjnDrag);}\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-Element.js\n// module id = 29\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class Config\r\n * @classdesc 定数設定機能（設定HTML作成機能付き）\r\n *            <p>\r\n *            日時、TATフォーマット指定機能追加用に作成\r\n * \r\n * @param {String}\r\n *            [prefix=''] 定数の名前空間を一位に指定する文字列、指定しない場合グローバル\r\n * @param {String}\r\n *            [ol='ol'] インデント(.nDown() .nUp())に使うHTMLタグ\r\n * @param {String}\r\n *            [globalName='HJN'] Configを登録するグローバル変数(window)の変数名\r\n * @example this._config = HjnConfig(\"m\") // config設定画面定義\r\n *          .label(null,\"------\").n() // ラベルを表示し、改行\r\n *          .name(\"ENDIAN\").label(null,\"[endian(long field)]\") //key:ENDIAN\r\n *          .radio(def(\"ENDIAN_LIL\", true), null, \"little\", true) //表示ラベルと選択時設定値\r\n *          .radio(def(\"ENDIAN_BIG\", false), null, \"big\");\r\n */\r\nexport default (function() { // #24\r\n    /** @static */\r\n    Config.prototype.__config = {};   // config設定コンテナ\r\n    Config.prototype.__config._onFunctions = {}; // 関数登録用\r\n    Config.prototype.__config.__keyConfig = {};  // キー値登録用\r\n\r\n    /** @constructor */\r\n    function Config(prefix, ol, globalName){ \r\n        if(!(this instanceof Config)) return new Config(prefix, ol, globalName);\r\n\r\n        // グローバル変数(window)にHJN.Configを登録する #74\r\n        this._globalName = globalName || \"HJN\";\r\n        var globalConfig = window[this._globalName].Config;\r\n        globalConfig = globalConfig || Config;\r\n\r\n        this._prefix = prefix; // #76\r\n        this._pre = (prefix || '') + \".\"; // 各フィールド、要素の名称のプレフィックス(区切り文字\".\")\r\n        this._ols = ol ? '<' + ol + '>' : '<ol>';   // リストに使用する要素（初期値 ol )\r\n        this._ole = ol ? '</' + ol + '>' : '</ol>';\r\n        this._html = this._ols; // config設定画面のHtml\r\n        this._nameHtml = '';    // HTMLタグの name属性指定\r\n        this._name = '';        // radioのConfig.get用\r\n\r\n        if (globalConfig[prefix] === undefined){\r\n            globalConfig[prefix] = this;\r\n            return this;\r\n        } else {\r\n            return globalConfig[prefix]; \r\n        }\r\n    }\r\n\r\n    /**\r\n     * HTML要素の値が変更した時に、configに当該要素を登録する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.on = function(t) {\r\n        var funcId = t.id;\r\n        if (t.type === \"radio\") { // radioのとき、nameに対して、選択されたキー値（idからprefixを削除した値）を登録\r\n            this.prototype.__config[t.name] = t.id.substr(t.id.indexOf(\".\") + 1);\r\n        }else if (t.type === \"number\") {    // numberのとき、idに、value(入力値)を数値として登録\r\n            this.prototype.__config[t.id] = +t.value;\r\n        } else if (t.type === \"select-one\") {    // selectのとき、idに、valueの設定値を登録\r\n            this.prototype.__config[t.id] = this.prototype.__config.__keyConfig[t.value].getConfig();\r\n            funcId = t.value;\r\n        } else {                            // textのとき、idに、value(入力値)を登録\r\n            this.prototype.__config[t.id] = t.value;\r\n        }\r\n        // on呼出し関数が登録されているとき、登録関数を呼び出す #51\r\n        var func = Config.GetConfig().getFunctionById(funcId); // #59\r\n        if(typeof(func) === \"function\") func();\r\n    };\r\n\r\n    /**\r\n     * Configリポジトリ管理インスタンスを取得する\r\n     * \r\n     * @memberof Util.Config\r\n     * @example  \r\n     * Config.GetConfig(\"File\") === Config(\"File\"); // true 既に登録されているとき\r\n     */\r\n    Config.GetConfig = function(prefix) { // #59\r\n        return new Config(prefix);\r\n    }\r\n    \r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * keyの値に指定されたvalue（なければkey値）を返却する\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    Config.prototype.getConfig = function(key) {\r\n        var cKey = this.getValueByKey(key);\r\n        var keyConfig = Config.prototype.__config.__keyConfig[this._pre + cKey];\r\n        if(!keyConfig || keyConfig.value === undefined){\r\n            return cKey;    // valueが定義されていないとき、keyの設定値を返却\r\n        }else{\r\n            return keyConfig.getConfig(); // keyの設定値のvalueが定義されているとき\r\n        }\r\n    };\r\n    /**\r\n     * configに登録されているid(=prefix+key)の設定値を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getObjctById = function(id) {\r\n        // return this.__config[id];\r\n        return Config.prototype.__config[id];\r\n    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の設定値を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getValueByKey = function(key) { \r\n        return Config.prototype.__config[this._pre + key];\r\n    };\r\n    /**\r\n     * configにkey(prefix補填)に値を設定する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.setValueByKey = function(key, val) { \r\n        Config.prototype.__config[this._pre + key] = val;\r\n    };\r\n    /**\r\n     * configの指定Idに登録されている関数を取得する<br>\r\n     * \r\n     * @memberof Util.Config\r\n     * @example  //  Config.onでradioボタン選択時に関数を呼ぶ場合に使用\r\n     * var func = Config.GetConfig().getFunctionById(t.id);\r\n     */\r\n\r\n    Config.prototype.getFunctionById = function(id) { // #53\r\n        return Config.prototype.__config._onFunctions[id];\r\n    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の関数を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     * @example Util.Config.GetConfig(\"Simulator\").getFunctionByKey(\"S_SIMU\")();\r\n     */\r\n    Config.prototype.getFunctionByKey = function(key) { // #59\r\n        return Config.prototype.__config._onFunctions[this._pre + this.getValueByKey(key)];\r\n    };\r\n    /**\r\n     * 指定keyに登録されている関数を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getFunction = function(key) { // #76\r\n        return Config.prototype.__config._onFunctions[this._pre + key];\r\n    };\r\n    /**\r\n     * 指定keyに関数を登録する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.setFunction = function(key, func) { // #76\r\n        Config.prototype.__config._onFunctions[this._pre + key] = func;\r\n    };\r\n    \r\n\r\n    /**\r\n     * config設定用HTMLテキストを取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getHtml = function() { \r\n        return this._html + this._ole;\r\n    };\r\n    /**\r\n     * keyに値を設定する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.set = function(key, val) { \r\n        this.value[this._pre + key] = val;\r\n    };\r\n    \r\n    // config作成用 メソッド\r\n    /**\r\n     * 定義＆設定画面作成用機能： 改行\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.n = function (str) {\r\n        str = str || \"\";\r\n        this._html += this._ole + str + this._ols;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ネスト一つ下げ\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.nDown = function () {\r\n        this._html += this._ols;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ネスト一つ上げ\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.nUp = function () {\r\n        this._html += this._ole;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： nameを変更する（radio等の先頭で指定）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.name = function (str) {\r\n        this._nameHtml = str ? 'name=\"' + this._pre + str + '\" ' : '';\r\n        this._name = str;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラベル要素(prefix+keyで関連付けるformのid属性となる)\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.label = function (key, str, attribute) {\r\n        this._html += '<label ' +\r\n                        (key ? 'for=\"' + this._pre + key + '\" ': '') +\r\n                        (attribute || '') + '>' +\r\n                        (str || '') +\r\n                        '</label>\\n'; // #51\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラベル付された各種入力フォーム\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.labeledForm = function (key, type, typedAttribute,\r\n                                pLabel, sLabel, val, attribute, check, cssClass) {\r\n        var classStr = (cssClass) ? ' class=\"' + cssClass + '\"' : ''; // #51\r\n        // optionの時(select用）\r\n        if (type === \"option\"){\r\n            this._html += '<option value=\"' + this._pre + key + '\"' + (typedAttribute || '') + '>' +\r\n                    (pLabel ? pLabel : '') + (sLabel ? sLabel : '') + '</option>\\n'\r\n            return this;\r\n        }\r\n        // option以外の時\r\n        this._html += '<label' + classStr + '>' + // #51\r\n                    (pLabel ? pLabel : '') +\r\n                    '<input type=\"' +type + '\" ' +\r\n                        (typedAttribute || '') + \r\n                        this._nameHtml +\r\n                        'id=\"' + this._pre + key + '\" '+ // idがユニークになるようkeyにprefixを付与\r\n                        'onchange=\"' + this._globalName + '.Config.on(this);\" ' + // #74\r\n                        (val ? 'value=\"' + val + '\" ' : '') +   // val は、キー値のまま\r\n                        (attribute || '') + \r\n                        (check ? ' checked=\"checked;\"' : '') +\r\n                    '>' +\r\n                    (sLabel ? sLabel : '') +\r\n                    '</label>\\n'; // #51\r\n        // デフォルト指定があるとき configにデフォルト値を設定する\r\n        if (type === \"radio\" && check) {    // radioのとき、nameに対して、選択状態のkeyを登録\r\n            Config.prototype.__config[this._pre + this._name] = key;\r\n        } else if (type === \"number\") { // numberのとき、keyに対する、val(入力値)を数値として登録\r\n            Config.prototype.__config[this._pre + key] = +val;\r\n        } else {    // textのとき、keyに対する、val(入力値)を登録\r\n            Config.prototype.__config[this._pre + key] = val;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： テキストボックス要素で、文字列を設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.number = function (key, pLabel, sLabel, val, attribute, func) {\r\n        Config.prototype.labeledForm.call(this, key, \"number\", \"\", \r\n                                pLabel, sLabel, val, attribute);\r\n        if (func) this.setFunction(key, func); // #74\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： テキストボックス要素で、数値を設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.text = function (key, pLabel, sLabel, val, attribute) {\r\n        Config.prototype.labeledForm.call(this, key, \"text\", \"\", \r\n                                pLabel, sLabel, val, attribute);\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラジオボタン要素で、選択肢の一つを設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.radio = function (key, pLabel, sLabel, check, attribute, func) {\r\n        Config.prototype.labeledForm.call(this, key, \"radio\", (check ? 'checked=\"checked;\"' : ''),\r\n                                pLabel, sLabel, \"\", attribute, check, \"hjnLabel4Input\");\r\n        // 関数登録指定時、attributeを関数名として、指定関数を登録する #51\r\n        if (func) this.setFunction(key, func);\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： セレクトボックス要素で、選択肢の一つを設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.option = function (key, pLabel, sLabel, check, attribute, func) { // #74\r\n        Config.prototype.labeledForm.call(this, key, \"option\", (check ? ' selected' : ''),\r\n                                pLabel, sLabel, \"\", attribute, check, \"hjnLabel4Input\");\r\n        // 関数登録指定時、attributeを関数名として、指定関数を登録する #51\r\n        if (func) this.setFunction(key, func);\r\n        // 逆引きリストに追加する \r\n        var reverseList = Config.prototype.__config.__keyConfig[this._pre + this._name] || {};\r\n        var reverseVal = this._pre + key;\r\n        var reverseKey = this.__config.__keyConfig[reverseVal].getConfig(); \r\n        reverseList[reverseKey] = reverseVal;\r\n        Config.prototype.__config.__keyConfig[this._pre + this._name] = reverseList; \r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： option用タグの開始宣言（selectタグ用）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.startTag = function (type) { // #74\r\n        this._tag = type || \"\";\r\n        this._html += '<' + this._tag \r\n                            + ' id=\"' + this._pre + this._name + '\"'\r\n                            + 'class=\"hjnLabel4Input\" onchange=\"HJN.Config.on(this);\">\\n'  ;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： option用タグの終了宣言（selectタグ用）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.endTag = function (type) { // #74\r\n        this._html += '</' + this._tag + '>\\n'\r\n        this._tag = undefined;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 定義＆設定画面作成用機能： keyConfigの設定値を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getKeyConfig = function (key) { // #74\r\n        return this.__config.__keyConfig[this._pre + key];\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： option設定値からoptionキー値を逆引きする（selectタグ用）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getOptionKey = function (key, val) { // #74\r\n        return this.__config.__keyConfig[this._pre + key][val];\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： 固定値を取得するキーの宣言<br>\r\n     * __keyConfig[\"File.SEP_COMMA\"] = {value: \",\", getConfig: LF_ELSE.vから値を取得するfunction, onFunc: null}  \r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key キー値\r\n     * @param {Object}\r\n     *            [val=key] 取得する固定値（getValueByKeyの返却値、デフォルト：keyと同じ文字列）\r\n     * @param {function}\r\n     *            [onFunc] onイベント時に実行する処理（メニューのa属性などで利用）\r\n     */\r\n    Config.prototype.def = function(key, val, onFunc) { // #76\r\n        var _keyConf = Config.prototype.__config.__keyConfig[this._pre + key] = {};\r\n        _keyConf.value = (val === undefined) ? key : val; // \r\n        _keyConf.getConfig = function () { return (val === undefined) ? key : val; };\r\n        _keyConf.onFunc = onFunc || null; \r\n        return key;\r\n    }\r\n    /**\r\n     * 定義＆設定画面作成用機能： 画面より値を取得するキーの宣言<br>\r\n     * __keyConfig[\"File.LF_ELSE\"] = {value: \"LF_ELSE\", getConfig: LF_ELSE.vから値を取得するfunction}  \r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key キー値\r\n     * @param {String}\r\n     *            [fieldId=key+\".v\"] 値を取得する画面フィールドのキー\r\n     */\r\n    Config.prototype.v = function (key, fieldId) { // #76\r\n        var _keyConf = Config.prototype.__config.__keyConfig[this._pre + key] = {};\r\n        _keyConf.value = key;           // getValueByKeyの返却値（デフォルト：keyと同じ文字列）\r\n        _keyConf.getConfig = function () {\r\n                return Util.Config(this._prefix).getValueByKey(fieldId || key + \".v\");\r\n            };\r\n        return key;\r\n    };\r\n\r\n\r\n    /**\r\n     * HTMLの入力フィールドに、指定値を設定し、Configに反映する\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    Config.prototype.setText = function(key, val) { // #76\r\n        var id = this._pre + key;\r\n        document.getElementById(id).value = val;\r\n        document.getElementById(id).onchange();\r\n    }    \r\n    /**\r\n     * HTMLのselectorを、指定値を選択し、Configに反映する\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    Config.prototype.setSelector = function(key) { // #76\r\n        var id = this._pre + key;\r\n        document.getElementById(id).checked = true;\r\n        document.getElementById(id).onchange();\r\n    }    \r\n    \r\n    /* new */\r\n    return Config;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/config/util-Config.js\n// module id = 31\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport {HJN} from '../tatLogDiver/tatLogDiver-HJN.js';\r\n\r\n/**\r\n * @memberof TimeSeries\r\n * @class FileParser\r\n * @classdesc ファイルをパースして読み込む\r\n *            <p>\r\n *            パース条件指定画面生成つき\r\n */\r\nexport default (function() {\r\n    /** @static */\r\n\r\n    /** constructor */\r\n    function FileParser(){\r\n        if(!(this instanceof FileParser)) return new FileParser();\r\n    }\r\n    \r\n    /** @private */\r\n\r\n    // public\r\n    /**\r\n     * ファイルが新たに指定された時、eTatOriginalを再構築するか否（データを追加する）か\r\n     * \r\n     * @memberof TimeSeries.FileParser\r\n     * @return {boolean} 再構築モードするときtrue、データを追加するときfalse\r\n     */\r\n    FileParser.prototype.isNewETAT = function() { // #23\r\n        return Util.Config.File.getConfig(\"NEWFILE\") === \"NEWDATA\"; // #76\r\n    }\r\n    \r\n    /**\r\n     * 「ファイルから次の1レコードを取得するutil」 を取得する\r\n     * \r\n     * @memberof TimeSeries.FileParser\r\n     */\r\n    FileParser.prototype.createGetterOfLine = function(file) {\r\n\r\n        /**\r\n         * @memberof TimeSeries.FileParser\r\n         * @class GetterOfLine\r\n         * @classdesc ファイルから１レコード取得する\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持する改行コードを用いて、ファイルから１レコードを取得する\r\n         * \r\n         * @example try{ var getterOfLine =\r\n         *          FileParser.createGetterOfLine(file), fileInfo;<br>\r\n         *          for(var i = 0; i < n; i++) { <br>\r\n         *          line = getterOfLine.next(); fileInfo += line.str + \"<BR>\"; }<br>\r\n         *          }catch (e) {<br>\r\n         *          console.error(\"改行コードの無いファイルは扱えません]%o\",e); }\r\n         */\r\n        function GetterOfLine(file, maxLength){ /* constructor */\r\n            if(!(this instanceof GetterOfLine)) return new GetterOfLine(file, maxLength);\r\n\r\n            this.file = file;\r\n            this.buf = new Uint8Array(file);\r\n            this.maxLength = maxLength || this.buf.length,\r\n            this.confLF = Util.Config.File.getConfig(\"LF\");  // 改行コードor固定レコード長 #76\r\n            this.from = 0;\r\n            this.to = 0;\r\n            this.len = 0;\r\n            this.line = {file: this.file, pos: 0, array: null, str: \"\", isEoF: false };\r\n        }\r\n        // public\r\n        /**\r\n         * 次の1レコードを取得する\r\n         * \r\n         * @memberof TimeSeries.FileParser.GetterOfLine\r\n         * @name next\r\n         */\r\n        if (Util.Config.File.getValueByKey(\"LF\") === \"LF_FIX\"){ // 固定長のとき #76\r\n            GetterOfLine.prototype.next = function () { // 次の1レコードを取得する\r\n                if(this.from >= this.maxLength ){   // ファイル末尾のとき\r\n                    this.line = {file: this.file, pos: this.maxLength, array: null, str: \"\", isEoF: true };\r\n                } else {\r\n                    this.len = Math.min(this.maxLength - this.from, this.confLF);\r\n                    var array = new Uint8Array(this.file, this.from, this.len);\r\n                    this.line = {\r\n                            file: this.file,\r\n                            pos: this.from,\r\n                            array: array,\r\n                            str: String.fromCharCode.apply(null, array),\r\n                            isEoF: false };\r\n                }\r\n                this.from += this.confLF;   // 次の行を指しておく\r\n                return this.line;\r\n            };\r\n        } else { // 可変長のとき\r\n            GetterOfLine.prototype.next = function () { // 次の1レコードを取得する\r\n                if(this.from >= this.maxLength ){   // ファイル末尾のとき\r\n                    this.line = {file: this.file, pos: this.maxLength, array: null, str: \"\", isEoF: true };\r\n                } else {\r\n                    this.to = this.buf.indexOf(this.confLF, this.from);\r\n                    if(this.to < 0) this.to = this.maxLength;   // 最終レコード（EOFで改行コードなし）のとき\r\n                    this.len = Math.min(this.to - this.from, 1024);\r\n                    var array = new Uint8Array(this.file, this.from, this.len);\r\n                    this.line = {\r\n                            file: this.file,\r\n                            pos: this.from,\r\n                            array: array,\r\n                            str: String.fromCharCode.apply(null, array),\r\n                            isEoF: false };\r\n                }\r\n                this.from = this.to + 2;    // 次の行を指しておく\r\n                return this.line;\r\n            };\r\n        }\r\n        return new GetterOfLine(file);\r\n    };\r\n    \r\n    \r\n    /**\r\n     * eTatのフィルター\r\n     * \r\n     * @memberof TimeSeries\r\n     */\r\n    FileParser.prototype.createFilter = function() { // #34\r\n       /**\r\n         * @memberof TimeSeries.FileParser\r\n         * @class Filter\r\n         * @classdesc FileParserのフィルター\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持するフィルタ条件を用いるフィルターを取得する\r\n         */\r\n        function Filter(){ /* constructor */\r\n            if(!(this instanceof Filter)) return new Filter();\r\n            var c = Util.Config.Filter; // #76\r\n            \r\n            this.confF_TIME_FROM = Util.S2D(c.getConfig(\"F_TIME_FROM\"));    // 時刻(X)の最小値フィルター\r\n            this.confF_TIME_TO   = Util.S2D(c.getConfig(\"F_TIME_TO\"));      // 時刻(X)の最大値フィルター\r\n            this.confF_TIME = (isNaN(this.confF_TIME_FROM) && isNaN(this.confF_TIME_TO))\r\n                            ? false : true; // 時刻(x）フィルター指定の有無\r\n            \r\n            this.confF_TAT_FROM = c.getConfig(\"F_TAT_FROM\") || 0; // 時間(Y)の最小値フィルター\r\n            this.confF_TAT_TO   = c.getConfig(\"F_TAT_TO\") || Number.MAX_VALUE; // 時間(Y)の最大値フィルター\r\n            this.confF_TAT = (this.confF_TAT_FROM === 0 && this.confF_TAT_TO === Number.MAX_VALUE)\r\n                            ? false : true; // 時間(ｙ）フィルター指定の有無\r\n\r\n            this.confF_TEXT = c.getConfig(\"F_TEXT\") || null; // テキストフィルタの条件（使用しない、Include,Exclude\r\n            if (this.confF_TEXT === \"F_TEXT_INCLUDE\") {\r\n                this.confF_TEXT = true;\r\n            } else if (this.confF_TEXT === \"F_TEXT_EXCLUDE\") {\r\n                this.confF_TEXT = false;\r\n            } else { // \"F_TEXT_NON\"\r\n                this.confF_TEXT = null;\r\n            }\r\n            \r\n            this.confF_TEXT_LEN = c.getConfig(\"F_TEXT_LEN\") || null;    // フィルタテキストのバイト長\r\n            this.confF_TEXT_POS = c.getConfig(\"F_TEXT_POS\") || 0;       // フィルタテキストの先頭バイト位置\r\n            this.confF_TEXT_COL = (c.getConfig(\"F_TEXT_COL\") || 3) - 1; // フィルタテキストのカラム位置（先頭：０）\r\n            this.confF_TEXT_REG = new RegExp(c.getConfig(\"F_TEXT_REG\") || \".*\");    // フィルタテキストの正規表現\r\n            \r\n            this.confF_IS = (this.confF_TIME === true \r\n                            || this.confF_TAT === true || this.confF_TEXT != null)\r\n                          ? true : false; // フィルタ指定の有無\r\n            \r\n            c = new Util.Config(\"File\"); // #76 \r\n            this.confF_SEP = c.getConfig(\"SEP\").charCodeAt(0);\r\n        }\r\n        \r\n        // class method\r\n        // private\r\n        /**\r\n         * フィルター条件で判定する\r\n         * \r\n         * @memberof TimeSeries.Filter\r\n         */\r\n        Filter.prototype._isIn = function (e) {\r\n            // フィルタ指定が無いときフィルタしない（初期表示時に無駄な処理をしない）\r\n            if (this.confF_IS === false) return true;\r\n            // 時刻（ｘ）フィルタの判定 （conf指定なしのとき NaNとの比較となりfalseとなる）\r\n            if (e.x < this.confF_TIME_FROM || this.confF_TIME_TO < e.x ) {\r\n                return false;\r\n            }\r\n            // 時間（ｙ）フィルタの判定\r\n            if (e.y < this.confF_TAT_FROM || this.confF_TAT_TO < e.y){\r\n                return false;\r\n            }\r\n            // テキストフィルタの判定\r\n            if (this.confF_TEXT === null) {\r\n                return true; // フィルタ指定なし\r\n            }\r\n            var text = \"\";\r\n            if (e.pos === undefined) { // テキスト読み込みでないとき（自動生成データのとき）\r\n                // レコードを取得する #62\r\n                text = HJN.chart.fileParser.getRecordAsText(e); // #61\r\n                // 指定正規表現に合致するか判定し、Include/Exclude指定に応じてリターンする\r\n                return this.confF_TEXT === this.confF_TEXT_REG.test(text);\r\n            } else { // ファイル読み込みのとき\r\n                // レコードを取得する\r\n                var arr = new Uint8Array(HJN.filesArrayBuffer[e.fileIdx+1], e.pos, e.len);\r\n                // CSVレコードの指定カラムを取得する(arr)\r\n                var colPos = 0;\r\n                for (var i = 0; i < this.confF_TEXT_COL; i++) {\r\n                    colPos = arr.indexOf(this.confF_SEP,colPos + 1);\r\n                }\r\n                if (colPos === -1){\r\n                    // 指定数のカラムが無い場合、Includeは処理対象外、Excludeは処理対象\r\n                    return !this.confF_TEXT;\r\n                }\r\n                var col = arr.slice(colPos, arr.length);\r\n                // 判定用文字列を取得する\r\n                text = col.slice(this.confF_TEXT_POS, this.confF_TEXT_POS + this.confF_TEXT_LEN);\r\n                // 指定正規表現に合致するか判定し、Include/Exclude指定に応じてリターンする\r\n                return this.confF_TEXT === this.confF_TEXT_REG.test(String.fromCharCode.apply(null, text));\r\n            }\r\n            return true;\r\n        };\r\n        \r\n        // public\r\n        /**\r\n         * eTatをフィルターする\r\n         * \r\n         * @memberof TimeSeries.Filter\r\n         * @param {eTat}\r\n         *            eTat フィルター処理対象のeTat\r\n         * @return {eTat} eTat フィルターされたeTat\r\n         * \r\n         */\r\n        Filter.prototype.filter = function (eTat) {\r\n            if (!eTat) return [];\r\n            return eTat.filter(this._isIn, this);\r\n        };\r\n\r\n        return new Filter();\r\n    };\r\n\r\n\r\n    /**\r\n     * 「１レコードからx:時刻（数値：ミリ秒）,y:Tat(数値：秒)を取得するutil」を取得する\r\n     * \r\n     * @memberof TimeSeries.Filter\r\n     */\r\n    FileParser.prototype.createGetterOfXY = function() {\r\n\r\n        /**\r\n         * @memberof TimeSeries.FileParser\r\n         * @class GetterOfXY\r\n         * @classdesc １レコードをパースし、XとYをレコード取得する\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持するレコードフォーマット情報を用いて、ファイルの指定レコードからＸ(data)とＹ(value)を取得する\r\n         */\r\n        function GetterOfXY(){ /* constructor */\r\n            if(!(this instanceof GetterOfXY)) return new GetterOfXY();\r\n\r\n            var c = new Util.Config(\"File\"); // #76\r\n            this.confSEP = c.getConfig(\"SEP\");   // セパレータ\r\n            \r\n            this.confTIME_COL = c.getConfig(\"TIME_COL\") - 1 || 0;    // 時刻(X)のカラム位置\r\n            this.confTIME_POS = (c.getConfig(\"TIME_POS\") || 1) - 1;  // 時刻(X)の先頭バイト位置\r\n            this.confTIME_LEN = (c.getConfig(\"TIME_LEN\") || 0);      // 時刻(X)のバイト長\r\n            this.confTIME_FORM = c.getConfig(\"TIME_FORM\");           // 時刻(X)の文字フォーマット指定\r\n            this.confTIME_YMD = (c.getConfig(\"TIME_YMD\") || \"YYYY/MM/DD hh.mm.ss.ppp\"); // #42\r\n                                                                    // 時刻(X)のYMDフォーマット\r\n            this.paseDateConf = {  // YYYY/MM/DD hh:mm:dd.ss.ppp #41\r\n                YYYY: this.confTIME_YMD.indexOf(\"YYYY\"),\r\n                MM: this.confTIME_YMD.indexOf(\"MM\"),\r\n                DD: this.confTIME_YMD.indexOf(\"DD\"),\r\n                hh: this.confTIME_YMD.indexOf(\"hh\"),\r\n                mm: this.confTIME_YMD.indexOf(\"mm\"),\r\n                ss: this.confTIME_YMD.indexOf(\"ss\"),\r\n                ppp: this.confTIME_YMD.indexOf(\"p\"),\r\n            };\r\n            this.isYMD = (this.confTIME_FORM === \"TIME_FORM_YMD\");\r\n            // 時刻(X)の数値単位(1or1000,YMDのとき1)\r\n            this.confTIME_UNIT = this.isYMD? 1 : (c.getConfig(\"TIME_UNIT\") || 1);\r\n            \r\n            \r\n            this.confTAT_COL = c.getConfig(\"TAT_COL\") - 1 || 1;      // 時間(Y)のカラム位置\r\n            this.confTAT_POS = (c.getConfig(\"TAT_POS\") || 1) - 1;    // 時間(Y)の先頭バイト位置\r\n            this.confTAT_LEN = (c.getConfig(\"TAT_LEN\") || 0);        // 時間(Y)のバイト長\r\n            this.confTAT_FORM = c.getConfig(\"TAT_FORM\");             // 時間(Y)のフォーマット指定\r\n            this.confTAT_UNIT = c.getConfig(\"TAT_UNIT\") || 1;        // 時間(Y)の数値単位(1/1000)\r\n            this.confENDIAN =  c.getConfig(\"ENDIAN\");    // リトルエンディアンはtrue、ビッグエンディアンはfalse\r\n            this.isLittle = (function(){\r\n                // long用に4バイト取得する\r\n                var buf = new ArrayBuffer(4);               \r\n                // true:bufに、リトルエンディアン指定で1を書き込む\r\n                new DataView(buf).setUint32(0, 1, true);\r\n                // プラットフォームのエンディアンを使用するUint32Arrayと比較する\r\n                return (new Uint32Array(buf)[0] === 1);     \r\n            }());\r\n            \r\n            this.dateAndValue = {date: 0, value: 0, isError: false };\r\n        }\r\n        \r\n        // class method\r\n        /**\r\n         * 数字をパースして数値（ミリ秒）を取得する<br>\r\n         * 例：\"-1:1:1.2 -> -3661200 ms = -1*(3600+60+1+0.2)*1000\r\n         * \r\n         * @memberof TimeSeries.FileParser.GetterOfXY\r\n         */\r\n        GetterOfXY.parseNumber = function (){ // str, unit,\r\n            var str = arguments[0],\r\n                unit = arguments[1];\r\n            if(!str) {console.log(\"data Y parse error\"); return 0; }\r\n            var ds = (str.indexOf(\":\") < 0) ? [str] : str.split(\":\"),   // #40\r\n                pm = (0 <= ds[0]) ? 1 : -1,\r\n                sec = 0.0;\r\n            for(var i = 0; i < ds.length; i++){\r\n                sec += pm * Math.abs(ds[i]) * Math.pow(60, ds.length - i - 1);\r\n            }\r\n            return sec * (unit || 1);\r\n        };\r\n\r\n        /**\r\n         * Long(4バイトバイナリ）数字をパースして数値（ミリ秒）を取得する\r\n         * \r\n         * @private\r\n         */\r\n        GetterOfXY.prototype._parseLong = function (arr){\r\n            if (4 <= arr.length ) { // Long(4byte)以上のときunsigned longとして処理する\r\n                // bufの先頭4byteを、指定バイトオーダ(endian)で、符号無32bit intとして参照\r\n                return (new DataView(arr.buffer, 0 , 4)).getUint32(0, this.confENDIAN);\r\n            } else {\r\n                // Long(4バイト）より短いとき、Byte単位に処理する\r\n                if (this.confENDIAN) { // little endianのとき\r\n                    return arr.reduceRight(function(a, b){ return a*256 + b; });\r\n                } else {               // big endianのとき\r\n                    return arr.reduce(function(a, b){ return a*256 + b; });\r\n                }\r\n            }\r\n        };\r\n\r\n        // public\r\n        /**\r\n         * レコードからXとYを取得する\r\n         * \r\n         * @memberof TimeSeries.FileParser.GetterOfXY\r\n         */\r\n        GetterOfXY.prototype.parse = function (line) {\r\n            // セパレータでカラム分割する\r\n            var posMax = Math.max(this.confTIME_COL, this.confTAT_COL),\r\n                sep = this.confSEP.charCodeAt(0),   // 区切り文字のUint値\r\n                pos = 0,\r\n                nextPos = line.array.indexOf(sep),  // 行末（次の区切り文字位置）\r\n                x = 0,\r\n                y = -1;\r\n            for (var i = 0; i <= posMax; i++) {\r\n                if (i === this.confTIME_COL){\r\n                    // パース対象フィールドを切り出す\r\n                    var posX =  pos + this.confTIME_POS;\r\n                    var arrX = (0 < this.confTIME_LEN) \r\n                             ? line.array.slice(posX, posX + this.confTIME_LEN)\r\n                             : line.array.slice(posX, nextPos);\r\n                    var strX = \"\";\r\n                    // フィールドをパースする\r\n                    if (this.isYMD){    // 年月日時分秒の文字列のとき\r\n                        strX = String.fromCharCode.apply(null,arrX);\r\n                        x = Util.S2D(strX, this.paseDateConf);\r\n                    } else if (this.confTIME_FORM === \"TIME_FORM_TEXT\"){    // テキスト数字のUNIX経過時間のとき\r\n                        strX = String.fromCharCode.apply(null,arrX);\r\n                        x = GetterOfXY.parseNumber(strX);\r\n                    } else{ // this.confTIME_FORM === \"TIME_FORM_LONG\"\r\n                            // longのUNIX経過時間のとき\r\n                        x = this._parseLong(arrX);\r\n                    }\r\n                    // 単位を補正する\r\n                    x *= this.confTIME_UNIT;\r\n                }\r\n                if (i === this.confTAT_COL){\r\n                    // パース対象フィールドを切り出す\r\n                    var posY =  pos + this.confTAT_POS;\r\n                    var arrY = (0 < this.confTAT_LEN) \r\n                             ? line.array.slice(posY, posY + this.confTAT_LEN)\r\n                             : line.array.slice(posY, nextPos);\r\n                    // フィールドをパースする\r\n                    if (this.confTAT_FORM === \"TAT_FORM_TEXT\"){\r\n                        // テキスト数字によるUNIX経過時間のとき\r\n                        var strY = String.fromCharCode.apply(null,arrY);\r\n                        y = GetterOfXY.parseNumber(strY);\r\n                    } else{\r\n                        // TAT_FORM_TEXT === \"TAT_FORM_LONG\" 数値によるUNIX経過時間のとき\r\n                        y = this._parseLong(arrY);\r\n                    }\r\n                    // 単位を補正する\r\n                    y *= this.confTAT_UNIT;\r\n                }\r\n                pos = nextPos + 1;\r\n                nextPos = line.array.indexOf(sep, pos);\r\n                if (nextPos < 0) nextPos = line.array.length;\r\n            }\r\n            \r\n            if(0 < x && 0 <= y){ // 正常時\r\n                return {x: x, y: y, isError: false };\r\n            } else {            // エラー時\r\n                return {x: x, y: y, isError: true };\r\n            }\r\n        };\r\n        \r\n        return new GetterOfXY();\r\n    };\r\n    \r\n    /**\r\n     * eTatの指定行の編集元レコードを、テキストフォーマットに変換して取得する\r\n     * \r\n     * @memberof TimeSeries.FileParser\r\n     * @param {Object}\r\n     *            e eTat[n]：eTatの指定行\r\n     * @return {String} eTatの指定行の表示用テキスト\r\n     */\r\n    FileParser.prototype.getRecordAsText = function (e) { // #62 ADD\r\n        if (!e) return \"\";\r\n        var text = \"\";\r\n        if (typeof e.pos === \"undefined\") { // 生成データのとき\r\n            // 生成データをCSVのログデータとして編集する #61\r\n            text = Util.D2S(e.x, \"yyyy/MM/dd hh:mm:ss.ppp\", true)\r\n                    + \", \" + e.y + \", \" + e.message; // #53\r\n            // 状態遷移履歴を追加する #62\r\n            if (e.history){\r\n                e.history.forEach(function(h){\r\n                    var timeStr = \"\";\r\n                    if (typeof(h.time) === \"number\") {\r\n                        timeStr = Util.D2S(h.time, \"mm:ss.ppp\", true) + \" seq:\"\r\n                    }\r\n                    text += \" [\" + h.sequenceIdx + \":\" + h.status + \"]\" // #61\r\n                        + timeStr + Util.D2S(h.sequenceTime, \"mm:ss.ppp\", true);\r\n                }, this);\r\n            }\r\n        } else { // ファイル読込のとき\r\n            // ファイルの該当行を Uint8Arrayに登録する\r\n            var buff = new Uint8Array(e.len + 2);\r\n            var file = HJN.filesArrayBuffer[e.fileIdx]; // #23\r\n            buff.set(new Uint8Array(file, e.pos,\r\n                    Math.min(e.len + 2, file.byteLength - e.pos)));\r\n            // ログデータを編集する\r\n            text = String.fromCharCode.apply(null, buff);\r\n        }\r\n        return text;\r\n        \r\n    };\r\n \r\n    // new\r\n    return FileParser;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-FileParser.js\n// module id = 32\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport Graph from '../tatLogDiver/tatLogDiver-Graph.js';\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class MenuConfigFile\r\n * @classdesc FileParser用メニューHTML定義\r\n * \r\n */\r\nexport default function MenuConfigFile() {}  // #76\r\n  \r\n\r\nMenuConfigFile.config = function () {\r\n    // File Format Config設定画面定義 #51\r\n    var prefix = \"File\";\r\n    var c = new  Util.Config(prefix);\r\n    c // #53\r\n        .name(\"NEWFILE\").label(null,\"Registered \") // #23\r\n            .radio(\"NEWDATA\", null, \"newly\", true)\r\n            .radio(\"ADDDATA\", null, \"additionally\").n()\r\n        .label(null,\"----- File format definition --------\").n()\r\n        .n(\"<br>\")\r\n        .name(\"LF\").label(null, \"[Line feed code]\").n()\r\n        .radio(c.v(\"LF_FIX\"), null, \"Fixed Length\")\r\n            .number(\"LF_FIX.v\",  null, \"byte\",\"80\",'style=\"width:60px;\"').n()\r\n        .radio(c.def(\"LF_WIN\",  13), null, \"Windows:CR(13)+LF(10)\", true).n()\r\n        .radio(c.def(\"LF_UNIX\", 10), null, \"Unix/Linux:LF(10)\").n()\r\n        .radio(c.def(\"LF_ZOS\",  15), null, \"zOS:NEL(15)\").n()\r\n        .radio(c.def(\"LF_MAC\",  13), null, \"Mac:CR(13)\").n()\r\n        .radio(c.v(\"LF_ELSE\"), null, \"other charcode\")\r\n            .number(\"LF_ELSE.v\", \"(\", \")\", \"10\", 'style=\"width:40px;\"').n()\r\n        .n(\"<br>\")\r\n        .name(\"SEP\").label(null,\"[CSV delimiter]\").n()\r\n        .radio(c.def(\"SEP_COMMA\", ','), null, \"comma\", true)\r\n        .radio(c.def(\"SEP_TAB\", '\\t'),   null,\"tab\")\r\n        .radio(c.v(\"SEP_ELSE\"), null, \"other\")\r\n            .text(\"SEP_ELSE.v\", '\"', '\"', ',', 'size=\"2\" placeholder=\",\"').n()\r\n        .n(\"<br>\")\r\n        .name(\"TIME\").label(null, \"[Timestamp field]\").n()\r\n        .number(\"TIME_COL\", \"\", \"th column of CSV\", \"1\", 'style=\"width:40px;\"').n()\r\n        .name(\"TIME_POS\")\r\n            .number(\"TIME_POS\", \"Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n            .number(\"TIME_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .name(\"TIME_FORM\").label(null,\"Format:\").n()\r\n            .radio(\"TIME_FORM_YMD\", \"text\", null, true)\r\n                .text(\"TIME_YMD\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"').n()\r\n            .radio(\"TIME_FORM_TEXT\", \"(num)\", \"text\")\r\n            .radio(\"TIME_FORM_LONG\", null, \"long\").n()\r\n            .nDown()\r\n            .name(\"TIME_UNIT\").label(null, \"Units of numbers:\")\r\n                .radio(c.def(\"TIME_UNIT_MS\", 1), null, \"msec\")\r\n                .radio(c.def(\"TIME_UNIT_SEC\", 1000), null, \"sec\", true)\r\n            .nUp()\r\n        .n(\"<br>\")\r\n        .name(\"TAT\").label(null,\"[Turnaround time(TAT) field]\").n()\r\n        .number(\"TAT_COL\", \"\", \"th column of CSV\", \"2\", 'style=\"width:40px;\"').n()\r\n        .name(\"TAT_POS\")\r\n            .number(\"TAT_POS\", \"Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n            .number(\"TAT_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .name(\"TAT_UNIT\").label(null, \"Units of numbers:\")\r\n                .radio(c.def(\"TAT_UNIT_MS\", 1), null, \"msec\")\r\n                .radio(c.def(\"TAT_UNIT_SEC\", 1000), null, \"sec\", true).n()\r\n        .name(\"TAT_FORM\").label(null,\"Format: \")\r\n            .radio(\"TAT_FORM_TEXT\", null, \"text\", true)\r\n            .radio(\"TAT_FORM_LONG\", null, \"long\").n()\r\n            .nDown()\r\n            .name(\"ENDIAN\").label(null, \"for long Endian: \")\r\n                .radio(c.def(\"ENDIAN_LIL\", true), null, \"little\", true)\r\n                .radio(c.def(\"ENDIAN_BIG\", false), null, \"big\")\r\n            .nUp()\r\n        .n(\"<br>\")\r\n    ;\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-MenuConfigFile.js\n// module id = 33\n// module chunks = 0","import * as Util from '../util/util.js';\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualApp\r\n * @classdesc 仮想アプリケーション\r\n * \r\n * @param {String}\r\n *            [userName = \"dafault\"] ログに出力するユーザ名\r\n * @param {Array}\r\n *            [sequence = SQL３個のオン処理] 取引の処理シーケンスを格納した配列\r\n * @param {Number}\r\n *            [times = 2 回] 繰返し回数\r\n * @param {Number}\r\n *            [thinkTime = 300 ms] 繰返し時の次回処理開始までの平均時間(ミリ秒）\r\n */\r\nexport default (function() { // #53\r\n    /** @constructor */\r\n    function VirtualApp(userName, model){\r\n        if(!(this instanceof VirtualApp)){\r\n            return new VirtualApp(userName, model);\r\n        }\r\n        this._userName = userName || \"default\"; // ログ出力テキスト\r\n        // 定数の設定\r\n        // イベントシーケンスを取得する\r\n        if (typeof(model) === \"undefined\") model = {}\r\n        model.baseModel = model.baseModel || {\"holds\": []};\r\n        this._sequence = model.sequence;\r\n        // イベントシーケンスの繰り返し回数\r\n        this._times = (typeof(model.times) !== \"undefined\") ? model.times : 1;\r\n        // イベントシーケンス終了時に再実行する場合の平均再開時間\r\n        this._thinkTime = Math.max(0,\r\n                (typeof(model.thinkTime) !== \"undefined\") ? model.thinkTime : 500);\r\n        // イベントシーケンス終了時に再実行する場合の最小再開時間\r\n        this._thinkTimeMin = Math.max(0,\r\n                (typeof(model.thinkTimeMin) !== \"undefined\") ? model.thinkTimeMin : 500);\r\n        // メッセージ（ログ末尾に付与する文字列）\r\n        this._baseMessage = model.message + \"\\n\";\r\n        this._message = \"\";\r\n        this._history = []; // #62\r\n\r\n        // 変数の設定\r\n        this._startTime = Number.MIN_SAFE_INTEGER; // イベントシーケンス開始時刻（UNIX時刻：ミリ秒）\r\n        this._sequenceTime = Number.MIN_SAFE_INTEGER; // シミュレータに登録したイベントの時刻（現在時刻）\r\n        this._sequenceIdx = 0;    // シミュレータに登録したイベントシーケンスの位置\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n\r\n    /**\r\n     * シミュレータのログを出力する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            logLv ログレベル（isLog <= logLvのときログ出力する）<br>\r\n     *            (0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)\r\n     * @param {boolean}\r\n     *            isLog ログ出力レベル\r\n     * @param {Number}\r\n     *            time 日時を表す数値（ミリ秒）\r\n     * @param {Object}\r\n     *            vApp 仮想アプリ\r\n     * @param {Object}\r\n     *            resource リソース\r\n     * @param {String}\r\n     *            text ログテキスト\r\n     * @param {String}\r\n     *            highText 強調表示テキスト\r\n     */\r\n    VirtualApp.prototype.logger = function(logLv, isLog, time, vApp, resource, text, highText) {\r\n        // 0:なしの時\r\n        if (!isLog) return;\r\n        var errCode = 0;\r\n        if (resource && (resource._holdHeap.size() !== resource._holdingQty)) {\r\n            // エラー時★\r\n            errCode = 1;\r\n            highText = highText ? highText + \"　unkown error!!\" : \"　unkown error!!\";\r\n        } else if (logLv > +isLog) {\r\n            return; \r\n        }\r\n\r\n        // エラーログ編集\r\n        var user = vApp ? \" \" + vApp._userName : \" \";\r\n        var resourceText = resource ? (\" [\" + resource._name + \" wait:\"\r\n                + resource._waitHeap.size() + \"hold:\"\r\n                + resource._holdHeap.size() + \"=\"\r\n                + resource._holdingQty + \" qty] \") : \" \";\r\n        text = text || \"\";\r\n        var logText = Util.D2S(this.getTime(),\"hh:mm:ss.ppp\",true) \r\n                    + user +\"(\" + this._times + \"-\" + this._sequenceIdx + \")\"\r\n                    + resourceText \r\n                    + text;\r\n        highText = highText || \"\";\r\n\r\n        // エラー時の強制補正★\r\n        var modify = \"\";\r\n        if (errCode === 1) { // リソースヒープもしくはリソース量を強制補正する\r\n            var deleted = undefined;\r\n            if (resource._holdHeap.size() < resource._holdingQty) {\r\n                deleted = resource._holdHeap.del(this);\r\n            }\r\n            if (deleted){\r\n                modify = \"FORCE★: holdHeap.del(\" + deleted.userName + \")\";\r\n            } else {\r\n                modify = \"FORCE★: holdingQty modified\"\r\n                    resource._holdingQty = resource._holdHeap.size();\r\n            }\r\n        }\r\n\r\n        // エラーログ出力\r\n        if (highText || modify){\r\n            console.log(logText + \" %o\", highText + \" \" + modify);\r\n        } else {\r\n            console.log(logText);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取引を開始する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            startTime 開始時刻（UNIX時刻：ミリ秒）\r\n     * @return {Object}仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.start = function(startTime) {\r\n        this._times--; // イベントシーケンスの繰り返し回数を1減らす\r\n        this._sequenceIdx = 0;    // シミュレータに登録したイベントシーケンスの位置\r\n        this._startTime = startTime;      // イベントシーケンス開始時刻（UNIX時刻：ミリ秒）\r\n        this._sequenceTime = startTime;   // シミュレータに登録したイベントの時刻\r\n        this._message = this._baseMessage; // ログ末尾に出力する文字列の初期化\r\n        this._history = []; // ログ末尾に出力する状態遷移履歴情報の初期化 #62\r\n        this.addHistory(\"start\");\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * イベント時刻を返却する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualApp.prototype.getTime = function() {\r\n        return this._sequenceTime;\r\n    };\r\n\r\n    /**\r\n     * リソース使用量を返却する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            [resource| 指定なしのとき1.0を返却する] リソース\r\n     * @return {Number} リソース使用量\r\n     */\r\n    VirtualApp.prototype.getAmount = function(resource) {\r\n        return 1.0;\r\n    };\r\n\r\n    /**\r\n     * 次の状態に遷移する、シーケンス終了時TATログを出力する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualApp.prototype.next = function(system) {\r\n        this.logger(4, system._log, system.getTime(), this, undefined, 'NEXT', undefined);\r\n        var events = []; // 戻り値\r\n        var ret = {result: true, events: [this]};\r\n\r\n        if (this._sequenceIdx < this._sequence.length) { // イベントシーケンス処理途中のとき\r\n            var seq = this._sequence[this._sequenceIdx]; // 現在の処理シーケンス位置\r\n            // holdリソースを取得する\r\n            if (seq.hold && seq.hold !== \"\") {\r\n                // holdリソースが指定されているとき、指定リソースを確保する（確保できたとき[this]が戻り値）\r\n                ret = system.getResouce(seq.hold).hold(system, this); // #61\r\n                events = ret.events;\r\n            } else {\r\n                // holdリソースが指定されていないとき、無条件に自身をスケジュール対象に加える\r\n                events = [this];\r\n            }\r\n            // リソースを確保できたとき、該当シーケンスを完了させる\r\n            if (0 < events.length && (0 <= this._times) && ret.result) { // #61\r\n                // 完了した処理の処理時間を加える\r\n                var tatAdd = Math.ceil(Util.Random().exponential(seq.tat - seq.tatMin));\r\n                this.setSequenceTime(this._sequenceTime += seq.tatMin + tatAdd, seq.hold); // #61\r\n                // シーケンスのfreeで指定されているリソースの解放\r\n                if (seq.free) {\r\n                    for (var i = 0; i < seq.free.length; i++) {\r\n                        events = events.concat(system.getResouce(seq.free[i]).free(this));\r\n                    }\r\n                }\r\n                // 次の処理を参照する（ シミュレータに登録したイベントシーケンスの位置）\r\n                this._sequenceIdx++;\r\n            }\r\n            return events;\r\n        }\r\n\r\n        // イベントシーケンスを終えたときTATログを出力する(this._sequenceIdx >= this._sequence.length)\r\n        var vApp = this._finish(system, \"N_000\");\r\n        // シーケンスをstart状態に設定する\r\n        // this._sequenceTime = system.getTime(); はfinishで更新されるので不可\r\n        // this._startTime = this._sequenceTime; finishで設定する\r\n        // 繰返し処理を継続する場合、自アプリケーションを再スケジュールする\r\n        if (vApp) {\r\n            events.push(this);\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * Freeに伴い、次の状態に遷移する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            [time | 変更しない} イベント時刻（UNIX時刻：ミリ秒）\r\n     * @param {String}\r\n     *            status ログに追記する時刻設定理由文字列\r\n     * @return {Object} 仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.setSequenceTime = function(time, status) {\r\n        status = status || \"\"; \r\n        // 解放された時刻をイベント時刻に設定する\r\n        this._sequenceTime = time;\r\n        // ログに状態遷移履歴を追記する\r\n        return this.addHistory(status);\r\n    };\r\n\r\n    /**\r\n     * ログにステータス変更履歴を追記する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {String}\r\n     *            status ログに追記する状態遷移の理由文字列\r\n     * @param {Number}\r\n     *            time 状態遷移時刻（ミリ秒）\r\n     * @return {Object} 仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.addHistory = function(status, time) {\r\n// var timeStr = \"\";\r\n// if (typeof(time) === \"number\") {\r\n// timeStr = Util.D2S(time, \"mm:ss.ppp\", true) + \" seq:\"\r\n// }\r\n// this._message += \" [\" + this._sequenceIdx + \":\" + status + \"]\" // #61\r\n// + timeStr + Util.D2S(this._sequenceTime, \"mm:ss.ppp\", true);\r\n        // 状態遷移履歴（ログ出力用）を追加する\r\n        this._history.push({ // #62\r\n            sequenceIdx : this._sequenceIdx,\r\n            status : status,\r\n            time : time,\r\n            sequenceTime : this._sequenceTime\r\n        });\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * アベンド処理（holdしている可能性のあるリソースを解放し、イベントシーケンスを強制終了する）\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {Object}\r\n     *            holdedResource アベンドさせたVirtualResource\r\n     * @param {String}\r\n     *            [logID=\"E_600\"] ログID\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Boolean}\r\n     *            [isHolding=true] リソース(holdedResource)をholdしているか否か<br>\r\n     * @param {Number}\r\n     *            [abendTime=sytem.getTime()] abend時刻\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualApp.prototype.abend = function(system, holdedResource, \r\n                                    logID, logMesseage, isHolding, abendTime) {\r\n        logID = logID || \"E_600\";\r\n        abendTime = abendTime || system.getTime();\r\n        isHolding = (typeof(isHolding) === \"boolean\") ? isHolding : true; // #61\r\n        var events = []; // 戻り値\r\n        this.logger(3, system._log, this._sequenceTime, this, holdedResource, 'abend', undefined);\r\n        var seq = this._sequence[this._sequenceIdx];\r\n        // 現在のシーケンスでholdするリソースがあるとき、waitしている可能性があるため、waitから削除する\r\n        if (seq && seq.hold) { // #61\r\n            system._resources[seq.hold].release(this);\r\n        }\r\n        // holdingリソースを開放する\r\n        var holdings;\r\n        // シーケンスから、holdingリソース一覧を取得する #59\r\n        if (seq) holdings = seq.holding;\r\n        if (holdings) { // シーケンス上holdingリソースがあるとき(undefined対策） #61\r\n            for (var i = holdings.length - 1; 0 <= i; i--) { // #61\r\n                // holdedResourceは削除処理対象外（呼び出し元リソースは、呼び出し前に削除済なので）\r\n                if (holdings[i] !== holdedResource._name || isHolding){ // #61\r\n                    // holdingリソースを開放し、使用リソース減に伴って新たにスケジュールするvAppを取得 #59\r\n                    events = events.concat(system._resources[holdings[i]].free(this));\r\n                }\r\n            }\r\n        }\r\n        // イベントシーケンスを強制終了する\r\n        this.setSequenceTime(abendTime, logID); // #59\r\n        var vApp = this._finish(system, logID, logMesseage);\r\n        // 自vAppに継続処理があれば、自vAppをスケジュール対象に加える\r\n        if (vApp && (0 <= this._times)) { // #61\r\n            events = events.concat([vApp]);\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * イベント終了時処理（ログ出力と、繰り返し判定）\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {String}\r\n     *            [logID=\"N_000\"] ログID（ログメッセージの先頭文字）\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Number}\r\n     *            [forceTime] 強制終了時刻を指定する（ミシュレーション停止後のeTat強制出力用）\r\n     * @return {Object|undefined} 再スケジュールするときthis、再スケジュールしないときundefined\r\n     */\r\n    VirtualApp.prototype._finish = function(system, logID, logMesseage, forceTime) {\r\n        logID = logID || \"N__00\";\r\n        logMesseage = logMesseage || \"\";\r\n        var events = []; // 戻り値\r\n        var logText = logID + \" \" + this._userName + \" \" + logMesseage + \" \" + this._message;\r\n        var now = this._sequenceTime;\r\n\r\n        // 強制終了時（シミュレーション終了時刻到来時）、自APのシミュレーションを強制終了する\r\n        if (typeof(forceTime) === \"number\") {\r\n            // 起動済処理はTATログを出力する #59\r\n            if (this._startTime <= forceTime) { \r\n                // TATログを出力する\r\n                system.eTat.push( { x: forceTime, \r\n                                    y: Math.round(forceTime - this._startTime),\r\n                                    sTatIdx: 0,\r\n                                    message: logText,\r\n                                    history: this._history} ); // #62\r\n                this.logger(2, system._log, forceTime, this, undefined, 'finish() FORCE\"', logText);\r\n            }\r\n            this._sequenceIdx = this._sequence.length; // #61 処理完了状態にする\r\n            this._startTime = this._sequenceTime; // #61 念のため設定\r\n            return undefined;\r\n        }\r\n\r\n        // 起動済処理はTATログを出力する #59\r\n        if (this._startTime <= now ) { // || this._sequenceIdx ===\r\n                                        // this._sequence.length) {\r\n            system.eTat.push( { x: now,\r\n                                y: Math.round(now - this._startTime),\r\n                                sTatIdx: 0,\r\n                                message: logText,\r\n                                history: this._history} ); // #62\r\n            this.logger(2, system._log, now, this, undefined, 'finish() \"', logText);\r\n        } else  {\r\n            this.logger(0, system._log, now, this, undefined,\r\n                    'finish() Unexpected error★ _startTime > _sequenceTime:'\r\n                    + Util.D2S(this._startTime, \"hh:mm:ss.ppp\", true)\r\n                            + \" \" + this._startTime + \" > \" + now\r\n                            + \" Idx:\" + this._sequenceIdx \r\n                    , logText);\r\n        }\r\n        this._message = this._baseMessage; // ログ末尾に追加するメッセージの初期化\r\n \r\n        // 継続判定\r\n        if (0 < this._times) { // イベントシーケンスを繰り返すとき\r\n            // イベント時刻にThink time（指数分布）を加える\r\n            var nextTime = this.getTime() + this._thinkTimeMin;\r\n            if (this._thinkTimeMin < this._thinkTime) {\r\n                nextTime += Math.ceil(Math.abs( // #61\r\n                        Util.Random().exponential(this._thinkTime - this._thinkTimeMin)));\r\n            }\r\n            // 処理の先頭に戻る\r\n            return this.start(nextTime);\r\n        }\r\n        // イベントシーケンスを継続しない時(this._times < 0)\r\n        this._times--;       // イベントシーケンスの繰り返し回数を1減らす\r\n        this._sequenceIdx = this._sequence.length; // #61 処理完了状態にする\r\n        this._startTime = this._sequenceTime; // #61\r\n        return undefined;\r\n    };\r\n\r\n    /* new */\r\n    return VirtualApp;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-VirtualApp.js\n// module id = 34\n// module chunks = 0","import * as Util from '../util/util.js';\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualResource\r\n * @classdesc 仮想リソース\r\n * \r\n * @param {Object}\r\n *            system 仮想システム（シミュレーション中の現在時刻取得等に用いる）\r\n * @param {String}\r\n *            [name = \"unlimited\"] リソース名（\"unlimited\"はリソース解放待ちを管理しない）\r\n * @param {Number}\r\n *            [holdCapacity = 1.0] 保有リソース総量（数）\r\n * @param {Number}\r\n *            [timeout = 10秒] 処理のタイムアウト時間（未使用）\r\n * @param {Number}\r\n *            [waitCapacity = Number.MAX_SAFE_INTEGER]\r\n *            リソース取得待ちキューの深さ（数）、キュー溢れ時は即時エラー終了しリソース処理しない\r\n * @param {Number}\r\n *            [queueWait = 10秒] 最大キュー滞留時間（リソース取得待ちタイムアウト時間）\r\n * @param {Boolean}\r\n *            [log=false] 詳細ログ出力有無\r\n */\r\nexport default (function() { // #53\r\n    /** @constructor */\r\n    function VirtualResource(system, name,\r\n                        holdCapacity, timeout, waitCapacity, queueWait, log){\r\n        if(!(this instanceof VirtualResource)){\r\n            return new VirtualResource(system, name,\r\n                        holdCapacity, timeout, waitCapacity, queueWait, log);\r\n        }\r\n        this._system = system;\r\n        this._name = name || \"unlimited\";\r\n        this._log = log ? +log : 0; // #59\r\n\r\n        // 処理待ち管理用\r\n        this._waitTimeout = (typeof(queueWait) !== \"undefined\")\r\n                                ? queueWait : 10000;   // キュー滞留時間上限\r\n        this._waitCapacity  = (typeof(waitCapacity) !== \"undefined\")\r\n                                ? waitCapacity : Number.MAX_SAFE_INTEGER; // キューの深さ\r\n        this._waitHeap = Util.Heap(    // リソース解放待ちキュー（登録時間順）\r\n                function(obj){ return obj.getTime(); });\r\n        \r\n        // リソース管理用\r\n        this._holdTimeout  = (typeof(timeout)  !== \"undefined\") \r\n                                ? timeout : 10000;   // 処理のタイムアウト時間\r\n        this._holdCapacity = (typeof(holdCapacity) !== \"undefined\")\r\n                                ? holdCapacity : 1.0;   // 保有リソース量（数）\r\n        this._holdingQty = 0;   // 使用リソース量\r\n        this._holdHeap = Util.Heap( // 処理のタイムアウト管理用ヒープ{obj:,val:} #59\r\n                 function(node){ return node.val; }, // valはタイムアウト時刻\r\n                 function(node){ return node.obj; }); // objはvApp\r\n        \r\n        // イベントスケジュール制御用\r\n        this._sequenceTime = 0;   // シミュレータに登録したイベントの時刻（タイムアウトチェック用）\r\n        this._isScheduled = false; // シミュレータにタイムアウトチェックイベントをスケジュールしたか\r\n        if (0 < this._waitTimeout && 0 < this._holdTimeout){ // スケジュール間隔 #61\r\n            this._interval = Math.min(this._waitTimeout, this._holdTimeout);\r\n        } else if (0 < this._waitTimeout) {\r\n            this._interval = this._waitTimeout;\r\n        } else if (0 < this._holdTimeout) {\r\n            this._interval = this._holdTimeout;\r\n        } else {\r\n            this._interval = 0;\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * リソースチェックイベント（タイムアウトチェック）を開始する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Number}\r\n     *            startTime 開始時刻（UNIX時刻：ミリ秒）\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Object} イベント(this)\r\n     */\r\n    VirtualResource.prototype.start = function(startTime, system) { // #59\r\n        this._sequenceTime = startTime + this._interval; // シミュレータに登録するイベントの時刻\r\n        system.setEvent(this);    // シミュレータにタイムアウトチェックイベントをスケジュールする\r\n        this._isScheduled = true; // 「シミュレータにタイムアウトチェックイベントをスケジュールしたかフラグ」をON\r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * イベント時刻を返却する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualResource.prototype.getTime = function() {\r\n        return this._sequenceTime;\r\n    };\r\n    \r\n    /**\r\n     * タイムアウトチェック用仮想イベント\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualResource.prototype.next = function(system) {\r\n        var events = []; // 戻り値\r\n        var now = this.getTime();\r\n        // リソース解放待ち時間がタイムアウトしたappをタイムアウトさせる\r\n        var queuedTime = Number.MIN_SAFE_INTEGER; \r\n        while (0 < this._waitHeap.size() && this._waitTimeout <= now - queuedTime) {\r\n            queuedTime = this._waitHeap.top().getTime();\r\n            if (this._waitTimeout <= now - queuedTime) { // キューイング取引がタイムアウトしているとき\r\n                // リソース解放待ちHeapからfreeするappを取り出す\r\n                var app = this._waitHeap.pop();\r\n                // appをアベンドさせる(holdリソース解放なし）\r\n                var apps = app.abend(system, this, \"E_QTO\", this._name + \" queue timeout\",\r\n                        false, queuedTime + this._waitTimeout); // appにfree時刻をセットする\r\n                // appsをスケジュールイベント登録対象に加える\r\n                if (apps.length){\r\n                    events = events.concat(apps);\r\n                }\r\n            }\r\n        }\r\n        // リソース使用時間がタイムアウトしたappをタイムアウトさせる #59\r\n        var holdTimeoutTime = Number.MIN_SAFE_INTEGER;\r\n        while (0 < this._holdHeap.size() && holdTimeoutTime <= now) {\r\n            var top = this._holdHeap.top();\r\n            holdTimeoutTime = top.val;\r\n            if (holdTimeoutTime <= now) { // 処理中取引がタイムアウトしているとき #61\r\n                var app = top.obj;\r\n                // appがスケジュールされている場合削除する（スケジューラに登録されていない場合何も起きない）\r\n                system.removeEvent(app);\r\n                // appの使用時間がタイムアウトしたリソースを解放する（注：abendで解放させると永久ループする）\r\n                events = events.concat(this.free(app));                \r\n                // appをタイムアウト時刻にアベンドさせる(holdリソース解放を伴う）\r\n                events = events.concat(app.abend(system, this,\"E_HTO\", \r\n                            this._name + \" hold timeout\", false, holdTimeoutTime));\r\n            }\r\n        }\r\n        // 次回タイムアウトチェック時刻を設定する\r\n        if ((0 < this._waitHeap.size()) || (0 < this._holdHeap.size())) {\r\n            // タイムアウトの設定があるとき、 #61\r\n            // リソース解放待ちvAppがあるとき、(タイムアウトしていない)最古vAppのタイムアウト時刻\r\n            // リソース解放待ちvAppがないとき、現在からタイムアウト時刻後 にスケジュールする\r\n            var nextWaitTimeout = Number.MAX_SAFE_INTEGER;\r\n            if (0 < this._waitTimeout) {\r\n                if ( 0 < this._waitHeap.size() \r\n                        && now <= this._waitTimeout + this._waitHeap.top().getTime()) {\r\n                    nextWaitTimeout = this._waitHeap.top().getTime() + this._waitTimeout; \r\n                } else {\r\n                    nextWaitTimeout = now + this._waitTimeout;\r\n                }\r\n            }            \r\n            var nextHoldTimeout = Number.MAX_SAFE_INTEGER;\r\n            if (0 < this._holdTimeout) {\r\n                if(0 < this._holdHeap.size()) {\r\n                    nextHoldTimeout = this._holdHeap.top().val;\r\n                } else {\r\n                    nextHoldTimeout = now + this._holdTimeout;\r\n                }\r\n            }\r\n            this._sequenceTime = Math.min(nextWaitTimeout, nextHoldTimeout);\r\n            if (this._sequenceTime < Number.MAX_SAFE_INTEGER) {\r\n                events.push(this); // タイムアウトチェックイベントをケジュールイベント登録対象に加える\r\n            } else {\r\n                this._isScheduled = false;\r\n            }\r\n        } else { \r\n            // 以外のとき、シミュレータにタイムアウトチェックイベントを再スケジュールしない\r\n            this._isScheduled = false;\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * リソースを取得する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {Object}\r\n     *            vApp リソースにhold要求する仮想AP\r\n     * @return {Objcet} 処理結果{result:boolean, events:Array}<br>\r\n     *         {boolean} result :\r\n     *         true:正常（リソース取得、取得待ち、取得不要）、false:エラー（リソース枯渇E_QOF)）<br>\r\n     *         {Array} :events リソース取得後、スケジューラに登録するイベントの配列<br>\r\n     *         [vApp]： リソースを取得できたとき、もしくはリソース枯渇時でvApp再処理の場合、スケジュール対象の vApp\r\n     *         が登録された配列[vApp]を返却<br>\r\n     *         []： リソース待ちに登録されたとき、既にリソースが管理するスケジューラに登録さているので、空の配列[]を返却<br>\r\n     *         もしくはリソース枯渇時で繰返し完了時、再スケジュールしないので[]を返却\r\n     */\r\n    VirtualResource.prototype.hold = function(system, vApp) {\r\n        var ret = { result : true,\r\n                    events : [vApp] }; // 戻り値 #61\r\n        if (this._name === \"unlimited\") return ret; // [vApp] リソース解放待ちを管理しないとき\r\n        vApp.logger(4, this._log, vApp._sequenceTime, vApp, this, 'HOLD' , undefined);\r\n        // タイムアウトチェックイベントがスケジュールされていないとき、スケジュールする\r\n        if (!this._isScheduled && (0 < this._interval)) {\r\n            this.start(system.getTime(), system);\r\n        }\r\n        // リソースを取得できるとき、使用リソース量（数）を増やし、実行中処理管理ヒープに登録し、スケジュール対象とする\r\n        var amount = vApp.getAmount(this); // 消費リソース量(デフォルト1.0）\r\n        if (amount <= (this._holdCapacity - this._holdingQty)) {\r\n            // 使用リソースを増やす\r\n            this._holdingQty += amount;\r\n            // タイムアウト管理対象リソースのとき、vAppをタイムアウト管理対象に加える #59\r\n            if (0 < this._holdTimeout) {\r\n                this._holdHeap.push({obj: vApp, val: system.getTime() + this._holdTimeout});\r\n            }\r\n            vApp.logger(3, this._log, system.getTime(), vApp, this, 'hold' , undefined);\r\n            return ret; // [vApp]\r\n        }\r\n\r\n        // リソース解放待ちキューに空きがあるとき、vAppをリソース解放待ちに 登録する（スケジュールしない）\r\n        if ((this._waitHeap.size() < this._waitCapacity) && (0 < this._waitTimeout)){\r\n            // リソース解放待ちタイムアウト管理対象に加える\r\n            this._waitHeap.push(vApp);\r\n            vApp.addHistory(\"wait:\" + this._name, system.getTime()); // #61\r\n            vApp.logger(3, this._log, system.getTime(), vApp, this, 'wait' , undefined);\r\n            return { result: true, events: [] };\r\n        }\r\n        \r\n        // リソース解放待ちキューが溢れていた時、リソースを取得できずにアベンド（リソース解放なし、自AP継続の場合[vApp]をリターン） #61\r\n        var apps = vApp.abend(system, this, \"E_QOF\",\r\n                    \"[\" + this._name + \"] over flow\", false);\r\n        vApp.logger(3, this._log, system.getTime(), vApp, this, 'over' , undefined);\r\n        return { result: false, events: apps }; // #61\r\n    };\r\n\r\n    /**\r\n     * 引数vAppが使用していたリソースを解放する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            vApp リソースにfree要求する仮想AP\r\n     * @param {Boolean}\r\n     *            [isHolding=true] 該当vAppが自リソースをholdしているか否か<br>\r\n     *            false指定時、指定vAppはリソースをholdしていない前提で、hold vApp一覧からの削除処理を行わない\r\n     * @return {Array} スケジューラに登録するイベントの配列([vApp] | [])\r\n     */\r\n    VirtualResource.prototype.free = function(vApp, isHolding) { // #59\r\n        vApp.logger(4, this._log, this._system.getTime(), vApp, this, 'FREE' , undefined);\r\n        isHolding = (typeof(isHolding) === \"boolean\") ? isHolding : true;\r\n        if (this._name === \"unlimited\") return []; // リソース解放待ちを管理しないとき\r\n        var vApps = []; // 戻り値\r\n        // 自リソースを使用している可能性があるとき、使用リソースを解放する\r\n        // 解放したvAppが使用していたリソース量(デフォルト1.0）を、使用リソース量（数）から減らす #59\r\n        if (isHolding === true) { // #61\r\n            this._holdingQty -= vApp.getAmount(this);\r\n            // タイムアウト管理対象リソースのとき、vAppをタイムアウト管理対象から削除する #61\r\n            if (0 < this._holdTimeout) { // #61\r\n                var app = this._holdHeap.del(vApp);\r\n            }\r\n            vApp.addHistory(\"free:\" + this._name, this._system.getTime());\r\n            vApp.logger(3, this._log, this._system.getTime(), vApp, this, 'del' , undefined);\r\n        }\r\n        // リソース解放待ちキューから、空きリソースで処理できるようになったvAppを取り出しスケジュールする #61\r\n        var marginQty = this._holdCapacity - this._holdingQty;\r\n        var addQty = this._waitHeap.top()\r\n                    ? this._waitHeap.top().getAmount(this) // 次のリソース解放待ちキューの使用量\r\n                    : Number.MAX_SAFE_INTEGER;\r\n        for (var i = this._waitHeap.size() && addQty <= marginQty; 0 < i; i--) {\r\n            // リソース解放待ちキューからfreeするappを取り出す\r\n            var app = this._waitHeap.pop();\r\n            // appにfree時刻をセットし、スケジュールイベント登録対象に加える\r\n            // (注：リソース取得はスケジュール後、E_HTOに伴う他のリソースの時刻は将来）\r\n            app.setSequenceTime(this._system.getTime(), \"release:\" + this._name);\r\n            vApps.push(app);\r\n            // 次のappのリソース量を加える\r\n            addQty += this._waitHeap.top() \r\n                    ? this._waitHeap.top().getAmount(this) // 次のリソース解放待ちキューの使用量\r\n                    : Number.MAX_SAFE_INTEGER;\r\n        }\r\n        return vApps;\r\n    };\r\n\r\n\r\n    /**\r\n     * 引数vAppをリソース開放待ちキューからリリースする\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            vApp リリースする仮想AP\r\n     * @return {Object | undefined} リリースした仮想AP\r\n     */\r\n    VirtualResource.prototype.release = function(vApp) { // #61\r\n        var app = this._waitHeap.del(vApp);\r\n        if (app) vApp.addHistory(\"release\", this._system.getTime());\r\n        return app;\r\n    }\r\n\r\n    \r\n    \r\n    /**\r\n     * イベント終了時処理（リソースが管理しているvAppをfinishさせる（強制終了させ処理中vAppはTATログ出力する）\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {String}\r\n     *            [logID=\"N_000\"] ログID（ログメッセージの先頭文字）\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Number}\r\n     *            forceTime 強制終了時刻を指定する（ミシュレーション停止後のeTat強制出力用）\r\n     * @return {null}\r\n     */\r\n    VirtualResource.prototype._finish = function(system, logID,\r\n                                        logMesseage, forceTime) { // #59\r\n        // シミュレーション終了後処理（処理中のvAppを強制終了する）\r\n        logID = logID || \"N_EoS\";\r\n        logMesseage = logMesseage || \"\";\r\n        while(0 < this._waitHeap.size()){\r\n            event = this._waitHeap.pop();\r\n            if (event._finish) {\r\n                event._finish(system, logID,\r\n                        \"[\" + this._name + \"] \" + logMesseage , forceTime);\r\n            }\r\n        }\r\n    }\r\n\r\n    /* new */\r\n    return VirtualResource;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-VirtualResource.js\n// module id = 35\n// module chunks = 0","import VirtualSystem from './simulator-VirtualSystem.js';\r\nimport * as Util from '../util/util.js';\r\n/**\r\n * @memberOf Simulator\r\n * @class virtualSystemByJson\r\n * @classdesc 仮想システム生成ツール(virtualSystemByJson)\r\n *            <p>\r\n *            Util管理用クラス（スタティックメソッドのみ）のためコンストラクタは使用しない\r\n */\r\nexport default (function() { // #53\r\n    /** @constructor */\r\n    function virtualSystemByJson(){\r\n        if(!(this instanceof virtualSystemByJson)){\r\n            return new virtualSystemByJson();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n\r\n    // static\r\n    /**\r\n     * 初期表示用サンプルデータ(ETAT)を自動生成する\r\n     * \r\n     * @memberof Simulator.VirtualSystemByJson\r\n     * @param {String}\r\n     *            [jsonText] シミュレーション条件JSONテキスト\r\n     * @return {ETAT} 終了時刻のTAT（応答時間）時系列データ [{x:終了時刻(UNIX時刻の経過時間(秒)),\r\n     *         y:レスポンス(秒)}]\r\n     */\r\n    // CreateSampleTatLog\r\n    virtualSystemByJson.Execute = function(jsonText){ // #53\r\n        var vSys = {};\r\n        // parse\r\n        var json = JSON.parse(jsonText)\r\n        // virtual system と resources の設定\r\n        var log = (json.log !== undefined) ? json.log : false; // #59\r\n        var start = (json.start !== undefined) \r\n                    ? Util.S2D(json.start) : new Date(1970,1,2);\r\n        var end = start + Util.S2N(json.end, \"24*h\");\r\n        var resources = json.resources;\r\n        for (var i = 0; i < resources.length; i++) {\r\n            resources[i].timeout = Util.S2N(resources[i].timeout, \"10*sec\");\r\n            resources[i].qWait = Util.S2N(resources[i].qWait, \"10*sec\");\r\n        }\r\n        vSys = VirtualSystem(start, end, json.resources, log);\r\n        // model の取得\r\n        var models = json.models;\r\n        for (var i = 0; i < models.length; i++) {\r\n            var model = models[i];\r\n            var name = Object.keys(model)[0]; // モデルの名称\r\n            var m = model[name]; // モデル\r\n            var baseModel = m.baseModel; // baseModel\r\n            for (var j = 0; j < m.sequence.length; j++) {\r\n                // 時間指定文字列を、ミリ秒数値に変換する（例：\"3*sec\"->3000)\r\n                m.sequence[j].tatMin = Util.S2N(m.sequence[j].tatMin);\r\n                m.sequence[j].tat = Util.S2N(m.sequence[j].tat);\r\n            }\r\n            // sequenceに、baseModelを展開し、未開放リソースの開放処理を登録する\r\n            models[name] = VirtualSystem.getModel(\r\n                        baseModel.holds, \r\n                        Util.S2N(baseModel.tatMin), Util.S2N(baseModel.tat),\r\n                        m.sequence, \r\n                        (typeof(m.times) === \"number\") ? m.times : 1, // #61\r\n                        Util.S2N(m.thinkTimeMin), Util.S2N(m.thinkTime)); \r\n        }\r\n        // client の設定\r\n        var clients = json.clients;\r\n        for (var i = 0; i < clients.length; i++) {\r\n            var c = clients[i];\r\n            var cStart = start + Util.S2N(c.start, 0);\r\n            var cEnd   = start + Util.S2N(c.end, 24*60*60*1000);\r\n            vSys.setClients(c.user, c.message, c.num, cStart, cEnd, models[c.model]);\r\n        }\r\n        if (1 < log) console.log(vSys); // #59\r\n        return vSys.execute();\r\n    }\r\n\r\n    /**\r\n     * シミュレーション条件JSONテキストを作成する\r\n     * \r\n     * @memberof Simulator.VirtualSystemByJson\r\n     * @param {Number}\r\n     *            [n = 0] シナリオ番号\r\n     * @return {String} シミュレーション条件JSONテキスト\r\n     */\r\n    // CreateSampleTatLogJson\r\n    virtualSystemByJson.GetJsonConfig = function(n){ // #53\r\n        n = (typeof(n) !== \"undefined\") ? n : 0;\r\n        var jsonText = \"\";\r\n        if (n === 0) {\r\n            jsonText =  '{\\n'\r\n                + '\"log\" : 1,\\n'\r\n                + '\"start\" : \"2017/01/02 00:00:00.000\",\\n'\r\n                + '\"end\"   : \"17.0*h\",\\n'\r\n                + '\"resources\" : [\\n'\r\n                + '  {\"type\" :\"WEB\", \"thread\":1024,\"timeout\":\"300*sec\", \"q\":1280, \"qWait\":0},\\n'\r\n                + '  {\"type\" :\"AP\",  \"thread\":20,  \"timeout\":\"300*sec\", \"q\":1280, \"qWait\":0},\\n'\r\n                + '  {\"type\" :\"DB\",  \"thread\":10,  \"timeout\": \"10*sec\", \"q\":10,  \"qWait\":\"10*sec\"}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"models\" : [\\n' // 取引モデル一覧\r\n                + '  { \"ON-1\" : {\\n' // オンライン取引1\r\n                + '    \"times\": 60, \"thinkTimeMin\":\"3*sec\", \"thinkTime\": \"10*sec\",\\n'\r\n                + '    \"baseModel\":  {\"holds\": [\"WEB\",\"AP\",\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":30, \"tat\":50, \"note\":\"select A\"},\\n'\r\n                + '      {\"tatMin\":50, \"tat\":50, \"note\":\"updateB\", \"hold\":\"TBL_B\"},\\n'\r\n                + '      {\"tatMin\":80, \"tat\":100,\"note\":\"updateC\", \"hold\":\"TBL_C\"}\\n'\r\n                + '    ]}},\\n'\r\n                + ' { \"ON-2\" : {\\n' // オンライン取引2\r\n                + '    \"times\": 60, \"thinkTimeMin\":\"500*ms\", \"thinkTime\": \"1*sec\",\\n'\r\n                + '    \"baseModel\":  {\"holds\": [\"WEB\",\"AP\",\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":\"100*ms\", \"tat\":\"500*ms\", \"hold\":\"\"}\\n'\r\n                + '    ]}},\\n'\r\n                + ' { \"BATCH-1\" : {\\n' // バッチ取引3\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":\"2*sec\",\"tat\":\"5*sec\",\"note\":\"updateB\",\"hold\":\"TBL_B\"}\\n'\r\n                + '    ]}}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"clients\" : [\\n' // ユーザ作成条件\r\n                + '  {\"num\":100,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"ON-1\",  \"user\" :\"userU\", \"message\":\"select A update B,C\"},\\n'\r\n                + '  {\"num\": 20,\"start\":\"16.5*h\", \"end\":\"16.6*h\", \"model\":\"ON-1\",  \"user\" :\"userT\", \"message\":\"select A update B,C 【増】\"},\\n'\r\n                + '  {\"num\":100,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"ON-2\",  \"user\" :\"userS\", \"message\":\"排他なし(WEBのみ)\"},\\n'\r\n                + '  {\"num\": 20,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"BATCH-1\",\"user\":\"userB\", \"message\":\"バッチ処理 update B＊＊＊＊＊\"}\\n'\r\n                + ']\\n'\r\n                + '}\\n';\r\n        } else if (n === 1) {\r\n            // test用\r\n            jsonText =  '{\\n'\r\n                + '\"//\" : \"log（任意、デフォルト3）:詳細ログ出力指定(0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)\",\\n'\r\n                + '\"//\" : \"start/end:シミュレーション開始時刻/終了時刻\",\\n'\r\n                + '\"log\" : 1,\\n'\r\n                + '\"start\" : \"1970/01/02 00:00:00.000\",\\n'\r\n                + '\"end\"   : \"30.0*sec\",\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"resources:sequenceのhold/freeで指定するリソース名の定義\",\\n'\r\n                + '\"//\" : \"type:リソース名、thread:最大同時hold数、timeout：holdタイムアウト時間\",\\n'\r\n                + '\"//\" : \"　　　　　　　　　　　q:最大hold待ち数、qWait:最大hold待ち時間\",\\n'\r\n                + '\"resources\" : [\\n'\r\n                + '  {\"type\" :\"DB\",  \"thread\":2,  \"timeout\": \"5*sec\", \"q\":1,  \"qWait\":\"2*sec\"}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"models:clientsで指定するモデル名(model)の定義、以下modelsで指定できる項目\",\\n'\r\n                + '\"//\" : \"baseModel:複数リソースのsequenceをまとめて宣言できる、sequenceに展開した後処理される、任意指定\",\\n'\r\n                + '\"//\" : \"sequence:指定された順にリソースを取得する、配列内に複数指定可、sequenceも複数指定可\",\\n'\r\n                + '\"//\" : \"hold：リソース名、holds(baseModelのみ指定可）：リソース一覧、各々にtat/tatMinが適用される\",\\n'\r\n                + '\"//\" : \"tat/tatMin：リソースの取得に要する平均/最小時間、tatMinのデフォルトはtat\",\\n'\r\n                + '\"//\" : \"　　　　　　★注：tatはリソースの使用時間ではない、リソース使用時間を指定す場合はfreeで指定\",\\n'\r\n                + '\"//\" : \"数値はミリ秒単位、*ms,*sec,*min,*h,*day 指定可\",\\n'\r\n                + '\"//\" : \"times：繰返し回数\",\\n'\r\n                + '\"//\" : \"thinkTime/thinkTimeMin：繰返し時の間隔の平均/最小時間、thinkTimeMinのデフォルトはthinkTime\",\\n'\r\n                + '\"//\" : \"free：[リソース名の配列]、指定リソースを開放する、free指定の無いリソースはシーケンスの最後にfreeされる\",\\n'\r\n                + '\"models\" : [\\n' // 取引モデル一覧\r\n                + ' { \"TEST-AB\" : {\\n' // テスト取引\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"2*ms\"},\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_A\", \"tatMin\":\"1*sec\", \"tat\":\"1*sec\"}],\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_B\", \"tatMin\":\"3*sec\", \"tat\":\"3*sec\"}],\\n'\r\n                + '    \"times\": 2, \"thinkTimeMin\":\"1*sec\", \"thinkTime\": \"1*sec\"}},\\n'\r\n                + ' { \"TEST-BA\" : {\\n' // テスト取引\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"2*ms\"},\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_B\", \"tatMin\":\"1*sec\", \"tat\":\"1*sec\"}],\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_A\", \"tatMin\":\"3*sec\", \"tat\":\"3*sec\"}],\\n'\r\n                + '    \"times\": 2, \"thinkTimeMin\":\"1*sec\", \"thinkTime\": \"1*sec\"}}\\n'\r\n                + '    ],\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"clients：仮想アプリケーションの起動クライアントの定義\",\\n'\r\n                + '\"//\" : \"num:作成クライアント数、start～endの間で、ランダム（指数分布）に指定回数起動する\",\\n'\r\n                + '\"//\" : \"start/end:仮想クライアント作成/終了時刻、先頭で宣言したstartからの相対時刻\",\\n'\r\n                + '\"//\" : \"model:modelsで宣言したモデル名\",\\n'\r\n                + '\"//\" : \"user:user+通番 のユーザ名で仮想クライアントが作成される\",\\n'\r\n                + '\"clients\" : [\\n' // ユーザ作成条件\r\n                + '  {\"num\": 1,\"start\":\"0*sec\", \"end\":\"0*sec\", \"model\":\"TEST-AB\",\"user\" :\"testAB1\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"1*sec\", \"end\":\"1*sec\", \"model\":\"TEST-AB\",\"user\" :\"testAB2\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"3*sec\", \"end\":\"3*sec\", \"model\":\"TEST-BA\",\"user\" :\"testBA3\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"4*sec\", \"end\":\"4*sec\", \"model\":\"TEST-BA\",\"user\" :\"testBA4\"}\\n'\r\n                + ' ]\\n'\r\n                + '}\\n';\r\n        }\r\n\r\n        return jsonText; \r\n    }\r\n\r\n    /* new */\r\n    return virtualSystemByJson;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-VirtualSystemByJson.js\n// module id = 36\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport {CreateSampleTatLogAndChartShow} from '../tatLogDiver/tatLogDiver-Init.js';\r\n\r\n/**\r\n * @memberOf Simulator\r\n * @class MenuConfig\r\n * @classdesc シミュレータ用メニューHTML定義\r\n * \r\n */\r\nexport default function MenuConfig() {} // #74\r\n\r\nMenuConfig.config = function() {\r\n    // Simulator Config用関数定義(radio用） #53\r\n    var func_S_SIMU_000 = function(){ CreateSampleTatLogAndChartShow(0); };\r\n    var func_S_SIMU_001 = function(){ CreateSampleTatLogAndChartShow(1); };\r\n    // Simulator Config設定画面定義 #53\r\n    var prefix = \"Simulator\";\r\n    var c = new  Util.Config(prefix);\r\n        c    // #53\r\n         .n(\"<br>\")\r\n         .label(null,\" If you change the scenario below,\").n()\r\n         .label(null,\"JSON is initialized and re-simulated.\").n()\r\n         .n(\"<br>\")\r\n         .name(\"S_SIMU\")\r\n             .radio(\"S_SIMU_000\", null, \r\n                       \"1 hour with table(B) lock.<br>\"\r\n                     + \"- online[100-500ms 2-5tps]<br>\" \r\n                     + \"- batch[2-5sec evry3min]\",\r\n                     true ,null, func_S_SIMU_000).n()\r\n             .radio(\"S_SIMU_001\", null, \"for test\", \r\n                     false ,null, func_S_SIMU_001).n()\r\n     ;\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-MenuConfig.js\n// module id = 37\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport * as Simulator from '../simulator/simulator.js';\r\nimport MenuConfigDetailGraph from './tatLogDiver-MenuConfigDetailGraph.js';\r\n\r\n/**\r\n * tatLogDiverのメニューを追加する\r\n * \r\n * @memberof tatLogDiver\r\n */\r\nexport default function Menu(that) {\r\n    // メニュー用のエレメントを取得する\r\n    var divMenuId = that.chartIdName + \"_menu\";\r\n    var divMenu = document.getElementById(divMenuId);\r\n    // menu用divがないとき、chartの直前に追加する #13\r\n    if (!divMenu) {\r\n        var div = document.createElement('div');\r\n        div.id = divMenuId;\r\n        div.className = \"menuBar\";\r\n        divMenu = that.chartId.parentNode.insertBefore(div, that.chartId);\r\n    }\r\n    // メニューボタン定義を登録する\r\n    var g = that.globalName;\r\n    // 上下段共通ボタンの定義(Download Menu)\r\n    var menuDownloadImg = { // getATag\r\n        menuLabel : \"graph image(.png)\",\r\n        funcName : g + \".menuDownloadImg\",\r\n        menuId : divMenuId + \"_DownloadImg\",\r\n        fileName : \"graph.png\"\r\n    };\r\n    var menuDownloadCsv = { // getATag\r\n        menuLabel : \"graph data(.csv)\",\r\n        funcName : g + \".menuDownloadCsv\",\r\n        menuId : divMenuId + \"_DownloadCsv\",\r\n        fileName : \"graph.csv\"\r\n    };\r\n    var menuDownloadLog = { // getATag\r\n        menuLabel : \"graph log records(.csv)\",\r\n        funcName : g + \".menuDownloadLog\",\r\n        menuId : divMenuId + \"_DownloadLog\",\r\n        fileName : \"tatlog.csv\"\r\n    };\r\n    var menuDownloadConc = { // getATag\r\n        menuLabel : \"conc log records(.csv)\",\r\n        funcName : g + \".menuDownloadConc\",\r\n        menuId : divMenuId + \"_DownloadConc\",\r\n        fileName : \"conclog.csv\"\r\n    };\r\n\r\n    // メニューを追加する\r\n    var accordion = document.createElement('div'); // 要素の作成\r\n    var _id = 0;\r\n    if (HJN.chart.chartId === that.chartId) { // 上段グラフ用機能のメニュー追加\r\n        // File Menu\r\n        var menuOpenCsv = { // getInputTag\r\n            menuLabel : \"Open csv data file\",\r\n            funcName : g + \".menuOpenCsv\",\r\n            menuId : divMenuId + \"_OpenCsv \"\r\n        };\r\n        var menuSaveConfig = { // getATag\r\n            menuLabel : \"save format (.json)\",\r\n            funcName : g + \".menuSaveConfig\",\r\n            menuId : divMenuId + \"_SaveCongig\",\r\n            fileName : \"hjnconfig.json\"\r\n        };\r\n        var menuLoadConfig = { // getInputTag #10\r\n            menuLabel : \"load format (.json)\",\r\n            funcName : g + \".menuLoadConfig\",\r\n            menuId : divMenuId + \"_LoadCongig\"\r\n        };\r\n        accordion.innerHTML = '<li class=\"hjnMenuLv1\">'\r\n                + getAccordionTag(that, ++_id, \"File\")\r\n                + '<ul class=\"hjnMenuLv2\">'\r\n                + getInputTag(menuOpenCsv)     // オープンボタン #24\r\n                + Util.Config.File.getHtml()          // 設定HTML #76\r\n                + getATag(menuSaveConfig)        // セーブボタン\r\n                + getInputTag(menuLoadConfig) // ロードボタン #10\r\n                + '</ul>' + '</li>';\r\n\r\n        // Filter Menu #34\r\n        var menuFilterApply = { // getFuncTag #34\r\n            menuLabel : \"Apply filter & reload\",\r\n            funcName : g + \".menuFilterApply\",\r\n            menuId : divMenuId + \"_FilterApply\"\r\n        };\r\n        var menuFilterReset = { // getFuncTag #34\r\n            menuLabel : \"Reset filter condition\",\r\n            funcName : g + \".menuFilterReset\",\r\n            menuId : divMenuId + \"_FilterClear\"\r\n        };\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Filter\">'\r\n                + getAccordionTag(that, ++_id, \"Filter\")   \r\n                + '<ul class=\"hjnMenuLv2\">'   // #24\r\n                + Util.Config.Filter.getHtml()     // 設定HMTL #76\r\n                + getFuncTag(menuFilterApply)  // フィルターボタン\r\n                + getFuncTag(menuFilterReset)   // クリアボタン\r\n                + '</ul>' + '</li>';\r\n\r\n        // Simulator Menu #53\r\n        var menuSimulatorSimulate = {\r\n            menuLabel : \"Simulate\",\r\n            funcName : g + \".menuSimulatorSimulate\",\r\n            menuId : divMenuId + \"_SimulatorSimulate\"\r\n        };\r\n        var menuSimulatorEditor = {\r\n            menuLabel : \"JSON Editor(Open/Close)\",\r\n            funcName : g + \".menuSimulatorEditor\",\r\n            menuId : divMenuId + \"_SimulatorEditor\"\r\n        };\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Simulator\">'\r\n                + getAccordionTag(that, ++_id, \"Simulator\")\r\n                + '<ul class=\"hjnMenuLv2\">' \r\n                + getFuncTag(menuSimulatorSimulate) // シミュレート実行ボタン\r\n                + getFuncTag(menuSimulatorEditor)     // JSONエディタボタン\r\n                + Util.Config.Simulator.getHtml()        // 設定HTML #74\r\n                + '</ul>' + '</li>';\r\n        // シミュレーション条件JSON Editエリアを設定する\r\n        var divSimulator = document.getElementById(\"Simulator\");\r\n        var jsonEditor = document.createElement('div'); // 要素の作成\r\n        jsonEditor.innerHTML = '<textarea id=\"SimulatorEditor\" '\r\n                + 'style=\"width:100%;border:none;resize:none;background:rgba(255,255,255,0.5);height:100%;\">'\r\n        divSimulator.appendChild(jsonEditor);\r\n        var divSimulatorEditor = document.getElementById(\"SimulatorEditor\");\r\n        // divSimulatorEditor.readOnly = true; // #22\r\n        divSimulatorEditor.value = Simulator.virtualSystemByJson\r\n                .GetJsonConfig(); // デフォルトJSON\r\n\r\n        // View Menu\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_View\">'\r\n                + getAccordionTag(that, ++_id, \"View\", true)\r\n                + '<ul class=\"hjnMenuLv2\">' // \r\n                + '<li><div id=\"' + that.chartIdName + '_legend\"></div></li>'\r\n                + '</ul>' + '</li>';\r\n\r\n        // Download Menu\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Download\">'\r\n                + getAccordionTag(that, ++_id, \"Download\")\r\n                + '<ul class=\"hjnMenuLv2\">'\r\n                + getATag(menuDownloadImg, \"Upper \")   // 上段画像ダウンロード ボタン\r\n                + getATag(menuDownloadCsv, \"Upper \")    // 上段グラフcsvダウンロード ボタン\r\n                + getATag(menuDownloadLog, \"Upper \")    // 上段生データダウンロードボタン\r\n                + '</ul>' + '</li>';\r\n\r\n        // メニュー登録\r\n        divMenu.appendChild(accordion);\r\n        // イベントリスナー登録\r\n        document.getElementById(menuOpenCsv.menuId).addEventListener('change',\r\n                that.menuOpenCsv.bind(that), false); // File Open用\r\n        document.getElementById(menuLoadConfig.menuId).addEventListener(\r\n                'change', that.menuLoadConfig.bind(that), false); // LoadConfig用\r\n\r\n    } else { // 下段用グラフ機能のメニュー追加\r\n        _id += 100;\r\n        // Download Menu\r\n        var chartDownloadUl = document.createElement('ul');\r\n        chartDownloadUl.className = \"hjnMenuLv2\";\r\n        chartDownloadUl.innerHTML = '' //\r\n                + getATag(menuDownloadImg, \"Detail \")    // 下段画像ダウンロードボタン\r\n                + getATag(menuDownloadCsv, \"Detail \")     // 下段グラフcsvダウンロードボタン\r\n                + getATag(menuDownloadLog, \"Detail \")     // 下段生データダウンロードボタン\r\n                + getATag(menuDownloadConc, \"Detail \"); // 下段conc csvダウンロードボタン\r\n        var chartDownload = document.getElementById(\"menu_Download\");\r\n        chartDownload.appendChild(chartDownloadUl);\r\n\r\n        // View Menu\r\n        var chartViewUl = document.createElement('ul');\r\n        chartViewUl.className = \"hjnMenuLv2\";\r\n        chartViewUl.innerHTML = '<li><div id=\"' + that.chartIdName\r\n                + '_legend\"></div></li>';\r\n        var chartView = document.getElementById(\"menu_View\");\r\n        chartView.appendChild(chartViewUl);\r\n\r\n        // \"Bottom detail graph\" Menu\r\n        accordion.innerHTML = ''\r\n                + '<li class=\"hjnMenuLv1\">'\r\n                +   getAccordionTag(that, ++_id, \"Bottom detail graph\", true)\r\n                +   '<ul class=\"hjnMenuLv2\">'\r\n                +     '<ol><div id=\"detailTimeRange\">' \r\n                +     Util.Config.DetailGraph.getHtml()     // 設定HMTL #76\r\n                +     '</div></ol>' // #51\r\n                +   '<li><div id=\"chartPlots\"></div></li>' // Plot一覧用タグ\r\n                +   '</ul>'\r\n                + '</li>';\r\n\r\n        // Help Menu\r\n        var menuHelpUsage = { // getAlertTag #84\r\n                menuLabel : \"Usage of TAT log diver\",\r\n                menuId : divMenuId + \"_HelpUsage\",\r\n                strFuncName : \"HJN.init.Usage()\",\r\n                dialogId : \"HJN.dialogUsage\",\r\n                w : 50,\r\n                h : 40                    \r\n            };\r\n        var menuHelpAbout = { // getAlertTag\r\n                menuLabel : \"about TAT log diver\",\r\n                menuId : divMenuId + \"_HelpAbout\",\r\n                strFuncName : \"HJN.init.Copyright()\",\r\n                dialogId : \"HJN.dialogAbout\",\r\n                w : 30,\r\n                h : 50                   \r\n        };\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\">'\r\n                + getAccordionTag(that, ++_id, \"Help\")\r\n                + '<ul class=\"hjnMenuLv2\" style=\"width: 100%;\">' //\r\n                + getAlertTag(menuHelpUsage) // #84\r\n                + getAlertTag(menuHelpAbout)\r\n                + '</ul>' + '</li>';\r\n\r\n        // メニュー登録\r\n        divMenu.appendChild(accordion);\r\n    }\r\n\r\n    // アコーディオンラベル用<input><label>タグ編集（内部関数宣言） #31\r\n    // idは、ユニークな英数字なら何でもよい（ラベル押下時のアコーディオン開閉ラジオボタン連動用の接尾語）\r\n    function getAccordionTag(that, id, labelText, isChecked) {\r\n        var isAccordion = true, // true:アコーディオン型 false:折りたたみ型 #21\r\n        typeStr = isAccordion ? ' type=\"checkbox\" name=\"accordion\" '\r\n                : ' type=\"radio\" name=\"accordion\" ', //\r\n        checkedStr = ' checked=\"checked\" ';\r\n        return ''\r\n                + '<input id=\"ac-' + that.chartIdName + id + '\"' + typeStr\r\n                + (isChecked ? checkedStr : '') + '\">' + '<label for=\"ac-'\r\n                + that.chartIdName + id + '\">' + labelText + '</label>';\r\n    }\r\n\r\n    // File Open用<input>タグ編集（内部関数宣言）\r\n    // '<ol><a><label>Child Menu<input type=\"file\" id=\"xxx\"\r\n    // multiple/></label></a></ol>\r\n    function getInputTag(arg) {\r\n        return ''\r\n                + '<ol><a><label class=\"hjnButton4Input\">' + arg.menuLabel // #51\r\n                + '<input type=\"file\" id=\"' + arg.menuId + '\"  multiple />'\r\n                + '</label></a></ol>';\r\n    }\r\n\r\n    // ダウンロード用<A>タグ編集（内部関数宣言）\r\n    // '<li><a id=\"xxx\" href=\"#\">Child Menu</a><li/>'\r\n    function getATag(arg, preLabel) {\r\n        preLabel = preLabel || \"\";\r\n        return '' + '<li><a id=\"' + arg.menuId + '\" '\r\n                + 'class=\"hjnButton4Input\" href=\"#\" ' // #51\r\n                + 'download=\"' + arg.fileName + '\" ' //\r\n                + 'onclick=\"' + arg.funcName + '(' + \"'\" + arg.menuId + \"', '\"\r\n                + arg.fileName + \"'\" + ')\" ' + '>' + preLabel + arg.menuLabel\r\n                + '</a></li>';\r\n    }\r\n\r\n    // グローバルメソッド呼出用<A>タグ編集（内部関数宣言） #34\r\n    // '<li><a id=\"xxx\" href=\"#\">Child Menu</a></li>'\r\n    function getFuncTag(arg, preLabel) {\r\n        preLabel = preLabel || \"\";\r\n        return '' \r\n                + '<li><a id=\"' + arg.menuId + ' \"'\r\n                + 'class=\"hjnButton4Input\" href=\"#\" ' // #51\r\n                + 'onclick=\"' + arg.funcName + '()\">' //\r\n                + preLabel + arg.menuLabel + '</a></li>';\r\n    }\r\n\r\n    // Alert用<A>タグ編集（内部関数宣言）\r\n    // '<a id=\"xxx\" onclick=Alert(\"xxx\")>Child Menu</a>'\r\n    function getAlertTag(arg) {\r\n        var w = arg.w || 40;\r\n        var h = arg.h || 40;\r\n        return '' \r\n                + '<ol><a id=\"' + arg.menuId + '\"'\r\n                + 'class=\"hjnButton4Input\" ' // #51\r\n                + ' onclick=\"HJN.init.ShowDialog(' + arg.strFuncName\r\n                    + \", '\"+ arg.dialogId + \"'\" // #84\r\n                    + \",\" + w + \",\" + h \r\n                    +\")\" + '\"' + '>' // #79\r\n                + '<label>' + arg.menuLabel + '</label></a></ol>';\r\n    }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Menu.js\n// module id = 38\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport Graph from '../tatLogDiver/tatLogDiver-Graph.js';\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class MenuConfigFilter\r\n * @classdesc FileParser用メニューHTML定義\r\n * \r\n */\r\nexport default function MenuConfigFilter() {} // #76\r\n\r\nMenuConfigFilter.config = function () {\r\n    var prefix = \"Filter\";\r\n    var c = new  Util.Config(prefix);\r\n    // Filter Config用関数定義(radio用） #51\r\n    var func_F_SYNC_UPPER = function(){ Graph.DrawCallback(HJN.chart.graph); };\r\n    var func_F_SYNC_DETAIL = function(){ Graph.DrawCallback(HJN.chartD.graph); };\r\n    // Filter Config設定画面定義 #51\r\n    c // #53\r\n        .name(\"F_SYNC\").label(null,\"Sync\") // #50\r\n            .radio(\"F_SYNC_UPPER\", null, \"Upper\", false ,null, func_F_SYNC_UPPER) // #51\r\n            .radio(\"F_SYNC_DETAIL\", null, \"Detail\", false, null, func_F_SYNC_DETAIL)\r\n            .radio(\"F_ASYNC\", null, \"Async\", true).n()\r\n        .label(null,\"----- Data filter condition--------\").n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TIME\").label(null, \"[Date filter]\").n()\r\n            .label(null,\"Include if end time is between\").n()\r\n                .text(\"F_TIME_FROM\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"')\r\n                .label(null,\"and\").n()\r\n                .text(\"F_TIME_TO\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TAT\").label(null,\"[Turnaround time(TAT) filter]\").n()\r\n            .label(null,\"Include if TAT is between\").n()\r\n                .number(\"F_TAT_FROM\", null, null, \"0\", 'style=\"width:80px;\"')\r\n                .number(\"F_TAT_TO\", \"and\", null, null, 'style=\"width:80px;\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TEXT\").label(null,\"[Text filter]\")\r\n                .radio(\"F_TEXT_NON\", null, \"Don't use.\", true).n()\r\n                .radio(\"F_TEXT_INCLUDE\", null, \"Include \")\r\n                .radio(\"F_TEXT_EXCLUDE\", null, \"Exclude \").n()\r\n                .number(\"F_TEXT_LEN\", \"if \", \" bytes\", null, 'style=\"width:40px;\"')\r\n                .number(\"F_TEXT_POS\", \"from the \", \"th byte\", \"1\", 'style=\"width:40px;\"').n()\r\n                .number(\"F_TEXT_COL\", \"from head of the\", \"th column of CSV\", \"3\", 'style=\"width:40px;\"').n()\r\n                .text(\"F_TEXT_REG\", \"match the regular expression\", null, null, 'size=\"7\" placeholder=\".*\"').n()\r\n            .n(\"<br>\")\r\n    ;\r\n}\r\n\r\nMenuConfigFilter.reset = function () {\r\n    // メニュー画面フィルタ条件に、初期値を設定する\r\n    var c = new Util.Config(\"Filter\");\r\n    c.setText(\"F_TIME_FROM\", null);\r\n    c.setText(\"F_TIME_FROM\", null);\r\n    c.setText(\"F_TIME_TO\", null);\r\n    c.setText(\"F_TAT_FROM\", 0);\r\n    c.setText(\"F_TAT_TO\", null);\r\n    c.setSelector(\"F_TEXT_NON\");\r\n    c.setText(\"F_TEXT_LEN\", null);\r\n    c.setText(\"F_TEXT_POS\", 1);\r\n    c.setText(\"F_TEXT_COL\", 3);\r\n    c.setText(\"F_TEXT_REG\", null);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-MenuConfigFilter.js\n// module id = 39\n// module chunks = 0","export var Copyright = {\r\n    name : \"TAT log diver\",\r\n    Version : \"b19.06.01\",\r\n    text : \"&copy; 2017-\" + (new Date()).getFullYear() + \" Junichiroh Hirose\",\r\n    url : \"https://github.com/hirosejn/\",\r\n};\r\n\r\n\r\n\r\nCopyright.getAboutText = function(){\r\n    return Copyright.name + \" (\" + Copyright.Version + \")<br>\"\r\n        + Copyright.text + \" <br> \"\r\n        + Copyright.getGitHubHTML() + \" <br> \"\r\n        + Copyright.getJSDocHTML() + \" <br> \"\r\n        + Copyright.getHtmlHTML();  // #84\r\n}\r\n\r\n// GitHubリンク\r\nCopyright.getGitHubHTML = function(text){\r\n    text = text || Copyright.url;\r\n    return '<a class=\"hjnLabel4Input\" href=\"' + Copyright.url+ '\"'\r\n        + ' target=”_hirosejnGit”>' + text + '</a>'\r\n}\r\n\r\n// JSDocリンク\r\nCopyright.getJSDocHTML = function(name){\r\n    name = name || \"JSDoc\";\r\n    return '<a class=\"hjnLabel4Input\" href=\"../jsdoc/index.html\"'\r\n        +  'target=”_hirosejnJSDoc3”>' + name +'</a><BR>'\r\n}\r\n\r\n// HTMLリンク #84\r\nCopyright.getHtmlHTML = function(name){\r\n    var url = \"https://hirosejn.github.io/HJN/\";\r\n    name = name || \"HTML : \" + url;\r\n    return '<a class=\"hjnLabel4Input\" href=\"' + url + '\"'\r\n        +  'target=”_hirosejnHTML”>' + name +'</a><BR>'\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Copyright.js\n// module id = 40\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport {HJN} from './tatLogDiver-HJN.js';\r\nimport * as TimeSeries from '../timeSeries/timeSeries.js';\r\n\r\n/**\r\n * グラフの点をクリックした際に決まる下段グラフの表示条件\r\n * \r\n * @memberof tatLogDiver\r\n * @class Plot\r\n */\r\nexport default function Plot(){};\r\nHJN.Plot = Plot;\r\n\r\n/**\r\n * Plotの一覧\r\n * \r\n * @type array.<String, Boolean, Boolean, index, xMs, Number, Number, Number>\r\n * @prop {String} label Plot一覧に表示する文字列\r\n * @prop {Boolean} ckBox チェックボックスの選択状態<br>\r\n *       （選択後すぐに削除されるのでtrueとなることはない）\r\n * @prop {Boolean} radio ラジオボタンの選択状態\r\n * @prop {index} n グラフ番号\r\n * @prop {xMs} x xの値\r\n * @prop {Number} y yの値\r\n * @prop {Number} rangeMinus 表示幅時間マイナス（秒）\r\n * @prop {Number} rangePlus 表示幅時間プラス（秒）\r\n * @prop {Number} rangeUnit 表示幅時間 単位（sec:1/min:60/hour:3600/day:86400)\r\n * \r\n */\r\nHJN.Plot.List = [];\r\n\r\n/**\r\n * point/baloonクリック時呼出し用関数<br>\r\n * 詳細グラフを描画し、Plotを更新する\r\n * \r\n * @param {Objcet}\r\n *            point dygraph の point\r\n */\r\nPlot.PointClickCallback = function(point) {\r\n    Util.Logger.ShowLogText(\"[0:PointClickCallback]start---------------\",\"calc\");\r\n    var n = HJN.Tat.seriesConfig.findIndex(function(e){ return e.key === point.name; }),// シリーズ番号\r\n        x = point.xval, // ミリ秒\r\n        y = point.yval; // 秒\r\n\r\n    // ETPS,EMPS,EAPSのとき、TATが幅に含まれるよう、幅(range)を拡大する #57\r\n    var rangeTagUnit = Util.Config.DetailGraph.getConfig(\"D_UNIT\"); \r\n    var rangeUnit  = rangeTagUnit  ? rangeTagUnit : TimeSeries.Tat.CYCLE;\r\n    if ((n === HJN.Tat.ETPS.N || n === HJN.Tat.EMPS.N || n === HJN.Tat.EAPS.N) \r\n            && rangeUnit < TimeSeries.Tat.CYCLE) {\r\n        rangeUnit = TimeSeries.Tat.CYCLE;\r\n        Util.Config.DetailGraph.setValueByKey(\"D_UNIT\", rangeUnit);\r\n\r\n        // selectリストの選択を、rangeUnitに合わせる #57\r\n        var options = Util.Config.DetailGraph.getKeyConfig(\"D_UNIT\"); // option一覧\r\n        var valueArray = Object.keys(options).sort(function(a,b){return a - b}); // optionの値の一覧(降順)\r\n        for (var i = 0; i < valueArray.length; i++) { // #27\r\n            if (rangeUnit <= +valueArray[i]) {\r\n               var optionKey = Util.Config.DetailGraph.getOptionKey(\"D_UNIT\", valueArray[i]);\r\n               Util.Config.DetailGraph.setText(\"D_UNIT\", optionKey)\r\n               break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // グラフの日時で、詳細グラフを再作成する\r\n    HJN.init.SetDetailDateTime(x);\r\n    var tat = new TimeSeries.Tat(HJN.init.GetSliderRangedEtat()); // #57\r\n    HJN.chartD.setSeriesSet(tat); // #75\r\n    \r\n    // 下段の残処理終了後、下段データを登録描画する\r\n    HJN.chartD.graph.ready(function(){ HJN.chartD.update(HJN.chartD.seriesSet, n); }); // #57\r\n    // Hover表示しているplotを、Plot.Listに登録し、plotsアイコンを再描画する\r\n    HJN.Plot.Add(n, x, y);\r\n    // Balloonを再描画する\r\n    HJN.Plot.ShowBalloon();\r\n};\r\n\r\n/**\r\n * point/baloonダブルクリック時呼出し用関数<br>\r\n * Plotを削除する\r\n * \r\n * @param {object}\r\n *            plot dygraphのpoint\r\n */\r\nPlot.PointDblClickCallback = function(point) {\r\n    // 指定plotを削除する\r\n    var n = HJN.Tat.seriesConfig.findIndex(function(e){ return e.key === point.name; }),\r\n        x = point.xval, // ミリ秒\r\n        i = HJN.Plot.List.findIndex(function(p){\r\n                return(p.n === n && p.x === x) ||   // 完全一致\r\n                        (\"tpsPlot\" in p &&          // 詳細一致\r\n                        p.tpsPlot.n === n && p.tpsPlot.x === x); });\r\n    if(0 <= i) HJN.Plot.List.splice(i, 1);\r\n    \r\n    Plot.Render();\r\n    // グラフ内の吹き出しを再表示する\r\n    Plot.ShowBalloon();\r\n};\r\n\r\n/**\r\n * クリック時のHoverからPlot.Listを設定する\r\n * \r\n * @param {index}\r\n *            n グラフのシリーズ番号\r\n * @param {xMs}\r\n *            x マウスクリック時のxの値（ミリ秒）\r\n * @param {Number}\r\n *            y マウスクリック時のyの値\r\n * @return {index} i plots内のplotの位置\r\n */\r\nPlot.Add=function(n, x, y) {\r\n    // 各plotを非選択状態とする\r\n    HJN.Plot.List.forEach(function(e){e.radio = false;});\r\n    // ラベルフォーマットの設定\r\n    var format = (n === HJN.Tat.ETPS.N || n === HJN.Tat.CTPS.N) ? \"hh:mm:ss\" : \"hh:mm:ss.ppp\",\r\n        label = Util.D2S(x, format, true) + \" \" + // #61\r\n                HJN.Tat.seriesConfig[n].label.replace(\"%N\",Util.N2S(y));\r\n    // 幅(range)を取り込む（秒）\r\n    var rangePlusTag  =  document.getElementById(\"DetailRangePlus\"),\r\n        rangeMinusTag =  document.getElementById(\"DetailRangeMinus\"),\r\n        rangeUnitTag  =  document.getElementById(\"DetailRangeUnit\"), // #48\r\n        rangeUnit  = rangeUnitTag  ? +rangeUnitTag.value : TimeSeries.Tat.CYCLE, // #57\r\n        rangePlus  = rangePlusTag  ? +rangePlusTag.value  : 1,  // 幅\r\n        rangeMinus = rangeMinusTag ? +rangeMinusTag.value : 1;\r\n\r\n    // 既存Poltを検索する\r\n    var i = HJN.Plot.List.findIndex(function(p){\r\n                return(p.n === n && p.x === x) ||   // 完全一致\r\n                        (\"tpsPlot\" in p &&          // 詳細一致\r\n                        p.tpsPlot.n === n && p.tpsPlot.x === x); });\r\n    // Plotを設定する\r\n    var plot;\r\n    if(0 <= i){ // 既存Plotsにある時、選択状態とし、rangeを再設定する\r\n        plot = HJN.Plot.List[i];\r\n        plot.radio = true;\r\n        plot.rangePlus  = rangePlus; // 秒\r\n        plot.rangeMinus = rangeMinus;\r\n        plot.rangeUnit  = rangeUnit; // #48\r\n    }else{      // 既存に無いときPlotを追加する\r\n        // ETAT,STATのとき、TATが幅に含まれるよう、幅(range)を拡大する #30 #48 #57\r\n        if (n === HJN.Tat.ETAT.N){\r\n            rangeMinus = Math.max(rangeMinus, \r\n                    Math.floor(x / rangeUnit) - Math.floor((x - y) / rangeUnit)); // #48\r\n            Util.Config.DetailGraph.setText(\"D_RANGE_MINUS\", rangeMinus);\r\n        }else if (n === HJN.Tat.STAT.N){\r\n            rangePlus = Math.max(rangePlus,\r\n                    Math.floor((x + y) / rangeUnit)) - Math.floor(x / rangeUnit) ; // #48\r\n            Util.Config.DetailGraph.setText(\"D_RANGE_PLUS\", rangePlus);\r\n        }\r\n        // Plotを追加する\r\n        plot = {label: label, ckBox:false,\r\n                 radio:true, n: n, x: x, y: y, \r\n                 rangePlus: rangePlus, rangeMinus: rangeMinus, rangeUnit: rangeUnit };\r\n        if (n === HJN.Tat.CTPS.N){          // CTPSのとき秒内最大CONCとして登録する\r\n            adjustPlotToY(HJN.chartD.conc, x, x + HJN.chart.cTpsUnit.unit, y, \r\n                    HJN.Tat.CONC.N, plot, rangePlus, rangeMinus, rangeUnit);\r\n        }else if (n === HJN.Tat.EMPS.N){    // EMPSのとき秒内最大ETATとして登録する\r\n            adjustPlotToY(HJN.chartD.eTat, x, x + TimeSeries.Tat.CYCLE, y, \r\n                    HJN.Tat.ETAT.N, plot, rangePlus, rangeMinus, rangeUnit);\r\n        }else { // CTPS,EMPS以外の時、選択Plotを追加する\r\n            HJN.Plot.List.push(plot);\r\n        }\r\n        // Plotsを時刻順にソートする\r\n        HJN.Plot.List.sort(\r\n                function(a, b) { return a.x - b.x; });\r\n        i = HJN.Plot.List.findIndex(\r\n                function(p){ return(p.n === n && p.x === x); });\r\n    }\r\n    Plot.Render();\r\n    return i;   // plots内のplotの位置\r\n\r\n    \r\n    // 内部関数：プロット位置を、指定秒から詳細グラフの最大時刻に変更する #19\r\n    function adjustPlotToY(conc, x, toX, y, n, plot, rangePlus, rangeMinus, rangeUnit){\r\n        if (!conc) return;\r\n        var maxTime = 0,\r\n            concMax = 0,\r\n            i = Util.binarySearch(x, conc, function(e){ return e.x; });\r\n        for (; i < conc.length && conc[i].x < toX; i++){    // #26\r\n            if (concMax <= conc[i].y){\r\n                    maxTime = conc[i].x;\r\n                    concMax = conc[i].y;\r\n            }\r\n        }\r\n        if (concMax === y) { // 補正すべき時刻が求まったときCONC,ETATを追加する #23\r\n            x = maxTime;\r\n            format = \"hh:mm:ss.ppp\";\r\n            label = Util.D2S(x, format, true) + \" \" + // #61\r\n                    HJN.Tat.seriesConfig[n].label.replace(\"%N\",Util.N2S(y));\r\n            HJN.Plot.List.push( {label: label, ckBox:false,\r\n                 radio:true, n: n, x: x, y: y, \r\n                 rangePlus: rangePlus , rangeMinus: rangeMinus, rangeUnit: rangeUnit,\r\n                 tpsPlot: plot} );  // 詳細plotには、tpsのplot情報も保持する\r\n        } else { // 補正すべき時刻がない場合、元のPlotを追加する\r\n            HJN.Plot.List.push(plot);\r\n        }\r\n\r\n    }\r\n};\r\n\r\n/**\r\n * Plot.Listを再表示する\r\n */\r\nPlot.Render = function() {\r\n    var divCheckedPlots =  document.getElementById(HJN.chartName + \"Plots\");\r\n    // 既存のアイコンを削除する\r\n    while (divCheckedPlots.firstChild){\r\n        divCheckedPlots.removeChild(divCheckedPlots.firstChild);\r\n    }\r\n    // 登録されているplots分のアイコンを追加する\r\n    HJN.Plot.List.forEach( function(e, i){\r\n        var div = document.createElement('div'),        // 要素の作成\r\n            radio = e.radio ? 'checked=\"checked\"' : '', // radio選択指定\r\n            ckBox = e.ckBox ? 'checked=\"checked\"' : ''; // check boxのチェック指定\r\n        div.className = \"hjnPlot\";\r\n        div.innerHTML =\r\n            '<input type=\"checkbox\" value=\"' + e.x + '\" id=\"checkBox_' + i + '\" ' + ckBox +\r\n                    ' title=\"delete\" onclick=\"HJN.Plot.CheckBox(' + i + ')\">' +\r\n            '<label for=\"checkBox_' + i + '\"></label>' +\r\n            '<input type=\"radio\" name=\"CheckedPlot\" id=\"SaveTime_' + i + '\" ' + radio +\r\n                    ' onclick=\"HJN.Plot.CheckRadio(' + i + ')\">' +\r\n            '<label for=\"SaveTime_' + i + '\">' + e.label + '</label>';\r\n        divCheckedPlots.appendChild(div);\r\n    } );\r\n};\r\n/**\r\n * PlotのChekBox変更時呼出用関数<br>\r\n * 指定Plotを削除し、PlotsとBaloonを再描画する\r\n * \r\n * @param {index}\r\n *            i 削除対象plotの、plots内位置\r\n */\r\nPlot.CheckBox = function(i) {\r\n    HJN.Plot.List.splice(i,1);      // checkされたplotを削除する\r\n    Plot.Render();          // Plotsを再描画する\r\n    Plot.ShowBalloon();     // グラフのBalloonを再描画する\r\n};\r\n/**\r\n * PlotのRadioボタン変更時呼出用関数<br>\r\n * radio選択時に下段グラフを更新する\r\n * \r\n * @param {index}\r\n *            i 選択されたplotの、plots内位置\r\n */\r\nPlot.CheckRadio = function(i) {\r\n    // Plot.Listにradioの状態を反映する\r\n    HJN.Plot.List.forEach(function(e){ e.radio = false; });\r\n    var plot = HJN.Plot.List[i];\r\n    plot.radio = true;\r\n    // グラフの日時で、詳細グラフを再作成する\r\n    HJN.init.SetDetailDateTime(plot.x); // 中心時刻に設定する\r\n    Util.Config.DetailGraph.setText(\"D_RANGE_PLUS\", plot.rangePlus); // 幅を設定する\r\n                                                                        // #74\r\n    Util.Config.DetailGraph.setText(\"D_RANGE_MINUS\", plot.rangeMinus);\r\n    Util.Config.DetailGraph.setText(\"D_UNIT\", \r\n                Util.Config.DetailGraph.getOptionKey(\"D_UNIT\", plot.rangeUnit)); // #48\r\n    var n = plot.tpsPlot ? plot.tpsPlot.n : plot.n; // #61\r\n    var tat = new TimeSeries.Tat(HJN.init.GetSliderRangedEtat()); // #75\r\n    HJN.chartD.setSeriesSet(tat); // #57\r\n    // 下段データを登録描画する\r\n    HJN.chartD.update(HJN.chartD.seriesSet, n); // #57\r\n    // Balloonを再描画する\r\n    Plot.ShowBalloon();\r\n};\r\n/**\r\n * Balloonを再描画する\r\n */\r\nPlot.ShowBalloon =function(){\r\n    HJN.chart.showBalloon();\r\n    HJN.chartD.showBalloon();\r\n    // タッチデバイスでないとき、lineViewerに表示をクリップボードにコピーする #78\r\n    if (!Util.TouchPanel.isTouchableDevice()) { // #22\r\n        Util.copyToClipboard(\"lineViewer\"); // #61\r\n    }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Plot.js\n// module id = 41\n// module chunks = 0","/**\r\n * \r\n */\r\n\r\n/** @namespace */\r\nexport var Usage = {};\r\n\r\nUsage.TopHtml = ''\r\n+ ''\r\n/*\r\n+ '<!DOCTYPE html>'\r\n+ '<html>'\r\n+ '<head>'\r\n+ '<meta charset=\"UTF-8\">'\r\n+ '<title>Insert title here</title>'\r\n+ '</head>'\r\n+ '<body>' */\r\n+ '<p>Ver. b18.02.25, Last update: 2019/06/01, (c)2017-2019 hirosejn </p>'\r\n+ '<h1 id=\"index\">Index</h1>'\r\n+ '<p><a href=\"#environment\"><strong>Environment　動作環境</strong></a></p>'\r\n+ '<p><a href=\"#items\"><strong>Items　画面の構成要素</strong></a></p>'\r\n+ '<p><a href=\"#graph\"><strong>Graph　グラフの操作方法</strong></a></p>'\r\n+ '<p><a href=\"#menu\"><strong>Menu　メニューの操作方法</strong></a></p>'\r\n+ '<ol>'\r\n+ '<li><a href=\"#menu-file\">&gt; File</a></li>'\r\n+ '<li><a href=\"#menu-filter\">&gt; Filter</a></li>'\r\n+ '<li><a href=\"#menu-simulator\">&gt; Simulator</a></li>'\r\n+ '<li><a href=\"#menu-view\">&gt; View</a></li>'\r\n+ '<li><a href=\"#menu-download\">&gt; Download</a></li>'\r\n+ '<li><a href=\"#menu-bottomdetailgraph\">&gt; Bottom detail graph</a></li>'\r\n+ '<li><a href=\"#menu-help\">&gt; Help</a></li>'\r\n+ '</ol>'\r\n+ '<p><a href=\"#simulator\"><strong>Simulator　シミュレーションシナリオの仕様</strong></a></p>'\r\n+ '<ol>'\r\n+ '<li><a href=\"#simulator-01\">Simulator-01　サンプル01(1 hour with table block.)の仕様</a></li>'\r\n+ '<li><a href=\"#simulator-99\">Simulator-99　サンプル99(for test)の仕様</a></li>'\r\n+ '</ol>'\r\n+ '<hr>'\r\n+ '<h2 id=\"environment\">Environment</h2>'\r\n+ '<h2 id=\"動作環境-↑\">動作環境　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><p>Chrome：Ver74以降にて動作検証（推奨）</p>'\r\n+ '</li>'\r\n+ '<li><p>Edge：基本動作検証済</p>'\r\n+ '</li>'\r\n+ '<li><p>ie8 ：基本動作検証済、注：Chroneに比べ5倍程度遅い。</p>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<hr>'\r\n+ '<h2 id=\"items\">Items</h2>'\r\n+ '<h2 id=\"画面の構成要素-↑\">画面の構成要素　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><strong>右メニュー</strong> ：機能をアコーディオンメニュー形式で表示</li>'\r\n+ '<li><strong>右上メッセージエリア</strong> ：ファイル読込処理結果等のメッセージを表示（ダイアログの操作で移動／リサイズ可）</li>'\r\n+ '<li><strong>上段全体グラフ</strong> ：指定ファイルを、フィルター条件でフィルターしたデータを表示</li>'\r\n+ '<li><strong>下段詳細グラフ</strong> ：上段表示データのうち「下段詳細グラフ表示条件」による指定期間のデータを表示</li>'\r\n+ '<li><strong>下段データ表示エリア</strong> ：下段詳細グラフで、マウスオーバにより選択されたプロットに該当する、ファイルのレコードを表示。（ダイアログの操作で移動／リサイズ可）</li>'\r\n+ '<li><strong>ダイアログ</strong> ：【閉じる】：ダイアログ右上のバツボタン。【移動】：上部にマウスオーバすると表示されるグレーのバーをドラッグする。【リサイズ】：四隅四辺にマウスオーバし、マウスがリサイズアイコンになった状態からドラッグする。</li>'\r\n+ '</ul>'\r\n+ '<hr>'\r\n+ '<h2 id=\"graph\">Graph</h2>'\r\n+ '<h2 id=\"グラフの操作方法-↑\">グラフの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><p><strong>マウスオーバー</strong> ：X軸の最も近い時刻のプロットが選択され強調表示される。</p>'\r\n+ '<blockquote>'\r\n+ '<p>　下段グラフの場合は、選択プロットの時刻に同時処理(CONC)している処理の開始時刻―終了時刻を結ぶ線が表示される（同時処理が視認し易く表示されるので、容易に排他解放待ちの有無を特定できる）。下部データ表示エリアに、選択プロットの元ファイルのレコードが表示される（排他処理を容易に特定できる）。</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>マウスクリック／タッチ</strong> ：選択されたプロットを基準に、下段詳細グラフが更新され、「下段詳細グラフ表示条件」アイコンが追加される。</p>'\r\n+ '</li>'\r\n+ '<li><p><strong>マウスドラッグ（横／縦）</strong> ：指定範囲を横幅／縦幅としてグラフを拡大表示する。</p>'\r\n+ '</li>'\r\n+ '<li><p><strong>マウスダブルクリック</strong> ：マウスドラッグによるグラフの拡大表示をリセットする。（左上の「reset zoom」ボタンも同一機能）</p>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<hr>'\r\n+ '<h2 id=\"menu\">Menu</h2>'\r\n+ '<h2 id=\"メニューの操作方法-↑\">メニューの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><strong>メッセージ表示エリア</strong> ：処理結果メッセージを表示する。マウスによる移動（エリア上部選択）／リサイズに対応。</li>'\r\n+ '<li><strong>Place on/side</strong> ボタン：メニューをグラフに「重ねる／重ねない」を切り替える。</li>'\r\n+ '<li><strong>reset zoom</strong> ボタン：グラフの描画サイズを初期化する。（Androidでグラフのダブルクリックができないため設置）</li>'\r\n+ '<li><strong>バツ／ハンバーガー</strong> ボタン：メニューの「表示／非表示」を切り替える</li>'\r\n+ '</ul>'\r\n+ '<h3 id=\"menu-file\">Menu-File</h3>'\r\n+ '<h2 id=\"メニュー／fileの操作方法-↑\">メニュー／Fileの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><p><strong>Open csv data file</strong> ボタン：CSVファイルを選択。ファイルを選択するとグラフを表示する。</p>'\r\n+ '</li>'\r\n+ '<li><p><strong>Registered</strong> ：データ読込モード指定</p>'\r\n+ '<blockquote>'\r\n+ '<p> <strong>◎newly</strong> ：新規に読み込む（既存データを破棄） <strong>○additionally</strong> ：既存データに指定ファイルの内容を追加する</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>[Line feed code]</strong> ：CSVファイルの改行コードを指定</p>'\r\n+ '<blockquote>'\r\n+ '<p><strong>○固定長 &quot;80&quot;byte</strong> ／ <strong>◎Windows:CR(13)+CF(10)</strong> ／ <strong>○UNIX/Linux:LF(10)</strong> ／ <strong>○zOS:NEL(15)</strong> ／ <strong>○Max:CR(13)</strong> ／ <strong>○other charcode (&quot; &quot;)</strong> 文字コード番地を10進で指定</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>[CSV delimiter]</strong> ：CSVファイルのデリミタを指定</p>'\r\n+ '<blockquote>'\r\n+ '<p><strong>◎comma</strong> ：カンマ区切り／ <strong>○tab</strong> ：タブ区切り／ <strong>○other &quot;,&quot;</strong>  区切り文字を指定する</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>[Timestamp field]</strong> ：終了時刻のフィールドの位置とフォーマットを指定</p>'\r\n+ '<blockquote>'\r\n+ '<p><strong>&quot;1&quot;th column of CSV</strong>：CSVのカラム位置を指定（デフォルト1カラム目、固定長レコードの場合1を指定）</p>'\r\n+ '<p><strong>Position(byte): from &quot;1&quot; length &quot; &quot;</strong>：レコード内の固定バイト位置指定　レコードのfromバイト目から、length指定バイト長</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<blockquote>'\r\n+ '<p><strong>Format</strong> :時刻のフォーマット</p>'\r\n+ '<p><strong>◎text &quot;YYYY/MM/DD hh.mm.ss.ppp&quot;</strong> ：指定カラムのYYYY MM DD hh mm ss pppの位置から値を取得（エクセルの表示フォーマット： YYYY/MM/DD hh:mm:ss.000 に相当）</p>'\r\n+ '<p>　／ <strong>◎(num)text</strong> ／ <strong>○long</strong> ：text：ユリウス日0:00との時差数値　テキスト数値／long(4バイト)数値（別途エンディアン指定)</p>'\r\n+ '<p><strong>Units of numbers:</strong> <strong>○msec</strong> ／ <strong>◎sec</strong> ：(num)textもしくはlong選択時に、数値の単位をmsec/secから選択</p>'\r\n+ '</blockquote>'\r\n+ '<ul>'\r\n+ '<li><strong>[Turnaround time(TAT) field]</strong> ：処理時間(TAT)フィールドの位置とフォーマットを指定<blockquote>'\r\n+ '<p><strong>&quot;2&quot;th column of CSV</strong>：CSVのカラム位置を指定（デフォルト2カラム目、固定長レコードの場合1を指定）</p>'\r\n+ '<p><strong>Position(byte): from &quot;1&quot; length &quot; &quot;</strong>：固定バイト位置指定　指定カラムのfromバイト目から、length指定バイト長</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<blockquote>'\r\n+ '<p><strong>Units of numbers:</strong> <strong>○msec</strong> ／ <strong>◎sec</strong> ：処理時間の単位　msec/secから選択</p>'\r\n+ '</blockquote>'\r\n+ '<blockquote>'\r\n+ '<p><strong>Format:○(num)text</strong> ／ <strong>○long</strong> ：処理時間のフォーマット　テキスト数値／long(4バイト)数値（別途エンディアン指定)</p>'\r\n+ '</blockquote>'\r\n+ '<blockquote>'\r\n+ '<p><strong>for long Endian:  ◎little</strong> ／ <strong>○big</strong> ：long指定時のエンディアンを選択　リトルエンディアン／ビッグエンディアン</p>'\r\n+ '</blockquote>'\r\n+ '<h3 id=\"menu-filter\">Menu-Filter</h3>'\r\n+ '<h2 id=\"メニュー／filterの操作方法-↑\">メニュー／Filterの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><p><strong>Sync ○Upper ○Detail ◎Async</strong> 指定：表示しているグラフの条件をフィルター条件に取り込む</p>'\r\n+ '<blockquote>'\r\n+ '<p>　Upperを選択したタイミングで上段グラフを取り込む／Detailを選択したタイミングで下段グラフ／Asyncを選択した際には何も変更しない</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>[Date filter]</strong> 指定機能</p>'\r\n+ '<blockquote>'\r\n+ '<p><strong>Include if end time is between &quot;YYYY/MM/DD hh.mm.ss.ppp&quot; and &quot;YYYY/MM/DD hh.mm.ss.ppp&quot;</strong> ：</p>'\r\n+ '<p>　指定期間のデータのみを上段グラフの表示対象とする。時刻を手入力する作業は時間がかかるので Sync Upper/Detail で現在描画している情報を取り込んでから修正する操作を想定</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>[Turnaround time(TAT) filter]</strong> 指定機能：</p>'\r\n+ '<blockquote>'\r\n+ '<p><strong>Include if TAT is between &quot;0①&quot; and &quot;数値②&quot;</strong> ：</p>'\r\n+ '<p>　処理時間(TAT)が①～②のデータのみを上段グラフの表示対象とする</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>[Text filter]</strong> 指定機能：</p>'\r\n+ '<blockquote>'\r\n+ '<p><strong>◎Don&#39;t use. ○Include ○Exclude</strong></p>'\r\n+ '<p> <strong>if &quot;数値①&quot; bytes from the &quot;1②&quot;th byte from head of the &quot;3③&quot;th column of CSV match the regular expression &quot;④&quot;</strong> ：</p>'\r\n+ '<p>　テキストフィルターを使わない／正規表現に合致するデータを処理対象とする／正規表現に合致しないデータを処理対象とする</p>'\r\n+ '<p>　CSVレコードの、③番目のカラムの、先頭②バイト目から、①バイトの文字列を、正規表現④に照らして評価</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<h3 id=\"menu-simulator\">Menu-Simulator</h3>'\r\n+ '<h2 id=\"メニュー／simulatorの操作方法-↑\">メニュー／Simulatorの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<p>TAT log diver を起動すると、サンプルシミュレーションシナリオ１を初期表示する。</p>'\r\n+ '<ul>'\r\n+ '<li><strong>Simulate</strong> ボタン：指定したシミュレーションシナリオを実行しグラフを表示する。</li>'\r\n+ '<li><strong>JSON Editor(Open/Close)</strong> ボタン：シミュレーションシナリオ編集画面を開く／編集画面が開いている場合は閉じる。</li>'\r\n+ '<li><strong>サンプルシナリオ選択機能</strong> ：サンプルシナリオを選択します。異なるシナリオを選択したタイミングでシミュレーション実行しグラフを再描画する。</li>'\r\n+ '</ul>'\r\n+ '<h3 id=\"menu-view\">Menu-View</h3>'\r\n+ '<h2 id=\"メニュー／viewの操作方法-↑\">メニュー／Viewの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<p>上4つのチェックボックス（一部機能）で、上段全体グラフ上の表示有無を指定</p>'\r\n+ '<p>下7つのチェックボックス（全機能）で、下段詳細グラフ上の表示有無を指定</p>'\r\n+ '<ul>'\r\n+ '<li><p><strong>多重度（詳細）</strong> ：青　左Y軸　上段なし／下段☒</p>'\r\n+ '<blockquote>'\r\n+ '<p>同時処理数（多重度）をヒストグラム形式で表示</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>多重度（区間最大）/sec</strong> ：水色　左Y軸　上段☒／下段☒</p>'\r\n+ '<blockquote>'\r\n+ '<p>1秒間の区間の多重度の最大値</p>'\r\n+ '<p>上段グラフ：透過プロットで表示。同一多重度が連続するとプロットが重なり濃く見える</p>'\r\n+ '<p>下段グラフ：ヒストグラム形式で表示。多重度（詳細）と重ねて表示すると秒間最大値との関係を把握できる</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>average tps / min (end) [line]</strong> ：緑　左Y軸　上段☒／下段☒</p>'\r\n+ '<blockquote>'\r\n+ '<p>1分間の平均tps。コンピュータの処理数は1分毎にとられることが多いため、突合しやすいように表示</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>response by start time [Y2軸:plot]</strong> ：黄　右Y軸　上段なし／下段☒</p>'\r\n+ '<blockquote>'\r\n+ '<p>X軸：処理開始時刻、Y軸(点の高さ)は処理時間</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>response by end time [Y2軸:plot]</strong> ：茶　右Y軸　上段なし／下段☒</p>'\r\n+ '<blockquote>'\r\n+ '<p>X軸：処理終了時刻、Y軸(点の高さ)は処理時間</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>max response / min (end) [Y2軸:line]</strong> ：赤　右Y軸　上段☒／下段☒</p>'\r\n+ '<blockquote>'\r\n+ '<p>1分間の最大レスポンス（処理終了時刻ベース）、ヒストグラム風折れ線で表示</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>average response / min (end) [Y2軸:line]</strong> ：ピンク　右Y軸　上段☒／下段☐</p>'\r\n+ '<blockquote>'\r\n+ '<p>1分間の平均レスポンス（処理終了時刻ベース）、ヒストグラム風折れ線で表示。コンピュータの処理数は1分毎にとられることが多いため、突合しやすいように表示機能を設けているがデフォルト非表示</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<h3 id=\"menu-download\">Menu-Download</h3>'\r\n+ '<h2 id=\"メニュー／downloadの操作方法-↑\">メニュー／Downloadの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><strong>Upper graph image(.png)</strong> ボタン：上段グラフの図をpng形式で、初期ファイル名 graph.png でダウンロード。</li>'\r\n+ '<li><strong>Upper graph data(.csv)</strong> ボタン：上段グラフに表示しているデータを、CSV形式で（改行コード、デリミタはFileメニューの指定値を適用）初期ファイル名 graph.csv でダウンロード。</li>'\r\n+ '<li><strong>Upper graph log records(.csv)</strong> ボタン：上段グラフに表示しているデータの元データを、処理終了時刻順に、入力ファイルのレコードフォーマット（改行コード、デリミタ等も元ファイルのまま加工せずに適用）で、初期ファイル名 tatlog.csv でダウンロード。<blockquote>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><strong>Detail graph image(.png)</strong> ボタン：下段グラフに対して上段と同じ処理。</li>'\r\n+ '<li><strong>Detail graph data(.csv)</strong> ボタン：下段グラフに対して上段と同じ処理。</li>'\r\n+ '<li><strong>Detail graph log records(.csv)</strong> ボタン：下段グラフに対して上段と同じ処理。</li>'\r\n+ '<li><strong>Detail conc log records(.csv)</strong> ボタン：下段グラフに表示用に選択したCONC（同時処理数）時に処理しているデータを、処理終了時刻順に、入力ファイルのレコードフォーマットで、初期ファイル名 conclog.csv でダウンロード。（CONC指定時以外の場合はCONC最大値を基準）。</li>'\r\n+ '</ul>'\r\n+ '<h3 id=\"menu-bottomdetailgraph\">Menu-BottomDetailGraph</h3>'\r\n+ '<h2 id=\"メニュー／bottom-detail-graphの操作方法-↑\">メニュー／Bottom detail graphの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<p>下段詳細グラフの表示条件を指定する</p>'\r\n+ '<ul>'\r\n+ '<li><p><strong>Range: - &quot;1①&quot; + &quot;2②&quot; &quot;10sec③&quot;</strong> 指定機能：下段グラフの期間を指定する</p>'\r\n+ '<blockquote>'\r\n+ '<p>「下段詳細グラフ表示条件」の基準時刻を③単位で切り捨てた時刻を基準に、-①数値×③単位　～ +②数値×③単位　を下段グラフの表示データ抽出期間とする。③単位はsec/10sec/min/hour/6hour/day/year から選択</p>'\r\n+ '<p>指定値を変更する都度、指定値を「下段詳細グラフ表示条件」に反映し下段グラフを再描画する。なお、グラフ上の範囲指定による表示期間変更は描画のみで「下段詳細グラフ表示条件」には反映されない。</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '<li><p><strong>「下段詳細グラフ表示条件」</strong> アイコン ：下段グラフに表示する条件を選択する機能（初期表示：同時処理数が最大となるタイミングを１つ）</p>'\r\n+ '<blockquote>'\r\n+ '<p>上段／下段グラフの任意の点をクリックすると、「下段詳細グラフ表示条件」アイコン　が追加される。アイコンは基準時刻順に縦に並ぶ。</p>'\r\n+ '<p>下段グラフに表示している「下段詳細グラフ表示条件」アイコンは背景グレー。他のアイコンは背景白</p>'\r\n+ '<p>アイコンにマウスをのせると、アイコンの左側にマイナス「－」アイコンが表示され、「－」をクリックすると該当「下段詳細グラフ表示条件」アイコンが削除される。</p>'\r\n+ '</blockquote>'\r\n+ '</li>'\r\n+ '</ul>'\r\n+ '<h3 id=\"menu-help\">Menu-Help</h3>'\r\n+ '<h2 id=\"メニュー／helpの操作方法-↑\">メニュー／Helpの操作方法　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li><strong>about TAT log diver</strong> ボタン：&quot;TAT log diver&quot;のコピーライト、関連ＵＲＬをダイアログ表示</li>'\r\n+ '</ul>'\r\n+ '<hr>'\r\n+ '<h2 id=\"simulator\">Simulator</h2>'\r\n+ '<h2 id=\"シミュレーションシナリオの仕様-↑\">シミュレーションシナリオの仕様　<a href=\"#\">↑</a></h2>'\r\n+ '<h3 id=\"simulator-01\">Simulator-01</h3>'\r\n+ '<h2 id=\"サンプル011-hour-with-table-blockの仕様-↑\">サンプル01(1 hour with table block.)の仕様　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li>概要</li>'\r\n+ '</ul>'\r\n+ '<p><strong>数秒のバッチが、通常0.5秒以下の更新系オンのレスポンス遅延を起こす。更新系集中時に滞留増により遅延長時間化</strong></p>'\r\n+ '<p>online[100-500ms 2-5tps]：レスポンス100～500ミリ秒のオンライン取引を２～５tpsで発行。16:30～16:36に更新系オン2割増</p>'\r\n+ '<p>batch[2-5sec evry3min]：処理時間２～５秒のオン中バッチ取引（DB更新あり）を３分毎に起動</p>'\r\n+ '<ul>'\r\n+ '<li>詳細</li>'\r\n+ '</ul>'\r\n+ '<p>{'\r\n+ '&quot;log&quot; : 1,</p>'\r\n+ '<blockquote>'\r\n+ '<p>エラーログのみ出力</p>'\r\n+ '<p>　log（任意、デフォルト3）:詳細ログ出力指定(0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)</p>'\r\n+ '</blockquote>'\r\n+ '<p>&quot;start&quot; : &quot;2017/01/02 00:00:00.000&quot;,'\r\n+ '&quot;end&quot;   : &quot;17.0*h&quot;,</p>'\r\n+ '<blockquote>'\r\n+ '<p>2017/01/02 00:00:00.000 を基準、最大17時間後までシミュレーション実行</p>'\r\n+ '<p>シミュレーション開始時刻/終了時刻&quot;,</p>'\r\n+ '</blockquote>'\r\n+ '<p>&quot;resources&quot; : [</p>'\r\n+ '<blockquote>'\r\n+ '<p>システム構成定義： &quot;type:リソース名、thread:最大同時hold数、timeout：holdタイムアウト時間&quot;、q:最大hold待ち数、qWait:最大hold待ち時間&quot;</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;type&quot; :&quot;WEB&quot;, &quot;thread&quot;:1024,&quot;timeout&quot;:&quot;300*sec&quot;, &quot;q&quot;:1280, &quot;qWait&quot;:0},</p>'\r\n+ '<blockquote>'\r\n+ '<p>WEBサーバ：1024スレッド、タイムアウトエラー：300秒、スレッド溢れ時：即時エラー</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;type&quot; :&quot;AP&quot;,  &quot;thread&quot;:20,  &quot;timeout&quot;:&quot;300*sec&quot;, &quot;q&quot;:1280, &quot;qWait&quot;:0},</p>'\r\n+ '<blockquote>'\r\n+ '<p>APサーバ：20スレッド、タイムアウトエラー：300秒、スレッド溢れ時：即時エラー</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;type&quot; :&quot;DB&quot;,  &quot;thread&quot;:10,  &quot;timeout&quot;: &quot;10<em>sec&quot;, &quot;q&quot;:10,  &quot;qWait&quot;:&quot;10</em>sec&quot;}</p>'\r\n+ '<blockquote>'\r\n+ '<p>DBサーバ：10スレッド、SQL処理タイムアウトエラー：10秒、コネクションプール：10個、コネクション取得待ち：10秒でエラー</p>'\r\n+ '</blockquote>'\r\n+ '<p>],</p>'\r\n+ '<p>&quot;models&quot; : [</p>'\r\n+ '<blockquote>'\r\n+ '<p> &quot;models:clientsで指定するモデル名(model)の定義、以下modelsで指定できる項目&quot;,</p>'\r\n+ '<p> &quot;baseModel:複数リソースのsequenceをまとめて宣言できる、sequenceに展開した後処理される、任意指定&quot;,</p>'\r\n+ '<p> &quot;sequence:指定された順にリソースを取得する、配列内に複数指定可、sequenceも複数指定可&quot;,</p>'\r\n+ '<p> &quot;hold：リソース名、holds(baseModelのみ指定可）：リソース一覧、各々にtat/tatMinが適用される&quot;,</p>'\r\n+ '<p> &quot;tat/tatMin：リソースの取得に要する平均/最小時間、tatMinのデフォルトはtat&quot;,</p>'\r\n+ '<p> &quot;　　　　　　★注：tatはリソースの使用時間ではない、リソース使用時間を指定す場合はfreeで指定&quot;,</p>'\r\n+ '<p> &quot;数値はミリ秒単位、<em>ms,</em>sec,<em>min,</em>h,*day 指定可&quot;,</p>'\r\n+ '<p> &quot;times：繰返し回数&quot;,</p>'\r\n+ '<p> &quot;thinkTime/thinkTimeMin：繰返し時の間隔の平均/最小時間、thinkTimeMinのデフォルトはthinkTime&quot;,</p>'\r\n+ '<p> &quot;free：[リソース名の配列]、指定リソースを開放する、free指定の無いリソースはシーケンスの最後にfreeされる&quot;,</p>'\r\n+ '</blockquote>'\r\n+ '<p>  { &quot;ON-1&quot; : {'\r\n+ '    &quot;times&quot;: 60, &quot;thinkTimeMin&quot;:&quot;3<em>sec&quot;, &quot;thinkTime&quot;: &quot;10</em>sec&quot;,'\r\n+ '    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;WEB&quot;,&quot;AP&quot;,&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;5</em>ms&quot;},'\r\n+ '    &quot;sequence&quot;: ['\r\n+ '      {&quot;tatMin&quot;:30, &quot;tat&quot;:50, &quot;note&quot;:&quot;select A&quot;},'\r\n+ '      {&quot;tatMin&quot;:50, &quot;tat&quot;:50, &quot;note&quot;:&quot;updateB&quot;, &quot;hold&quot;:&quot;TBL_B&quot;},'\r\n+ '      {&quot;tatMin&quot;:80, &quot;tat&quot;:100,&quot;note&quot;:&quot;updateC&quot;, &quot;hold&quot;:&quot;TBL_C&quot;}'\r\n+ '    ]}},</p>'\r\n+ '<blockquote>'\r\n+ '<p>オンライン取引１(ON-1)：１ユーザあたり3～10秒の取引を60回発行、Web-AP-DBの３層AP、各レイヤ呼出し時に2～5msの通信遅延あり、'\r\n+ '　処理内容 30～50ms 参照排他なしSQL　＞　50ms TBL_B排他SQL　＞ 80~100ms TBL_C排他SQL（更新処理を想定）</p>'\r\n+ '</blockquote>'\r\n+ '<p> { &quot;ON-2&quot; : {'\r\n+ '    &quot;times&quot;: 60, &quot;thinkTimeMin&quot;:&quot;500<em>ms&quot;, &quot;thinkTime&quot;: &quot;1</em>sec&quot;,'\r\n+ '    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;WEB&quot;,&quot;AP&quot;,&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;5</em>ms&quot;},'\r\n+ '    &quot;sequence&quot;: ['\r\n+ '      {&quot;tatMin&quot;:&quot;100<em>ms&quot;, &quot;tat&quot;:&quot;500</em>ms&quot;, &quot;hold&quot;:&quot;&quot;}'\r\n+ '    ]}},</p>'\r\n+ '<blockquote>'\r\n+ '<p>オンライン取引２(ON-2)：１ユーザあたり500ミリ秒~1秒の取引を60回発行、Web-AP-DBの３層AP、各レイヤ呼出し時に2～5msの通信遅延あり、'\r\n+ '　処理内容 100～500ms 排他なし（一覧参照処理を想定）</p>'\r\n+ '</blockquote>'\r\n+ '<p> { &quot;BATCH-1&quot; : {'\r\n+ '    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;5</em>ms&quot;},'\r\n+ '    &quot;sequence&quot;: ['\r\n+ '      {&quot;tatMin&quot;:&quot;2<em>sec&quot;,&quot;tat&quot;:&quot;5</em>sec&quot;,&quot;note&quot;:&quot;updateB&quot;,&quot;hold&quot;:&quot;TBL_B&quot;}'\r\n+ '    ]}}</p>'\r\n+ '<blockquote>'\r\n+ '<p>バッチ取引２(BATCH-1)：１ユーザあたり１ジョブ実行、DB更新のみ、各レイヤ呼出し時に2～5msの通信遅延あり、'\r\n+ '処理内容 2～5秒 TBL_Bを排他（長時間トランザクションのオン中バッチを想定）</p>'\r\n+ '</blockquote>'\r\n+ '<p>],</p>'\r\n+ '<p>&quot;clients&quot; : [</p>'\r\n+ '<blockquote>'\r\n+ '<p> &quot;clients：仮想アプリケーションの起動クライアントの定義&quot;,'\r\n+ ' &quot;num:作成クライアント数、start～endの間で、ランダム（指数分布）に指定回数起動する&quot;,'\r\n+ ' &quot;start/end:仮想クライアント作成/終了時刻、先頭で宣言したstartからの相対時刻&quot;,'\r\n+ ' &quot;model:modelsで宣言したモデル名&quot;,'\r\n+ ' &quot;user:user+通番 のユーザ名で仮想クライアントが作成される&quot;,</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;:100,&quot;start&quot;:&quot;16.0<em>h&quot;, &quot;end&quot;:&quot;17.0</em>h&quot;, &quot;model&quot;:&quot;ON-1&quot;,  &quot;user&quot; :&quot;userU&quot;, &quot;message&quot;:&quot;select A update B,C&quot;},</p>'\r\n+ '<blockquote>'\r\n+ '<p>16:00～17:00の 1時間に、userU00～userU99の100ユーザが、各々ON-1（更新系）を100回発行</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;: 20,&quot;start&quot;:&quot;16.5<em>h&quot;, &quot;end&quot;:&quot;16.6</em>h&quot;, &quot;model&quot;:&quot;ON-1&quot;,  &quot;user&quot; :&quot;userT&quot;, &quot;message&quot;:&quot;select A update B,C 【増】&quot;},</p>'\r\n+ '<blockquote>'\r\n+ '<p>16:30～16:36 の6分間に、userT00～userT19の20ユーザが、各々ON-1（更新系）を20回発行（一時的に更新オン取引200%増）</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;:100,&quot;start&quot;:&quot;16.0<em>h&quot;, &quot;end&quot;:&quot;17.0</em>h&quot;, &quot;model&quot;:&quot;ON-2&quot;,  &quot;user&quot; :&quot;userS&quot;, &quot;message&quot;:&quot;排他なし(WEBのみ)&quot;},</p>'\r\n+ '<blockquote>'\r\n+ '<p>16:00～17:00 の1時間に、userS00～userS99の100ユーザが、各々ON-2（参照系）を100回発行</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;: 20,&quot;start&quot;:&quot;16.0<em>h&quot;, &quot;end&quot;:&quot;17.0</em>h&quot;, &quot;model&quot;:&quot;BATCH-1&quot;,&quot;user&quot;:&quot;userB&quot;, &quot;message&quot;:&quot;バッチ処理 update B＊＊＊＊＊&quot;}</p>'\r\n+ '<blockquote>'\r\n+ '<p>16:00～17:00 に、userBが、BATCH-1（更新系）を20回発行</p>'\r\n+ '</blockquote>'\r\n+ '<p>]'\r\n+ '}</p>'\r\n+ '<blockquote>'\r\n+ '</blockquote>'\r\n+ '<h3 id=\"simulator-99\">Simulator-99</h3>'\r\n+ '<h2 id=\"サンプル99for-testの仕様-↑\">サンプル99(for test)の仕様　<a href=\"#\">↑</a></h2>'\r\n+ '<ul>'\r\n+ '<li>概要</li>'\r\n+ '</ul>'\r\n+ '<p><strong>デッドロックが発生し、タイムアウトで解消</strong></p>'\r\n+ '<p>デグレードテスト用シナリオを兼ねる（描画バリエーションの網羅率の高い短いシナリオ）</p>'\r\n+ '<ul>'\r\n+ '<li>詳細</li>'\r\n+ '</ul>'\r\n+ '<p>{'\r\n+ '&quot;log&quot; : 1,'\r\n+ '&quot;start&quot; : &quot;1970/01/02 00:00:00.000&quot;,'\r\n+ '&quot;end&quot;   : &quot;30.0*sec&quot;,</p>'\r\n+ '<blockquote>'\r\n+ '<p>2017/01/02 00:00:00.000 を基準、最大30秒後までシミュレーション実行、エラーログのみ出力</p>'\r\n+ '</blockquote>'\r\n+ '<p>&quot;resources&quot; : ['\r\n+ '  {&quot;type&quot; :&quot;DB&quot;,  &quot;thread&quot;:2,  &quot;timeout&quot;: &quot;5<em>sec&quot;, &quot;q&quot;:1,  &quot;qWait&quot;:&quot;2</em>sec&quot;}'\r\n+ '],</p>'\r\n+ '<blockquote>'\r\n+ '<p>DBサーバ：2スレッド、DBトランザクションタイムアウトエラー：5秒、コネクションプール：1個、コネクション取得待ち：2秒でエラー</p>'\r\n+ '</blockquote>'\r\n+ '<p>&quot;models&quot; : ['\r\n+ ' { &quot;TEST-AB&quot; : {'\r\n+ '    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;2</em>ms&quot;},'\r\n+ '    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_A&quot;, &quot;tatMin&quot;:&quot;1<em>sec&quot;, &quot;tat&quot;:&quot;1</em>sec&quot;}],'\r\n+ '    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_B&quot;, &quot;tatMin&quot;:&quot;3<em>sec&quot;, &quot;tat&quot;:&quot;3</em>sec&quot;}],'\r\n+ '    &quot;times&quot;: 2, &quot;thinkTimeMin&quot;:&quot;1<em>sec&quot;, &quot;thinkTime&quot;: &quot;1</em>sec&quot;}},</p>'\r\n+ '<blockquote>'\r\n+ '<p>バッチ取引AB(TEST-AB)：１ユーザあたり１秒毎に２回迄ジョブ起動、DB更新のみ、</p>'\r\n+ '<p>処理内容 3.007秒処理（開始 ＞ 1+2ms&gt;DB排他&gt;TBL_A排他 ＞ 1+2ms+３秒&gt;TBL_B排他 ＞ 1ms&gt;排他解放 ＞ 1ms終了）＋1秒＋3.008秒処理</p>'\r\n+ '</blockquote>'\r\n+ '<p> { &quot;TEST-BA&quot; : {'\r\n+ '    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;2</em>ms&quot;},'\r\n+ '    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_B&quot;, &quot;tatMin&quot;:&quot;1<em>sec&quot;, &quot;tat&quot;:&quot;1</em>sec&quot;}],'\r\n+ '    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_A&quot;, &quot;tatMin&quot;:&quot;3<em>sec&quot;, &quot;tat&quot;:&quot;3</em>sec&quot;}],'\r\n+ '    &quot;times&quot;: 2, &quot;thinkTimeMin&quot;:&quot;1<em>sec&quot;, &quot;thinkTime&quot;: &quot;1</em>sec&quot;}}'\r\n+ '    ],</p>'\r\n+ '<blockquote>'\r\n+ '<p>バッチ取引BA(TEST-BA)：１ユーザあたり１秒毎に２回迄ジョブ起動、DB更新のみ、</p>'\r\n+ '<p>処理内容 3.007秒処理（開始 ＞ 1+2ms&gt;DB排他&gt;TBL_B排他 ＞ 1+2ms+３秒&gt;TBL_A排他 ＞ 1ms&gt;排他解放 ＞ 1ms終了）＋1秒＋3.008秒処理</p>'\r\n+ '</blockquote>'\r\n+ '<p>&quot;clients&quot; : [</p>'\r\n+ '<blockquote>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;0<em>sec&quot;, &quot;end&quot;:&quot;0</em>sec&quot;, &quot;model&quot;:&quot;TEST-AB&quot;,&quot;user&quot; :&quot;testAB1&quot;},</p>'\r\n+ '<blockquote>'\r\n+ '<p>1回目：0.001秒に、ユーザtestAB10が、TEST-AB起動（排他待ちなし、3.007秒で正常終了:N_000)</p>'\r\n+ '<p>2回目：4.007秒に、ユーザtestAB10が、TEST-AB起動（DBコネクションキューオーバフロー、0.001秒で終了:E_QoF）</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;1<em>sec&quot;, &quot;end&quot;:&quot;1</em>sec&quot;, &quot;model&quot;:&quot;TEST-AB&quot;,&quot;user&quot; :&quot;testAB2&quot;},</p>'\r\n+ '<blockquote>'\r\n+ '<p>1回目：1.000秒に、ユーザtestAB20が、TEST-AB起動（デッドロック DBトランザクションタイムアウト5.000秒でエラー終了:E_HTO）</p>'\r\n+ '<p>2回目：7.000秒に、ユーザtestAB20が、TEST-AB起動（3.007秒で正常終了:N_000）</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;3<em>sec&quot;, &quot;end&quot;:&quot;3</em>sec&quot;, &quot;model&quot;:&quot;TEST-BA&quot;,&quot;user&quot; :&quot;testBA3&quot;},</p>'\r\n+ '<blockquote>'\r\n+ '<p>1回目：3.000秒に、ユーザtestBA30が、TEST-BA起動（testAB10のDB解放待ち0.007秒を加えた、3.014秒で正常終了:N_000）</p>'\r\n+ '<p>2回目：7.014秒に、ユーザtestBA30が、TEST-BA起動（5.005秒で正常終了:N_000）</p>'\r\n+ '</blockquote>'\r\n+ '<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;4<em>sec&quot;, &quot;end&quot;:&quot;4</em>sec&quot;, &quot;model&quot;:&quot;TEST-BA&quot;,&quot;user&quot; :&quot;testBA4&quot;}</p>'\r\n+ '<blockquote>'\r\n+ '<p>1回目：4.001秒に、ユーザtestBA40が、TEST-BA起動（5.014秒で正常終了:N_000）</p>'\r\n+ '<p>2回目：3.000秒に、ユーザtestBA40が、TEST-BA起動（デッドロック DBトランザクションタイムアウト5.000秒でエラー終了:E_HTO）</p>'\r\n+ '</blockquote>'\r\n+ '<p> ]'\r\n+ '}</p>'\r\n+ '<blockquote>'\r\n+ '</blockquote>'\r\n+ '<p>　<a href=\"#\">go to top ↑</a></p>'\r\n/* + '</body>'\r\n+ '</html>' */\r\n\r\n+ '';\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Usage.js\n// module id = 42\n// module chunks = 0"],"sourceRoot":""}