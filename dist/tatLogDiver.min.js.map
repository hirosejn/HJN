{"version":3,"sources":["webpack:///tatLogDiver.min.js","webpack:///webpack/bootstrap 151da9a4dfd4cb9d8bde","webpack:///./src/util/util.js","webpack:///./src/tatLogDiver/tatLogDiver-Graph.js","webpack:///./src/tatLogDiver/tatLogDiver-HJN.js","webpack:///./src/tatLogDiver/tatLogDiver-Init.js","webpack:///./src/tatLogDiver/tatLogDiver.js","webpack:///./src/tatLogDiver/tatLogDiver-Menu.js","webpack:///./src/tatLogDiver/tatLogDiver-Copyright.js","webpack:///./src/tatLogDiver/tatLogDiver-Plot.js","webpack:///./src/tatLogDiver/tatLogDiver-MenuConfigDetailGraph.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./src/tatLogDiver/tatLogDiver.css?871f","webpack:///./src/timeSeries/timeSeries-Tat.js","webpack:///./src/timeSeries/timeSeries-MappedETat.js","webpack:///./src/timeSeries/timeSeries-ETat.js","webpack:///./src/timeSeries/timeSeries-Cash.js","webpack:///./src/simulator/simulator-VirtualSystem.js","webpack:///./libs/dygraph.css?0b95","webpack:///./libs/dygraph.css","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/tatLogDiver/tatLogDiver.css","webpack:///./src/util/util-TouchPanel.js","webpack:///./src/util/util-string.js","webpack:///./src/util/util-Random.js","webpack:///./src/util/util-addEventListener.js","webpack:///./src/util/util-setZeroTimeout.js","webpack:///./src/util/util-Logger.js","webpack:///./src/util/util-copyToClipboard.js","webpack:///./src/util/util-binarySearch.js","webpack:///./src/util/util-Heap.js","webpack:///./src/util/util-Element.js","webpack:///./src/util/config/util-Config.js","webpack:///./src/util/util-Encoding.js","webpack:///./src/util/util-SubWindow.js","webpack:///./src/util/util-Menu.js","webpack:///./src/timeSeries/timeSeries-FileParser.js","webpack:///./src/timeSeries/timeSeries-MenuConfigFile.js","webpack:///./src/simulator/simulator-VirtualApp.js","webpack:///./src/simulator/simulator-VirtualResource.js","webpack:///./src/simulator/simulator-VirtualSystemByJson.js","webpack:///./src/simulator/simulator-MenuConfig.js","webpack:///./src/timeSeries/timeSeries-MenuConfigFilter.js","webpack:///./src/tatLogDiver ^\\.\\/.*$","webpack:///./src/tatLogDiver/tatLogDiver-Usage.html"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0__util_TouchPanel_js__","__WEBPACK_IMPORTED_MODULE_1__util_string_js__","__WEBPACK_IMPORTED_MODULE_2__util_Random_js__","__WEBPACK_IMPORTED_MODULE_3__util_addEventListener_js__","__WEBPACK_IMPORTED_MODULE_4__util_setZeroTimeout_js__","__WEBPACK_IMPORTED_MODULE_5__util_Logger_js__","__WEBPACK_IMPORTED_MODULE_6__util_copyToClipboard_js__","__WEBPACK_IMPORTED_MODULE_7__util_binarySearch_js__","__WEBPACK_IMPORTED_MODULE_8__util_Heap_js__","__WEBPACK_IMPORTED_MODULE_9__util_Element_js__","__WEBPACK_IMPORTED_MODULE_10__config_config_js__","__WEBPACK_IMPORTED_MODULE_11__util_Encoding_js__","__WEBPACK_IMPORTED_MODULE_12__util_SubWindow_js__","__WEBPACK_IMPORTED_MODULE_13__util_Menu_js__","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Uint8Array","indexOf","target","index","undefined","last","this","slice","begin","end","subarray","Array","findIndex","predicate","TypeError","list","length","thisArg","arguments","find","Graph","chartIdName","globalName","config","seriesSet","isMain","SERIESES","HJN","Tat","CONC","N","process","visiblity","renderer","CTPS","ETPS","STAT","ETAT","EMPS","EAPS","height","isVisiblity","fileParser","__WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__","windowId","document","getElementById","menuId","menuPlaceOnId","chartId","dyData","dySeries","scale","graph","cTpsUnit","UNIT_CTPS","labels","j","key","order","color","attr","seriesConfig","strokeWidth","drawPoints","connectSeparatedPoints","stepPlot","fillGraph","axis","push","__WEBPACK_IMPORTED_MODULE_0__util_util_js__","__WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Menu_js__","__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_Init_js__","DrawCallback","g","is_initial","setText","id","val","onchange","syncMode","Filter","getValueByKey","chart","chartD","xAxisRange","yAxisRange","toPrecision","init","that","serieses","divLegend","formName","htmlText","ckBox","innerHTML","destroy","window","addEventListener","resize","bind","resizes","getElementsByClassName","onClickSetVisibility","ck","elements","checked","setVisibility","dWidth","parentNode","clientWidth","width","innerWidth","style","Math","floor","innerHeight","setSeriesSet","tat","getSeriesSet","getCTpsUnit","forEach","e","update","xAxisLabelFormatter","gran","opts","isTop","format","diffTime","yAxisLabelFormatter","range","yAxisRanges","diff","ceil","days","time","drawHighlightPointCallback","ctx","cx","cy","r","idx","drawTatLine","x","y","heigth","tXs","toDomXCoord","tXe","tY","toDomYCoord","drawLine","drawPoint","plots","lineDashSegments","beginPath","lineWidth","lineCap","strokeStyle","setLineDash","moveTo","lineTo","stroke","fillStyle","arc","PI","fill","text","round","replace","textAlign","fillText","rawData_","eTat","sTat","eTatIdx","logRow","getRecordAsText","pos","charset","Config","File","getConfig","convert","iHtml","textContent","insertAdjacentHTML","tatMap","trans","search","clearRect","canvas","setIndexByName_","highlightCallback","pts","row","seriesName","hoverXY","pointClickCallback","event","annotation","Plot","PointClickCallback","annotationClickHandler","annotationDblClickHandler","PointDblClickCallback","xy","minX","cols","updateOptions","file","resetZoom","xRangeMin","MIN_VALUE","xRangeMax","MAX_VALUE","xRangeUnit","DetailGraph","detailRangePlus","detailRangeMinus","detailRangeUnit","detailDateTime","CYCLE","dt","xVal","firstRow","xyData","yVal","some","lastRow","ShowLogText","visibility","inputs","Dygraph","title","titleHeight","legend","showLabelsOnHighlight","labelsSeparateLines","axes","axisLabelFormatter","axisLabelWidth","independentTicks","logscale","y2","drawGrid","gridLinePattern","includeZero","axisLineColor","gridLineColor","pointSize","ylabel","y2label","highlightCircleSize","drawCallback","highlightSeriesOpts","series","labelsKMB","interactionModel","mousedown","defaultInteractionModel","willDestroyContextMyself","dblclick","animatedZooms","DispatchEventTouchToMouse","canvas_","canvas_ctx_","showBalloon","cTps","ann","xval","shortText","anns","ctps","maxX","List","label","tpsPlot","ready","setAnnotations","legendFormatter","data","getStyle","html","Date","xHTML","isVisible","yHTML","labelHTML","isHighlighted","menuOpenCsv","evt","file_list","files","FileReader","menuSaveConfig","fileName","save","HJN.Plot.List","HJN.Config.File","__config","HJN.Config.Filter","json","JSON","stringify","menuDownloadBlob","menuBuffToBlob","menuLoadConfig","funcOnloadend","isSameType","sample","obj","toString","readyState","DONE","filesArrayBuffer","result","buf","String","fromCharCode","apply","alert","jsonObj","parse","conf","_config_File","confD","tmpPlots","Render","ShowBalloon","size","msg","ShowText","reader","onloadend","readAsArrayBuffer","console","error","menuFilterApply","ChartShow","eTatOriginal","menuFilterReset","reset","menuSimulatorSimulate","ResetTimestamp","menuSimulatorEditor","divSimulator","divSimulatorEditor","clientHeight","menuDownloadImg","getElementsByTagName","dataurl","toDataURL","bin","atob","split","buffer","charCodeAt","blob","Blob","type","menuDownloadCsv","bom","csv","join","menuDownloadLog","separator","eTatCsv","message","sort","a","b","maxSize","reduce","byteLength","buff","offset","set","fileIdx","min","len","buff2","menuDownloadConc","plot","radio","arrayBuffer","navigator","msSaveBlob","msSaveOrOpenBlob","href","URL","createObjectURL","addIcon_ZoomReset","divChart","idName","input","div","parentElement","removeChild","createElement","insertBefore","firstChild","__WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_Tat_js__","chartName","timer","setValueByKey","Init","__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__","Util","__WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Copyright_js__","Version","html_chart","body","html_nav","ResetStyle","dropFieldName","ShowLogTextInit","__WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__","__WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__","__WEBPACK_IMPORTED_MODULE_7__tatLogDiver_MenuConfigDetailGraph_js__","__WEBPACK_IMPORTED_MODULE_5__tatLogDiver_Graph_js__","DropField","GetConfig","getFunctionByKey","enableDraggableClass","CreateSampleTatLogAndChartShow","jsonText","GetJsonConfig","Execute","showLogForUpperGraph","showLogForLowerGraph","isInit","SetStyles","bottom","left","top","createFilter","filter","ChartRegistDetail","synchronize","selection","zoom","element","preventDefault","data_transfer","dataTransfer","types","filesIdx","textArray","isNewETAT","getTatLogArray","concat","log","okng","line","lineNum","D2S","N2S","Encoding","str","errorNum","date","isError","getterOfLine","createGetterOfLine","getterOfXY","createGetterOfXY","isDataType_TatStart","next","isEoF","ByInterval","array","sTatIdx","lastModifiedDate","toLocaleString","maxY","maxYIdx","unit","cTpsIdx","conc","SetDetailDateTime","GetSliderRangedEtat","Add","rangeTagPlus","rangeTagMinus","rangeTagUnit","rangeCycle","eTatDetail","sliceByRangeUnit","Usage","Copyright","getAboutText","__WEBPACK_IMPORTED_MODULE_1__simulator_VirtualApp_js__","__WEBPACK_IMPORTED_MODULE_2__simulator_VirtualResource_js__","__WEBPACK_IMPORTED_MODULE_3__simulator_VirtualSystemByJson_js__","__WEBPACK_IMPORTED_MODULE_4__simulator_MenuConfig_js__","__WEBPACK_IMPORTED_MODULE_0__timeSeries_Tat_js__","__WEBPACK_IMPORTED_MODULE_1__timeSeries_ETat_js__","__WEBPACK_IMPORTED_MODULE_2__timeSeries_FileParser_js__","__WEBPACK_IMPORTED_MODULE_3__timeSeries_MenuConfigFile_js__","__WEBPACK_IMPORTED_MODULE_4__timeSeries_MenuConfigFilter_js__","__WEBPACK_IMPORTED_MODULE_0__libs_dygraph_css__","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_css__","__WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Init_js__","eve","Menu","divMenuId","divMenu","className","makeDownloadable","accordion","_id","getAccordionTag","getFileOpenTag","getHtml","getATag","getFuncTag","Simulator","jsonEditor","appendChild","__WEBPACK_IMPORTED_MODULE_1__simulator_simulator_js__","chartDownloadUl","chartViewUl","menuHelpUsage","makePopupable","menuHelpAbout","getSubWindowTag","getDialogTag","getFullYear","url","getGitHubHTML","getJSDocHTML","getHtmlHTML","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__","__WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__","point","yval","rangeUnit","options","getKeyConfig","valueArray","keys","optionKey","getOptionKey","splice","adjustPlotToY","toX","rangePlus","rangeMinus","maxTime","concMax","rangePlusTag","rangeMinusTag","rangeUnitTag","max","divCheckedPlots","CheckBox","CheckRadio","isTouchableDevice","MenuConfigDetailGraph","func_D","clearTimeout","setTimeout","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__","number","startTag","option","def","endTag","cssWithMappingToString","item","useSourceMap","content","cssMapping","btoa","sourceMapping","toComment","sources","map","source","sourceRoot","sourceMap","unescape","encodeURIComponent","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","base","css","media","part","insertStyleElement","getElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","before","removeStyleElement","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","el","setAttribute","remove","transform","singleton","styleIndex","singletonCounter","applyToSingletonTag","revokeObjectURL","updateLink","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","oldSrc","isOldIE","fn","memo","all","selector","styleTarget","HTMLIFrameElement","contentDocument","head","querySelector","DEBUG","newList","mayRemove","textStore","replacement","Boolean","hmr","locals","createSeries","__WEBPACK_IMPORTED_MODULE_2__timeSeries_ETat_js__","tpsN","detailN","toSeriesArray","eTps","eMps","eAps","floorTime","t","cycle","dFrom","dTo","num","maxTat","aveTmp","concTmp","concNum","del","XSec","YMax","YNext","cTpsUnits","concTerm","getElementsByName","lastChild","MappedETat","_tatMap","MappedArray","_getKey","_abscissa","_conf","ms","step","_row","start","term","rowLv","e2","from","to","cap","_map","_arr","abscissa","eTatArr","boxNum","k","arr","getKey","isMappedMap","valueOf","_createMappedMappedArray","_createMappedArray","mKey","has","keyValue","indexes","idxArr","lastIndexOf","ETat","__WEBPACK_IMPORTED_MODULE_0__timeSeries_MappedETat_js__","cash","__WEBPACK_IMPORTED_MODULE_1__timeSeries_Cash_js__","TimeSeries","getRangedCash","setRangedCash","Cash","_cash","_ranges","_size","_arg2arr","args","getCash","lastTime","count","setCash","cashVal","__WEBPACK_IMPORTED_MODULE_0__simulator_js__","__WEBPACK_IMPORTED_MODULE_1__util_util_js__","VirtualSystem","resourcesJson","_resources","_log","_start","_end","_simulator","getTime","_now","thread","timeout","q","qWait","debug","setClients","userName","model","baseModel","getModel","holds","tatMin","sequence","times","thinkTimeMin","thinkTime","vApp","exponential","setEvent","removeEvent","execute","events","pop","_finish","getResouce","note","hold","free","resources","tran","holding","reverse","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","trim","$1","test","newUrl","__WEBPACK_IMPORTED_MODULE_0__util_js__","TouchPanel","average","_average","detectDeviceType","_deviceType","changedTouches","removeEventListener","isStopTouch","touchHandler","ev","__TOUCH_TYPES","touchstart","touchmove","touchend","__TOUCH_INPUTS","INPUT","TEXTAREA","SELECT","OPTION","textarea","select","bSame","__ajqmeclk","touches","oEv","getAttribute","tagName","touch","tmpClientX","clientX","tmpClientY","clientY","startTouch","abs","newEvent","createEvent","initMouseEvent","screenX","screenY","dispatchEvent","stopImmediatePropagation","stopPropagation","DateToString","S2D","S2N","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","YYYY","parseInt","substr","MM","DD","h","hh","mm","sec","ss","p000","match","NaN","ds","isLocal","minus","ret","datetime","getTimezoneOffset","Intl","NumberFormat","sub","eval","Random","uniform","random","poisson","lambda","xp","exp","func","attachEvent","global","handleMessage","messageName","timeouts","shift","postMessage","Logger","mode","_mode","_logText","_timestamp","_logtime","ts","isSameline","lastTimestamp","iHtmlBody","ShowIHtmlBody","elementId","copyToClipboard","innerText","copy2Clipboard","userAgent","editable","contentEditable","readOnly","createRange","selectNodeContents","getSelection","removeAllRanges","addRange","setSelectionRange","execCommand","low","high","isEqual","middle","valMiddle","tmp","Heap","delFunc","_func","node","_delFunc","_heap","_upHeap","_downHeap","_del","_deletable","_deleteMap","Element","_element","_wrapper","position","setStyles","background","pointer-events","elementMove","dragStart","draggingMove","dragEndMove","elementUpper","draggingUpper","dragEndUpper","elementBottom","draggingBottom","dragEndBottom","elementLeft","draggingLeft","dragEndLeft","elementRight","draggingRight","dragEndRight","elementUpperLeft","draggingUpperLeft","dragEndUpperLeft","elementUpperRight","draggingUpperRight","dragEndUpperRight","elementBottomLeft","draggingBottomLeft","dragEndBottomLeft","elementBottomRight","draggingBottomRight","dragEndBottomRight","dragging","posX","posY","dragEnd","styleD","pageX","pageY","grandparent","offsetLeft","offsetTop","defaultView","getComputedStyle","marginLeft","getPropertyValue","marginTop","hjnDrag","classList","add","isPassive","isSupportsPassive","passive","supportsPassive","opt","handler","err","multiply","drag","makeMoveable","makeResizable","createDialog","w","children","border","z-index","makeRemovable","htmlFor","right","addHandleElement","cursor","__WEBPACK_IMPORTED_MODULE_0__util_Config_js__","prefix","ol","_globalName","globalConfig","_prefix","_pre","_ols","_ole","_html","_nameHtml","_name","_onFunctions","__keyConfig","on","funcId","getFunctionById","cKey","keyConfig","getObjctById","selectedIndex","getFunction","setFunction","nDown","nUp","attribute","labeledForm","typedAttribute","pLabel","sLabel","check","cssClass","classStr","reverseList","reverseVal","_tag","onFunc","_keyConf","v","fieldId","setSelector","GetEscapeCodeType","C","T","S","substring","charAt","JISX0208","Function","U2CP","CP2U","P1","sc","cp","il","Unicode","SJIS","EUCJP","JIS7","JIS8","UTF7","UTF8","UTF16LE","UTF16BE","MUTF7","enc","Text","URI","Base64","fromU","toU","fromJ","toJ","es","JIS","UTF16","convert_array","parser","fromB","toB","B","encode","cs1","cs2","decode","escape","asRFC2396","toUpperCase","decodeURIComponent","u24array","TextEncoder","encoding","en","TextDecoder","u8array","guess_array","u7","mu7","pm","am","b64","mb64","cs","guess","names","fnc","escapeUnicode","unescapeUnicode","encodeBase64","decodeBase64","SubWindow","createSubWindow","win","screenTop","screenLeft","setZeroTimeout","openHtml","bgColor","openUri","uri","close","closed","open","blur","focus","append","prepend","menuLabel","funcName","labelText","isChecked","preLabel","dialogId","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__","FileParser","GetterOfLine","maxLength","confLF","confF_TIME_FROM","confF_TIME_TO","confF_TIME","isNaN","confF_TAT_FROM","confF_TAT_TO","confF_TAT","confF_TEXT","confF_TEXT_LEN","confF_TEXT_POS","confF_TEXT_COL","confF_TEXT_REG","RegExp","confF_IS","confF_SEP","_isIn","colPos","GetterOfXY","confSEP","confTIME_COL","confTIME_POS","confTIME_LEN","confTIME_FORM","confTIME_YMD","paseDateConf","isYMD","confTIME_UNIT","confTAT_COL","confTAT_POS","confTAT_LEN","confTAT_FORM","confTAT_UNIT","confENDIAN","isLittle","ArrayBuffer","DataView","setUint32","Uint32Array","dateAndValue","parseNumber","argY","nums","pow","_parseLong","getUint32","reduceRight","posMax","sep","nextPos","arrX","strX","arrY","strY","history","timeStr","sequenceIdx","status","sequenceTime","MenuConfigFile","VirtualApp","_userName","_sequence","_times","_thinkTime","_thinkTimeMin","_baseMessage","_message","_history","_startTime","_sequenceTime","_sequenceIdx","logger","logLv","isLog","resource","highText","errCode","_holdHeap","_holdingQty","user","resourceText","_waitHeap","logText","modify","deleted","startTime","addHistory","getAmount","system","seq","tatAdd","setSequenceTime","abend","holdedResource","logID","logMesseage","isHolding","abendTime","release","holdings","forceTime","now","nextTime","VirtualResource","holdCapacity","waitCapacity","queueWait","_system","_waitTimeout","_waitCapacity","_holdTimeout","_holdCapacity","_isScheduled","_interval","queuedTime","app","apps","holdTimeoutTime","nextWaitTimeout","nextHoldTimeout","amount","vApps","marginQty","addQty","__WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__","virtualSystemByJson","vSys","models","clients","cStart","cEnd","MenuConfig","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Init_js__","func_S_SIMU_000","func_S_SIMU_001","MenuConfigFilter","func_F_SYNC_UPPER","func_F_SYNC_DETAIL","webpackContext","req","webpackContextResolve","./tatLogDiver","./tatLogDiver-Copyright","./tatLogDiver-Copyright.js","./tatLogDiver-Graph","./tatLogDiver-Graph.js","./tatLogDiver-HJN","./tatLogDiver-HJN.js","./tatLogDiver-Init","./tatLogDiver-Init.js","./tatLogDiver-Menu","./tatLogDiver-Menu.js","./tatLogDiver-MenuConfigDetailGraph","./tatLogDiver-MenuConfigDetailGraph.js","./tatLogDiver-Plot","./tatLogDiver-Plot.js","./tatLogDiver-Usage.html","./tatLogDiver.css","./tatLogDiver.js","resolve"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,GAGAzB,IAAA0B,EAAA,KDMM,SAAUtB,EAAQuB,EAAqB3B,GAE7C,YACAc,QAAOC,eAAeY,EAAqB,cAAgBC,OAAO,GAC7C,IAAIC,GAAoD7B,EAAoB,IACxE8B,EAAgD9B,EAAoB,IACpE+B,EAAgD/B,EAAoB,IACpEgC,EAA0DhC,EAAoB,IAC9EiC,EAAwDjC,EAAoB,IAC5EkC,EAAgDlC,EAAoB,IACpEmC,EAAyDnC,EAAoB,IAC7EoC,EAAsDpC,EAAoB,IAC1EqC,EAA8CrC,EAAoB,IAClEsC,EAAiDtC,EAAoB,IACrEuC,EAAmDvC,EAAoB,IACvEwC,EAAmDxC,EAAoB,IACvEyC,EAAoDzC,EAAoB,IACxE0C,EAA+C1C,EAAoB,GAC3DA,GAAoBU,EAAEiB,EAAqB,aAAc,WAAa,MAAOE,GAAqD,IAClI7B,EAAoBU,EAAEiB,EAAqB,MAAO,WAAa,MAAOG,GAAiD,IACvH9B,EAAoBU,EAAEiB,EAAqB,eAAgB,WAAa,MAAOG,GAAiD,IAChI9B,EAAoBU,EAAEiB,EAAqB,MAAO,WAAa,MAAOG,GAAiD,IACvH9B,EAAoBU,EAAEiB,EAAqB,MAAO,WAAa,MAAOG,GAAiD,IACvH9B,EAAoBU,EAAEiB,EAAqB,MAAO,WAAa,MAAOG,GAAiD,IACvH9B,EAAoBU,EAAEiB,EAAqB,SAAU,WAAa,MAAOI,GAAiD,IAC1H/B,EAAoBU,EAAEiB,EAAqB,mBAAoB,WAAa,MAAOK,GAA2D,IAC9IhC,EAAoBU,EAAEiB,EAAqB,iBAAkB,WAAa,MAAOM,GAAyD,IAC1IjC,EAAoBU,EAAEiB,EAAqB,SAAU,WAAa,MAAOO,GAAiD,IAC1HlC,EAAoBU,EAAEiB,EAAqB,kBAAmB,WAAa,MAAOQ,GAA0D,IAC5InC,EAAoBU,EAAEiB,EAAqB,eAAgB,WAAa,MAAOS,GAAuD,IACtIpC,EAAoBU,EAAEiB,EAAqB,OAAQ,WAAa,MAAOU,GAA+C,IACtHrC,EAAoBU,EAAEiB,EAAqB,UAAW,WAAa,MAAOW,GAAkD,IAC5HtC,EAAoBU,EAAEiB,EAAqB,SAAU,WAAa,MAAOY,GAAoD,IAC7HvC,EAAoBU,EAAEiB,EAAqB,WAAY,WAAa,MAAOa,GAAoD,IAC/HxC,EAAoBU,EAAEiB,EAAqB,YAAa,WAAa,MAAOc,GAAqD,IACjIzC,EAAoBU,EAAEiB,EAAqB,OAAQ,WAAa,MAAOe,GAAgD,IEhExJC,OAAAC,mBAAAD,OAAAC,iBAAA,kBACAD,OAAAE,mBAAAF,OAAAE,kBAAA,kBAEAC,WAAAvB,UAAAwB,UACAD,WAAAvB,UAAAwB,QAAA,SAAAC,EAAAC,GACAA,MAAAC,KAAAD,EAAA,EAAAA,CACA,QAAA5C,GAAA4C,EAAAE,EAAAF,EAAA,KAA+C5C,EAAA8C,EAAU9C,IACzD,GAAA+C,KAAA/C,KAAA2C,EAAA,MAAA3C,EAEA,YAGAyC,WAAAvB,UAAA8B,QACAP,WAAAvB,UAAA8B,MAAA,SAAAC,EAAAC,GACA,MAAAH,MAAAI,SAAAF,EAAAC,KAIAE,MAAAlC,UAAAmC,YACAD,MAAAlC,UAAAmC,UAAA,SAAAC,GACA,UAAAP,KAAA,SAAAQ,WAAA,wDACA,sBAAAD,GAAA,SAAAC,WAAA,+BAEA,QADAhC,GAAAiC,EAAA/C,OAAAsC,MAAAU,EAAAD,EAAAC,SAAA,EAAAC,EAAAC,UAAA,GACA3D,EAAA,EAAqBA,EAAAyD,EAAYzD,IAEjC,GADAuB,EAAAiC,EAAAxD,GACAsD,EAAApD,KAAAwD,EAAAnC,EAAAvB,EAAAwD,GAAA,MAAAxD,EAEA,YAIAoD,MAAAlC,UAAA0C,OACAR,MAAAlC,UAAA0C,KAAA,SAAAN,GACA,UAAAP,KAAA,SAAAQ,WAAA,mDACA,sBAAAD,GAAA,SAAAC,WAAA,+BAEA,QADAhC,GAAAiC,EAAA/C,OAAAsC,MAAAU,EAAAD,EAAAC,SAAA,EAAAC,EAAAC,UAAA,GACA3D,EAAA,EAAqBA,EAAAyD,EAAYzD,IAEjC,GADAuB,EAAAiC,EAAAxD,GACAsD,EAAApD,KAAAwD,EAAAnC,EAAAvB,EAAAwD,GAAA,MAAAjC,MF4FM,SAAUxB,EAAQuB,EAAqB3B,GAE7C,YGjJA,SAAAkE,GAAAC,EAAAC,EAAAC,GAKA,GAHAjB,KAAAkB,aACAlB,KAAAe,cACAf,KAAAgB,cAAA,cACAC,EAAA,CACA,GAAAE,GAAA,cAAAH,CACAC,IACAG,WACiBrD,EAAAsD,IAAAC,IAAAC,KAAAC,EAAAC,SAAAN,EAAAO,WAAAP,EAAAQ,SAAA,SACA5D,EAAAsD,IAAAC,IAAAM,KAAAJ,EAAAC,SAAA,EAAAC,WAAA,EAAAC,SAAAR,EAAA,sBACApD,EAAAsD,IAAAC,IAAAO,KAAAL,EAAAC,SAAA,EAAAC,UAAAP,EAAAQ,SAAA,SACA5D,EAAAsD,IAAAC,IAAAQ,KAAAN,EAAAC,SAAAN,EAAAO,WAAAP,EAAAQ,SAAA,gBACA5D,EAAAsD,IAAAC,IAAAS,KAAAP,EAAAC,SAAAN,EAAAO,WAAAP,EAAAQ,SAAA,gBACA5D,EAAAsD,IAAAC,IAAAU,KAAAR,EAAAC,SAAA,EAAAC,WAAA,EAAAC,SAAA,SACA5D,EAAAsD,IAAAC,IAAAW,KAAAT,EAAAC,SAAA,EAAAC,UAAAP,EAAAQ,SAAA,SACjBO,OAAA,GACAC,aAAA,GAKAnC,KAAAoC,WAAAC,EAAA,IAGArC,KAAAsC,SAAAC,SAAAC,eAAA,aACAxC,KAAAyC,OAAAF,SAAAC,eAAA,eACAxC,KAAA0C,cAAAH,SAAAC,eAAA,iBACAxC,KAAA2C,QAAAJ,SAAAC,eAAAxC,KAAAe,aACAf,KAAA4C,UACA5C,KAAA6C,YAEA7C,KAAA8C,OAAA,WACA9C,KAAA+C,MAAA,KACA/C,KAAAgD,SAAAX,EAAA,EAAAY,UAAA,GAGAjD,KAAAoB,YACApB,KAAAkD,QAAA,OACA,QAAAjG,GAAA,EAAAkG,EAAA,EAA0BlG,EAAAgE,EAAAG,SAAAV,OAA4BzD,IACtD,QAAAgE,EAAAG,SAAAnE,GAAAwE,QAAA,CACAzB,KAAAoB,SAAA+B,IACAC,IAAA,GACA7F,KAAA,GACAmE,WAAA,EACAC,SAAA,GACA0B,MAAA,EACAP,MAAA,EACAQ,MAAA,GAGA,QAAAC,KAAAlC,KAAAC,IAAAkC,aAAAvG,GACA+C,KAAAoB,SAAA+B,GAAAI,GAAAlC,IAAAC,IAAAkC,aAAAvG,GAAAsG,EAGAvD,MAAAoB,SAAA+B,GAAAzB,UAAAT,EAAAG,SAAAnE,GAAAyE,UACA1B,KAAAoB,SAAA+B,GAAAxB,SAAAV,EAAAG,SAAAnE,GAAA0E,QAEA,IAAAA,GAAAV,EAAAG,SAAAnE,GAAA0E,QAEA3B,MAAA6C,SAAA7C,KAAAoB,SAAA+B,GAAAC,KADA,gBAAAzB,GAEA8B,YAAA,EACAC,YAAA,GAEa,SAAA/B,GAEb8B,YAAA,EACAE,wBAAA,EACAC,UAAA,GAEa,SAAAjC,GAEb8B,YAAA,EACAG,UAAA,EACAC,WAAA,IAIAJ,YAAA,EACAE,wBAAA,EACAC,UAAA,EACAC,WAAA,GAGA7D,KAAA6C,SAAA7C,KAAAoB,SAAA+B,GAAAC,KAAAE,MAAAtD,KAAAoB,SAAA+B,GAAAG,MAEA,IAAAtD,KAAAoB,SAAA+B,GAAAL,QACA9C,KAAA6C,SAAA7C,KAAAoB,SAAA+B,GAAAC,KAAAU,KAAA,MAGA9D,KAAAkD,OAAAa,KAAA/D,KAAAoB,SAAA+B,GAAAC,KACAD,IAIAnD,KAAAkC,OAAAjB,EAAAiB,OACAlC,KAAAmC,YAAAlB,EAAAkB,YHkDAzE,OAAOC,eAAeY,EAAqB,cAAgBC,OAAO,IACjCD,EAA6B,QAAIuC,CAC7C,IAAIkD,GAA8CpH,EAAoB,GAElEqH,GADwDrH,EAAoB,GACvBA,EAAoB,IACzEsH,EAAqDtH,EAAoB,GACzEyF,EAA0DzF,EAAoB,EGzCvGkE,GAAAqD,aAAA,SAAAC,EAAAC,GAmBA,QAAAC,GAAAC,EAAAC,GACAjC,SAAAC,eAAA+B,GAAA/F,MAAAgG,EACAjC,SAAAC,eAAA+B,GAAAE,WAnBA,IAAAJ,EAAA,CAGA,GAAAK,GAAAV,EAAA,OAAAW,OAAAC,cAAA,WAEA,iBAAAF,GAAAN,EAAA/C,UAAAwD,OACA,kBAAAH,GAAAN,EAAA/C,UAAAyD,UAEAR,EAAA,qBAAAN,EAAA,IAAAI,EAAAW,aAAA,GACA,+BACAT,EAAA,mBAAAN,EAAA,IAAAI,EAAAW,aAAA,GACA,+BAEAT,EAAA,qBAAAF,EAAAY,WAAA,MAAAC,YAAA,IACAX,EAAA,mBAAAF,EAAAY,WAAA,MAAAC,YAAA,OAcAnE,EAAA3C,UAAA+G,KAAA,WAEAxH,OAAAuG,EAAA,SAAAjE,MAEAA,KAAAmC,aAkBA,SAAAgD,GAMA,OALApE,GAAAoE,EAAApE,YACAqE,EAAAD,EAAA/D,SACAiE,EAAA9C,SAAAC,eAAAzB,EAAA,WACAuE,EAAAvE,EAAA,cACAwE,EAAA,eAAAD,EAAA,KACArI,EAAA,EAAuBA,EAAAmI,EAAA1E,OAAqBzD,IAAA,CAC5C,GAAAuI,GAAAJ,EAAAnI,GAAAyE,UAAA,sBACA6D,IAAA,2CACAH,EAAAnI,GAAAqG,MAAA,mCAEA8B,EAAAnI,GAAAmG,IAAA,aACA+B,EAAAnE,WAAA,yBAAA/D,EAAA,OACAuI,EAAA,IACAJ,EAAAnI,GAAAM,KACA,eAEAgI,GAAA,UACAF,EAAAI,UAAAF,GAnCAvF,MAEAA,KAAA+C,QACA/C,KAAA+C,MAAA1B,IAAA,KACArB,KAAA+C,MAAA2C,WAGAC,OAAAC,iBAAA,SAAA5F,KAAA6F,OAAAC,KAAA9F,OAEA2F,OAAAC,iBAAA,oBAAA5F,KAAA6F,OAAAC,KAAA9F,MAEA,QADA+F,GAAAxD,SAAAyD,uBAAA,aACA/I,EAAA,EAAmBA,EAAA8I,EAAArF,OAAoBzD,IACvC8I,EAAA9I,GAAA2I,iBAAA,SAAA5F,KAAA6F,OAAAC,KAAA9F,QAkCAc,EAAA3C,UAAA8H,qBAAA,SAAAhJ,GACA,GAAAqI,GAAAtF,KAAAe,YAAA,cACAmF,EAAA3D,SAAA+C,GAAAa,SAAAlJ,GAAAmJ,OACApG,MAAA+C,MAAAsD,cAAApJ,EAAAiJ,IAQApF,EAAA3C,UAAA0H,OAAA,WAEA,GAAAS,GAAA,CACAtG,MAAAyC,OAAA2D,UAAApG,KAAA0C,cAAA0D,UACAE,EAAAtG,KAAAyC,OAAA8D,WAAAC,YAEA,IAAAC,GAAAd,OAAAe,WAAAJ,CACAtG,MAAAsC,SAAAqE,MAAAF,QAAA,IAEA,IAAAvE,GAAA0E,KAAAC,MAAAlB,OAAAmB,YAAA9G,KAAAkC,OAKA,OAJAlC,MAAA2C,QAAAgE,MAAAzE,SAAA,KAEAlC,KAAA+C,OACA/C,KAAA+C,MAAA8C,OAAAY,EAAAvE,GACAA,GAYApB,EAAA3C,UAAA4I,aAAA,SAAAC,EAAA9F,GACA8F,IACAhH,KAAAkB,UAAA8F,EAAAC,eACAjH,KAAAgD,SAAAgE,EAAAE,eAEAhG,IACAlB,KAAAkB,aAEAG,IAAAC,IAAAkC,aAAA2D,QAAA,SAAAC,GACApH,KAAAoH,EAAAhE,KAAApD,KAAAkB,UAAAkG,EAAA5F,IACKxB,OAaLc,EAAA3C,UAAAkJ,OAAA,SAAAnG,EAAAnD,GAmOA,QAAAuJ,GAAAhK,EAAAiK,EAAAC,GAEA,GAAAC,GAAAzH,KAAA+E,aAAA,KAAAzH,EACAoK,EAAA,GACAC,EAAA3H,KAAA+E,aAAA,GAAA/E,KAAA+E,aAAA,EAUA,OARA2C,GADAC,EAAA,IACAF,EAAA,wBACSE,EAAA,MACT,WACSA,EAAA,QACTF,EAAA,wBAEA,aAEAzD,EAAA,IAAA1G,EAAAoK,GAAA,GAEA,QAAAE,GAAAtK,EAAAiK,EAAAC,GACA,GAAAK,GAAA7H,KAAA8H,cAAA,GAEAC,EAAAF,EAAA,GAAAA,EAAA,EACA,IAAAE,EAAA,IACA,SAAAzK,EAAA,GACS,IAAAyK,EAAA,MACT,MAAA/D,GAAA,IAAA1G,EAAA,cACS,IAAAyK,EAAA,QAET,MADAnB,MAAAoB,KAAA1K,EAAA,UACA0G,EAAA,IAAA1G,EAAA,YAEA,GAAA2K,GAAArB,KAAAoB,KAAA1K,EAAA,gBACA4K,EAAAlE,EAAA,IAAA1G,EAAA,eACA,OAAAA,GAAA,OAAA4K,EAAAD,EAUA,QAAAE,GAAA/D,EAAA7G,EAAA6K,EAAAC,EAAAC,EAAAhF,EAAAiF,EAAAC,GAoFA,QAAAC,GAAAL,EAAAM,EAAAC,EAAAC,EAAAtF,GAEA,GAAAuF,GAAAzE,EAAA0E,YAAAJ,EAAAC,GACAI,EAAA3E,EAAA0E,YAAAJ,GACAM,EAAA5E,EAAA6E,YAAAN,EAAA,EACAO,GAAAd,IACAM,EAAAG,EACAF,EAAAK,IAEAN,EAAAK,EACAJ,EAAAK,IACaJ,EAAAtF,GACb6F,EAAAf,EAAAS,EAAAG,EAAAT,EAAAlH,IAAAC,IAAAQ,KAAAwB,OACA6F,EAAAf,EAAAW,EAAAC,EAAAT,EAAAlH,IAAAC,IAAAS,KAAAuB,OAIA,QAAA4F,GAAAd,EAAAgB,EAAAb,EAAAjF,EAAA+F,GACAjB,EAAAkB,YACAlB,EAAAmB,UAAAhB,EACAH,EAAAoB,QAAA,QACApB,EAAAqB,YAAAnG,EACA+F,GACAjB,EAAAsB,YAAAL,GACAjB,EAAAuB,OAAAP,EAAA,GAAAV,EAAAU,EAAA,GAAAT,GACAS,EAAAjC,QAAA,SAAA9I,GACA+J,EAAAwB,OAAAvL,EAAAqK,EAAArK,EAAAsK,KAEAP,EAAAyB,SAIA,QAAAV,GAAAf,EAAAC,EAAAC,EAAAC,EAAAjF,EAAAkB,EAAA0D,GACAE,EAAAkB,YACAlB,EAAAqB,YAAAnG,EACA8E,EAAA0B,UAAAxG,EACA8E,EAAA2B,IAAA1B,EAAAC,EAAAC,EAAA,IAAA3B,KAAAoD,IAAA,GACA5B,EAAA6B,OACA7B,EAAAyB,QACA,IAAAK,GAAA,IACA1F,GAAA0D,KACA,mBACAgC,GAAAtD,KAAAuD,MAAA,GAAA3F,GAAA,GACiB,qBACjB0F,GAAA1F,GAEAA,GAAA0D,IAAAgC,GAAA,KACAhC,IAAAgC,GAAA,IAAAlG,EAAA,IAAAkE,EAAA,wBAEAE,EAAAkB,YACAlB,EAAA0B,UAAAxG,EAAA8G,QAAA,wBACAhC,EAAAiC,UAAA,OACAjC,EAAAkC,SAAAJ,EAAA7B,EAAAC,EAAA,IACAF,EAAAyB,UAvIA,GAAAzF,EAAAmG,YAAAnG,EAAAmG,SAAA7J,OAAA,EAAA8H,GAAA,CAEA,GAAAE,GAAAtE,EAAAmG,SAAA/B,GAAAnH,IAAAC,IAAAC,KAAAC,GACAgJ,EAAAnJ,IAAAwD,MAAA2F,KACAC,EAAApJ,IAAAwD,MAAA4F,KACA1M,EAAA,CAGA,KAAAR,IAAA8D,IAAAC,IAAAQ,KAAAsB,KAAA7F,IAAA8D,IAAAC,IAAAS,KAAAqB,UACA,KAAAsF,EAAA,CAEA,GAAAnL,IAAA8D,IAAAC,IAAAS,KAAAqB,IAEArF,EAAAiG,EAAA,aAAA0E,EAAA8B,EACA,SAAApD,GAAkD,MAAAA,GAAAsB,QACrC,CAIb3K,EAAA0M,EAFAzG,EAAA,aAAA0E,EAAA+B,EACA,SAAArD,GAAkD,MAAAA,GAAAsB,KAClDgC,QAGA,MAAA3M,EAAA,CAEA,GAAAqJ,GAAAoD,EAAAzM,GACA4M,EAAA3K,KAAAqB,IAAAe,WAAAwI,gBAAAxD,EAEA,aAAAA,EAAAyD,IAAA,CACA,GAAAC,GAAAzJ,IAAA0J,OAAAC,KAAAC,UAAA,OACAN,GAAA3G,EAAA,SAAA8G,QAAAI,QAAAP,EAAA,UAAAG,GAGA,GAAAK,GAAA5I,SAAAC,eAAA,aACA2I,GAAAC,YAAA,GACAD,EAAAE,mBAAA,aAAAV,GAEAlC,EAAAL,EAAAhB,EAAAsB,EAAAtB,EAAAuB,EAAA,EAAArF,GACA8E,EAAAyB,UAKA,GAAAtM,IAAA8D,IAAAC,IAAAC,KAAA6B,SAAA,KAAAoH,EAAAc,OAAA,CAGA,GAAAC,GAAAf,EAAAc,OAAAE,OAAA9C,IAAA,IAEAN,GAAAqD,UAAA,IAAArD,EAAAsD,OAAAjF,MAAA2B,EAAAsD,OAAAxJ,QAEA,GAAAjF,GAAA,EAAAsO,EAAA7K,QAEA6K,EAAApE,QAAA,SAAAC,GACAqB,EAAAL,EAAAhB,EAAAsB,EAAAtB,EAAAuB,EAAA,EAAAtH,IAAAC,IAAAC,KAAA+B,SAGA8E,EAAAyB,SAIA,GAAArF,GAAA,GACA0D,EAAA,EACA,IAAAM,IACAN,EAAA9D,EAAAmG,SAAA/B,GAAA,GACAhE,EAAAjH,EAAA6G,EAAAmG,SAAA/B,GAAApE,EAAAuH,gBAAApO,IAAA,GAEAA,IAAA8D,IAAAC,IAAAQ,KAAAsB,KAAA7F,IAAA8D,IAAAC,IAAAS,KAAAqB,KACA7F,IAAA8D,IAAAC,IAAAU,KAAAoB,KAAA7F,IAAA8D,IAAAC,IAAAW,KAAAmB,MACAoB,EAAAR,EAAA,IAAAQ,KAGA2E,EAAAf,EAAAC,EAAAC,EAAAC,EAAAjF,EAAAkB,EAAA0D,GAEAgB,EAAAd,IACAM,EAAAL,EACAM,EAAA,IAEAD,EAAAL,EACAM,EAAAP,EAAAsD,OAAAxJ,SACS,kCA+DT,QAAA0J,GAAAxE,EAAAsB,EAAAmD,EAAAC,EAAAC,GAEA1K,IAAA2K,SACAtD,IACAmD,MACAC,MACAC,cAKA,QAAAE,GAAAC,EAAA7N,GACAA,EAAA8N,YACA9K,IAAA+K,KAAAC,mBAAAhO,GAIA,QAAAiO,KACAjL,IAAA+K,KAAAC,mBAAAzL,UAAA,IAIA,QAAA2L,KAEAlL,IAAA+K,KAAAI,sBAAA5L,UAAA,IAhbAM,GAAAlB,KAAA+G,iBAAAjH,GAAAoB,EAEA,IAAAuL,MAAgB/D,EAAA,EAAAC,EAAA,MAAYD,EAAA,EAAAC,EAAA,MAAYD,EAAA,EAAAC,EAAA,MAAYD,EAAA,EAAAC,EAAA,KACpDH,KACAE,KACAoD,KACAY,EAAA,EACAzP,EAAA,CAEA,QAAA+C,KAAAkB,UAAAR,OAAA,CACA,GAAAiM,IAAA,EACA,KAAA1P,EAAA,EAAmBA,EAAA+C,KAAAoB,SAAAV,OAA0BzD,IAAA0P,EAAA1P,EAAA,OAS7C,OARA+C,MAAA4C,QAAA+J,QACA3M,KAAA+C,QAEA/C,KAAA+C,MAAA6J,eACAC,KAAA7M,KAAA4C,SAEA5C,KAAA+C,MAAA+J,cAOA,IAAA7P,EAAA,EAAeA,EAAA+C,KAAAoB,SAAAV,OAA0BzD,IACzCwP,EAAAxP,GAAA+C,KAAAkB,UAAAlB,KAAAoB,SAAAnE,GAAAuE,GACAgH,EAAAvL,GAAA,CAGA,IAAA8P,GAAAxN,OAAAyN,UACAC,EAAA1N,OAAA2N,UACAC,EAAAnJ,EAAA,OAAAoJ,YAAAnC,UAAA,SACA,IAAA5J,IAAAyD,SAAA9E,KAAA,CACA,GAAAqN,GAAArJ,EAAA,OAAAoJ,YAAAnC,UAAA,gBACAqC,EAAAtJ,EAAA,OAAAoJ,YAAAnC,UAAA,iBACAsC,EAAAvJ,EAAA,OAAAoJ,YAAAnC,UAAA,UACAuC,EAAAxJ,EAAA,OAAAoJ,YAAAnC,UAAA,SACA,KAAAlN,IAAAsD,IAAAC,IAAAO,KAAAL,GAAAzD,IAAAsD,IAAAC,IAAAU,KAAAR,GAAAzD,IAAAsD,IAAAC,IAAAW,KAAAT,IACA2L,EAAA9K,EAAA,EAAAoL,MAAA,CACA,GAAAC,GAAA9G,KAAAC,MAAA2G,EAAAnL,EAAA,EAAAoL,OAAApL,EAAA,EAAAoL,KACAV,GAAAW,EAAAJ,EAAAC,EACAN,EAAAS,EAAAL,EAAAE,MACS,CAET,GAAAG,GAAA9G,KAAAC,MAAA2G,EAAAL,IACAJ,GAAAW,EAAAJ,EAAAC,EACAN,EAAAS,EAAAL,EAAAE,GAKAvN,KAAA4C,SAGA,IAAA+K,GAAA,IAAA/G,KAAAC,MAAAkG,EAAA,IACA,IAAAxN,OAAAyN,UAAAD,OAAAY,EAAA,CACA,GAAAC,IAAAb,EACAN,GAAAtF,QAAA,SAAA0G,EAAA5Q,GAEA,GAAA6Q,GAAA,IACA,IAAA9N,KAAAoB,SAAAnE,GAAAmG,MAAA/B,IAAAC,IAAAM,KAAAwB,IAAA,CAEA,GAAAD,GAAAa,EAAA,aAAA2J,EAAAE,EAAA,SAAAzG,GACA,MAAAA,GAAAsB,GAEAoF,GAAA,GAAA3K,EAAA0K,EAAA1K,GAAAwF,EAAA,EAEAiF,EAAA7J,KAAA+J,IACS9N,MACTA,KAAA4C,OAAAmB,KAAA6J,GAIA,KAAAnB,EAAAsB,KAAA,SAAA3G,EAAAnK,GACA,MAAAuL,GAAAvL,GAAAmK,EAAA1G,UACK,CAQL,IANAoL,KAEAW,EAAAtF,QAAA,SAAAC,EAAAnK,GACAyL,EAAAzL,GAAAuL,EAAAvL,GAAAmK,EAAA1G,OAAA0G,EAAAoB,EAAAvL,IAAAyL,EAAAnJ,OAAA2N,YAEAR,EAAAhE,EAAA,GACAzL,EAAA,EAAmBA,EAAAyL,EAAAhI,OAAczD,IACjCyL,EAAAzL,GAAAyP,IACAA,EAAAhE,EAAAzL,GAEA6O,GAAA/H,KAAA2I,GAEAD,EAAAtF,QAAA,SAAAC,EAAAnK,GACAmK,EAAA1G,QAAA8H,EAAAvL,GACA6O,EAAA/H,KAAA,MACaqD,EAAAoB,EAAAvL,IAAAyL,IAAAgE,GAEbZ,EAAA/H,KAAAqD,EAAAoB,EAAAvL,IAAA0L,GACAH,EAAAvL,MAEA6O,EAAA/H,KAAA,QAIAgJ,GAAAL,MAAAO,GACAjN,KAAA4C,OAAAmB,KAAA+H,GAIA,GAAAmB,EAAA1N,OAAA2N,WACAD,IAAA,IAAArG,KAAAC,MAAAoG,EAAA,MACA,GAAAe,IAAAf,EACAR,GAAAtF,QAAA,SAAAC,EAAAnK,GACA+Q,EAAAjK,KAAA/D,KAAAoB,SAAAnE,GAAAmG,MAAA/B,IAAAC,IAAAM,KAAAwB,IAAA,SACSpD,MACTA,KAAA4C,OAAAmB,KAAAiK,GAGAhK,EAAA,OAAAiK,YAAA,4BACAjO,KAAA4C,OAAAlC,OAAA,eAGA,IAAAwN,KACA,IAAAlO,KAAAmC,YAAA,CAEA,GAAAgM,GAAA5L,SAAAvC,KAAAe,YAAA,cACA,KAAA9D,EAAA,EAAmBA,EAAA+C,KAAAoB,SAAAV,OAA0BzD,IAC7CiR,EAAAnK,KAAAoK,EAAAnO,KAAAoB,SAAAnE,GAAAmG,KAAAgD,aAIA,KAAAnJ,EAAA,EAAmBA,EAAA+C,KAAAoB,SAAAV,OAA0BzD,IAC7CiR,EAAAnK,KAAA/D,KAAAoB,SAAAnE,GAAAyE,UAKA1B,MAAA+C,OAEA/C,KAAA+C,MAAA6J,eACAC,KAAA7M,KAAA4C,SAEA5C,KAAA+C,MAAA+J,cAGA9M,KAAA+C,MAAA,GAAAqL,SAAApO,KAAA2C,QAAA3C,KAAA4C,QACAV,OAAAlC,KAAA6F,SACA3C,OAAAlD,KAAAkD,OACAmL,OAAAhN,IAAAwD,MAAA,IACAyJ,YAAA,GACAC,OAAA,SACAC,uBAAA,EAGAC,qBAAA,EAEAC,MACAhG,GACAiG,mBAAArH,EACAsH,eAAA,KAEAjG,GACAkG,kBAAA,EACAD,eAAA,GAGAE,UAAA,GAEAC,IACAJ,mBAAA/G,EACAiH,kBAAA,EACAD,eAAA,GACAI,UAAA,EACAC,iBAAA,KACAH,UAAA,IAGAI,aAAA,EAEAC,cAAA,qBACAC,cAAA,qBACA3L,YAAA,EACA4L,UAAA,EACAC,OAAA,yBACAC,QAAA,MAKApH,6BACAqH,oBAAA,EACA5D,oBACAK,qBACAK,yBACAC,4BAEAkD,aAAA3O,EAAAqD,aACAuL,uBAKAC,OAAA3P,KAAA6C,SACA+M,WAAA,EACA1B,aACA2B,kBACAC,UAAA1B,QAAA2B,wBAAAD,UACAE,0BAAA,EAIAC,SAAA7B,QAAA2B,wBAAAE,UAEAC,eAAA,EACAvM,wBAAA,IAGA3D,KAAA+C,MAAA1B,IAAArB,KAEAgE,EAAA,WAAAmM,0BAAAnQ,KAAA+C,MAAAqN,SACApM,EAAA,WAAAmM,0BAAAnQ,KAAA+C,MAAAsN,YAAA3E,SAIA1H,EAAA,OAAAiK,YAAA,8BAsCAjO,KAAAsQ,cACAtM,EAAA,OAAAiK,YAAA,+BAuLAnN,EAAA3C,UAAAmS,YAAA,WACA,OAAAtQ,KAAAuQ,KAAA7P,OAAA,CAGA,GAAA8P,IACAb,OAAA,GACAc,KAAA,EACAC,UAAA,GACAxG,KAAA,IACKyG,KAELC,EAAA5Q,KAAAuQ,KAAA7D,EAAAkE,EAAA,GAAAlI,EAAAmI,EAAAD,IAAAlQ,OAAA,GAAAgI,CAEArH,KAAA+K,KAAA0E,KAAA3J,QAAA,SAAAC,GACAsF,GAAAtF,EAAAsB,GAAAtB,EAAAsB,GAAAmI,IACAL,GACAb,OAAAtO,IAAAC,IAAAkC,aAAA4D,EAAArJ,GAAAqF,IACAqN,KAAArJ,EAAAsB,EACAgI,UAAAtJ,EAAAuB,EACAuB,KAAA9C,EAAA2J,OAEAJ,EAAA5M,KAAAyM,GAEA,WAAApJ,IACApH,KAAAoB,SAAAd,UAAA,SAAAhC,GACA,MAAAA,GAAAkD,IAAA4F,EAAArJ,IACiB,IACjByS,GACAb,OAAAtO,IAAAC,IAAAkC,aAAA4D,EAAA4J,QAAAjT,GAAAqF,IACAqN,KAAArJ,EAAA4J,QAAAtI,EACAgI,UAAAtJ,EAAA4J,QAAArI,EACAuB,KAAA9C,EAAA4J,QAAAD,OAEAJ,EAAA5M,KAAAyM,MAIKxQ,MAELA,KAAA+C,MAAAkO,MAAA,WACAjR,KAAAkR,eAAAP,OAaA7P,EAAA3C,UAAAgT,gBAAA,SAAAC,GAuBA,QAAAC,GAAAjO,GACA,GAAAnG,GAAAoE,IAAAC,IAAAkC,aAAAlD,UAAA,SAAA8G,GACA,MAAAA,GAAAhE,SAEA,4BAAA/B,IAAAC,IAAAkC,aAAAvG,GAAAqG,MAAA,IAzBA,GAAAgO,OAAA,KAAAF,EAAA1I,EAAA,GAAA1E,EAAA,aACA,GAAAuN,MAAAH,EAAAI,OAAA,0BAkBA,OAjBAF,GAAA,2BAAAA,EAAA,WACAF,EAAAzB,OACAxI,QAAA,SAAAwI,GACA,GAAAA,EAAA8B,UAAA,CAEA,GAAAjN,OAAA,KAAAmL,EAAA+B,MAAA,GACA/B,EAAA+B,MAAAxH,EAAA,UACAmH,EAAA1B,EAAAoB,OACA,WAEApB,EAAAgC,UACA,KACA,OAAAnN,EAAA4F,QAAA,gBAAAnK,OAAA,GACAmK,QAAA,eAAsD,UACtDkH,IAAA3B,EAAAiC,cAAA,MAAA1H,EAAA,OAAAA,EACAoH,GAAA,YAEAA,GAmBAxQ,EAAA3C,UAAA0T,YAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAlS,OAAAoS,KAEA3Q,KAAA6D,KAAA+M,WAAAF,IAYAjR,EAAA3C,UAAA+T,eAAA,SAAAzP,EAAA0P,GAEA,GAAAC,IACAC,gBAAAhR,IAAA+K,KAAA0E,KACAwB,kBAAAjR,IAAA0J,OAAAC,KAAAuH,SACAC,oBAAAnR,IAAA0J,OAAApG,OAAA4N,UAEAE,EAAAC,KAAAC,UAAAP,EAAA,OAEApS,MAAA4S,iBAAA5S,KAAA6S,eAAAJ,GAAAhQ,EAAA0P,IAWArR,EAAA3C,UAAA2U,eAAA,SAAAhB,GA4BA,QAAAiB,GAAAlG,EAAA5P,EAAA6U,GAiCA,QAAAkB,GAAAC,EAAAC,GAGA,MAFAxV,QAAAS,UAAAgV,SAAAhW,KAAA8V,KACAvV,OAAAS,UAAAgV,SAAAhW,KAAA+V,GAlCA,GAAApB,EAAAlS,OAAAwT,aAAAnB,WAAAoB,KAAA,CAEA,GAAAC,GAAAxB,EAAAlS,OAAA2T,OACAC,EAAA,GAAA9T,YAAA4T,GACAb,EAAAgB,OAAAC,aAAAC,MAAA,KAAAH,EACAI,OAAAnB,EACA,IAAAoB,GAAAnB,KAAAoB,MAAArB,GAGAsB,EAAAF,EAAA,uBACAxS,KAAAwD,MAAAzC,WAAA4R,aAAAzB,SAAAwB,CACA,IAAAE,GAAAJ,EAAA,wBACAxS,KAAAyD,OAAA1C,WAAA4R,aAAAzB,SAAA0B,CAGA,IAAAC,GAAAL,EAAA,iBACAzK,IAEA4J,MAAAkB,IACAA,EAAA/M,QAAA,SAAAC,GACA4L,EAAA,EAAA5L,EAAAsB,IACAU,EAAArF,KAAAqD,KAGA,EAAAgC,EAAA1I,SACAW,IAAA+K,KAAA0E,KAAA1H,GAEA/H,IAAA+K,KAAA+H,SAEA9S,IAAA+K,KAAAgI,eAvDA,OADApC,GAAAF,EAAAlS,OAAAoS,MACA/U,EAAA,EAAmBA,EAAA+U,EAAAtR,OAAkBzD,IACrC,IAEA,GAAA4P,GAAAmF,EAAA/U,EAEA,QAAA4P,EAAAwH,KAAA,CACA,GAAAC,GAAA,oBAAAzH,EAAAtP,KAAA,KAAAsP,EAAAwH,KACA,OAEA,YADArQ,GAAA,OAAAuQ,UAAA,SAAAD,EAAA,YAIA,GAAAE,GAAA,GAAAvC,WACAuC,GAAAC,UAAA1B,EAAAjN,KAAA9F,KAAAgS,EAAA/U,MAEAuX,EAAAE,kBAAA1C,EAAA/U,IACS,MAAAmK,GAET,GAAAkN,GAAA,OAAArX,EAAA,iCACA+G,GAAA,OAAAuQ,UAAA,SAAAD,EAAA,YACAK,QAAAC,MAAA,SAAAN,EAAAlN,KAqDAtG,EAAA3C,UAAA0W,gBAAA,WACAxT,IAAA2Q,OAAA,IAAA3Q,IAAA2Q,MAAAtR,OAEAW,IAAA6D,KAAA4P,UAAAzT,IAAAwD,MAAAkQ,cAGA1T,IAAA6D,KAAA+M,WAAA5Q,IAAA2Q,QAQAlR,EAAA3C,UAAA6W,gBAAA,WACA3S,EAAA,EAAA4S,SAQAnU,EAAA3C,UAAA+W,sBAAA,WAEAlR,EAAA,OAAAmR,gBACA,IAAA1C,GAAAlQ,SAAAC,eAAA,mBAAAhE,KACA6C,KAAA2Q,SACA3Q,IAAA+K,KAAA0E,QACApT,OAAAwG,EAAA,gCAAAuO,IAOA3R,EAAA3C,UAAAiX,oBAAA,WACA,GAAAC,GAAA9S,SAAAC,eAAA,aACA8S,EAAA/S,SAAAC,eAAA,kBACA,UAAA6S,EAAA1O,MAAAzE,QAEAmT,EAAA1O,MAAAuH,WAAA,SACAmH,EAAA1O,MAAAzE,OAAA,IACAmT,EAAA1O,MAAAF,MAAA,UAGA6O,EAAA3O,MAAAzE,OAAA,IAEAmT,EAAA1O,MAAAzE,OAAA,OACAmT,EAAA1O,MAAAF,MAAA,MAEA6O,EAAA3O,MAAAzE,OAAAmT,EAAAE,aAAA,KACAF,EAAA1O,MAAAuH,WAAA,YAcApN,EAAA3C,UAAAqX,gBAAA,SAAA/S,EAAA0P,GASA,OANAzG,GAAA1L,KAAA2C,QAAA8S,qBAAA,aAAAC,EAAAhK,EACAiK,UAHA,aAKAC,EAAAC,KAAAH,EAAAI,MAAA,SAEAC,EAAA,GAAArW,YAAAkW,EAAAlV,QACAzD,EAAA,EAAmBA,EAAA2Y,EAAAlV,OAAgBzD,IACnC8Y,EAAA9Y,GAAA2Y,EAAAI,WAAA/Y,EAGA,IAAAgZ,GAAA,GAAAC,OAAAH,WACAI,KAbA,aAkBAnW,MAAA4S,iBAAAqD,EAAAxT,EAAA0P,IAYArR,EAAA3C,UAAAiY,gBAAA,SAAA3T,EAAA0P,GACA,GAAAkE,GAAA,GAAA3W,aAAA,cACA4W,EAAAtW,KAAAkD,OAAAqT,KAAA,IACAvW,MAAA4C,OAAAuE,QAAA,SAAAC,GACAkP,GAAA,OAAAlP,EAAAmP,KAAA,MAEA,IAAAN,GAAA,GAAAC,OAAAG,EAAAC,IACAH,KAAA,YAGAnW,MAAA4S,iBAAAqD,EAAAxT,EAAA0P,IAYArR,EAAA3C,UAAAqY,gBAAA,SAAA/T,EAAA0P,GACA,GAAA3H,GAAAxK,KAAAwK,IACA,MAAAA,EAAA9J,OACA,YAAA8J,EAAA,GAAAK,IAAA,CAEA,GACA4L,GADA,GACAzS,EAAA,OAAAgH,KAAAC,UAAA,OACAyL,EAAA,eACAD,EAAA,WACAA,EAAA,eAEAjM,GAAArD,QAAA,SAAAC,GACAsP,GAPA,GAOA1S,EAAA,IAAAoD,EAAAsB,EAAA,2BACA+N,EAAArP,EAAAuB,EACA8N,EAAArP,EAAAuP,QACA,SAGA3W,KAAA4S,iBAAA5S,KAAA6S,eAAA6D,GAAAjU,EACA0P,OACS,CAET3H,EAAAoM,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAhM,IAAAiM,EAAAjM,KAGA,IAAAkM,GAAA1V,IAAAiS,iBAAA0D,OAAA,SAAA3Y,EAAAhB,GACA,MAAAgB,GAAAhB,EAAA4Z,WAAA,GACa,GACbC,EAAA,GAAAxX,YAAAqX,GAAAI,EAAA,CAEA3M,GAAArD,QAAA,SAAAC,GACA8P,EAAAE,IAAA,GAAA1X,YAAA2B,IAAAiS,iBAAAlM,EAAAiQ,SAAAjQ,EAAAyD,IACAjE,KAAA0Q,IAAAlQ,EAAAmQ,IAAA,EACAlW,IAAAiS,iBAAAlM,EAAAiQ,SAAAJ,WACA7P,EAAAyD,MAAAsM,GACAA,GAAA/P,EAAAmQ,IAAA,GAGA,IAAAC,GAAA,GAAA9X,YAAAwX,EAAAjX,MAAA,EAAAkX,GAEAnX,MAAA4S,iBAAA5S,KAAA6S,eAAA2E,GAAA/U,EAAA0P,OAEK,CAGLnS,KAAA4S,iBAAA5S,KAAA6S,eAFA,uBAEApQ,EAAA0P,KAaArR,EAAA3C,UAAAsZ,iBAAA,SAAAhV,EAAA0P,GACA,GAAAuF,GAAArW,IAAA+K,KAAA0E,KAAAjQ,KAAA,SAAAuG,GACA,MAAAA,GAAAuQ,OAEA,IAAAD,EAAA3Z,IAAAsD,IAAAC,IAAAC,KAAAC,GAAAkW,EAAA3Z,IAAAsD,IAAAC,IAAAQ,KAAAN,GAAAkW,EAAA3Z,IAAAsD,IAAAC,IAAAS,KAAAP,EAAA,CAEA,GAAA+J,GAAAvL,KAAAwK,KAAAc,OAAAE,OAAAkM,EAAAhP,EACA,MAAA6C,EAAA7K,OACA,YAAA6K,EAAA,GAAAV,IAAA,CAGA,GACA4L,GADA,GACAzS,EAAA,OAAAgH,KAAAC,UAAA,OACAqL,EAAA,eACAG,EAAA,cAEAlL,GAAApE,QAAA,SAAAC,GACAkP,GANA,GAMAtS,EAAA,IAAAoD,EAAAsB,EAAA,2BACA+N,EAAArP,EAAAuB,EACA,SAGA3I,KAAA4S,iBAAA5S,KAAA6S,eAAAyD,GAAA7T,EACA0P,OACa,CAGb5G,EAAAqL,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAhM,IAAAiM,EAAAjM,KAGA,IAAAkM,GAAA1V,IAAAiS,iBAAA0D,OAAA,SAAA3Y,EAAAhB,GACA,MAAAgB,GAAAhB,EAAA4Z,WAAA,GACiB,GACjBC,EAAA,GAAAxX,YAAAqX,GAAAI,EAAA,CAEA5L,GAAApE,QAAA,SAAAC,GACA8P,EAAAE,IAAA,GAAA1X,YAAA2B,IAAAiS,iBAAAlM,EAAAiQ,SACAjQ,EAAAyD,IAAAjE,KAAA0Q,IAAAlQ,EAAAmQ,IAAA,EACAlW,IAAAiS,iBAAAlM,EAAAiQ,SAAAJ,WACA7P,EAAAyD,MAAAsM,GACAA,GAAA/P,EAAAmQ,IAAA,GAGA,IAAAC,GAAA,GAAA9X,YAAAwX,EAAAjX,MAAA,EAAAkX,GAEAnX,MAAA4S,iBAAA5S,KAAA6S,eAAA2E,GAAA/U,EACA0P,QAIK,CACL,GAAAmC,GAAA,gEAEAV,OAAAU,GACAtU,KAAA4S,iBAAA5S,KAAA6S,eAAAyB,GAAA7R,EAAA0P,KAYArR,EAAA3C,UAAA0U,eAAA,SAAA+E,GACA,UAAA1B,OAAA0B,IACAzB,KAAA,8BAeArV,EAAA3C,UAAAyU,iBAAA,SAAAqD,EAAAxT,EAAA0P,GACAxM,OAAAkS,UAAAC,YACAnS,OAAAkS,UAAAC,WAAA7B,EAAA9D,GAEAxM,OAAAkS,UAAAE,iBAAA9B,EAAA9D,IAEA5P,SAAAC,eAAAC,GAAAuV,KAAArS,OAAAsS,IAAAC,gBAAAjC,IASAnV,EAAA3C,UAAAga,kBAAA,WACA,GAAAC,GAAApY,KAAA2C,QACA0V,EAAArY,KAAAe,YAAA,OACAuX,EAAA/V,SAAAC,eAAA6V,EACA,WAAAC,EAAA,CACA,GAAAC,GAAAD,EAAAE,aACAD,GAAAC,cAAAC,YAAAF,GAGA,GAAAH,EAAA,CACA,GAAAG,GAAAhW,SAAAmW,cAAA,OACAnT,EAAA,cAAA8S,EAAA,+DACArY,KAAAe,YAAA,mCACAsX,EAAA,4CACAE,GAAA9S,UAAAF,EACA6S,EAAAO,aAAAJ,EAAAH,EAAAQ,eHyLM,SAAU5b,EAAQuB,EAAqB3B,GAE7C,YACAc,QAAOC,eAAeY,EAAqB,cAAgBC,OAAO,IACnC5B,EAAoBU,EAAEiB,EAAqB,MAAO,WAAa,MAAO8C,IAChF,IAAI2C,GAA8CpH,EAAoB,GIj4C3Fic,EAAAjc,EAAA,IAeAyE,IACAsE,QAAAtE,MAKAA,EAAA6D,QAEA7D,EAAA0J,OAAA1J,EAAA0J,QAAA/G,EAAA,OACA3C,EAAAC,IAAAuX,EAAA,EAEAxX,EAAAwD,MAAAxD,EAAAyD,OAAA,KACAzD,EAAAyX,UAAA,QAEAzX,EAAA2Q,SACA3Q,EAAAiS,oBAEAjS,EAAA0X,SACA/U,EAAA,sBAAAgV,cAAA,aAAAzH,QJy4CM,SAAUvU,EAAQuB,EAAqB3B,GAE7C,YK/4CA,SAAAqc,GAAAH,GAEAI,EAAA,IAAAC,KAAAnV,EAEAkV,EAAA,IAAAJ,eAAAI,EAAA,IAAAJ,UAEAvW,SAAA8L,MAAA,iBAAA+K,EAAA,UAAAC,OAEA,IAAAC,GAAA/W,SAAAC,eAAA,OAAAsW,IAAAvW,SAAAgX,IACAD,GAAA7T,UACA,YAAAqT,EAAA,oBACAA,EAAA,6GAKA,IAAAU,GAAAjX,SAAAmW,cAAA,MACAc,GAAA/T,UAAA,y2BAgCAqT,EAAA,yBACAA,EAAA,4CAKAQ,EAAA/S,WAAAoS,aAAAa,EAAAF,GACAJ,EAAA,IAAAhU,KAAAuU,YAAA,EAEA,IAAAC,GAAAZ,CACA9U,GAAA,OAAA2V,kBAIAC,EAAA,EAAA3Y,SACA2Y,EAAA,EAAA3Y,SACA4Y,EAAA,EAAA5Y,SACA6Y,EAAA,QAAA7Y,SAGAiY,EAAA,IAAArU,MAAA,GAAAkV,GAAA,QAAAjB,EAAA,aACAI,EAAA,IAAArU,MAAAK,OACAgU,EAAA,IAAApU,OAAA,GAAAiV,GAAA,QAAAjB,EAAA,kBACAI,EAAA,IAAApU,OAAAI,OAEA+T,EAAAe,UAAAN,GACAT,EAAAe,UAAAN,EAAA,KAGA1V,EAAA,OAAAiW,UAAA,aAAAC,iBAAA,YAGAlW,EAAA,QAAAmW,uBAwCA,QAAAC,GAAA3H,GACA,GAAA4H,EAEAA,GADA,mBACAR,EAAA,EAAAS,cAAA7H,GAEAA,GAAAoH,EAAA,EAAAS,cAAA,GAGA/X,SAAAC,eAAA,mBAAAhE,MAAA6b,EAEAnB,EAAA,IAAArU,MAAAkQ,aAAA8E,EAAA,EAAAU,QAAAF,GAEApB,EAAAnE,UAAAoE,EAAA,IAAArU,MAAAkQ,cAsCA,QAAAyF,GAAArI,IAIA,QAAAsI,GAAAtI,GAKA,GAAAjI,GAAA,YACAgP,EAAA,IAAArU,MAAA2F,KAAA9J,OAAAyS,WAAA,IACA/I,QAAA,0BAA2B,OAC3B,YAEA8O,GAAA,IAAApU,OAAA0F,KACAN,GAAA,OACAgP,EAAA,IAAApU,OAAA0F,KAAA9J,OAAA,IACA0J,QAAA,0BAA4B,OAC5B,KAEAF,EACA,iDAGAlG,EAAA,OAAAiK,YAAA/D,EAAA,OL6sCAxM,OAAOC,eAAeY,EAAqB,cAAgBC,OAAO,IACjCD,EAA6B,QAAI0a,EACjC1a,EAAoD,+BAAI6b,CACpE,IAAIpW,GAA8CpH,EAAoB,GAClEgd,EAA0Dhd,EAAoB,GAC9Eid,EAAwDjd,EAAoB,GAC5Esc,EAAoDtc,EAAoB,GACxEwc,EAA0Dxc,EAAoB,GAC9Emd,EAAsDnd,EAAoB,GAE1Ekd,GADqDld,EAAoB,GACHA,EAAoB,IK7zCnHsc,GAAA,IAAAhU,KAAAuU,WAAAR,EAAAQ,WAAA,SAAAiB,GAGA,OADAvU,GAAA5D,SAAAyD,uBAAA,cACA/I,EAAA,EAAeA,EAAAkJ,EAAAzF,OAAqBzD,IACpC+G,EAAA,QAAA2W,UAAAxU,EAAAlJ,IACK2d,OAAA,EAAAC,KAAA,GAAAC,IAAA,GAAArU,MAAA,MAAAvE,OAAA,QAELiE,GAAA5D,SAAAyD,uBAAA,YACA,QAAA/I,GAAA,EAAeA,EAAAkJ,EAAAzF,OAAqBzD,IACpC+G,EAAA,QAAA2W,UAAAxU,EAAAlJ,IACK4d,KAAA,OAAAC,IAAA,EAAArU,MAAA,QAAAvE,OAAA,QAEL8B,GAAA,QAAA2W,UAAApY,SAAAC,eAAA,cACKqY,KAAA,EAAAC,IAAA,EAAArU,MAAA,QAAAvE,OAAA,IAELwY,IACAxB,EAAA,IAAArU,MAAA9B,MAAA+J,YACAoM,EAAA,IAAApU,OAAA/B,MAAA+J,cAiCAoM,EAAA,IAAAhU,KAAA4P,UAAAmE,EAAAnE,UAAA,SAAAC,GAEA,GAAAvK,GAAA0O,EAAA,IAAArU,MAAAzC,WAAA2Y,eAAAC,OAAAjG,EAGAmE,GAAA,IAAA9M,KAAA0E,QAEA,IAAAtG,EAAA9J,SAAA8J,IAAiC9B,EAAA,EAAAC,EAAA,IACjC,IAAA3B,GAAA,GAAA4S,GAAA,EAAApP,EACA0O,GAAA,IAAArU,MAAAkC,aAAAC,GACAkS,EAAA,IAAArU,MAAAwC,SACAmT,EAAA,aAGAxW,EAAA,0BACAkV,EAAA,IAAApU,OAAAuC,OAAA4R,EAAAgC,kBAAA/B,EAAA,IAAArU,MAAA0L,OACA2I,EAAA,IAAArU,MAAAyL,cACA4I,EAAA,IAAApU,OAAA0F,KACAiQ,EAAA,aAEAzW,EAAA,OAAAiK,YAAA,iCAGAG,SAAA8M,aACAhC,EAAA,IAAArU,MAAA9B,MAAAmW,EAAA,IAAApU,OAAA/B,QACMoY,WAAA,EAAAC,MAAA,OAqCNnC,EAAAe,UAAA,SAAAN,GAEA,GAAA2B,GAAA9Y,SAAAC,eAAAkX,EAGA2B,GAAAzV,iBAAA,oBAAAwB,GACAA,EAAAkU,mBAIAD,EAAAzV,iBAAA,gBAAAwB,GACA,GAAAmU,GAAAnU,EAAAoU,YACA,IAAAD,EAAAE,MAAA,CACA,GAAAzJ,GAAAuJ,EAAAvJ,KACAiH,GAAAhH,WAAAD,GACA5K,EAAAkU,qBAWApC,EAAA,IAAAhU,KAAA+M,WAAAgH,EAAAhH,WAAA,SAAAD,GAyBA,QAAAe,GAAAlG,EAAA5P,EAAA6U,GACA,GAAAA,EAAAlS,OAAAwT,aAAAnB,WAAAoB,KAAA,CACA,GAAAqI,GAAAxC,EAAA,IAAAlH,MAAAtR,MAkBA,IAhBAwY,EAAA,IAAA5F,iBAAAoI,GAAA5J,EAAAlS,OAAA2T,OACAvP,EAAA,OAAAmR,iBACAnR,EAAA,OAAAiK,YAAA0N,EAAA,OAGA,IAAA1e,GAAAic,EAAA,IAAArU,MAAAzC,WAAAwZ,aAEA1C,EAAA,IAAAlH,OAAAnF,GACAqM,EAAA,IAAArU,MAAAkQ,aAAA8G,EAAA3C,EAAA,IAAA5F,iBAAAoI,KAEAxC,EAAA,IAAAlH,MAAAjO,KAAA8I,GACAqM,EAAA,IAAArU,MAAAkQ,aAAAmE,EAAA,IAAArU,MAAAkQ,aAAA+G,OACAD,EAAA3C,EAAA,IAAA5F,iBAAAoI,KAIAxC,EAAA,IAAAlH,MAAAkH,EAAA,IAAAlH,MAAAtR,OAAA,KAAAmM,EAAA,CAEA,GAAArC,GAAA0O,EAAA,IAAArU,MAAAzC,WAAA2Y,eAAAC,OAAA9B,EAAA,IAAArU,MAAAkQ,aAGA,KAAAvK,EAAA9J,SAAA8J,IAAoC9B,EAAA,EAAAC,EAAA,IACpC,IAAA3B,GAAA,GAAA4S,GAAA,EAAApP,EACA0O,GAAA,IAAArU,MAAAkC,aAAAC,GACAkS,EAAA,IAAArU,MAAAwC,SACAmT,EAAAtB,EAAA,IAAAlH,MAAA,GAAAzU,MAGA2b,EAAA,IAAA9M,KAAA0E,QACA9M,EAAA,0BACAkV,EAAA,IAAArU,MAAA0L,MAEA2I,EAAA,IAAApU,OAAAuC,OAAA4R,EAAAgC,kBAAA/B,EAAA,IAAArU,MAAA0L,OAEA2I,EAAA,IAAArU,MAAAyL,cACAmK,EAAAvB,EAAA,IAAAlH,MAAA,GAAAzU,OAEAyG,EAAA,OAAAiK,YAAA,sCA0BA,QAAA4N,GAAA7J,EAAAxJ,GAgDA,QAAAuT,GAAAC,EAAAvP,EAAAwP,GACA,GAAAD,EAAA,CAEA,GAAAE,EAAA,QACAlY,GAAA,OAAAiK,YAAA,eAAAiO,EAAA,UACAvW,OAAAtE,IAAA8X,KAAAgD,IAAA1P,EAAA/D,EAAA,2BACA,KAAA/C,OAAAtE,IAAA8X,KAAAiD,IAAA3P,EAAA9D,GAAA,QACAhD,OAAAtE,IAAA8X,KAAAkD,SAAAvR,QAAAI,QAAA+Q,EAAAK,IAAA,UAAAxR,GACA,WACa,CAGb,KAFAyR,EAEA,QACAvY,GAAA,OAAAiK,YAAA,eAAAiO,EAAA,QACAvW,OAAAtE,IAAA8X,KAAAkD,SAAAvR,QAAAI,QAAA+Q,EAAAK,IAAA,UAAAxR,GACA,QA9DA9G,EAAA,OAAAiK,YAAA,uDAaA,KAZA,GAAApB,GAAAmF,EAAAxJ,GACAgC,KACAiC,GAAS+P,KAAA,EAAAhe,MAAA,EAAAie,SAAA,GACTxf,EAAA,EACAyf,EAAAxD,EAAA,IAAArU,MAAAzC,WAAAua,mBAAA9P,GACA+P,EAAA1D,EAAA,IAAArU,MAAAzC,WAAAya,mBACAC,EAAA,qBAAA9Y,EAAA,OAAAgH,KAAAC,UAAA,YAEAgR,GADAjY,EAAA,OAAAgH,KAAAC,UAAA,YACAyR,EAAAK,QACAb,EAAA,EACAK,EAAA,EACAzR,EAAAoO,EAAA,IAAAnO,OAAAC,KAAAC,UAAA,SACAgR,EAAAe,OAAA,CACAd,GACA,KACAlY,EAAA,OAAAiZ,WAAAhgB,IAAAgf,GACAxP,EAAAmQ,EAAA9I,MAAAmI,GACAxP,EAAAgQ,QAaAV,GAAA,EAAAtP,EAAAwP,IAZAa,EACAtS,EAAAzG,MAAkB2E,EAAA+D,EAAA/D,EAAA+D,EAAA9D,IAAA8D,EAAA9D,EAAA0O,QAAA7O,EAClBqC,IAAAoR,EAAApR,IAAA0M,IAAA0E,EAAAiB,MAAAjG,WAAAkG,QAAA,IAEA3S,EAAAzG,MAAkB2E,EAAA+D,EAAA/D,EAAAC,EAAA8D,EAAA9D,EAAA0O,QAAA7O,EAClBqC,IAAAoR,EAAApR,IAAA0M,IAAA0E,EAAAiB,MAAAjG,WAAAkG,QAAA,IAGAjB,EAAA,GACAH,GAAA,EAAAtP,EAAAwP,IAKI,MAAA7U,GACJ2U,GAAA,EAAAtP,EAAAwP,GACA7U,GAAAuN,QAAAoH,IAAA3U,GAEA6U,EAAAS,EAAAK,OAOA,MAJAR,IACAvY,EAAA,OAAAiK,YAAAsO,EAAA,wCAEAvY,EAAA,OAAAiK,YAAA,oDACAzD,EAxIA,OAAAvN,GAAA,EAAeA,EAAA+U,EAAAtR,OAAkBzD,IACjC,IAEA,GAAA4P,GAAAmF,EAAA/U,GAEA0e,EAAA,YAAA9O,EAAAtP,KAAA,mBACAsP,EAAAwH,KAAA,IACAjK,QAAA,0BAA8B,OAC9B,YACAyC,EAAAuQ,iBAAAC,iBAAA,OAEA7I,EAAA,GAAAvC,WACAuC,GAAAC,UAAA1B,EAAAjN,KAAA9F,KAAAgS,EAAA/U,MAEAuX,EAAAE,kBAAA1C,EAAA/U,IACG,MAAAmK,GAEH,GAAAkN,GAAA,OAAArX,EAAA,iCACA+G,GAAA,OAAAuQ,UAAA,SAAAD,EAAA,YACAK,QAAAC,MAAA,SAAAN,EAAAlN,KAsJA6R,EAAAgC,kBAAA,SAAA1K,GAEA,GAAA+M,GAAA/d,OAAAyN,UACAuQ,GAAA,CAOA,IANAhN,EAAApJ,QAAA,SAAA9J,EAAAJ,GACAqgB,EAAAjgB,EAAAsL,IACA2U,EAAAjgB,EAAAsL,EACA4U,EAAAtgB,KAGA,GAAAsgB,EAAA,CAEA,GAAA7U,GAAA6H,EAAAgN,GAAA7U,CACA,IAAAwQ,EAAA,IAAArU,MAAA7B,SAAAwa,MAAA,KACA,GAAAC,GAAAvE,EAAA,IAAArU,MAAA6Y,KAAApd,UAAA,SAAA8G,EAAAnK,GAAwD,MAAAmK,GAAAuB,IAAA4H,EAAAgN,GAAA5U,GACxDD,GAAAwQ,EAAA,IAAArU,MAAA6Y,KAAAD,GAAA/U,EAGAwQ,EAAA,IAAAhU,KAAAyY,kBAAAjV,EAEA,IAAA1B,GAAA,GAAA4S,GAAA,EAAAV,EAAA,IAAAhU,KAAA0Y,sBACA1E,GAAA,IAAApU,OAAAiC,aAAAC,GAEAkS,EAAA,IAAA9M,KAAAyR,IAAA3E,EAAA,IAAA5X,IAAAM,KAAAJ,EAAA+O,EAAAgN,GAAA7U,EAAA6H,EAAAgN,GAAA5U,GAIA,MAFA3E,GAAA,OAAAiK,YAAA,kBAAAiL,EAAA,IAAA9M,KAAA0E,KAAApQ,OAAA,iBAEAwY,EAAA,IAAApU,OAAA5D,WAQAgY,EAAA,IAAAhU,KAAA0Y,oBAAA,WAEA,GAAAE,GAAA9Z,EAAA,OAAAoJ,YAAAnC,UAAA,gBACA8S,EAAA/Z,EAAA,OAAAoJ,YAAAnC,UAAA,iBACA+S,EAAAha,EAAA,OAAAoJ,YAAAnC,UAAA,UACAgT,EAAA/E,EAAA,IAAArU,MAAA7B,SAAAwa,KAAA,GAEAM,QAAA,EAAAG,EACAF,OAAAE,EACAD,OAAApE,EAAA,EAAAnM,MAEAzJ,EAAA,OAAAoJ,YAAA4L,cAAA,eAAA8E,GACA9Z,EAAA,OAAAoJ,YAAA4L,cAAA,gBAAA+E,GACA/Z,EAAA,OAAAoJ,YAAA4L,cAAA,SAAAgF,EAEA,IAAAxQ,GAAAxJ,EAAA,OAAAoJ,YAAAxI,cAAA,UACAsZ,EAAA,GAAAtE,GAAA,EAAAV,EAAA,IAAArU,MAAA2F,MAAA2T,iBAAA3Q,EACAuQ,EAAAD,EAAAE,EAGA,OADAha,GAAA,OAAAiK,YAAA,4CACAiQ,GASAhF,EAAA,IAAAhU,KAAAyY,kBAAA,SAAAnB,GACAxY,EAAA,OAAAoJ,YAAA4L,cAAA,SACA,IAAApS,KAAAC,MAAA2V,EAAA,OASAtD,EAAA,IAAAhU,KAAAkZ,MAAA,WAoBA,MAAAxhB,GAAA,iCAUAsc,EAAA,IAAAhU,KAAAmZ,UAAA,WACA,MAAAjF,GAAA,UAAAkF,iBL67CM,SAAUthB,EAAQuB,EAAqB3B,GAE7C,YACqB,IACI2hB,IAD4D3hB,EAAoB,IACvBA,EAAoB,KAC7E4hB,EAA8D5hB,EAAoB,IAClF6hB,EAAkE7hB,EAAoB,IACtF8hB,EAAyD9hB,EAAoB,GAErEA,GAAoBU,EAAEiB,EAAqB,IAAK,WAAa,MAAOggB,GAA0D,IAC9H3hB,EAAoBU,EAAEiB,EAAqB,IAAK,WAAa,MAAOigB,GAA+D,IACnI5hB,EAAoBU,EAAEiB,EAAqB,IAAK,WAAa,MAAOkgB,GAAmE,IACvI7hB,EAAoBU,EAAEiB,EAAqB,IAAK,WAAa,MAAOmgB,GAA0D,KAWzJ,SAAU1hB,EAAQuB,EAAqB3B,GAE7C,YACqB,IAAI+hB,GAAmD/hB,EAAoB,IACvEgiB,EAAoDhiB,EAAoB,IACxEiiB,EAA0DjiB,EAAoB,IAC9EkiB,EAA8DliB,EAAoB,IAClFmiB,EAAgEniB,EAAoB,GAC5EA,GAAoBU,EAAEiB,EAAqB,IAAK,WAAa,MAAOogB,GAAoD,IACxH/hB,EAAoBU,EAAEiB,EAAqB,IAAK,WAAa,MAAOqgB,GAAqD,IACzHhiB,EAAoBU,EAAEiB,EAAqB,IAAK,WAAa,MAAOsgB,GAA2D,IAC/HjiB,EAAoBU,EAAEiB,EAAqB,IAAK,WAAa,MAAOugB,GAA+D,IACnIliB,EAAoBU,EAAEiB,EAAqB,IAAK,WAAa,MAAOwgB,GAAiE,KA6FhK,SAAU/hB,EAAQuB,EAAqB3B,GAE7C,YACAc,QAAOC,eAAeY,EAAqB,cAAgBC,OAAO,GAC7C,IAAIwgB,GAAkDpiB,EAAoB,IAEtEqiB,GAD0DriB,EAAoBmB,EAAEihB,GAC/BpiB,EAAoB,KAErEsiB,GADyDtiB,EAAoBmB,EAAEkhB,GAC1BriB,EAAoB,GACrBA,GAAoB,GAClBA,EAAoB,EAClEA,GAAoBU,EAAEiB,EAAqB,OAAQ,WAAa,MAAO2gB,GAA4D,UM1lEpKvZ,OAAAC,iBAAA,4BAAAuZ,GACAzhB,OAAAwhB,EAAA,qBNwmEM,SAAUliB,EAAQuB,EAAqB3B,GAE7C,YOtmEA,SAAAwiB,GAAAja,GAEA,GAAAka,GAAAla,EAAApE,YAAA,QACAue,EAAA/c,SAAAC,eAAA6c,EAEA,KAAAC,EAAA,CACA,GAAA/G,GAAAhW,SAAAmW,cAAA,MACAH,GAAAhU,GAAA8a,EACA9G,EAAAgH,UAAA,UACAD,EAAAna,EAAAxC,QAAA4D,WAAAoS,aAAAJ,EAAApT,EAAAxC,SAGA,GAAAyB,GAAAe,EAAAnE,WAEAwU,EAAA,GAAAxR,GAAA,KACAqb,EAAA,eACA,oBACAjb,EAAA,oBACAob,iBAAA,aACApJ,EAAA,GAAApS,GAAA,KACAqb,EAAA,eACA,mBACAjb,EAAA,oBACAob,iBAAA,aACAhJ,EAAA,GAAAxS,GAAA,KACAqb,EAAA,eACA,0BACAjb,EAAA,oBACAob,iBAAA,cACA/H,EAAA,GAAAzT,GAAA,KACAqb,EAAA,gBACA,yBACAjb,EAAA,qBACAob,iBAAA,eAGAC,EAAAld,SAAAmW,cAAA,OACAgH,EAAA,CACA,IAAAre,IAAAwD,MAAAlC,UAAAwC,EAAAxC,QAAA,CAEA,GAAAkP,GAAA,GAAA7N,GAAA,KACAqb,EAAA,YACA,qBACAjb,EAAA,gBACA8N,EAAA,GAAAlO,GAAA,KACAqb,EAAA,cACA,sBACAjb,EAAA,mBACAob,iBAAA,kBACA1M,EAAA,GAAA9O,GAAA,KACAqb,EAAA,cACA,sBACAjb,EAAA,kBACAqb,GAAAha,UAAA,0BACAzB,EAAA,KAAA2b,gBAAAxa,IAAAua,EAAA,WACA,0BACA7N,EAAA+N,iBACA5b,EAAA,OAAAgH,KAAA6U,UACA3N,EAAA4N,UACAhN,EAAA8M,iBACA,YAGA,IAAA/K,GAAA,GAAA7Q,GAAA,KACAqb,EAAA,eACA,wBACAjb,EAAA,oBACA4Q,EAAA,GAAAhR,GAAA,KACAqb,EAAA,eACA,yBACAjb,EAAA,mBAEAqb,GAAAha,WAAA,2CACAzB,EAAA,KAAA2b,gBAAAxa,IAAAua,EAAA,UACA,0BACA1b,EAAA,OAAAW,OAAAkb,UACAhL,EAAAkL,aACA/K,EAAA+K,aACA,YAGA,IAAA7K,GAAA,GAAAlR,GAAA,KACAqb,EAAA,qBACA,WACAjb,EAAA,0BACAgR,EAAA,GAAApR,GAAA,KACAqb,EAAA,mBACA,0BACAjb,EAAA,uBACAqb,GAAAha,WAAA,8CACAzB,EAAA,KAAA2b,gBAAAxa,IAAAua,EAAA,aACA,0BACAxK,EAAA6K,aACA3K,EAAA2K,aACA/b,EAAA,OAAAgc,UAAAH,UACA,YAEA,IAAAxK,GAAA9S,SAAAC,eAAA,aACAyd,EAAA1d,SAAAmW,cAAA,MACAuH,GAAAxa,UAAA,2HAEA4P,EAAA6K,YAAAD,EACA1d,UAAAC,eAAA,mBAEAhE,MAAA2hB,EAAA,EACA7F,gBAGAmF,EAAAha,WAAA,yCACAzB,EAAA,KAAA2b,gBAAAxa,IAAAua,EAAA,WACA,uCACAva,EAAApE,YAAA,iCAIA0e,EAAAha,WAAA,6CACAzB,EAAA,KAAA2b,gBAAAxa,IAAAua,EAAA,YACA,0BACAlK,EAAAsK,QAAA,UACA1J,EAAA0J,QAAA,UACAtJ,EAAAsJ,QAAA,UACA,aAIAR,EAAAY,YAAAT,GAEAld,SAAAC,eAAAqP,EAAApP,QAAAmD,iBACA,SAAAT,EAAA0M,YAAA/L,KAAAX,IAAA,GACA5C,SAAAC,eAAAsQ,EAAArQ,QAAAmD,iBACA,SAAAT,EAAA2N,eAAAhN,KAAAX,IAAA,OAEK,CACLua,GAAA,GAEA,IAAAU,GAAA7d,SAAAmW,cAAA,KACA0H,GAAAb,UAAA,aACAa,EAAA3a,UAAA,GACA+P,EAAAsK,QAAA,WACA1J,EAAA0J,QAAA,WACAtJ,EAAAsJ,QAAA,WACArI,EAAAqI,QAAA,UACAvd,UAAAC,eAAA,iBACA0d,YAAAE,EAGA,IAAAC,GAAA9d,SAAAmW,cAAA,KACA2H,GAAAd,UAAA,aACAc,EAAA5a,UAAA,gBAAAN,EAAApE,YACA,sBACAwB,UAAAC,eAAA,aACA0d,YAAAG,GAGAZ,EAAAha,UACA,0BACAzB,EAAA,KAAA2b,gBAAAxa,IAAAua,EAAA,0BACA,wDAEA1b,EAAA,OAAAoJ,YAAAyS,UACA,2DAMA,IAAAS,GAAA,GAAAtc,GAAA,KACAqb,EAAA,aACA,yBACA,kBACAkB,cAAA,yBACAC,EAAA,GAAAxc,GAAA,KACAqb,EAAA,aACA,sBACA,sBACAkB,cAAA,wBAGAd,GAAAha,WAAA,0BACAzB,EAAA,KAAA2b,gBAAAxa,IAAAua,EAAA,QACA,+CACAY,EAAAG,kBACAD,EAAAE,eACA,aAGApB,EAAAY,YAAAT,IP66DA/hB,OAAOC,eAAeY,EAAqB,cAAgBC,OAAO,IACjCD,EAA6B,QAAI6gB,CAC7C,IAAIpb,GAA8CpH,EAAoB,GAClEujB,EAAwDvjB,EAAoB,IA4M/F,SAAUI,EAAQuB,EAAqB3B,GAE7C,YACAc,QAAOC,eAAeY,EAAqB,cAAgBC,OAAO,IQp0ElE5B,EAAAU,EAAAiB,EAAA,6BAAA8f,IAUA,IAAAA,IACA9gB,KAAA,gBACA8b,QAAA,YACAnP,KAAA,gBAAkB,GAAAqH,OAAAoP,cAAA,qBAClBC,IAAA,+BAUAvC,GAAAC,aAAA,WACA,MAAAD,GAAA9gB,KAAA,KAAA8gB,EAAAhF,QAAA,QACAgF,EAAAnU,KAAA,SACAmU,EAAAwC,gBAAA,SACAxC,EAAAyC,eAAA,SACAzC,EAAA0C,eAWA1C,EAAAwC,cAAA,SAAA3W,GAEA,MADAA,MAAAmU,EAAAuC,IACA,mCAAAvC,EAAAuC,IAAA,2BACA1W,EAAA,QAWAmU,EAAAyC,aAAA,SAAAvjB,GAEA,uFADAA,KAAA,SAEA,YAWA8gB,EAAA0C,YAAA,SAAAxjB,GACA,GAAAqjB,GAAA,iCAEA,OADArjB,MAAA,UAAAqjB,EACA,mCAAAA,EAAA,2BACArjB,EAAA,aR40EM,SAAUP,EAAQuB,EAAqB3B,GAE7C,YS54EA,SAAAwP,MT64EA1O,OAAOC,eAAeY,EAAqB,cAAgBC,OAAO,IACjCD,EAA6B,QAAI6N,CAC7C,IAAIpI,GAA8CpH,EAAoB,GAClEokB,EAAoDpkB,EAAoB,GACxEqkB,EAA0DrkB,EAAoB,ESh5EvGokB,GAAA,IAAA5U,OAkBA4U,EAAA,IAAA5U,KAAA0E,QASA1E,EAAAC,mBAAA,SAAA6U,GACAld,EAAA,OAAAiK,YAAA,oDACA,IAAAlQ,GAAAijB,EAAA,IAAA1f,IAAAkC,aAAAlD,UAAA,SAAA8G,GAAuD,MAAAA,GAAAhE,MAAA8d,EAAA3jB,OACvDmL,EAAAwY,EAAAzQ,KACA9H,EAAAuY,EAAAC,KAGAnD,EAAAha,EAAA,OAAAoJ,YAAAnC,UAAA,UACAmW,EAAApD,GAAAiD,EAAA,EAAAxT,KACA,KAAA1P,IAAAijB,EAAA,IAAA1f,IAAAO,KAAAL,GAAAzD,IAAAijB,EAAA,IAAA1f,IAAAU,KAAAR,GAAAzD,IAAAijB,EAAA,IAAA1f,IAAAW,KAAAT,IACA4f,EAAAH,EAAA,EAAAxT,MAAA,CACA2T,EAAAH,EAAA,EAAAxT,MACAzJ,EAAA,OAAAoJ,YAAA4L,cAAA,SAAAoI,EAKA,QAFAC,GAAArd,EAAA,OAAAoJ,YAAAkU,aAAA,UACAC,EAAA7jB,OAAA8jB,KAAAH,GAAAzK,KAAA,SAAAC,EAAAC,GAAiE,MAAAD,GAAAC,IACjE7Z,EAAA,EAAuBA,EAAAskB,EAAA7gB,OAAuBzD,IAC9C,GAAAmkB,IAAAG,EAAAtkB,GAAA,CACA,GAAAwkB,GAAAzd,EAAA,OAAAoJ,YAAAsU,aAAA,SAAAH,EAAAtkB,GACA+G,GAAA,OAAAoJ,YAAA9I,QAAA,SAAAmd,EACA,QAMAT,EAAA,IAAA9b,KAAAyY,kBAAAjV,EACA,IAAA1B,GAAA,GAAAia,GAAA,EAAAD,EAAA,IAAA9b,KAAA0Y,sBACAoD,GAAA,IAAAlc,OAAAiC,aAAAC,GAGAga,EAAA,IAAAlc,OAAA/B,MAAAkO,MAAA,WAAsC+P,EAAA,IAAAlc,OAAAuC,OAAA2Z,EAAA,IAAAlc,OAAA5D,UAAAnD,KAEtCijB,EAAA,IAAA5U,KAAAyR,IAAA9f,EAAA2K,EAAAC,GAEAqY,EAAA,IAAA5U,KAAAgI,eAUAhI,EAAAI,sBAAA,SAAA0U,GAEA,GAAAnjB,GAAAijB,EAAA,IAAA1f,IAAAkC,aAAAlD,UAAA,SAAA8G,GAAuD,MAAAA,GAAAhE,MAAA8d,EAAA3jB,OACvDmL,EAAAwY,EAAAzQ,KACAxT,EAAA+jB,EAAA,IAAA5U,KAAA0E,KAAAxQ,UAAA,SAAAjC,GACA,MAAAA,GAAAN,OAAAM,EAAAqK,OACA,WAAArK,IACAA,EAAA2S,QAAAjT,OAAAM,EAAA2S,QAAAtI,OACA,IAAAzL,GAAA+jB,EAAA,IAAA5U,KAAA0E,KAAA6Q,OAAA1kB,EAAA,GAEAmP,EAAA+H,SAEA/H,EAAAgI,eAcAhI,EAAAyR,IAAA,SAAA9f,EAAA2K,EAAAC,GA+DA,QAAAiZ,GAAAlE,EAAAhV,EAAAmZ,EAAAlZ,EAAA5K,EAAA2Z,EAAAoK,EAAAC,EAAAX,GACA,GAAA1D,EAAA,CAIA,IAHA,GAAAsE,GAAA,EACAC,EAAA,EACAhlB,EAAA+G,EAAA,aAAA0E,EAAAgV,EAAA,SAAAtW,GAAuD,MAAAA,GAAAsB,IACzCzL,EAAAygB,EAAAhd,QAAAgd,EAAAzgB,GAAAyL,EAAAmZ,EAAoC5kB,IAClDglB,GAAAvE,EAAAzgB,GAAA0L,IACAqZ,EAAAtE,EAAAzgB,GAAAyL,EACAuZ,EAAAvE,EAAAzgB,GAAA0L,EAGAsZ,KAAAtZ,GACAD,EAAAsZ,EACAta,EAAA,eACAqJ,EAAA/M,EAAA,IAAA0E,EAAAhB,GAAA,OACAsZ,EAAA,IAAA1f,IAAAkC,aAAAzF,GAAAgT,MAAA3G,QAAA,KAAApG,EAAA,IAAA2E,IACAqY,EAAA,IAAA5U,KAAA0E,KAAA/M,MAAiCgN,QAAAvL,OAAA,EACjCmS,OAAA,EAAA5Z,IAAA2K,IAAAC,IACAmZ,YAAAC,aAAAX,YACApQ,QAAA0G,KAEAsJ,EAAA,IAAA5U,KAAA0E,KAAA/M,KAAA2T,IAlFAsJ,EAAA,IAAA5U,KAAA0E,KAAA3J,QAAA,SAAAC,GAAsCA,EAAAuQ,OAAA,GAEtC,IAiBAD,GAjBAhQ,EAAA3J,IAAAijB,EAAA,IAAA1f,IAAAO,KAAAL,GAAAzD,IAAAijB,EAAA,IAAA1f,IAAAM,KAAAJ,EAAA,0BACAuP,EAAA/M,EAAA,IAAA0E,EAAAhB,GAAA,OACAsZ,EAAA,IAAA1f,IAAAkC,aAAAzF,GAAAgT,MAAA3G,QAAA,KAAApG,EAAA,IAAA2E,IAEAuZ,EAAA3f,SAAAC,eAAA,mBACA2f,EAAA5f,SAAAC,eAAA,oBACA4f,EAAA7f,SAAAC,eAAA,mBACA4e,EAAAgB,KAAA5jB,MAAAyiB,EAAA,EAAAxT,MACAqU,EAAAI,KAAA1jB,MAAA,EACAujB,EAAAI,KAAA3jB,MAAA,EAGAvB,EAAA+jB,EAAA,IAAA5U,KAAA0E,KAAAxQ,UAAA,SAAAjC,GACA,MAAAA,GAAAN,OAAAM,EAAAqK,OACA,WAAArK,IACAA,EAAA2S,QAAAjT,OAAAM,EAAA2S,QAAAtI,OAwCA,OArCA,IAAAzL,GACAya,EAAAsJ,EAAA,IAAA5U,KAAA0E,KAAA7T,GACAya,EAAAC,OAAA,EACAD,EAAAoK,YACApK,EAAAqK,aACArK,EAAA0J,cAGArjB,IAAAijB,EAAA,IAAA1f,IAAAS,KAAAP,GACAugB,EAAAnb,KAAAyb,IAAAN,EACAnb,KAAAC,MAAA6B,EAAA0Y,GAAAxa,KAAAC,OAAA6B,EAAAC,GAAAyY,IACApd,EAAA,OAAAoJ,YAAA9I,QAAA,gBAAAyd,IACShkB,IAAAijB,EAAA,IAAA1f,IAAAQ,KAAAN,IACTsgB,EAAAlb,KAAAyb,IAAAP,EACAlb,KAAAC,OAAA6B,EAAAC,GAAAyY,IAAAxa,KAAAC,MAAA6B,EAAA0Y,GACApd,EAAA,OAAAoJ,YAAA9I,QAAA,eAAAwd,IAGApK,GAAgB3G,QAAAvL,OAAA,EAChBmS,OAAA,EAAA5Z,IAAA2K,IAAAC,IACAmZ,YAAAC,aAAAX,aACArjB,IAAAijB,EAAA,IAAA1f,IAAAM,KAAAJ,EACAogB,EAAAZ,EAAA,IAAAlc,OAAA4Y,KAAAhV,IAAAsY,EAAA,IAAAnc,MAAA7B,SAAAwa,KAAA7U,EACAqY,EAAA,IAAA1f,IAAAC,KAAAC,EAAAkW,EAAAoK,EAAAC,EAAAX,GACSrjB,IAAAijB,EAAA,IAAA1f,IAAAU,KAAAR,EACTogB,EAAAZ,EAAA,IAAAlc,OAAA0F,KAAA9B,IAAAuY,EAAA,EAAAxT,MAAA9E,EACAqY,EAAA,IAAA1f,IAAAS,KAAAP,EAAAkW,EAAAoK,EAAAC,EAAAX,GAEAJ,EAAA,IAAA5U,KAAA0E,KAAA/M,KAAA2T,GAGAsJ,EAAA,IAAA5U,KAAA0E,KAAA8F,KACA,SAAAC,EAAAC,GAAgC,MAAAD,GAAAnO,EAAAoO,EAAApO,IAChCzL,EAAA+jB,EAAA,IAAA5U,KAAA0E,KAAAxQ,UACA,SAAAjC,GAA4B,MAAAA,GAAAN,OAAAM,EAAAqK,SAE5B0D,EAAA+H,SACAlX,GAkCAmP,EAAA+H,OAAA,WAGA,IAFA,GAAAmO,GAAA/f,SAAAC,eAAAwe,EAAA,IAAAlI,UAAA,SAEAwJ,EAAA1J,YACA0J,EAAA7J,YAAA6J,EAAA1J,WAGAoI,GAAA,IAAA5U,KAAA0E,KAAA3J,QAAA,SAAAC,EAAAnK,GACA,GAAAsb,GAAAhW,SAAAmW,cAAA,OACAf,EAAAvQ,EAAAuQ,MAAA,uBACAnS,EAAA4B,EAAA5B,MAAA,sBACA+S,GAAAgH,UAAA,UACAhH,EAAA9S,UACA,iCAAA2B,EAAAsB,EAAA,kBAAAzL,EAAA,KAAAuI,EACA,8CAAAvI,EAAA,2BACAA,EAAA,iEACAA,EAAA,KAAA0a,EACA,iCAAA1a,EAAA,2BACAA,EAAA,KAAAmK,EAAA2J,MAAA,WACAuR,EAAApC,YAAA3H,MAUAnM,EAAAmW,SAAA,SAAAtlB,GACA+jB,EAAA,IAAA5U,KAAA0E,KAAA6Q,OAAA1kB,EAAA,GACAmP,EAAA+H,SACA/H,EAAAgI,eASAhI,EAAAoW,WAAA,SAAAvlB,GAEA+jB,EAAA,IAAA5U,KAAA0E,KAAA3J,QAAA,SAAAC,GAAsCA,EAAAuQ,OAAA,GACtC,IAAAD,GAAAsJ,EAAA,IAAA5U,KAAA0E,KAAA7T,EACAya,GAAAC,OAAA,EAEAqJ,EAAA,IAAA9b,KAAAyY,kBAAAjG,EAAAhP,GACA1E,EAAA,OAAAoJ,YAAA9I,QAAA,eAAAoT,EAAAoK,WAEA9d,EAAA,OAAAoJ,YAAA9I,QAAA,gBAAAoT,EAAAqK,YACA/d,EAAA,OAAAoJ,YAAA9I,QAAA,SACAN,EAAA,OAAAoJ,YAAAsU,aAAA,SAAAhK,EAAA0J,WACA,IAAArjB,GAAA2Z,EAAA1G,QAAA0G,EAAA1G,QAAAjT,EAAA2Z,EAAA3Z,EACAiJ,EAAA,GAAAia,GAAA,EAAAD,EAAA,IAAA9b,KAAA0Y,sBACAoD,GAAA,IAAAlc,OAAAiC,aAAAC,GAEAga,EAAA,IAAAlc,OAAAuC,OAAA2Z,EAAA,IAAAlc,OAAA5D,UAAAnD,GAEAqO,EAAAgI,eAKAhI,EAAAgI,YAAA,WACA4M,EAAA,IAAAnc,MAAAyL,cACA0Q,EAAA,IAAAlc,OAAAwL,cAEAtM,EAAA,WAAAye,qBACAze,EAAA,gCTk6EM,SAAUhH,EAAQuB,EAAqB3B,GAE7C,YU1qFA,SAAA8lB,MAuBA,QAAAC,KACAC,aAAAvhB,IAAA0X,OACA1X,IAAA0X,MAAA8J,WAAA,WACA7e,EAAA,OAAA2V,gBAAA,yDAEA,IAAA1c,GAAAoE,IAAA+K,KAAA0E,KAAAxQ,UAAA,SAAA8G,GAAwD,WAAAA,EAAAuQ,QACxDD,EAAArW,IAAA+K,KAAA0E,KAAA7T,EACAya,GAAAoK,UAAA9d,EAAA,OAAAoJ,YAAAnC,UAAA,gBACAyM,EAAAqK,WAAA/d,EAAA,OAAAoJ,YAAAnC,UAAA,iBACAyM,EAAA0J,UAAApd,EAAA,OAAAoJ,YAAAnC,UAAA,UACAyM,EAAA0J,UAAA1J,EAAA0J,UAAA1J,EAAA0J,UAAAH,EAAA,EAAAxT,MACAzJ,EAAA,OAAAoJ,YAAA4L,cAAA,SAAAtB,EAAA0J,UAGA,IAAApa,GAAA,GAAAia,GAAA,EAAA5f,IAAA6D,KAAA0Y,sBACAvc,KAAAyD,OAAAiC,aAAAC,GAEA8b,EAAA,QAAA3kB,UAAAkJ,OAAAlK,KAAAkE,IAAAyD,OAAAzD,IAAAyD,OAAA5D,YACS,KVkoFTxD,OAAOC,eAAeY,EAAqB,cAAgBC,OAAO,IACjCD,EAA6B,QAAImkB,CAC7C,IAAI1e,GAA8CpH,EAAoB,GAClEkmB,EAAkElmB,EAAoB,GACtFqkB,EAA0DrkB,EAAoB,EU7qFvG8lB,GAAAzhB,OAAA,WACA,GACA5D,GAAA,GAAA2G,GAAA,OADA,cAGA3G,GACAE,KAAA,WAAAwT,MAAA,eACAgS,OAAA,mDAAwEJ,GACxEI,OAAA,kDAAyEJ,GACzEplB,KAAA,UAAAylB,SAAA,UACAC,OAAA5lB,EAAA6lB,IAAA,qCAAAP,GACAM,OAAA5lB,EAAA6lB,IAAA,yCAAAP,GACAM,OAAA5lB,EAAA6lB,IAAA,qCAAAP,GACAM,OAAA5lB,EAAA6lB,IAAA,wCAAAP,GACAM,OAAA5lB,EAAA6lB,IAAA,2CAAAP,GACAM,OAAA5lB,EAAA6lB,IAAA,uCAAAP,GACAM,OAAA5lB,EAAA6lB,IAAA,2CAAAP,GACAQ,WVstFM,SAAUnmB,EAAQD,GWjsFxB,QAAAqmB,GAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAA,OACAG,EAAAH,EAAA,EACA,KAAAG,EACA,MAAAD,EAGA,IAAAD,GAAA,kBAAAG,MAAA,CACA,GAAAC,GAAAC,EAAAH,EAKA,QAAAD,GAAAzH,OAJA0H,EAAAI,QAAAC,IAAA,SAAAC,GACA,uBAAAN,EAAAO,WAAAD,EAAA,SAGAhI,QAAA4H,IAAAnN,KAAA,MAGA,OAAAgN,GAAAhN,KAAA,MAIA,QAAAoN,GAAAK,GAKA,yEAHAP,KAAAQ,SAAAC,mBAAAxR,KAAAC,UAAAqR,MAGA,MArEAhnB,EAAAD,QAAA,SAAAumB,GACA,GAAA7iB,KAwCA,OArCAA,GAAA0S,SAAA,WACA,MAAAnT,MAAA6jB,IAAA,SAAAR,GACA,GAAAE,GAAAH,EAAAC,EAAAC,EACA,OAAAD,GAAA,GACA,UAAAA,EAAA,OAAmCE,EAAA,IAEnCA,IAEGhN,KAAA,KAIH9V,EAAAxD,EAAA,SAAAN,EAAAwnB,GACA,gBAAAxnB,KACAA,IAAA,KAAAA,EAAA,KAEA,QADAynB,MACAnnB,EAAA,EAAgBA,EAAA+C,KAAAU,OAAiBzD,IAAA,CACjC,GAAAsH,GAAAvE,KAAA/C,GAAA,EACA,iBAAAsH,KACA6f,EAAA7f,IAAA,GAEA,IAAAtH,EAAA,EAAYA,EAAAN,EAAA+D,OAAoBzD,IAAA,CAChC,GAAAomB,GAAA1mB,EAAAM,EAKA,iBAAAomB,GAAA,IAAAe,EAAAf,EAAA,MACAc,IAAAd,EAAA,GACAA,EAAA,GAAAc,EACKA,IACLd,EAAA,OAAAA,EAAA,aAAAc,EAAA,KAEA1jB,EAAAsD,KAAAsf,MAIA5iB,IXsxFM,SAAUzD,EAAQD,EAASH,GY1tFjC,QAAAynB,GAAAC,EAAAjD,GACA,OAAApkB,GAAA,EAAgBA,EAAAqnB,EAAA5jB,OAAmBzD,IAAA,CACnC,GAAAomB,GAAAiB,EAAArnB,GACAsnB,EAAAC,EAAAnB,EAAA9e,GAEA,IAAAggB,EAAA,CACAA,EAAAE,MAEA,QAAAthB,GAAA,EAAiBA,EAAAohB,EAAAG,MAAAhkB,OAA2ByC,IAC5CohB,EAAAG,MAAAvhB,GAAAkgB,EAAAqB,MAAAvhB,GAGA,MAAQA,EAAAkgB,EAAAqB,MAAAhkB,OAAuByC,IAC/BohB,EAAAG,MAAA3gB,KAAA4gB,EAAAtB,EAAAqB,MAAAvhB,GAAAke,QAEG,CAGH,OAFAqD,MAEAvhB,EAAA,EAAiBA,EAAAkgB,EAAAqB,MAAAhkB,OAAuByC,IACxCuhB,EAAA3gB,KAAA4gB,EAAAtB,EAAAqB,MAAAvhB,GAAAke,GAGAmD,GAAAnB,EAAA9e,KAA2BA,GAAA8e,EAAA9e,GAAAkgB,KAAA,EAAAC,WAK3B,QAAAE,GAAAnkB,EAAA4gB,GAIA,OAHAiD,MACAO,KAEA5nB,EAAA,EAAgBA,EAAAwD,EAAAC,OAAiBzD,IAAA,CACjC,GAAAomB,GAAA5iB,EAAAxD,GACAsH,EAAA8c,EAAAyD,KAAAzB,EAAA,GAAAhC,EAAAyD,KAAAzB,EAAA,GACA0B,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,GACAW,EAAAX,EAAA,GACA4B,GAAcF,MAAAC,QAAAhB,YAEda,GAAAtgB,GACAsgB,EAAAtgB,GAAAmgB,MAAA3gB,KAAAkhB,GADAX,EAAAvgB,KAAA8gB,EAAAtgB,IAAkDA,KAAAmgB,OAAAO,KAIlD,MAAAX,GAGA,QAAAY,GAAA7D,EAAA1a,GACA,GAAA/G,GAAAulB,EAAA9D,EAAA+D,WAEA,KAAAxlB,EACA,SAAAylB,OAAA,8GAGA,IAAAC,GAAAC,IAAA7kB,OAAA,EAEA,YAAA2gB,EAAAmE,SACAF,EAEGA,EAAAG,YACH7lB,EAAA+Y,aAAAhS,EAAA2e,EAAAG,aAEA7lB,EAAAsgB,YAAAvZ,GAJA/G,EAAA+Y,aAAAhS,EAAA/G,EAAAgZ,YAMA2M,EAAAxhB,KAAA4C,OACE,eAAA0a,EAAAmE,SACF5lB,EAAAsgB,YAAAvZ,OACE,oBAAA0a,GAAAmE,WAAAnE,EAAAmE,SAAAE,OAIF,SAAAL,OAAA,6LAHA,IAAAI,GAAAN,EAAA9D,EAAA+D,WAAA,IAAA/D,EAAAmE,SAAAE,OACA9lB,GAAA+Y,aAAAhS,EAAA8e,IAMA,QAAAE,GAAAhf,GACA,UAAAA,EAAAJ,WAAA,QACAI,GAAAJ,WAAAkS,YAAA9R,EAEA,IAAA6B,GAAA+c,EAAA5lB,QAAAgH,EACA6B,IAAA,GACA+c,EAAA5D,OAAAnZ,EAAA,GAIA,QAAAod,GAAAvE,GACA,GAAA1a,GAAApE,SAAAmW,cAAA,QAOA,OALA2I,GAAAwE,MAAA1P,KAAA,WAEA2P,EAAAnf,EAAA0a,EAAAwE,OACAX,EAAA7D,EAAA1a,GAEAA,EAGA,QAAAof,GAAA1E,GACA,GAAA2E,GAAAzjB,SAAAmW,cAAA,OAQA,OANA2I,GAAAwE,MAAA1P,KAAA,WACAkL,EAAAwE,MAAAI,IAAA,aAEAH,EAAAE,EAAA3E,EAAAwE,OACAX,EAAA7D,EAAA2E,GAEAA,EAGA,QAAAF,GAAAI,EAAAL,GACAnoB,OAAA8jB,KAAAqE,GAAA1e,QAAA,SAAA/D,GACA8iB,EAAAC,aAAA/iB,EAAAyiB,EAAAziB,MAIA,QAAAuhB,GAAAzR,EAAAmO,GACA,GAAA1a,GAAAU,EAAA+e,EAAA7S,CAGA,IAAA8N,EAAAgF,WAAAnT,EAAA6R,IAAA,CAGA,KAFAxR,EAAA8N,EAAAgF,UAAAnT,EAAA6R,MASA,mBAJA7R,GAAA6R,IAAAxR,EAUA,GAAA8N,EAAAiF,UAAA,CACA,GAAAC,GAAAC,GAEA7f,GAAA2f,MAAAV,EAAAvE,IAEAha,EAAAof,EAAA3gB,KAAA,KAAAa,EAAA4f,GAAA,GACAH,EAAAK,EAAA3gB,KAAA,KAAAa,EAAA4f,GAAA,OAGArT,GAAA8Q,WACA,kBAAA/L,MACA,kBAAAA,KAAAC,iBACA,kBAAAD,KAAAyO,iBACA,kBAAAxQ,OACA,kBAAAuN,OAEA9c,EAAAof,EAAA1E,GACAha,EAAAsf,EAAA7gB,KAAA,KAAAa,EAAA0a,GACA+E,EAAA,WACAT,EAAAhf,GAEAA,EAAAqR,MAAAC,IAAAyO,gBAAA/f,EAAAqR,SAGArR,EAAAif,EAAAvE,GACAha,EAAAuf,EAAA9gB,KAAA,KAAAa,GACAyf,EAAA,WACAT,EAAAhf,IAMA,OAFAU,GAAA6L,GAEA,SAAA2T,GACA,GAAAA,EAAA,CACA,GACAA,EAAA9B,MAAA7R,EAAA6R,KACA8B,EAAA7B,QAAA9R,EAAA8R,OACA6B,EAAA7C,YAAA9Q,EAAA8Q,UAEA,MAGA3c,GAAA6L,EAAA2T,OAEAT,MAeA,QAAAK,GAAA9f,EAAA9G,EAAAumB,EAAAlT,GACA,GAAA6R,GAAAqB,EAAA,GAAAlT,EAAA6R,GAEA,IAAApe,EAAAmgB,WACAngB,EAAAmgB,WAAAC,QAAAC,EAAAnnB,EAAAklB,OACE,CACF,GAAAkC,GAAA1kB,SAAA2kB,eAAAnC,GACAoC,EAAAxgB,EAAAwgB,UAEAA,GAAAtnB,IAAA8G,EAAA8R,YAAA0O,EAAAtnB,IAEAsnB,EAAAzmB,OACAiG,EAAAgS,aAAAsO,EAAAE,EAAAtnB,IAEA8G,EAAAuZ,YAAA+G,IAKA,QAAAL,GAAAjgB,EAAAuM,GACA,GAAA6R,GAAA7R,EAAA6R,IACAC,EAAA9R,EAAA8R,KAMA,IAJAA,GACAre,EAAAwf,aAAA,QAAAnB,GAGAre,EAAAmgB,WACAngB,EAAAmgB,WAAAC,QAAAhC,MACE,CACF,KAAApe,EAAAiS,YACAjS,EAAA8R,YAAA9R,EAAAiS,WAGAjS,GAAAuZ,YAAA3d,SAAA2kB,eAAAnC,KAIA,QAAA4B,GAAAX,EAAA3E,EAAAnO,GACA,GAAA6R,GAAA7R,EAAA6R,IACAf,EAAA9Q,EAAA8Q,UAQAoD,MAAAtnB,KAAAuhB,EAAAgG,uBAAArD,GAEA3C,EAAAgG,uBAAAD,KACArC,EAAAuC,EAAAvC,IAGAf,IAEAe,GAAA,uDAAuDtB,KAAAQ,SAAAC,mBAAAxR,KAAAC,UAAAqR,MAAA,MAGvD,IAAA/N,GAAA,GAAAC,OAAA6O,IAA6B5O,KAAA,aAE7BoR,EAAAvB,EAAAhO,IAEAgO,GAAAhO,KAAAC,IAAAC,gBAAAjC,GAEAsR,GAAAtP,IAAAyO,gBAAAa,GAvWA,GAAA/C,MAWAgD,EATA,SAAAC,GACA,GAAAC,EAEA,mBAEA,WADA,KAAAA,MAAAD,EAAA9T,MAAA3T,KAAAY,YACA8mB,IAIA,WAMA,MAAA/hB,SAAApD,mBAAAolB,MAAAhiB,OAAAkQ,OAGAsP,EAAA,SAAAsC,GACA,GAAAC,KAEA,iBAAAE,GACA,YAAAF,EAAAE,GAAA,CACA,GAAAC,GAAAJ,EAAAtqB,KAAA6C,KAAA4nB,EAEA,IAAAC,YAAAliB,QAAAmiB,kBACA,IAGAD,IAAAE,gBAAAC,KACK,MAAA5gB,GACLygB,EAAA,KAGAH,EAAAE,GAAAC,EAEA,MAAAH,GAAAE,KAEC,SAAAhoB,GACD,MAAA2C,UAAA0lB,cAAAroB,KAGA0mB,EAAA,KACAE,EAAA,EACAjB,KAEA+B,EAAA1qB,EAAA,GAEAI,GAAAD,QAAA,SAAA0D,EAAA4gB,GACA,sBAAA6G,eACA,gBAAA3lB,UAAA,SAAA8iB,OAAA,+DAGAhE,SAEAA,EAAAwE,MAAA,gBAAAxE,GAAAwE,MAAAxE,EAAAwE,SAIAxE,EAAAiF,WAAA,iBAAAjF,GAAAiF,YAAAjF,EAAAiF,UAAAkB,KAGAnG,EAAA+D,aAAA/D,EAAA+D,WAAA,QAGA/D,EAAAmE,WAAAnE,EAAAmE,SAAA,SAEA,IAAAlB,GAAAM,EAAAnkB,EAAA4gB,EAIA,OAFAgD,GAAAC,EAAAjD,GAEA,SAAA8G,GAGA,OAFAC,MAEAnrB,EAAA,EAAiBA,EAAAqnB,EAAA5jB,OAAmBzD,IAAA,CACpC,GAAAomB,GAAAiB,EAAArnB,GACAsnB,EAAAC,EAAAnB,EAAA9e,GAEAggB,GAAAE,OACA2D,EAAArkB,KAAAwgB,GAGA,GAAA4D,EAAA,CAEA9D,EADAO,EAAAuD,EAAA9G,GACAA,GAGA,OAAApkB,GAAA,EAAiBA,EAAAmrB,EAAA1nB,OAAsBzD,IAAA,CACvC,GAAAsnB,GAAA6D,EAAAnrB,EAEA,QAAAsnB,EAAAE,KAAA,CACA,OAAAthB,GAAA,EAAmBA,EAAAohB,EAAAG,MAAAhkB,OAA2ByC,IAAAohB,EAAAG,MAAAvhB,WAE9CqhB,GAAAD,EAAAhgB,OA6LA,IAAAyiB,GAAA,WACA,GAAAqB,KAEA,iBAAAxoB,EAAAyoB,GAGA,MAFAD,GAAAxoB,GAAAyoB,EAEAD,EAAArN,OAAAuN,SAAAhS,KAAA,WZi5FM,SAAUvZ,EAAQD,EAASH,GarrGjC,GAAA2mB,GAAA3mB,EAAA,GACA,iBAAA2mB,SAAAvmB,EAAAC,EAAAsmB,EAAA,KAEA,IAEAlC,IAAemH,KAAA,EACfnH,GAAAgF,cAHAA,EAKAzpB,GAAA,IAAA2mB,EAAAlC,EACAkC,GAAAkF,SAAAzrB,EAAAD,QAAAwmB,EAAAkF,Sb2sGM,SAAUzrB,EAAQuB,EAAqB3B,GAE7C,Yc3sGA,SAAA0E,GAAAkJ,GAEAxK,KAAAgD,SAAA1B,EAAA2B,UAAA,GACAjD,KAAAkB,aAEAsJ,GACAxK,KAAA0oB,aAAAle,GdssGiCjM,EAAuB,EAAI+C,CACvC,IAAI0C,GAA8CpH,EAAoB,GAElE+rB,GAD0D/rB,EAAoB,IAC1BA,EAAoB,IACpBA,GAAoB,GcnsGjG0E,GAAA2B,YACS8N,MAAA,OAAAyM,KAAA,MACAzM,MAAA,OAAAyM,KAAA,MACAzM,MAAA,QAAAyM,KAAA,OACAzM,MAAA,OAAAyM,KAAA,QACTlc,EAAAmM,MAAA,IAGAnM,EAAAC,MACA6B,IAAA,OACA7F,KAAA,UACAwT,MAAA,UACAvP,EAAA,EACAsB,MAAA,EACAQ,MAAA,yBACAslB,KAAA,GAEAtnB,EAAAM,MACAwB,IAAA,OACA7F,KAAA,YACAwT,MAAA,eACAvP,EAAA,EACAsB,MAAA,EACAQ,MAAA,yBACAulB,QAAA,GAEAvnB,EAAAO,MACAuB,IAAA,OACA7F,KAAA,iCACAwT,MAAA,YACAvP,EAAA,EACAsB,MAAA,EACAQ,MAAA,4BAEAhC,EAAAQ,MACAsB,IAAA,OACA7F,KAAA,oCACAwT,MAAA,aACAvP,EAAA,EACAsB,MAAA,EACAQ,MAAA,0BAEAhC,EAAAS,MACAqB,IAAA,OACA7F,KAAA,oCACAwT,MAAA,WACAvP,EAAA,EACAsB,MAAA,EACAQ,MAAA,0BAEAhC,EAAAU,MACAoB,IAAA,OACA7F,KAAA,sCACAwT,MAAA,WACAvP,EAAA,EACAsB,MAAA,EACAQ,MAAA,4BAEAhC,EAAAW,MACAmB,IAAA,OACA7F,KAAA,0CACAwT,MAAA,WACAvP,EAAA,EACAsB,MAAA,EACAQ,MAAA,4BAEAhC,EAAAwnB,cAAA,SAAApL,EAAAnN,EAAAwY,EAAAte,EAAAD,EAAAwe,EAAAC,GACA,OAAAvL,EAAAnN,EAAAwY,EAAAte,EAAAD,EAAAwe,EAAAC,IAEA3nB,EAAAkC,aAAAlC,EAAAwnB,cACAxnB,EAAAC,KAAAD,EAAAM,KAAAN,EAAAO,KAAAP,EAAAQ,KAAAR,EAAAS,KACAT,EAAAU,KAAAV,EAAAW,MAUAX,EAAAnD,UAAAuqB,aAAA,SAAAle,GAgKA,QAAA0e,GAAAC,EAAAC,GACA,MAAAxiB,MAAAC,MAAAD,KAAAC,MAAAsiB,EAAAC,MA/JA,GAAA1L,MAAAnN,KAAAwY,KAAAte,KAAAue,KAAAC,IAGA,QAAAze,EAAA9J,OACA,MAAAY,GAAAwnB,cAAApL,EAAAnN,EAAAwY,EAAAte,EAAAD,EAAAwe,EAAAC,EAIAze,GAAAoM,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAnO,EAAAoO,EAAApO,IAEA1E,EAAA,OAAAiK,YAAA,oBAAAzD,EAAA9J,OAAA,SACA,OAGA,IAAA2oB,GAAAziB,KAAAC,MAAA2D,EAAA,GAAA9B,EAAApH,EAAAmM,OAAAnM,EAAAmM,MACA6b,EAAAD,EAAA/nB,EAAAmM,MACA8b,EAAA,EACAC,EAAA,EACAC,EAAA,CACAjf,GAAArD,QAAA,SAAAC,GACAA,EAAAsB,EAAA4gB,GACAC,GAAA,EACAC,EAAApiB,EAAAuB,IAAA6gB,EAAApiB,EAAAuB,GACA8gB,GAAAriB,EAAAuB,IAEAogB,EAAAhlB,MAAuB2E,EAAA2gB,EAAA1gB,EAAA,IAAA4gB,EAAAjoB,EAAAmM,QACvBub,EAAAjlB,MAAuB2E,EAAA2gB,EAAA1gB,EAAA6gB,IACvBP,EAAAllB,MAAuB2E,EAAA2gB,EAAA1gB,EAAA8gB,EAAAF,IACvBF,EAAAziB,KAAAC,MAAAO,EAAAsB,EAAApH,EAAAmM,OAAAnM,EAAAmM,MACA6b,EAAAD,EAAA/nB,EAAAmM,MACA8b,EAAA,EACAC,EAAApiB,EAAAuB,EACA8gB,EAAAriB,EAAAuB,IAEK3I,MACL+oB,EAAAhlB,MAAe2E,EAAA2gB,EAAA1gB,EAAA,IAAA4gB,EAAAjoB,EAAAmM,QACfsb,EAAAhlB,MAAe2E,EAAA2gB,EAAA/nB,EAAAmM,MAAA9E,EAAA,IAAA4gB,EAAAjoB,EAAAmM,QACfub,EAAAjlB,MAAe2E,EAAA2gB,EAAA1gB,EAAA6gB,IACfR,EAAAjlB,MAAe2E,EAAA2gB,EAAA/nB,EAAAmM,MAAA9E,EAAA6gB,IACfP,EAAAllB,MAAe2E,EAAA2gB,EAAA1gB,EAAA8gB,EAAAF,IACfN,EAAAllB,MAAe2E,EAAA2gB,EAAA/nB,EAAAmM,MAAA9E,EAAA8gB,EAAAF,IAEfvlB,EAAA,OAAAiK,YAAA,8BAAA8a,EAAAroB,OACA,iBAIA8J,EAAArD,QAAA,SAAAC,EAAAnK,GAEA,IAAAmK,EAAAuB,IACAvB,EAAAuB,EAAA,KACAvB,EAAAsB,GAAAtB,EAAAuB,GAGA8B,EAAA1G,MACA2E,EAAAtB,EAAAsB,EAAAtB,EAAAuB,EACAA,EAAAvB,EAAAuB,EACA+B,QAAAzN,MAIAwN,EAAAmM,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAnO,EAAAoO,EAAApO,IAGA+B,EAAAtD,QAAA,SAAA7I,EAAArB,GACAuN,EAAAlM,EAAAoM,SAAAyS,QAAAlgB,IAEA+G,EAAA,OAAAiK,YAAA,oBAAAxD,EAAA/J,OAAA,SACA,OAGA,IAAAgpB,KAEAlf,GAAAqZ,IAAA,SAAAzc,EAAAnK,GAEAysB,EAAA3lB,MAAsB2E,EAAAtB,EAAAsB,EAAAtB,EAAAuB,IAAA,IAEtB+gB,EAAA3lB,MAAsB2E,EAAAtB,EAAAsB,EAAAC,GAAA,MAGtB+gB,EAAA9S,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAnO,EAAAoO,EAAApO,GAGA,IAAAihB,GAAA,CACAD,GAAAviB,QAAA,SAAA9J,EAAAJ,EAAA4Z,GAEA5Z,EAAA,GAAAI,EAAAqL,IAAAmO,EAAA5Z,EAAA,GAAAyL,IACAmO,EAAA5Z,EAAA,GAAA2sB,KAAA,GAGAD,GAAAtsB,EAAAsL,EACAtL,EAAAsL,EAAAghB,IAGAjM,EAAAgM,EAAA1O,OAAA,SAAA3d,GACA,OAAAA,EAAAusB,MAEA5lB,EAAA,OAAAiK,YAAA,oBAAAyP,EAAAhd,OAAA,SACA,OAUA,KAPA,GAAAmpB,GAAAX,EAAAxL,EAAA,GAAAhV,EAAApH,EAAAmM,OACAqc,EAAApM,EAAA,GAAA/U,EAAAohB,EAAArM,EAAA,GAAA/U,EAGAqhB,EAAA1oB,EAAA2B,UACAgnB,EAAAvM,IAAAhd,OAAA,GAAAgI,EAAAgV,EAAA,GAAAhV,EACA+U,EAAA,EACAA,EAAAuM,EAAAtpB,QACAupB,EAAAD,EAAAvM,GAAAD,KALA,KAMAC,GAEAA,GAAAuM,EAAAtpB,OAAA+c,IAAAuM,EAAAtpB,OAAA,EACAV,KAAAgD,SAAAgnB,EAAAvM,EAEA,IAAA5S,GAAA7K,OAAAqB,IAAAwD,MAAA,GAoCA,OAnCAtC,UAAA2nB,kBAAA,QAAArf,GACAtE,WAAA4jB,UAAA/Y,KAAA/P,IAAAC,IAAAM,KAAArE,KAAAyC,KAAAgD,SAAA+N,MAGA2M,EAAAvW,QAAA,SAAA9J,GACA,GAAA6rB,EAAA7rB,EAAAqL,EAAA1I,KAAAgD,SAAAwa,QAAAqM,EACAC,EAAAljB,KAAAyb,IAAAyH,EAAAzsB,EAAAsL,OACS,CACT4H,EAAAxM,MAAuB2E,EAAAmhB,EAAAlhB,EAAA/B,KAAAyb,IAAAyH,EAAAC,IACvB,QAAAZ,GAAAU,EAAA7pB,KAAAgD,SAAAwa,KACA2L,EAAAD,EAAA7rB,EAAAqL,EAAA1I,KAAAgD,SAAAwa,QAEAjN,EAAAxM,MAAmC2E,EAAAygB,EAAAxgB,EAAAohB,IACnC,IAAAA,GAFAZ,GAAAnpB,KAAAgD,SAAAwa,MAIAqM,EAAAX,EAAA7rB,EAAAqL,EAAA1I,KAAAgD,SAAAwa,MACAsM,EAAAljB,KAAAyb,IAAA0H,EAAA1sB,EAAAsL,GAEAohB,EAAA1sB,EAAAsL,GACK3I,MACLuQ,EAAAxM,MAAe2E,EAAAmhB,EAAAlhB,EAAAmhB,IACfvZ,EAAAxM,MAAe2E,EAAAmhB,EAAA7pB,KAAAgD,SAAAwa,KAAA7U,EAAAohB,IAMfvf,EAAA,GAAAme,GAAA,EAAAne,GACAxG,EAAA,OAAAiK,YAAA,oBAAAsC,EAAA7P,OAAA,YACAkG,KAAAC,MAAAojB,EAAA,WAAAD,EAAAvM,GAAA1M,MACA,YAGA/Q,KAAAkB,UAAAI,EAAAwnB,cAAApL,EAAAnN,EAAAwY,EAAAte,EAAAD,EAAAwe,EAAAC,GAEAjpB,MAeAsB,EAAAnD,UAAA+I,YAAA,WACA,MAAAlH,MAAAgD,UASA1B,EAAAnD,UAAA8I,aAAA,WACA,MAAAjH,MAAAkB,YdquGM,SAAUlE,EAAQuB,EAAqB3B,GAE7C,Ye9/GA2B,GAAA,aAmBA,QAAA6rB,GAAA5f,GACA,KAAAxK,eAAAoqB,IAAA,UAAAA,GAAA5f,EAEAxK,MAAAqqB,QAAA,GAAAC,GAAA9f,EAAAxK,KAAAuqB,SAAA,GApBAH,EAAAjsB,WACAqsB,aACAC,QAAqBC,GAAA,GAAAC,KAAA,EAAA5Z,MAAA,YACA2Z,GAAA,GAAAC,KAAA,EAAA5Z,MAAA,YACA2Z,GAAA,IAAAC,KAAA,EAAA5Z,MAAA,aACA2Z,GAAA,IAAAC,KAAA,EAAA5Z,MAAA,aACA2Z,GAAA,IAAAC,KAAA,EAAA5Z,MAAA,YACA2Z,GAAA,IAAAC,KAAA,EAAA5Z,MAAA,YACA2Z,GAAA,IAAAC,KAAA,EAAA5Z,MAAA,aACA2Z,GAAA,IAAAC,KAAA,EAAA5Z,MAAA,YACA2Z,GAAA,IAAAC,KAAA,EAAA5Z,MAAA,YACA2Z,GAAA,KAAAC,KAAA,EAAA5Z,MAAA,aACA2Z,GAAA,KAAAC,KAAA,EAAA5Z,MAAA,WACA2Z,GAAA,MAAAC,KAAA,EAAA5Z,MAAA,WACA2Z,GAAAnrB,OAAA2N,UAAAyd,KAAA,EAAA5Z,MAAA,iBAUrBqZ,EAAAjsB,UAAAysB,KAAA,SAAA7Z,EAAA4Z,GAAuD,MAAA5Z,GAAA4Z,GAIvDP,EAAAjsB,UAAAosB,QAAA,SAAAnjB,EAAAnK,GACA,GAAA4tB,GAAAzjB,EAAAsB,EAAAtB,EAAAuB,EACAxI,EAAAiH,EAAAsB,EACA+hB,EAAAL,EAAAjsB,UAAAssB,MACAG,EAAAR,EAAAjsB,UAAAysB,KACAE,EAAAL,EAAA,GAAAC,GACAK,EAAA,CACA,IAAAnkB,KAAAoB,KAAA7H,EAAA2qB,GAAA,IAAAlkB,KAAAC,MAAAgkB,EAAAC,GACA,OAAAF,EAAAH,EAAA,GAAA1Z,MAAA,IACAnK,KAAAoB,KAAAZ,EAAAsB,EAAA+hB,EAAA,GAAAC,IAAA,GAAAD,EAAA,GAAAC,GAEA,KAAAztB,EAAA,EAAmBA,EAAAwtB,EAAA/pB,OAAkBzD,IAErC,GADA6tB,EAAAL,EAAAxtB,GAAAytB,GACA9jB,KAAAC,MAAA1G,EAAA2qB,KAAAlkB,KAAAC,MAAAgkB,EAAAC,IACA3qB,EAAA0qB,EAAAC,EAGA,MAFAA,GAAAL,EAAAxtB,EAAA,GAAAytB,GACAK,EAAAnkB,KAAAC,MAAA1G,EAAA2qB,GAAAlkB,KAAAC,MAAAgkB,EAAAC,IACAF,EAAAH,EAAAxtB,EAAA,GAAA8T,MAAAga,IACAnkB,KAAAoB,KAAAZ,EAAAsB,EAAA+hB,EAAAxtB,EAAA,GAAAytB,IAAA,GAAAD,EAAAxtB,EAAA,GAAAytB,GAGA,eAKA,IAAArtB,GAAA+sB,EAAAjsB,UAAAssB,MACAO,EAAA3tB,IAAAqD,OAAA,GAEA0G,EAAA/J,IAAAqD,OAAA,EACA0pB,GAAAjsB,UAAAqsB,UAAAzmB,MACagN,MAAAqZ,EAAAjsB,UAAAysB,KAAAxjB,EAAA2J,MAAA3J,EAAAujB,MAAAD,GAAAtjB,EAAAsjB,GAAAztB,EAAA,EACb0tB,KAAAvjB,EAAAujB,KAAAM,KAAAD,EAAAN,GAAAM,EAAAL,KAAAO,GAAA9jB,EAAAsjB,IACA,QAAAvnB,GAAA9F,EAAAqD,OAAA,EAA8B,GAAAyC,EAAQA,IAAA,CACtCiE,EAAA/J,EAAA8F,EACA,QAAAlG,GAAAmK,EAAAujB,KAA4B,EAAA1tB,EAAOA,IACnCmtB,EAAAjsB,UAAAqsB,UAAAzmB,MACqBgN,MAAAqZ,EAAAjsB,UAAAysB,KAAAxjB,EAAA2J,MAAA9T,GAAAytB,GAAAtjB,EAAAsjB,GAAAztB,IACrB0tB,KAAAvjB,EAAAujB,KAAAM,KAAA7jB,EAAAsjB,GAAAztB,EAAAiuB,GAAA9jB,EAAAsjB,IAAAztB,EAAA,KA0DA,MAvDAmtB,GAAAjsB,UAAAqsB,UAAAzmB,MACagN,MAAAqZ,EAAAjsB,UAAAysB,KAAAvtB,EAAA,GAAA0T,MAAA,GAAA2Z,GAAArtB,EAAA,GAAAqtB,GAAAztB,EAAA,EACb0tB,KAAA,EAAAM,KAAA,EAAAC,GAAA7tB,EAAA,GAAAqtB,KAaAN,EAAAjsB,UAAAqN,OAAA,SAAAyf,EAAAC,EAAAC,GACAD,KAAAD,EACAE,KAAA5rB,OAAA2N,SACA,IAAA2W,GAAA7jB,KAAAqqB,QAAAe,KACA5gB,EAAAxK,KAAAqqB,QAAAgB,KACAC,EAAAtrB,KAAAwqB,UACAe,KACAV,EAAA,EACA1qB,EAAA,CA4BA,OA1BAmrB,GAAAnkB,QAAA,SAAAC,GACA,GAAAyc,EAAAzc,EAAA2J,OAIA,OAHAya,GAAApkB,EAAAnK,EAAA2J,KAAAoB,KAAAkjB,EAAA9jB,EAAAsjB,IAAA9jB,KAAAC,MAAAokB,EAAA7jB,EAAAsjB,IACAtnB,EAAAwD,KAAAC,MAAAokB,EAAA7jB,EAAAsjB,IAAAtjB,EAAAsjB,GAEAvnB,EAAA,EAA8BA,GAAAqoB,EAAaroB,IAE3C0gB,EAAAzc,EAAA2J,OAAA3N,IAEAygB,EAAAzc,EAAA2J,OAAA3N,GAAA+D,QAAA,SAAAskB,GAEAZ,EAAArgB,EAAAihB,GAAA/iB,EAAA8B,EAAAihB,GAAA9iB,EACAxI,EAAAqK,EAAAihB,GAAA/iB,EACAmiB,GAAAK,GAAAD,GAAA9qB,GAEAorB,EAAA7qB,OAAAyqB,IAEAI,IAAAzP,OAAAtR,EAAAihB,OAKAroB,GAAAgE,EAAAsjB,IAGS1qB,MACTurB,GAIAnB,IA+BA,IAAAE,GAAA,WAEA,QAAAA,GAAAoB,EAAAC,EAAAC,GACA,KAAA5rB,eAAAsqB,IAAA,UAAAA,EACAtqB,MAAAqrB,KAAAK,EAEAC,GAAA,KAAAA,EAGS,yBAAAA,EAET3rB,KAAAuqB,QAAA,SAAAnjB,GAAuC,MAAAA,GAAAukB,IAC9B,qBAET3rB,KAAAuqB,QAAAoB,GAEAhX,QAAAC,MAAA,oCAAA+W,GACA3rB,KAAAuqB,QAAA,SAAAnjB,GAAuC,MAAAA,GAAAykB,YATvC7rB,KAAAuqB,QAAA,SAAAnjB,GAAuC,MAAAA,GAAAykB,WAYvCD,EAGA5rB,KAAA8rB,2BAFA9rB,KAAA+rB,qBAkFA,MA3EAzB,GAAAnsB,UAAA4tB,mBAAA,WACA,GAAA3oB,GAAA,EACApD,MAAAorB,KAAAprB,KAAAqrB,KAAArU,OAAA,SAAA5Z,EAAAyZ,EAAA5Z,GAGA,MAFAmG,GAAApD,KAAAuqB,QAAAptB,KAAA0Z,IAAA5Z,EAAAG,GACAA,EAAAgG,IAAAhG,EAAAgG,QAAA0Y,OAAA7e,GACAG,QAIAktB,EAAAnsB,UAAA2tB,yBAAA,WACA,GAAAtK,MACApe,EAAA,GACA4oB,EAAA,GACAzB,EAAAvqB,KAAAuqB,OACAvqB,MAAAorB,KAAAprB,KAAAqrB,KAAArU,OAAA,SAAA5Z,EAAAyZ,EAAA5Z,GAMA,MALAukB,GAAA+I,EAAAptB,KAAA0Z,IAAA5Z,EAAAG,GACAgG,EAAAoe,EAAA,YACAwK,EAAAxK,EAAA,gBACA1hB,KAAA1C,EAAA4uB,KAAA5uB,EAAA4uB,OACA5uB,EAAA4uB,GAAA5oB,IAAAhG,EAAA4uB,GAAA5oB,QAAA0Y,OAAA7e,GACAG,QAUAktB,EAAAnsB,UAAA8tB,IAAA,SAAAC,GACA,MAAAA,KAAAlsB,MAAAorB,MAOAd,EAAAnsB,UAAAguB,QAAA,SAAAD,GACA,MAAAlsB,MAAAorB,KAAAc,QAOA5B,EAAAnsB,UAAAqN,OAAA,SAAA0gB,GACA,GAAAR,GAAA1rB,KAAAqrB,IACA,OAAArrB,MAAAmsB,QAAAD,GAAAlV,OAAA,SAAA5Z,EAAAH,GAEA,MADAG,GAAA2G,KAAA2nB,EAAAzuB,IACAG,QAQAktB,EAAAnsB,UAAAwB,QAAA,SAAAusB,GACA,GAAAE,GAAApsB,KAAAorB,KAAAc,EAEA,WADAE,IAAA1rB,QAAA,GACA0rB,EAAA,OAOA9B,EAAAnsB,UAAAkuB,YAAA,SAAAH,GACA,GAAAE,GAAApsB,KAAAorB,KAAAc,GACAjvB,EAAAmvB,IAAA1rB,QAAA,CACA,UAAAzD,EAAAmvB,EAAAnvB,EAAA,OAIAqtB,Mf+gHM,SAAUttB,EAAQuB,EAAqB3B,GAE7C,YgBrxHA,SAAA0vB,GAAAnnB,GAwCA,MArCAA,GAAAmG,OAAA,GAAAihB,GAAA,EAAApnB,GAEAA,EAAAqnB,KAAA9uB,OAAA+uB,EAAA,KAiBAtnB,EAAAgZ,iBAAA,SAAA3Q,EAAAF,EAAAD,EAAAE,GACA,GAAA6T,GAAA7T,GAAAmf,WAAAprB,IAAAmM,MACAC,EAAA9G,KAAAC,MAAA2G,EAAA4T,KACA6J,EAAAvd,EAAAJ,EAAA8T,EACA8J,EAAAxd,EAAAL,EAAA+T,EACAlD,IAA2BxV,EAAA,EAAAC,EAAA,KAAAwU,QAAA,GAU3B,OATAnd,MAAAsL,YAGAxL,MADAoe,EAAAle,KAAAwsB,KAAAG,cAAA1B,EAAAC,MAGAhN,EAAAle,KAAAsL,OAAAE,OAAAyf,EAAAC,GACAlrB,KAAAwsB,KAAAI,cAAA1O,EAAA+M,EAAAC,IAGAhN,GAGA/Y,EhB8uHiC5G,EAAuB,EAAI+tB,CACvC,IAAIC,GAA0D3vB,EAAoB,IAC9E6vB,EAAoD7vB,EAAoB,KAyD3F,SAAUI,EAAQuB,EAAqB3B,GAE7C,YiBr1HA2B,GAAA,aAEA,QAAAsuB,GAAAxY,GAEA,GADAA,KAAA,KACArU,eAAA6sB,IAAA,UAAAA,GAAAxY,EAEArU,MAAA8sB,SACA9sB,KAAA+sB,WACA/sB,KAAAgtB,MAAA3Y,EA+HA,MAlHAwY,GAAAI,SAAA,SAAAC,GACA,WAAAA,EAAAxsB,QAAAwsB,EAAA,IAAA7sB,MAAAsT,MAAA,KAAAuZ,IAWAL,EAAAtC,QAAA,SAAA2C,GAEA,MADAltB,MAAAitB,SAAAC,GACAlW,OAAA,SAAAH,EAAAC,GAAgD,MAAAD,GAAA,IAAAC,KAehD+V,EAAA1uB,UAAAgvB,QAAA,WACA,KAAAvsB,UAAAF,OAAA,IACA,GAAAwsB,GAAAL,EAAAI,SAAArsB,WACAwC,EAAAypB,EAAAtC,QAAA2C,EACA,IAAA9pB,IAAApD,MAAA8sB,MAAA,CACA,GAAAN,GAAAxsB,KAAA8sB,MAAA1pB,EAGA,OAFAopB,GAAAY,SAAA,GAAA7b,MACAib,EAAAa,QACAb,EAAApb,QAeAyb,EAAA1uB,UAAAmvB,QAAA,WACA,KAAA1sB,UAAAF,OAAA,IACA,GAAA6sB,GAAA3sB,UAAA,GACAssB,EAAAL,EAAAI,SAAArsB,WAAAX,MAAA,EAAAW,UAAAF,QACA0C,EAAAypB,EAAAtC,QAAA2C,EAEA,OADAltB,MAAA8sB,MAAA1pB,IAA+BgO,KAAAmc,EAAAF,MAAA,EAAAD,SAAA,GAAA7b,OAC/Bgc,IAcAV,EAAA1uB,UAAAwuB,cAAA,SAAA1B,EAAAC,GACA,GAAArjB,GAAA7H,KAAA+sB,QAAAlsB,KAAA,SAAAuG,GACA,MAAAA,GAAA6jB,SAAAC,GAAA9jB,EAAA8jB,IAEA,YAAAprB,KAAA+H,EAAA7H,KAAAmtB,QAAAtlB,EAAAojB,KAAApjB,EAAAqjB,QAAAprB,IAeA+sB,EAAA1uB,UAAAyuB,cAAA,SAAAW,EAAAtC,EAAAC,GACA,KAAAtqB,UAAAF,OAAA,IAEA,GAAA2sB,GAAA,CACArtB,MAAA+sB,QAAA/sB,KAAA+sB,QAAA/R,OAAA,SAAA5T,GACA,QAAA6jB,GAAA7jB,EAAA6jB,MAAA7jB,EAAA8jB,SAEAmC,GAAArtB,KAAA8sB,MAAA1lB,EAAAhE,KAAAiqB,YACArtB,MAAA8sB,MAAA1lB,EAAAhE,MACA,IAIiBpD,KAEjB,IAAAoD,GAAAypB,EAAAtC,SAAAU,EAAAC,GAIA,OAHAlrB,MAAA+sB,QAAAhpB,MAAgCknB,OAAAC,KAAA9nB,QAChCpD,KAAAstB,QAAAC,EAAAtC,EAAAC,GACAlrB,KAAA8sB,MAAA1pB,GAAAiqB,QAAA,EACAE,IAIAV,MjBo2HM,SAAU7vB,EAAQuB,EAAqB3B,GAE7C,YACqB,IAAI4wB,GAA8C5wB,EAAoB,GAClE6wB,EAA8C7wB,EAAoB,EkB19H3F2B,GAAA,aAEA,QAAAmvB,GAAA7C,EAAA1qB,EAAAwtB,EAAA5R,GACA,KAAA/b,eAAA0tB,IACA,UAAAA,GAAA7C,EAAA1qB,EAAAwtB,EAAA5R,EAEA,KAAA4R,EAAA,CAMAA,EAAAjb,KAAAoB,MALA,qNAOA9T,KAAAwK,OACA,IAAAojB,GAAAD,CACA3tB,MAAA6tB,KAAA9R,IAAA,EACA/b,KAAA8tB,QAAAjD,GAAA,GAAAtZ,MAAA,UACAvR,KAAA+tB,KAAA5tB,GAAAH,KAAA8tB,OAAA,MACA9tB,KAAAguB,WAAAP,EAAA,KACA,SAAAva,GAA8B,MAAAA,GAAA+a,WAC9B,SAAA/a,GAA8B,MAAAA,KAC9BlT,KAAAkuB,KAAA,EAEAluB,KAAA4tB,aACA,QAAA3wB,GAAA,EAAuBA,EAAA2wB,EAAAltB,OAAuBzD,IAAA,CAC9C,GAAAmK,GAAAwmB,EAAA3wB,EACAmK,GAAA2U,IAAA3U,EAAA2U,IAAA3U,EAAA2U,IAAA/b,KAAA6tB,KACA7tB,KAAA4tB,WAAAxmB,EAAA+O,MAAAzY,OAAA8vB,EAAA,GAAAxtB,KACAoH,EAAA+O,KAAA/O,EAAA+mB,OAAA/mB,EAAAgnB,QAAAhnB,EAAAinB,EAAAjnB,EAAAknB,MAAAlnB,EAAA2U,KAEA2R,EAAAa,MAAAvuB,KA4NA,MAnMA0tB,GAAAvvB,UAAAqwB,WAAA,SAAAC,EAAA9X,EAAA4S,EAAAsB,EAAA1qB,EAAAuuB,GACAD,KAAA,WACA9X,KAAA,GACA4S,EAAA,mBAAAA,EAAA,EACAsB,MAAA4C,EAAA,2BACAttB,MAAA0qB,EAAA,IAEA6D,EAAAC,YACAD,EAAAhB,EAAAkB,SACAF,EAAAC,UAAAE,MAAAH,EAAAC,UAAAG,OAAAJ,EAAAC,UAAA3nB,IACA0nB,EAAAK,SAAAL,EAAAM,MAAAN,EAAAO,aAAAP,EAAAQ,YAGA,gBAAAR,GAAA,QACAA,EAAA/X,WAEA+X,EAAA/X,SAMA,QAFApO,GAAAklB,EAAA,QAAAttB,EAAA0qB,GAAAtB,GACAJ,EAAA0B,EACA5tB,EAAA,EAAuBA,EAAAssB,EAAStsB,IAAA,CAEhC,GAAAkyB,GAAAzxB,OAAA8vB,EAAA,GAAAiB,EAAAxxB,EAAAyxB,EAEAvF,IAAAviB,KAAAuD,MAAA5B,EAAA6mB,eACApvB,KAAAqvB,SAAAF,EAAAtE,MAAA1B,MAWAuE,EAAAvvB,UAAAkxB,SAAA,SAAAnjB,GACAlM,KAAAguB,WAAAjqB,KAAAmI,IAUAwhB,EAAAvvB,UAAAmxB,YAAA,SAAApjB,GACAlM,KAAAguB,WAAApE,IAAA1d,IASAwhB,EAAAvvB,UAAAoxB,QAAA,WAGA,IAFA,GAAArjB,GAAAsjB,EAEA,EAAAxvB,KAAAguB,WAAA3Z,QACArU,KAAAguB,WAAAlT,MAAAmT,WAAAjuB,KAAA+tB,MAMA,IAJA7hB,EAAAlM,KAAAguB,WAAAyB,MACAzvB,KAAAkuB,KAAAhiB,EAAA+hB,UACAuB,EAAAtjB,EAAA6Q,KAAA/c,MAEAwvB,EAAA9uB,QACAV,KAAAguB,WAAAjqB,KAAAyrB,EAAAC,MAIA,QAAAzvB,KAAAguB,WAAA3Z,QACAnI,EAAAlM,KAAAguB,WAAAyB,MACAvjB,EAAAwjB,SACAxjB,EAAAwjB,QAAA1vB,KAAA,WAAAA,KAAA+tB,KAIA,QAAA3qB,KAAApD,MAAA4tB,WACA5tB,KAAA4tB,WAAAxqB,GAAAssB,QAAA1vB,KAAA,WAAAA,KAAA+tB,KAGA,OAAA/tB,MAAAwK,MAWAkjB,EAAAvvB,UAAAwxB,WAAA,SAAApyB,GAIA,WAHA,KAAAyC,KAAA4tB,WAAArwB,KACAyC,KAAA4tB,WAAArwB,GAAAG,OAAA8vB,EAAA,GAAAxtB,KAAAzC,IAEAyC,KAAA4tB,WAAArwB,IASAmwB,EAAAvvB,UAAA8vB,QAAA,WACA,MAAAjuB,MAAAkuB,MA4BAR,EAAAkB,SAAA,SAAAD,EAAAG,EAAA9nB,EAAA+nB,EAAAC,EAAAC,EAAAC,EAAAvY,GACAgY,QACAG,KAAA,EACA9nB,KAAA,EACA2P,KAAA,GACAoY,OACiBD,OAAA,EAAA9nB,IAAA,GAAA4oB,KAAA,MAAAC,KAAA,KAAAC,UACAhB,OAAA,GAAA9nB,IAAA,IAAA4oB,KAAA,UAAAC,KAAA,QAAAC,MAAA,WACAhB,OAAA,IAAA9nB,IAAA,IAAA4oB,KAAA,UAAAC,KAAA,QAAAC,UACAhB,OAAA,GAAA9nB,IAAA,GAAA4oB,KAAA,MAAAC,KAAA,GAAAC,MAAA,eAEjB,IAAApB,IAAqBK,YAAApY,UACrB,sBAAA+X,EAAAM,SACA,qBAAAN,EAAAO,gBACA,qBAAAP,EAAAQ,aAGAP,EAAAxnB,QAAA,SAAAC,GACAsnB,EAAAK,SAAAhrB,MAAiC8rB,KAAAzoB,EAAA0nB,SAAA9nB,MAAA8oB,YAGjCpB,EAAAK,SAAAL,EAAAK,SAAAjT,OAAAiT,EAGA,IAAAgB,KA6BA,OA3BArB,GAAAK,SAAA5nB,QAAA,SAAA6oB,GAEAA,EAAAhpB,IAAAgpB,EAAAlB,SAAAkB,EAAAhpB,IAAAgpB,EAAAlB,QAEAkB,EAAAC,WACAF,EAAA5oB,QAAA,SAAAoB,GAA2CynB,EAAAC,QAAAlsB,KAAAwE,SAE3C,KAAAynB,EAAA,WAAAA,EAAAH,MACAE,EAAAhsB,KAAAisB,EAAAH,MAEAG,EAAAF,MACAE,EAAAF,KAAA3oB,QAAA,SAAA2oB,GACAC,EAAAhiB,KAAA,SAAAxF,EAAAtL,GACA,GAAAsL,GAAAunB,EAEA,MADAC,GAAApO,OAAA1kB,EAAA,IACA,OAKS+C,MAET,EAAA+vB,EAAArvB,SACAguB,EAAAK,SAAAL,EAAAK,SAAAjT,SACsB+T,KAAA,GAAAf,SAAAH,EAAAjuB,OAAAsG,MAAA2nB,EAAAjuB,OACtBovB,KAAAC,EAAAG,cAEAxB,GAIAhB,MlB+/HM,SAAU1wB,EAAQD,EAASH,GmBrxIjC,GAAA2mB,GAAA3mB,EAAA,GACA,iBAAA2mB,SAAAvmB,EAAAC,EAAAsmB,EAAA,KAEA,IAEAlC,IAAemH,KAAA,EACfnH,GAAAgF,cAHAA,EAKAzpB,GAAA,IAAA2mB,EAAAlC,EACAkC,GAAAkF,SAAAzrB,EAAAD,QAAAwmB,EAAAkF,SnB2yIM,SAAUzrB,EAAQD,EAASH,GoBvzIjCG,EAAAC,EAAAD,QAAAH,EAAA,QAKAG,EAAAgH,MAAA/G,EAAAC,EAAA,0sFAA+tF,MpBg0IztF,SAAUD,EAAQD,GqBvzIxBC,EAAAD,QAAA,SAAAgoB,GAEA,GAAAoL,GAAA,mBAAAxqB,gBAAAwqB,QAEA,KAAAA,EACA,SAAA9K,OAAA,mCAIA,KAAAN,GAAA,gBAAAA,GACA,MAAAA,EAGA,IAAAqL,GAAAD,EAAAE,SAAA,KAAAF,EAAAG,KACAC,EAAAH,EAAAD,EAAAK,SAAApmB,QAAA,gBA2DA,OA/BA2a,GAAA3a,QAAA,+DAAAqmB,EAAAC,GAEA,GAAAC,GAAAD,EACAE,OACAxmB,QAAA,oBAAA3M,EAAAozB,GAAwC,MAAAA,KACxCzmB,QAAA,oBAAA3M,EAAAozB,GAAwC,MAAAA,IAGxC,mDAAAC,KAAAH,GACA,MAAAF,EAIA,IAAAM,EAcA,OAVAA,GAFA,IAAAJ,EAAAhxB,QAAA,MAEAgxB,EACG,IAAAA,EAAAhxB,QAAA,KAEHywB,EAAAO,EAGAJ,EAAAI,EAAAvmB,QAAA,YAIA,OAAAsI,KAAAC,UAAAoe,GAAA,QrBi1IM,SAAU/zB,EAAQD,EAASH,GsBp6IjCG,EAAAC,EAAAD,QAAAH,EAAA,QAKAG,EAAAgH,MAAA/G,EAAAC,EAAA,8oRAA6rR,MtB66IvrR,SAAUD,EAAQuB,EAAqB3B,GAE7C,YACqB,IAAIo0B,GAAyCp0B,EAAoB,EuBx6ItF2B,GAAA,aAEA,QAAA0yB,GAAAC,GACA,KAAAlxB,eAAAixB,IAAA,UAAAA,GAAAC,EACAlxB,MAAAmxB,SAAAD,GAAA,GAsBA,QAAAE,GAAAllB,GACA+kB,EAAAI,YAAAnlB,EAAAolB,eAAA,gBACA/uB,SAAAgvB,oBAAA,aAAAH,GACA7uB,SAAAgvB,oBAAA,YAAAH,GAuGA,MAjHAH,GAAAxO,kBAAA,WAEA,MADAuO,GAAA,OAAAzc,UAAA0c,EAAAI,cACA,UAAAJ,EAAAI,aAIAJ,EAAAI,YAAA,mBAMA9uB,SAAAqD,iBAAA,aAAAwrB,GACA7uB,SAAAqD,iBAAA,YAAAwrB,GAeAH,EAAA9gB,0BAAA,SAAAkL,EAAAmW,GAOA,QAAAC,GAAAC,GAEA/rB,OAAAgsB,gBACAhsB,OAAAgsB,eAAyCC,WAAA,YAAAC,UAAA,YAAAC,SAAA,WACzCnsB,OAAAosB,gBAAyCC,MAAA,EAAAC,SAAA,EAAAC,OAAA,EAAAC,OAAA,EACzC7Z,MAAA,EAAA8Z,SAAA,EAAAC,OAAA,EAAApP,OAAA,GAEA,IAAAqP,GAAAZ,EAAA9xB,QAAAI,KAGA8W,GAAAwb,GAAAZ,EAAA9xB,OAAA2yB,UAEA,SAAAzb,GAAA4a,EAAAc,WAAAd,EAAAc,QAAA9xB,OAAA,IAAAiF,OAAAgsB,cAAAD,EAAAvb,MAAA,CAEA,GAAAsc,IAAAH,GAAA,iBAAAxb,IAAA4a,EAAA9xB,OAAA8yB,aAAA,UACA5b,GAAAwb,IACAZ,EAAA9xB,OAAA2yB,aAAAE,IACAA,EAAA,OAAAA,EAAA,WAAAA,EAAA,SAAAA,EAAA,WAIA,KAAA3b,IAAAnR,OAAAosB,eAAAL,EAAA9xB,OAAA+yB,SAAA,CAEA,GAAAC,GAAAlB,EAAAJ,eAAA,GACAuB,EAAAD,EAAAE,QACAC,EAAAH,EAAAI,SAMA,eAAAtB,EAAAvb,MAAA,aAAAub,EAAAvb,OACAnW,KAAAizB,YACArsB,KAAAssB,IAAAlzB,KAAAizB,WAAAvqB,EAAAkqB,EAAAE,SANA,IAOAlsB,KAAAssB,IAAAlzB,KAAAizB,WAAAtqB,EAAAiqB,EAAAI,SAPA,KAQA,GAAAzhB,MAAAvR,KAAAizB,WAAA9J,EAPA,KASA0J,EAAA7yB,KAAAizB,WAAAvqB,EACAqqB,EAAA/yB,KAAAizB,WAAAtqB,GACa,eAAA+oB,EAAAvb,KAEbnW,KAAAizB,YAAmCvqB,EAAAkqB,EAAAE,QAAAnqB,EAAAiqB,EAAAI,QAAA7J,GAAA,GAAA5X,OACtB,aAAAmgB,EAAAvb,OAEbnW,KAAAizB,cAGA,IAAAE,GAAA5wB,SAAA6wB,YAAA,aAqBA,OApBAD,GAAAE,eACA1tB,OAAAgsB,cAAAD,EAAAvb,OACA,GACA,EACAxQ,OACA,EACAitB,EAAAU,QACAV,EAAAW,QACAV,EACAE,GACA,GACA,GACA,GACA,EACA,EACA,MAEAH,EAAAhzB,OAAA4zB,cAAAL,GAGA3B,GACAE,EAAA+B,2BACA/B,EAAAgC,kBACAhC,EAAApW,kBACA,OAJA,KA1EAD,EAAAzV,iBAAA,aAAA6rB,GAAA,GACApW,EAAAzV,iBAAA,YAAA6rB,GAAA,GACApW,EAAAzV,iBAAA,WAAA6rB,GAAA,GACApW,EAAAzV,iBAAA,cAAA6rB,GAAA,IAiFAR,MvB27IM,SAAUj0B,OAAQuB,oBAAqB3B,qBAE7C,YAC+BA,qBAAoBU,EAAEiB,oBAAqB,IAAK,WAAa,MAAOo1B,gBACpE/2B,oBAAoBU,EAAEiB,oBAAqB,IAAK,WAAa,MAAOq1B,OACpEh3B,oBAAoBU,EAAEiB,oBAAqB,IAAK,WAAa,MAAO4d,OACpEvf,oBAAoBU,EAAEiB,oBAAqB,IAAK,WAAa,MAAO6d,OwBllJnGxf,oBAAAU,EAAAiB,oBAAA,qBAAAs1B,MAUA,IAAAF,cAAA,WACA,GAAAjmB,GAAA9M,UAAA,GACA0b,EAAA1b,UAAA,EAUA,OARA0b,KAAAlS,QAAA,OAAAsD,EAAAiT,eACArE,IAAAlS,QAAA,WAAAsD,EAAAomB,WAAA,IAAA7zB,OAAA,IACAqc,IAAAlS,QAAA,UAAAsD,EAAAqmB,WAAA9zB,OAAA,IACAqc,IAAAlS,QAAA,UAAAsD,EAAAsmB,YAAA/zB,OAAA,IACAqc,IAAAlS,QAAA,UAAAsD,EAAAumB,cAAAh0B,OAAA,IACAqc,IAAAlS,QAAA,UAAAsD,EAAAwmB,cAAAj0B,OAAA,IACAqc,IAAAlS,QAAA,YAAAsD,EAAAymB,mBAAAl0B,OAAA,KAkBA2zB,IAAA,SAAAtX,EAAAvI,GAyBA,QAAAD,GAAAwI,EAAAvI,GACA,GAAApL,GAAA,GAAAoL,EAAAqgB,KAAAC,SAAA/X,EAAAgY,OAAAvgB,EAAAqgB,KAAA,YACAh3B,EAAA,GAAA2W,EAAAwgB,GAAAF,SAAA/X,EAAAgY,OAAAvgB,EAAAwgB,GAAA,WAEAj3B,EAAA,GAAAyW,EAAAygB,GAAAH,SAAA/X,EAAAgY,OAAAvgB,EAAAygB,GAAA,SACAC,EAAA,GAAA1gB,EAAA2gB,GAAAL,SAAA/X,EAAAgY,OAAAvgB,EAAA2gB,GAAA,SACApd,EAAA,GAAAvD,EAAA4gB,GAAAN,SAAA/X,EAAAgY,OAAAvgB,EAAA4gB,GAAA,SACAC,EAAA,GAAA7gB,EAAA8gB,GAAAR,SAAA/X,EAAAgY,OAAAvgB,EAAA8gB,GAAA,SAEAx2B,EAAA,GAAA0V,EAAA+gB,KACA,UAAAxY,EAAAgY,OAAAvgB,EAAA+gB,MAAAC,MAAA,cACA,CACA,WAAAxjB,MAAA5I,EAAAvL,EAAAE,EAAAm3B,EAAAnd,EAAAsd,GAAAv2B,EApCA,IAAAie,EAAA,MAAA/c,QAAAy1B,GAEA,uBAEA,MAAAlhB,GAAAwI,EAAAvI,EACK,wBAEL,GAAA9S,IACAmzB,KAAArgB,EAAApU,QAAA,QACA40B,GAAAxgB,EAAApU,QAAA,MACA60B,GAAAzgB,EAAApU,QAAA,MACA+0B,GAAA3gB,EAAApU,QAAA,MACAg1B,GAAA5gB,EAAApU,QAAA,MACAk1B,GAAA9gB,EAAApU,QAAA,MACAm1B,KAAA/gB,EAAApU,QAAA,KACA,OAAAmU,GAAAwI,EAAArb,GAIA,GAAAA,IAAsBmzB,KAAA,EAAAG,GAAA,EAAAC,GAAA,EAAAE,GAAA,GAAAC,GAAA,GAAAE,GAAA,GAAAC,KAAA,GACtB,OAAAhhB,GAAAwI,EAAArb,IAkCAkb,IAAA,SAAA8Y,EAAA3Y,EAAA4Y,GACA,GAAAC,GAAA,GACAC,EAAA,EACAH,GAAA,IACAE,EAAA,IACAF,IAAA,EAEA,IAAAI,GAAA,GAAA9jB,MAAA0jB,EAkBA,OAjBAC,KACAG,EAAA,GAAA9jB,OAAA8jB,EAAA,IAAAA,EAAAC,sBAEAhZ,EACA8Y,EAAAzB,aAAA0B,EAAA/Y,GACK2Y,EAAA,IACLG,EAAAzB,aAAA0B,EAAA,SACKJ,EAAA,IACLG,EAAAzB,aAAA0B,EAAA,UAAAjrB,QAAA,UACK6qB,EAAA,KACLG,EAAA,KAAAzB,aAAA0B,EAAA,aAAAjrB,QAAA,UACK6qB,EAAA,MACLG,EAAAzB,aAAA0B,EAAA,YAAAjrB,QAAA,WAEAgrB,EAAAxuB,KAAAC,MAAAouB,EAAA,WACAG,GAAAzB,aAAA0B,EAAA,aAEAF,EAAAC,GAaAhZ,IAAA,SAAAzT,GACA,MAAA4sB,MAAAC,eAAA9tB,OAAAiB,IAcAkrB,IAAA,SAAAvX,IAAAmZ,KACA,GAAAn3B,OAAA,SAAAge,IAAAmZ,IACAhB,EAAA,KACAnd,IAAA,IACAsd,IAAA,IACAlK,GAAA,CAEA,OAAAgL,MAAAp3B,KxBylJM,SAAUtB,EAAQuB,EAAqB3B,GAE7C,YyBtuJA2B,GAAA,aAEA,QAAAo3B,GAAAzE,GACA,KAAAlxB,eAAA21B,IAAA,UAAAA,GAAAzE,EACAlxB,MAAAmxB,SAAAD,GAAA,GAoDA,MAtCAyE,GAAAx3B,UAAAy3B,QAAA,SAAA1E,GAEA,UADAA,KAAAlxB,KAAAmxB,UACAvqB,KAAAivB,UAWAF,EAAAx3B,UAAAixB,YAAA,SAAA8B,GAEA,UADAA,KAAAlxB,KAAAmxB,UACAvqB,KAAAmV,IAAA,EAAAnV,KAAAivB,WAWAF,EAAAx3B,UAAA23B,QAAA,SAAA5E,GAIA,IAHA,GAAA6E,GAAA7E,GAAAlxB,KAAAmxB,SACA6E,EAAApvB,KAAAivB,SACApK,EAAA,EACAuK,GAAApvB,KAAAqvB,KAAAF,IACAC,GAAApvB,KAAAivB,SACApK,GAAA,CAEA,WAIAkK,MzB0vJM,SAAU34B,EAAQuB,EAAqB3B,GAE7C,Y0BpzJA2B,GAAA,WAAA8c,EAAAlF,EAAA+f,GACA/f,KAAA,QACAkF,EAAAzV,iBACAyV,EAAAzV,iBAAAuQ,EAAA+f,GAAA,GACK7a,EAAA8a,YACL9a,EAAA8a,YAAA,KAAAhgB,EAAA+f,GAEAvhB,QAAAoH,IAAA,4BAAAV,K1B00JM,SAAUre,EAAQuB,EAAqB3B,GAE7C,Y2Br1JA2B,GAAA,WAAA63B,GAGA,QAAAC,GAAAnqB,GACAA,EAAA4X,SAAAsS,GAAAlqB,EAAAkF,OAAAklB,IACApqB,EAAAwnB,iBAAAxnB,EAAAwnB,kBACA6C,EAAA71B,QAAA61B,EAAAC,WALA,GAAAD,MACAD,EAAA,sBAOA,OAAAF,GAAAK,aACAL,EAAAxwB,iBACAwwB,EAAAxwB,iBAAA,UAAAywB,GAAA,GACSD,EAAAD,aACTC,EAAAD,YAAA,YAAAE,GAEA,SAAA5O,GAA8B8O,EAAAxyB,KAAA0jB,GAAmB2O,EAAAK,YAAAH,EAAA,OAGjD,SAAA7O,GAA8B5E,WAAA4E,EAAA,KAE7B9hB,S3Bs2JK,SAAU3I,EAAQuB,EAAqB3B,GAE7C,YACqB,IAAIo0B,GAAyCp0B,EAAoB,E4B73JtF2B,GAAA,aAQA,QAAAm4B,GAAAC,GACA,KAAA32B,eAAA02B,IAAA,UAAAA,GAAAC,EACA32B,MAAA42B,MAAAD,GAAA,EA6GA,MArHAD,GAAAv4B,WACA04B,YACAC,WAAA,GAAAvlB,MACAwlB,SAAA,GAAAxlB,OAkBAmlB,EAAAzZ,WAAA,SAAAhgB,EAAAiN,GACA,GAAA8sB,GAAA,GAAAzlB,KAEA,IADA,IACAylB,EAAAN,EAAAK,SAAA,CACA,GAAA5N,GAAAzrB,OAAAszB,EAAA,KAAAgG,EAAA,eACAriB,SAAAoH,IAAAoN,EAAA,IAAAlsB,EAAA,QAAAiN,GACAwsB,EAAAK,SAAAC,IAYAN,EAAA/c,gBAAA,SAAAzP,EAAAiM,GACAugB,EAAAI,WAAA,GAAAvlB,MACAmlB,EAAAG,YACA3sB,GAAAwsB,EAAAzoB,YAAA/D,EAAAiM,IAOAugB,EAAAvhB,eAAA,WACAuhB,EAAAI,WAAA,GAAAvlB,OAaAmlB,EAAAzoB,YAAA,SAAA/D,EAAAiM,EAAA8gB,GACA,YAAA9gB,EAAA,CAEA,WAAAA,EAAA,CAEA,GAAA+gB,GAAAR,EAAAI,UACAJ,GAAAI,WAAA,GAAAvlB,MACArH,EAAAtD,KAAAuD,MAAAusB,EAAAI,WAAAI,GAAA,IACA,KAAAhtB,EAEAA,IAAAiJ,WAAA/I,QAAA,0BAAyD,OAEzD,GAAA6sB,EAAA,CACA,GAAAl3B,GAAA22B,EAAAG,SAAAn2B,OAAA,CACAg2B,GAAAG,SAAA92B,IAAAmK,MAEAwsB,GAAAG,SAAA9yB,KAAAmG,EAEAwsB,GAAAniB,SAAAmiB,EAAAG,UACAliB,QAAAoH,IAAAre,OAAAszB,EAAA,KAAA0F,EAAAI,WAAA,qBAAA5sB,KASAwsB,EAAAniB,SAAA,SAAAoH,GAEA,OADAwb,GAAA,GACAl6B,EAAA0e,EAAAjb,OAAA,EAA0C,GAAAzD,EAAQA,IAClDk6B,GAAAxb,EAAA1e,GAAA,MAEAy5B,GAAAU,cAAA,WAAAD,IAWAT,EAAAU,cAAA,SAAAC,EAAAF,GACA,GAAA5d,GAAAhX,SAAAmW,cAAA,OACAa,GAAA9T,UAAA,4EAEA0xB,EAAA,UACA50B,SAAAC,eAAA60B,GACAtP,gBAAAxO,QAIAmd,M5B+4JM,SAAU15B,EAAQuB,EAAqB3B,GAE7C,Y6B3gKA,SAAA06B,GAAAD,GAEA,GAAAnR,GAAA3jB,SAAAC,eAAA60B,GAEA/e,EAAA/V,SAAAmW,cAAA,WACAJ,GAAA6N,aAAA,kBACA5jB,SAAAgX,KAAA2G,YAAA5H,GAEAA,EAAA9Z,MAAA,KAAA0nB,EAAAqR,UAAArR,EAAA1nB,MAAA0nB,EAAAqR,UACAC,EAAAlf,GAEA/V,SAAAgX,KAAAd,YAAAH,GAQA,QAAAkf,GAAAtR,GAEA,GAAArO,UAAA4f,UAAA1C,MAAA,sBAEA,GAAA2C,GAAAxR,EAAAyR,gBACAC,EAAA1R,EAAA0R,QAEA1R,GAAAyR,iBAAA,EACAzR,EAAA0R,UAAA,CAEA,IAAA/vB,GAAAtF,SAAAs1B,aACAhwB,GAAAiwB,mBAAA5R,EAEA,IAAA/K,GAAAxV,OAAAoyB,cACA5c,GAAA6c,kBACA7c,EAAA8c,SAAApwB,GACAqe,EAAAgS,kBAAA,UAEAhS,EAAAyR,gBAAAD,EACAxR,EAAA0R,eAGA1R,GAAAmM,QAGA9vB,UAAA41B,YAAA,QArDA55B,EAAA,EAAA+4B,G7BglKM,SAAUt6B,EAAQuB,EAAqB3B,GAE7C,Y8B/jKA2B,GAAA,WAAAiG,EAAAknB,EAAAwK,EAAAkC,EAAAC,EAAAC,GAGA,GAFApC,KAAA,SAAA1xB,GAAiC,MAAAA,GAAAqnB,WACjCuM,KAAA,GACA1M,EAAA,QACA2M,MAAA3M,EAAAhrB,OAAA,EACA43B,MAAA,CAGA,KAFA,GAAAC,GACAC,EACAJ,GAAAC,GAAA,CAGA,GAFAE,EAAA3xB,KAAAC,MAAAuxB,EAAAC,GAAA,KACAG,EAAAtC,EAAAxK,EAAA6M,OACA/zB,EAAA,MAAA+zB,EACA/zB,GAAAg0B,EAAAH,EAAAE,EAAA,EACAH,EAAAG,EAAA,EAGA,GAAAD,EACA,QAMA,IAHAF,EAAAxxB,KAAA0Q,IAAA1Q,KAAAyb,IAAA,EAAA+V,GAAA1M,EAAAhrB,OAAA,GACA23B,EAAAzxB,KAAAyb,IAAA,EAAAzb,KAAA0Q,IAAA+gB,EAAA3M,EAAAhrB,OAAA,IACA63B,EAAA3xB,KAAAyb,IAAA+V,EAAAxxB,KAAA0Q,IAAAihB,EAAAF,IACAA,EAAAD,EAAA,CACA,GAAAK,GAAAJ,CACAA,GAAAD,EACAA,EAAAK,EAGA,MAAAvC,GAAAxK,EAAA6M,IAAA/zB,EACAA,EAAA0xB,EAAAxK,EAAA6M,IAAArC,EAAAxK,EAAA2M,IAAA7zB,EACA+zB,EAEAF,EAGAnC,EAAAxK,EAAA2M,KAAA7zB,KAAA0xB,EAAAxK,EAAA6M,IACAF,EACa7zB,EAAA0xB,EAAAxK,EAAA0M,IAAAlC,EAAAxK,EAAA6M,IAAA/zB,EACb4zB,EAEAG,I9B6lKM,SAAUv7B,EAAQuB,EAAqB3B,GAE7C,Y+BnoKA2B,GAAA,aAEA,QAAAm6B,GAAAxC,EAAAyC,GACA,KAAA34B,eAAA04B,IAAA,UAAAA,GAAAxC,EAAAyC,EAEA34B,MAAA44B,MAAA,qBACA1C,EACA,SAAA2C,GACA,gBAAAA,EAAA,IAA2DA,EACjCA,EAAAr0B,KAE1BxE,KAAA84B,SAAA,qBACAH,EACA,SAAAE,GACA,gBAAAA,EAAA,IAAyDA,EAC/BA,EAAA3lB,KAE1BlT,KAAA+4B,SAyKA,MA9JAL,GAAAv6B,UAAA66B,QAAA,SAAAvN,GAIA,IAFA,GAAAvY,GAAAlT,KAAA+4B,MAAAtN,GACAjnB,EAAAxE,KAAA44B,MAAA1lB,GACA,EAAAuY,GAAA,CAEA,GAAAptB,GAAAuI,KAAAC,OAAA4kB,EAAA,KAEA,IAAAzrB,KAAA44B,MAAA54B,KAAA+4B,MAAA16B,KAAAmG,EAAA,KAEAxE,MAAA+4B,MAAAtN,GAAAzrB,KAAA+4B,MAAA16B,GACA2B,KAAA+4B,MAAA16B,GAAA6U,EACAuY,EAAAptB,IAUAq6B,EAAAv6B,UAAA86B,UAAA,SAAAxN,GAMA,IAJA,GAAAvY,GAAAlT,KAAA+4B,MAAAtN,GACAjnB,EAAAxE,KAAA44B,MAAA1lB,GACAmB,EAAArU,KAAA+4B,MAAAr4B,OAEA,EAAA+qB,EAAA,EAAApX,GAAA,CACA,GAAAwC,GAAA,EAAA4U,EAAA,EACA3U,EAAAD,EAAA,CAIA,IAFAC,EAAAzC,GAAArU,KAAA44B,MAAA54B,KAAA+4B,MAAAliB,IAAA7W,KAAA44B,MAAA54B,KAAA+4B,MAAAjiB,MAAAD,EAAAC,GAEAtS,EAAAxE,KAAA44B,MAAA54B,KAAA+4B,MAAAliB,IAAA,KAEA7W,MAAA+4B,MAAAtN,GAAAzrB,KAAA+4B,MAAAliB,GACA7W,KAAA+4B,MAAAliB,GAAA3D,EACAuY,EAAA5U,IAWA6hB,EAAAv6B,UAAA+6B,KAAA,SAAAzN,GACA,KAAAzrB,KAAA+4B,MAAAr4B,QAAA+qB,GAAA,CAEA,GAAA2J,GAAAp1B,KAAA+4B,MAAAtN,GACAvY,EAAAlT,KAAA+4B,MAAAtJ,MACApb,EAAArU,KAAA+4B,MAAAr4B,MACA,IAAA+qB,IAAApX,EAAA,MAAA+gB,EAGA,IADAp1B,KAAA+4B,MAAAtN,GAAAvY,EACA,IAAAmB,EAAA,MAAA+gB,EAGA,IAAA5wB,GAAAxE,KAAA44B,MAAA1lB,GACA7U,EAAAuI,KAAAC,OAAA4kB,EAAA,KACA,MAAAA,GAAAjnB,EAAAxE,KAAA44B,MAAA54B,KAAA+4B,MAAA16B,IAEA2B,KAAAg5B,QAAAvN,OACS,CACT,GAAA5U,GAAA,EAAA4U,EAAA,EACA3U,EAAAD,EAAA,CACAA,GAAAxC,IAEAyC,EAAAzC,GAAArU,KAAA44B,MAAA54B,KAAA+4B,MAAAliB,IAAA7W,KAAA44B,MAAA54B,KAAA+4B,MAAAjiB,MAAAD,EAAAC,GAEA9W,KAAA44B,MAAA54B,KAAA+4B,MAAAliB,IAAArS,GAAAxE,KAAAi5B,UAAAxN,IAGA,MAAA2J,KAUAsD,EAAAv6B,UAAA4F,KAAA,SAAAmP,GAEAlT,KAAA+4B,MAAAh1B,KAAAmP,GACAlT,KAAAg5B,QAAAh5B,KAAA+4B,MAAAr4B,OAAA,GACAV,KAAAm5B,aACAn5B,KAAAo5B,gBASAV,EAAAv6B,UAAAsxB,IAAA,WAEA,GAAA2F,GAAAp1B,KAAA+4B,MAAA,GAEA7lB,EAAAlT,KAAA+4B,MAAAtJ,KAMA,OALA,GAAAzvB,KAAA+4B,MAAAr4B,SAEAV,KAAA+4B,MAAA,GAAA7lB,EACAlT,KAAAi5B,UAAA,IAEA7D,GAUAsD,EAAAv6B,UAAAyrB,IAAA,SAAA1W,GAUA,QAAArS,GAAAuG,EAAAnK,GACA,MAAA+C,MAAA84B,SAAA1xB,KAAA8L,IACAuY,EAAAxuB,GACA,GAXA,GAAAwuB,IAAA,CACA,IAAAzrB,KAAA+4B,MAAAhrB,KAAAlN,EAAAb,MAEA,MAAAA,MAAAk5B,KAAAzN,IAmBAiN,EAAAv6B,UAAA2c,IAAA,WACA,MAAA9a,MAAA+4B,MAAA,IAQAL,EAAAv6B,UAAAkW,KAAA,WACA,MAAArU,MAAA+4B,MAAAr4B,QAIAg4B,M/BiqKM,SAAU17B,EAAQuB,EAAqB3B,GAE7C,YgC12KA,SAAAy8B,GAAAhe,GACArb,KAAAs5B,SAAAje,EACArb,KAAAu5B,YAGAle,EAAA1U,MAAA6yB,SAAA,WAEAx5B,KAAAu5B,SAAAh3B,SAAAmW,cAAA,OACA+gB,EAAAz5B,KAAAu5B,UAA8BG,WAAA,wBAC9BF,SAAA,WAAA/yB,MAAA,OAAAvE,OAAA,OAAA4Y,IAAA,IAAAD,KAAA,IACA8e,iBAAA,SAEA35B,KAAAs5B,SAAApZ,YAAAlgB,KAAAu5B,UA2MA,QAAAK,GAAAxyB,GAA+ByyB,EAAAzyB,EAAApH,KAAA85B,EAAAC,GAC/B,QAAAC,GAAA5yB,GAA+ByyB,EAAAzyB,EAAApH,KAAAi6B,EAAAC,GAC/B,QAAAC,GAAA/yB,GAA+ByyB,EAAAzyB,EAAApH,KAAAo6B,EAAAC,GAC/B,QAAAC,GAAAlzB,GAA+ByyB,EAAAzyB,EAAApH,KAAAu6B,EAAAC,GAC/B,QAAAC,GAAArzB,GAA+ByyB,EAAAzyB,EAAApH,KAAA06B,EAAAC,GAC/B,QAAAC,GAAAxzB,GAA+ByyB,EAAAzyB,EAAApH,KAAA66B,EAAAC,GAC/B,QAAAC,GAAA3zB,GAA+ByyB,EAAAzyB,EAAApH,KAAAg7B,EAAAC,GAC/B,QAAAC,GAAA9zB,GAA+ByyB,EAAAzyB,EAAApH,KAAAm7B,EAAAC,GAC/B,QAAAC,GAAAj0B,GAA+ByyB,EAAAzyB,EAAApH,KAAAs7B,EAAAC,GAE/B,QAAAzB,GAAA1yB,GAAgCo0B,EAAAp0B,GAAaq0B,KAAA,EAAAC,KAAA,EAAAj1B,MAAA,EAAAvE,OAAA,IAC7C,QAAA+3B,GAAA7yB,GAAgCo0B,EAAAp0B,GAAaq0B,KAAA,EAAAC,KAAA,EAAAj1B,MAAA,EAAAvE,QAAA,IAC7C,QAAAk4B,GAAAhzB,GAAgCo0B,EAAAp0B,GAAaq0B,KAAA,EAAAC,KAAA,EAAAj1B,MAAA,EAAAvE,OAAA,IAC7C,QAAAq4B,GAAAnzB,GAAgCo0B,EAAAp0B,GAAaq0B,KAAA,EAAAC,KAAA,EAAAj1B,OAAA,EAAAvE,OAAA,IAC7C,QAAAw4B,GAAAtzB,GAAgCo0B,EAAAp0B,GAAaq0B,KAAA,EAAAC,KAAA,EAAAj1B,MAAA,EAAAvE,OAAA,IAC7C,QAAA24B,GAAAzzB,GAAgCo0B,EAAAp0B,GAAaq0B,KAAA,EAAAC,KAAA,EAAAj1B,OAAA,EAAAvE,QAAA,IAC7C,QAAA84B,GAAA5zB,GAAgCo0B,EAAAp0B,GAAaq0B,KAAA,EAAAC,KAAA,EAAAj1B,MAAA,EAAAvE,QAAA,IAC7C,QAAAi5B,GAAA/zB,GAAgCo0B,EAAAp0B,GAAaq0B,KAAA,EAAAC,KAAA,EAAAj1B,OAAA,EAAAvE,OAAA,IAC7C,QAAAo5B,GAAAl0B,GAAgCo0B,EAAAp0B,GAAaq0B,KAAA,EAAAC,KAAA,EAAAj1B,MAAA,EAAAvE,OAAA,IAE7C,QAAA63B,GAAA3yB,GAA+Bu0B,EAAA7B,EAAAC,GAC/B,QAAAG,GAAA9yB,GAA+Bu0B,EAAA1B,EAAAC,GAC/B,QAAAG,GAAAjzB,GAA+Bu0B,EAAAvB,EAAAC,GAC/B,QAAAG,GAAApzB,GAA+Bu0B,EAAApB,EAAAC,GAC/B,QAAAG,GAAAvzB,GAA+Bu0B,EAAAjB,EAAAC,GAC/B,QAAAG,GAAA1zB,GAA+Bu0B,EAAAd,EAAAC,GAC/B,QAAAG,GAAA7zB,GAA+Bu0B,EAAAX,EAAAC,GAC/B,QAAAG,GAAAh0B,GAA+Bu0B,EAAAR,EAAAC,GAC/B,QAAAG,GAAAn0B,GAA+Bu0B,EAAAL,EAAAC,GAc/B,QAAA9B,GAAApe,EAAA1U,EAAAi1B,GAEAA,QACAA,EAAA,kBAAAA,EAAA,yBAEA,QAAA19B,KAAA09B,GAAAvgB,EAAA1U,MAAAzI,GAAA09B,EAAA19B,EAEA,QAAAA,KAAAyI,GAAA0U,EAAA1U,MAAAzI,GAAAyI,EAAAzI,GAiBA,QAAA27B,GAAAzyB,EAAAiU,EAAAmgB,EAAAG,GAEA,GAAAzvB,GAAA,cAAA9E,EAAA+O,KAAA/O,IAAAkqB,eAAA,EACAzmB,GAAAgxB,MAAA3vB,EAAA2vB,MACAhxB,EAAAixB,MAAA5vB,EAAA4vB,KAEA,IAAAC,GAAA1gB,EAAA9U,qBACAsE,GAAAmxB,WAAAD,EAAAC,WACAnxB,EAAAoxB,UAAAF,EAAAE,SAEA,IAAAt1B,GAAApE,SAAA25B,YAAAC,iBAAAJ,EACAlxB,GAAAuxB,WAAA/H,SAAA1tB,EAAA01B,iBAAA,mBACAxxB,EAAAyxB,UAAAjI,SAAA1tB,EAAA01B,iBAAA,kBACAxxB,EAAApE,MAAAs1B,EAAAv1B,aAAA,EACAqE,EAAA3I,OAAA65B,EAAAxmB,cAAA,CAMA,IAAAgnB,GAAAh6B,SAAAC,eAAA,UACA+5B,KACAA,EAAAh6B,SAAAmW,cAAA,OACA6jB,EAAAh4B,GAAA,UACA8W,EAAA7C,cAAA0H,YAAAqc,IAEA9C,EAAA8C,GACa91B,MAAAd,OAAAe,WAAA,KACbxE,OAAAyD,OAAAmB,YAAA,KACA0yB,SAAA,QAAA1e,IAAA,IAAAD,KAAA,MAGAkhB,EAAAS,UAAAC,IAAA,OAEA,IAAAC,KAAAC,MAA2CC,SAAA,EAE3Cr6B,UAAAgX,KAAA3T,iBAAA,YAAA41B,EAAAkB,GACAn6B,SAAAgX,KAAA3T,iBAAA,YAAA41B,EAAAkB,GAEAH,EAAA32B,iBAAA,UAAA+1B,EAAAe,GACAH,EAAA32B,iBAAA,WAAA+1B,EAAAe,GACAn6B,SAAAgX,KAAA3T,iBAAA,aAAA+1B,EAAAe,GACAn6B,SAAAgX,KAAA3T,iBAAA,aAAA+1B,EAAAe,GAIA,QAAAC,KACA,GAAAE,IAAA,CACA,KACA,GAAAC,IACAF,cACAC,GAAA,IAGAE,EAAA,YAEAp3B,QAAAC,iBAAA,eAAAm3B,EAAAD,GACAn3B,OAAA4rB,oBAAA,eAAAwL,EAAAD,GACK,MAAAE,IACL,MAAAH,GAeA,QAAArB,GAAAp0B,EAAA61B,GAEA,GAAA/wB,GAAA,cAAA9E,EAAA+O,KAAA/O,IAAAkqB,eAAA,EAEAlqB,GAAAkU,gBAEA,IAAA4hB,GAAA36B,SAAAyD,uBAAA,UACAk3B,KACAA,EAAAv2B,MAAAkU,KAAAhQ,EAAAmxB,WAAAnxB,EAAAuxB,WACAa,EAAAxB,MAAAvvB,EAAA2vB,MAAAhxB,EAAAgxB,OAAA,KACAqB,EAAAv2B,MAAAmU,IAAAjQ,EAAAoxB,UAAApxB,EAAAyxB,UACAW,EAAAvB,MAAAxvB,EAAA4vB,MAAAjxB,EAAAixB,OAAA,KACAoB,EAAAv2B,MAAAF,MAAAoE,EAAApE,MACAw2B,EAAAx2B,OAAAyF,EAAA2vB,MAAAhxB,EAAAgxB,OAAA,KACAqB,EAAAv2B,MAAAzE,OAAA2I,EAAA3I,OACA+6B,EAAA/6B,QAAAgK,EAAA4vB,MAAAjxB,EAAAixB,OAAA,MAaA,QAAAH,GAAAH,EAAAG,GAEAp5B,SAAAgX,KAAAgY,oBAAA,YAAAiK,GAAA,GACAj5B,SAAAgX,KAAAgY,oBAAA,YAAAiK,GAAA,GACAj5B,SAAAgX,KAAAgY,oBAAA,aAAAoK,GAAA,GACAp5B,SAAAgX,KAAAgY,oBAAA,aAAAoK,GAAA,EAEA,IAAAuB,GAAA36B,SAAAyD,uBAAA,UACAk3B,MAAAV,UAAApW,OAAA,OAEA,IAAAmW,GAAAh6B,SAAAC,eAAA,UACA+5B,IAAkBA,EAAA/jB,cAAAC,YAAA8jB,GhCi+Jeh+B,EAAuB,EAAI86B,CACvC,IgC51KrBxuB,IhC41KkEjO,EAAoB,MgCl1KtFy8B,GAAAlf,qBAAA,WAGA,OAFAhU,GAAA5D,SAAAyD,uBAAA,mBAEA/I,EAAA,EAAkBA,EAAAkJ,EAAAzF,OAAqBzD,IAAA,CACvC,GAAAo8B,GAAAlzB,EAAAlJ,IAEAkgC,eACAC,kBAsBA/D,EAAAgE,aAAA,SAAAlyB,EAAAkQ,EAAA9W,EAAA+4B,EAAA7I,EAAA9tB,GACAwE,KAAA,aACAkQ,KAAA9Y,SAAAgX,KACA5S,QACApC,KAAA,aACA+4B,KAAA,GACA7I,KAAA,EAEA,IAAAlc,GAAAhW,SAAAC,eAAA+B,EACAgU,IAAcA,EAAAC,cAAAC,YAAAF,GAEdA,EAAAhW,SAAAmW,cAAA,OACAH,EAAAhU,KACA8W,EAAA6E,YAAA3H,GACAA,EAAA9S,UAAA,oBACAg0B,EAAAlhB,EAAAglB,SAAA,IACa92B,MAAA,OAAAvE,OAAA,OAAAs7B,OAAA,EAAA7D,iBAAA,QACb,IAAApgB,GAAAhX,SAAAmW,cAAA,QACAnT,EAAA,SAAA4F,EAAA,SACAoO,GAAAnO,YAAA,GACAmO,EAAAlO,mBAAA,aAAA9F,GAEAgT,EAAAglB,SAAA,GAAAxV,gBAAAxO,OAEAkgB,EAAAlhB,EAAA5R,GACaF,MAAA62B,EAAA,IAAAp7B,OAAAuyB,EAAA,IAAA5Z,KAAA,GAAAyiB,EAAA,MAAAxiB,IAAA,GAAA2Z,EAAA,MACb+E,SAAA,WAAAiE,UAAA,KACA/D,WAAA,2BAAA8D,OAAA,sBACA,GAAAnE,GAAA9gB,GAEAmlB,cAAAn5B,GACA44B,eACAC,iBAcA/D,EAAAl7B,UAAAu/B,cAAA,SAAAn5B,EAAAoC,GAIA,GAAA2R,GAAA/V,SAAAmW,cAAA,QACAJ,GAAAnC,KAAA,WACAmC,EAAA/T,OAAA,aACA+T,EAAAkkB,UAAAC,IAAA,aACAnkB,EAAAlS,SAAA,EACAkS,EAAA7T,SAAA,WACA,GAAA2C,GAAApH,KAAAwY,2BACApR,GAAAoR,cAAAC,YAAArR,IAEApH,KAAAu5B,SAAArZ,YAAA5H,EAGA,IAAAvH,GAAAxO,SAAAmW,cAAA,QAOA,OANA3H,GAAAyrB,UAAAC,IAAA,cACA1rB,EAAA4sB,QAAArlB,EAAA/T,GACAwM,EAAAmP,YAAA3d,SAAAmW,cAAA,SACA+gB,EAAA1oB,EAAApK,GAA6BmU,IAAA,MAAA8iB,MAAA,MAC7BpE,SAAA,WAAAE,WAAA,gBACA15B,KAAAu5B,SAAArZ,YAAAnP,GACA/Q,MAWAq5B,EAAAl7B,UAAAg/B,aAAA,SAAAx2B,GAKA,MAHA3G,MAAA69B,iBAAAjE,EAAAjzB,GACam3B,OAAA,OAAAhjB,IAAA,IAAAD,KAAA,MAAApU,MAAA,OAAAvE,OAAA,QACb,UACAlC,MAWAq5B,EAAAl7B,UAAAi/B,cAAA,SAAAz2B,GAkBA,MAhBA3G,MAAA69B,iBAAA7D,EAAArzB,GACam3B,OAAA,YAAAhjB,IAAA,IAAAD,KAAA,MAAApU,MAAA,SACbzG,KAAA69B,iBAAA1D,EAAAxzB,GACam3B,OAAA,YAAAhjB,IAAA,OAAAD,KAAA,MAAApU,MAAA,SACbzG,KAAA69B,iBAAAvD,EAAA3zB,GACam3B,OAAA,YAAAhjB,IAAA,MAAAD,KAAA,IAAA3Y,OAAA,SACblC,KAAA69B,iBAAApD,EAAA9zB,GACam3B,OAAA,YAAAhjB,IAAA,MAAAD,KAAA,OAAA3Y,OAAA,SACblC,KAAA69B,iBAAAjD,EAAAj0B,GACam3B,OAAA,cAAAhjB,IAAA,IAAAD,KAAA,MACb7a,KAAA69B,iBAAA9C,EAAAp0B,GACam3B,OAAA,cAAAhjB,IAAA,IAAAD,KAAA,SACb7a,KAAA69B,iBAAA3C,EAAAv0B,GACam3B,OAAA,cAAAhjB,IAAA,OAAAD,KAAA,MACb7a,KAAA69B,iBAAAxC,EAAA10B,GACam3B,OAAA,cAAAhjB,IAAA,OAAAD,KAAA,SACb7a,MAmBAq5B,EAAAl7B,UAAA0/B,iBAAA,SAAA3H,EAAAvvB,EAAAi1B,EAAAvV,EAAA9G,GACA5Y,QACAi1B,QACAvV,KAAA,SACA,QAAAnoB,KAAAyI,GAAAi1B,EAAA19B,GAAAyI,EAAAzI,EAEA,IAAAqa,GAAAhW,SAAAmW,cAAA,MACAH,GAAAikB,UAAAC,IAAAld,GAAA,oBAGA,YAAA8G,EACAA,EAAA,oCACK,WAAAA,IACLA,EAAA,gBAAAuV,EAAA/gB,MAAA,qBAAA+gB,EAAA9gB,KAAA,QAGA2e,EAAAlhB,EAAAqjB,GACan1B,MAAA,MAAAvE,OAAA,MAAAs3B,SAAA,WAAAnT,cAEbrmB,KAAAu5B,SAAArZ,YAAA3H,GAEAA,EAAA3S,iBAAA,YAAAswB,GAAA,GACA3d,EAAA3S,iBAAA,aAAAswB,GAAA,IA8CAmD,EAAA1e,UAAA8e,GhCwgLM,SAAUz8B,EAAQuB,EAAqB3B,GAE7C,YACqB,IAAImhC,GAAgDnhC,EAAoB,GAC5DA,GAAoBU,EAAEiB,EAAqB,IAAK,WAAa,MAAOw/B,GAAiD,KAUhJ,SAAU/gC,EAAQuB,EAAqB3B,GAE7C,YiChxLA2B,GAAA,aAOA,QAAAwM,GAAAizB,EAAAC,EAAAj9B,GACA,KAAAhB,eAAA+K,IAAA,UAAAA,GAAAizB,EAAAC,EAAAj9B,EAGAhB,MAAAk+B,YAAAl9B,GAAA,KACA,IAAAm9B,GAAAx4B,OAAA3F,KAAAk+B,aAAAnzB,MAWA,OAVAozB,MAAApzB,EAEA/K,KAAAo+B,QAAAJ,EACAh+B,KAAAq+B,MAAAL,GAAA,QACAh+B,KAAAs+B,KAAAL,EAAA,IAAAA,EAAA,WACAj+B,KAAAu+B,KAAAN,EAAA,KAAAA,EAAA,YACAj+B,KAAAw+B,MAAAx+B,KAAAs+B,KACAt+B,KAAAy+B,UAAA,GACAz+B,KAAA0+B,MAAA,OAEA5+B,KAAAq+B,EAAAH,IACAG,EAAAH,GAAAh+B,KACAA,MAEAm+B,EAAAH,GA4YA,MAraAjzB,GAAA5M,UAAAoU,YACAxH,EAAA5M,UAAAoU,SAAAosB,gBACA5zB,EAAA5M,UAAAoU,SAAAqsB,eAgCA7zB,EAAA8zB,GAAA,SAAA1V,GACA,GAAA2V,GAAA3V,EAAA5kB,EACA,WAAA4kB,EAAAhT,KACAnW,KAAA7B,UAAAoU,SAAA4W,EAAA5rB,MAAA4rB,EAAA5kB,GAAA+vB,OAAAnL,EAAA5kB,GAAA5E,QAAA,QACS,WAAAwpB,EAAAhT,KACTnW,KAAA7B,UAAAoU,SAAA4W,EAAA5kB,KAAA4kB,EAAA3qB,MACS,eAAA2qB,EAAAhT,MACTnW,KAAA7B,UAAAoU,SAAA4W,EAAA5kB,IAAA4kB,EAAA3qB,MAAA81B,OAAAnL,EAAA3qB,MAAAmB,QAAA,QACAm/B,EAAA3V,EAAA3qB,OAEAwB,KAAA7B,UAAAoU,SAAA4W,EAAA5kB,IAAA4kB,EAAA3qB,KAGA,IAAA03B,GAAAnrB,EAAAkP,YAAA8kB,gBAAAD,EACA,uBAAA5I,KASAnrB,EAAAkP,UAAA,SAAA+jB,GACA,UAAAjzB,GAAAizB,IAcAjzB,EAAA5M,UAAA8M,UAAA,SAAA7H,GACA,GAAA47B,GAAAh/B,KAAA4E,cAAAxB,GACA67B,EAAAl0B,EAAA5M,UAAAoU,SAAAqsB,YAAA5+B,KAAAq+B,KAAAW,EACA,OAAAC,QAAAn/B,KAAAm/B,EAAAzgC,MAGAygC,EAAAh0B,YAFA+zB,GAUAj0B,EAAA5M,UAAA+gC,aAAA,SAAA36B,GAEA,MAAAwG,GAAA5M,UAAAoU,SAAAhO,IAOAwG,EAAA5M,UAAAyG,cAAA,SAAAxB,GACA,GAAAoB,GAAAuG,EAAA5M,UAAAoU,SAAAvS,KAAAq+B,KAAAj7B,EAEA,KAAAoB,EAAA,CACA,GAAA4C,GAAA7E,SAAAC,eAAAxC,KAAAq+B,KAAAj7B,EACA,IAAAgE,GAAA,gBAAAA,GAAA+3B,cAAA,CACA,GAAAhW,GAAA/hB,IAAA+3B,eAAA3gC,KACAgG,GAAA2kB,EAAAmL,OAAAnL,EAAAxpB,QAAA,QACAoL,EAAA5M,UAAAoU,SAAAvS,KAAAq+B,KAAAj7B,GAAAoB,GAGA,MAAAA,IAOAuG,EAAA5M,UAAA6a,cAAA,SAAA5V,EAAAoB,GACAuG,EAAA5M,UAAAoU,SAAAvS,KAAAq+B,KAAAj7B,GAAAoB,GAUAuG,EAAA5M,UAAA4gC,gBAAA,SAAAx6B,GACA,MAAAwG,GAAA5M,UAAAoU,SAAAosB,aAAAp6B,IAQAwG,EAAA5M,UAAA+b,iBAAA,SAAA9W,GACA,MAAA2H,GAAA5M,UAAAoU,SAAAosB,aAAA3+B,KAAAq+B,KAAAr+B,KAAA4E,cAAAxB,KAOA2H,EAAA5M,UAAAihC,YAAA,SAAAh8B,GACA,MAAA2H,GAAA5M,UAAAoU,SAAAosB,aAAA3+B,KAAAq+B,KAAAj7B,IAOA2H,EAAA5M,UAAAkhC,YAAA,SAAAj8B,EAAA8yB,GACAnrB,EAAA5M,UAAAoU,SAAAosB,aAAA3+B,KAAAq+B,KAAAj7B,GAAA8yB,GASAnrB,EAAA5M,UAAA0hB,QAAA,WACA,MAAA7f,MAAAw+B,MAAAx+B,KAAAu+B,MAOAxzB,EAAA5M,UAAAiZ,IAAA,SAAAhU,EAAAoB,GACAxE,KAAAxB,MAAAwB,KAAAq+B,KAAAj7B,GAAAoB,GASAuG,EAAA5M,UAAAJ,EAAA,SAAAue,GAGA,MAFAA,MAAA,GACAtc,KAAAw+B,OAAAx+B,KAAAu+B,KAAAjiB,EAAAtc,KAAAs+B,KACAt+B,MAOA+K,EAAA5M,UAAAmhC,MAAA,WAEA,MADAt/B,MAAAw+B,OAAAx+B,KAAAs+B,KACAt+B,MAOA+K,EAAA5M,UAAAohC,IAAA,WAEA,MADAv/B,MAAAw+B,OAAAx+B,KAAAu+B,KACAv+B,MAOA+K,EAAA5M,UAAAZ,KAAA,SAAA+e,GAGA,MAFAtc,MAAAy+B,UAAAniB,EAAA,SAAAtc,KAAAq+B,KAAA/hB,EAAA,QACAtc,KAAA0+B,MAAApiB,EACAtc,MAOA+K,EAAA5M,UAAA4S,MAAA,SAAA3N,EAAAkZ,EAAAkjB,GAMA,MALAx/B,MAAAw+B,OAAA,WACAp7B,EAAA,QAAApD,KAAAq+B,KAAAj7B,EAAA,UACAo8B,GAAA,SACAljB,GAAA,IACA,aACAtc,MAOA+K,EAAA5M,UAAAshC,YAAA,SAAAr8B,EAAA+S,EAAAupB,EACAC,EAAAC,EAAAp7B,EAAAg7B,EAAAK,EAAAC,GACA,GAAAC,GAAA,aAAAD,EAAA,MAEA,kBAAA3pB,GACAnW,KAAAw+B,OAAA,kBAAAx+B,KAAAq+B,KAAAj7B,EAAA,KAAAs8B,GAAA,SACAC,GAAA,KAAAC,GAAA,kBACA5/B,OAGAA,KAAAw+B,OAAA,SAAAuB,EAAA,KACAJ,GAAA,IACA,gBAAAxpB,EAAA,MACAupB,GAAA,IACA1/B,KAAAy+B,UACA,OAAAz+B,KAAAq+B,KAAAj7B,EAAA,eACApD,KAAAk+B,YAAA,uBACA15B,EAAA,UAAAA,EAAA,UAEAg7B,GAAA,KACAK,EAAA,sBAAoD,IACpD,KACAD,GAAA,IACA,aAEA,UAAAzpB,GAAA0pB,EACA90B,EAAA5M,UAAAoU,SAAAvS,KAAAq+B,KAAAr+B,KAAA0+B,OAAAt7B,EAEA2H,EAAA5M,UAAAoU,SAAAvS,KAAAq+B,KAAAj7B,GADS,WAAA+S,GACT3R,EAEAA,EAEAxE,OAOA+K,EAAA5M,UAAA4kB,OAAA,SAAA3f,EAAAu8B,EAAAC,EAAAp7B,EAAAg7B,EAAAtJ,GAIA,MAHAnrB,GAAA5M,UAAAshC,YAAAtiC,KAAA6C,KAAAoD,EAAA,YACAu8B,EAAAC,EAAAp7B,EAAAg7B,GACAtJ,GAAAl2B,KAAAq/B,YAAAj8B,EAAA8yB,GACAl2B,MAOA+K,EAAA5M,UAAA+L,KAAA,SAAA9G,EAAAu8B,EAAAC,EAAAp7B,EAAAg7B,GAGA,MAFAz0B,GAAA5M,UAAAshC,YAAAtiC,KAAA6C,KAAAoD,EAAA,UACAu8B,EAAAC,EAAAp7B,EAAAg7B,GACAx/B,MAOA+K,EAAA5M,UAAAwZ,MAAA,SAAAvU,EAAAu8B,EAAAC,EAAAC,EAAAL,EAAAtJ,GAKA,MAJAnrB,GAAA5M,UAAAshC,YAAAtiC,KAAA6C,KAAAoD,EAAA,QAAAy8B,EAAA,qBAAyF,GACzFF,EAAAC,EAAA,GAAAJ,EAAAK,EAAA,kBAEA3J,GAAAl2B,KAAAq/B,YAAAj8B,EAAA8yB,GACAl2B,MAOA+K,EAAA5M,UAAA8kB,OAAA,SAAA7f,EAAAu8B,EAAAC,EAAAC,EAAAL,EAAAtJ,GACAnrB,EAAA5M,UAAAshC,YAAAtiC,KAAA6C,KAAAoD,EAAA,SAAAy8B,EAAA,eACAF,EAAAC,EAAA,GAAAJ,EAAAK,EAAA,kBAEA3J,GAAAl2B,KAAAq/B,YAAAj8B,EAAA8yB,EAEA,IAAA8J,GAAAj1B,EAAA5M,UAAAoU,SAAAqsB,YAAA5+B,KAAAq+B,KAAAr+B,KAAA0+B,WACAuB,EAAAjgC,KAAAq+B,KAAAj7B,CAIA,OAFA48B,GADAhgC,KAAAuS,SAAAqsB,YAAAqB,GAAAh1B,aACAg1B,EACAl1B,EAAA5M,UAAAoU,SAAAqsB,YAAA5+B,KAAAq+B,KAAAr+B,KAAA0+B,OAAAsB,EACAhgC,MAOA+K,EAAA5M,UAAA6kB,SAAA,SAAA7M,GAKA,MAJAnW,MAAAkgC,KAAA/pB,GAAA,GACAnW,KAAAw+B,OAAA,IAAAx+B,KAAAkgC,KACA,QAAAlgC,KAAAq+B,KAAAr+B,KAAA0+B,MAAA,6DAEA1+B,MAOA+K,EAAA5M,UAAAglB,OAAA,SAAAhN,GAGA,MAFAnW,MAAAw+B,OAAA,KAAAx+B,KAAAkgC,KAAA,MACAlgC,KAAAkgC,SAAApgC,GACAE,MAQA+K,EAAA5M,UAAAmjB,aAAA,SAAAle,GACA,MAAApD,MAAAuS,SAAAqsB,YAAA5+B,KAAAq+B,KAAAj7B,IAOA2H,EAAA5M,UAAAujB,aAAA,SAAAte,EAAAoB,GACA,MAAAxE,MAAAuS,SAAAqsB,YAAA5+B,KAAAq+B,KAAAj7B,GAAAoB,IAeAuG,EAAA5M,UAAA+kB,IAAA,SAAA9f,EAAAoB,EAAA27B,GACA,GAAAC,GAAAr1B,EAAA5M,UAAAoU,SAAAqsB,YAAA5+B,KAAAq+B,KAAAj7B,KAIA,OAHAg9B,GAAA5hC,UAAAsB,KAAA0E,EAAApB,EAAAoB,EACA47B,EAAAn1B,UAAA,WAA0C,WAAAnL,KAAA0E,EAAApB,EAAAoB,GAC1C47B,EAAAD,UAAA,KACA/8B,GAaA2H,EAAA5M,UAAAkiC,EAAA,SAAAj9B,EAAAk9B,GACA,GAAAF,GAAAr1B,EAAA5M,UAAAoU,SAAAqsB,YAAA5+B,KAAAq+B,KAAAj7B,KAOA,OANAg9B,GAAA5hC,MAAA4E,EACAg9B,EAAAn1B,UAAA,WACAm1B,EAAAn1B,UAAA,SAAAmzB,EAAAh7B,EAAAk9B,GACA,MAAA36B,QAAAtE,IAAA0J,OAAAqzB,GAAAx5B,cAAA07B,GAAAl9B,EAAA,OACa0C,KAAA,KAAA9F,KAAAo+B,QAAAh7B,EAAAk9B,IAEbl9B,GAWA2H,EAAA5M,UAAAmG,QAAA,SAAAlB,EAAAoB,GACA,GAAAD,GAAAvE,KAAAq+B,KAAAj7B,CACAb,UAAAC,eAAA+B,GAAA/F,MAAAgG,EACAjC,SAAAC,eAAA+B,GAAAE,YASAsG,EAAA5M,UAAAoiC,YAAA,SAAAn9B,GACA,GAAAmB,GAAAvE,KAAAq+B,KAAAj7B,CACAb,UAAAC,eAAA+B,GAAA6B,SAAA,EACA7D,SAAAC,eAAA+B,GAAAE,YAIAsG,MjCyyLM,SAAU/N,EAAQuB,EAAqB3B,GAE7C,YkCruMAA,GAAAU,EAAAiB,EAAA,qBAAA8d,IAKA,IAAAA,OACA,WAOA,GAAAmkB,GAAA,SAAAlkB,GACA,oBAAqBwU,KAAAxU,GAAA,eACrB,8EAAAwU,KAAAxU,GAAA,eACA,kDAAAwU,KAAAxU,GAAA,YACA,cAAAwU,KAAAxU,GAAA,mCAAAwU,KAAAxU,GAAA,iBACA,WAAAwU,KAAAxU,GAAA,wBAAAwU,KAAAxU,GAAA,aAIA,KAHA,GAEKjf,GAAAojC,EAAAC,EAFLC,EAAArkB,EAAAskB,UAAA,QAAAx2B,QAAA,wBAAqD,SAAA9L,GACrD,MAAAA,GAAAoC,OAAA,OAAApC,EAAAsiC,UAAA,KACK3jC,EAAA,EACL,IAAAI,EAAAg3B,SAAAsM,EAAAC,UAAA3jC,KAAA,SAAAA,EAAA,cAAAI,EAAA,CACA,IAAAojC,EAAApM,SAAAsM,EAAAC,UAAA3jC,IAAA,YAAAA,GAAA,MACA,SAAAI,KAAA,KAAAojC,EAAA,KACA,GAAApjC,EAAA,KAAsBqjC,EAAA,OAASzjC,GAAA,CAAK,UACpC,MAAAo3B,SAAAsM,EAAAE,OAAA5jC,EAAA,WAAiDyjC,EAAA,OAASzjC,GAAA,CAAK,WAE/D,QAAAI,GAAA,KAAAojC,KAAA,MAAkCC,MAAA,SAAgB,SAAAA,GAAA,QAClD,IAAArjC,EAAA,gBACAA,GAAA,MAAAqjC,GACA,KAAArjC,GAAAojC,EAAA,UAAApjC,GAAAojC,EAAA,WAAAA,EAAAxjC,GAAA,EACAyjC,EAAA,KAAAD,EAAA,eACAC,EAAA,QAEA,MAAAA,IAAA,SAEAI,EAAAC,SACA,2qZAiBAC,KAAWC,KAAQC,EAAA,OACnB,SAAAhkB,GACA,GAAAikB,GAAAC,EAAAnkC,EAAAokC,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IAEjB,SADAkkC,EAAAjkB,EAAAjgB,KACAA,EAAA,IACAmkC,EAAAF,GAAAjkC,EAAA,SAAAA,EAAA,GACAgkC,EAAAG,GAAAD,GACAlkC,EAAA,YAAAA,QAAA6C,KAAAkhC,EAAAG,KAAuDH,EAAAG,GAAAC,KAEtDN,EAAA5jB,MAED,IAAApS,IAAaw2B,WAAUC,QAAQC,SAASC,QAAQC,QAAQC,QAAQC,QAAQC,WAAWC,WAAWC,UAC9FC,GAAaC,QAAOX,WAAWY,OAAOC,UAKtCH,GAAAC,KAAAnuB,MAAA,SAAAwI,GACA,GAAArf,GAAA4Z,KAAAwqB,EAAA/kB,EAAA5b,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjB4Z,EAAA9S,KAAAuY,EAAAtG,WAAA/Y,GAEA,OAAA4Z,IAKAmrB,EAAAC,KAAAtvB,UAAA,SAAAuK,GACA,GAAAjgB,GAAAqB,EAAA,GAAA+iC,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjBqB,GAAAmV,OAAAC,aAAAwJ,EAAAjgB,GAEA,OAAAqB,IAKAwM,EAAAw2B,QAAAxtB,MAAA,SAAAwI,GACA,GAAArf,GAAAI,EAAAwZ,KAAAwqB,EAAA/kB,EAAA5b,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IAIjB,OAAAI,EAAAif,EAAAtG,WAAA/Y,KAAAI,EAAA,QAAAA,GAAA,SAAAA,IAAA,UAAAif,EAAAtG,aAAA/Y,KACA4Z,EAAA9S,KAAA1G,EAEA,OAAAwZ,IAKA/L,EAAAw2B,QAAA3uB,UAAA,SAAAuK,GACA,GAAAjgB,GAAAI,EAAAiB,EAAA,GAAA+iC,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjBqB,IAAAjB,EAAA6f,EAAAjgB,IAAA,MAAAwW,OAAAC,cAAArW,IAAA,kBAAAA,EAAA,OAAAoW,OAAAC,aAAArW,EAEA,OAAAiB,IAEAwM,EAAAw2B,QAAAc,MAAAt3B,EAAAw2B,QAAAe,IAAA,SAAAxrB,GAAsD,MAAAA,IAUtD/L,EAAAy2B,KAAAa,MAAA,SAAAllB,GACA,GAAAjgB,GAAAI,EAAAD,EAAAyZ,KAAAwqB,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjBI,EAAA6f,EAAAjgB,GACAI,EAAA,IAAAwZ,EAAA9S,KAAA1G,GACA,MAAAA,KAAA,MAAAwZ,EAAA9S,KAAA1G,EAAA,QAMAA,EAAA2jC,EAAA3jC,KAAA,MAAAA,EAAA,MAAAwZ,EAAA9S,KAAA,QAAA8S,EAAA9S,MACA3G,EAAAC,IAAA,MAAAA,GAAA,IAAAA,GAAA,MAAAD,SAAA,MAAAA,EAAA,IAAAA,EAAA,KACAC,KAAA,SAIA,OAAAwZ,IASA/L,EAAAy2B,KAAAc,IAAA,SAAAnlB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjBI,EAAA6f,EAAAjgB,GACAI,EAAA,SAAAA,KAAA,IACAwZ,EAAA9S,KAAA,IAAA1G,IAAA,MAAAA,GAIAwZ,EAAA9S,KAAAk9B,EAAAC,GAAA7jC,EAAA,IAAAA,EAAA,IAAAA,EAAA,SAAAA,EAAA6f,IAAAjgB,GAAAI,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,KAEA,OAAAwZ,IAIA/L,EAAAy2B,KAAAe,MAAA,SAAAplB,GACA,GAAAjgB,GAAAI,EAAAD,EAAAyZ,KAAAwqB,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjBI,EAAA6f,EAAAjgB,GACAI,EAAA,IAAAwZ,EAAA9S,KAAA1G,GACAA,EAAA,MAAAwZ,EAAA9S,KAAA,QACA8S,EAAA9S,MACA3G,EAAAC,IAAA,MAAAA,GAAA,IAAAA,GAAA,MAAAD,SAAA,MAAAA,EAAA,IAAAA,EAAA,KACAC,KAAA,SAGA,OAAAwZ,IAEA/L,EAAAy2B,KAAAgB,IAAA,SAAArlB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjBI,EAAA6f,EAAAjgB,GACAI,EAAA,SAAAA,KAAA,IAAAwZ,EAAA9S,KAAA1G,GACAwZ,EAAA9S,KAAAm9B,GAAA7jC,EAAA,IAAAA,EAAA,IAAAA,EAAA,SAAAA,EAAA6f,IAAAjgB,GAAAI,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAEA,OAAAwZ,IAGA/L,EAAA02B,MAAAY,MAAA,SAAAllB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,KACjBI,EAAA6f,EAAAjgB,IAAA,IAAA4Z,EAAA9S,KAAA1G,GACA,MAAAA,KAAA,MAAAwZ,EAAA9S,KAAA,IAAA1G,EAAA,QAKAA,EAAA2jC,EAAA3jC,KAAA,MAAAA,EAAA,MAAAwZ,EAAA9S,KAAA,SACA8S,EAAA9S,KAAA,KAAA1G,IAAA,gBAAAA,GAGA,OAAAwZ,IAEA/L,EAAA02B,MAAAa,IAAA,SAAAnlB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjBI,EAAA6f,EAAAjgB,GACAI,EAAA,IACAwZ,EAAA9S,KAAA1G,EAAA,IAAAA,EAAA6f,IAAAjgB,GAAA,OAEA4Z,EAAA9S,KAAAk9B,EAAAC,EAAA7jC,EAAA,OAAA6f,IAAAjgB,GAAA,KAEA,OAAA4Z,IAEA/L,EAAA02B,MAAAc,MAAA,SAAAplB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,KACjBI,EAAA6f,EAAAjgB,IAAA,IAAA4Z,EAAA9S,KAAA1G,EAAA,IAAAA,IAAA,OACAA,EAAA,MAAAwZ,EAAA9S,KAAA,SACA8S,EAAA9S,KAAA,KAAA1G,IAAA,gBAAAA,GAEA,OAAAwZ,IAEA/L,EAAA02B,MAAAe,IAAA,SAAArlB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjBI,EAAA6f,EAAAjgB,GACAI,EAAA,IAAAwZ,EAAA9S,KAAA1G,EAAA,IAAAA,EAAA6f,IAAAjgB,IACA4Z,EAAA9S,KAAAm9B,EAAA7jC,EAAA,OAAA6f,IAAAjgB,GAAA,IAEA,OAAA4Z,IAIA/L,EAAA22B,KAAAW,MAAA,SAAAllB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,OAAA8hC,GAAA,OAAAp7B,EAAAo7B,EAAA,EACA,KAAAvlC,EAAA,EAAYA,EAAAokC,EAAKpkC,KACjBI,EAAA6f,EAAAjgB,IAAA,KAAAmK,GAAAo7B,EAAA,KAAAp7B,EAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAA,WAAA8S,EAAA9S,KAAA1G,IACA,MAAAA,KAAA,OAAA+J,GAAAo7B,EAAA,KAAAp7B,EAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAA,WAAA8S,EAAA9S,KAAA1G,EAAA,SACA+J,GAAAo7B,EAAA,KAAAp7B,EAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAA,YAGA1G,EAAA2jC,EAAA3jC,KAAA,MAAAA,EAAA,MAAAwZ,EAAA9S,KAAA,OAAA8S,EAAA9S,KAAA,IAAA1G,IAAA,eAAAA,IAGA,OADA+J,KAAAo7B,EAAA,IAAA3rB,EAAA9S,KAAA,UACA8S,GAEA/L,EAAA22B,KAAAY,IAAA,SAAAnlB,GAMA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,OAAA8hC,GAAA,OAAAp7B,EAAAo7B,EAAA,EACA,KAAAvlC,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjB,KAAAigB,EAAAjgB,KAAA,KAAAigB,IAAAjgB,IAAAmK,EAAAo7B,EAAA,GAAAvlC,GAAA,IAAAmK,EAAA,KAAA8V,IAAAjgB,GAAAulC,EAAA,GAAAA,EAAA,GAAAvlC,MACAA,EAAAokC,IAAAhkC,EAAA6f,EAAAjgB,MAEAmK,IAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAAk9B,EAAAC,EAAA7jC,EAAA,MAAA6f,IAAAjgB,GAAA,KACAmK,IAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAA1G,EAAA,OACAwZ,EAAA9S,KAAA1G,EAAA,IAAAA,IAAA,OAGA,OAAAwZ,IAEA/L,EAAA22B,KAAAa,MAAA,SAAAplB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,OAAA8hC,GAAA,OAAAp7B,EAAAo7B,EAAA,EACA,KAAAvlC,EAAA,EAAYA,EAAAokC,EAAKpkC,KACjBI,EAAA6f,EAAAjgB,IAAA,KAAAmK,GAAAo7B,EAAA,KAAAp7B,EAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAA,WAAA8S,EAAA9S,KAAA1G,IACA,IAAAA,KAAA,KAAA+J,GAAAo7B,EAAA,KAAAp7B,EAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAA,WAAA8S,EAAA9S,KAAA1G,KACA+J,GAAAo7B,EAAA,KAAAp7B,EAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAA,WACA1G,EAAA6jC,GAAA7jC,EAAA,MAAAwZ,EAAA9S,KAAA,OAAA8S,EAAA9S,KAAA,IAAA1G,IAAA,eAAA6f,IAAAjgB,KAGA,OADAmK,KAAAo7B,EAAA,IAAA3rB,EAAA9S,KAAA,UACA8S,GAEA/L,EAAA22B,KAAAc,IAAA,SAAArlB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,OAAA8hC,GAAA,OAAAp7B,EAAAo7B,EAAA,EACA,KAAAvlC,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjB,KAAAigB,EAAAjgB,KAAA,KAAAigB,IAAAjgB,IAAAmK,EAAAo7B,EAAA,GAAAvlC,GAAA,IAAAmK,EAAA,KAAA8V,IAAAjgB,GAAAulC,EAAA,GAAAA,EAAA,GAAAvlC,MACAA,EAAAokC,IAAAhkC,EAAA6f,EAAAjgB,MACAmK,IAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAAm9B,EAAA7jC,EAAA,MAAA6f,IAAAjgB,GAAA,IACAmK,IAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAA1G,EAAA,KAAAwZ,EAAA9S,KAAA1G,GAGA,OAAAwZ,IAEA/L,EAAA23B,IAAA33B,EAAA22B,KAEA32B,EAAA42B,KAAAU,MAAA,SAAAllB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,OAAA8hC,GAAA,OAAAp7B,EAAAo7B,EAAA,EACA,KAAAvlC,EAAA,EAAYA,EAAAokC,EAAKpkC,KACjBI,EAAA6f,EAAAjgB,IAAA,WAAAI,KAAA,OAAA+J,GAAAo7B,EAAA,KAAAp7B,EAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAA,WAAA8S,EAAA9S,KAAA1G,EAAA,IAAAA,IAAA,SACA+J,IAAAo7B,EAAA,KAAAp7B,EAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAA,YAGA1G,EAAA2jC,EAAA3jC,KAAA,MAAAA,EAAA,MAAAwZ,EAAA9S,KAAA,OAAA8S,EAAA9S,KAAA,IAAA1G,IAAA,eAAAA,IAGA,OADA+J,KAAAo7B,EAAA,IAAA3rB,EAAA9S,KAAA,UACA8S,GAGA/L,EAAA42B,KAAAW,IAAA,SAAAnlB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,OAAA8hC,GAAA,OAAAp7B,EAAAo7B,EAAA,EACA,KAAAvlC,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjB,KAAAigB,EAAAjgB,KAAA,KAAAigB,IAAAjgB,IAAAmK,EAAAo7B,EAAA,GAAAvlC,GAAA,IAAAmK,EAAA,KAAA8V,IAAAjgB,GAAAulC,EAAA,GAAAA,EAAA,GAAAvlC,MACAA,EAAAokC,IAAAhkC,EAAA6f,EAAAjgB,MAEAmK,IAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAAk9B,EAAAC,EAAA7jC,EAAA,MAAA6f,IAAAjgB,GAAA,KACAmK,IAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAA1G,EAAA,OACAwZ,EAAA9S,KAAA1G,EAAA,IAAAA,IAAA,OAGA,OAAAwZ,IAEA/L,EAAA42B,KAAAY,MAAA,SAAAplB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,OAAA8hC,GAAA,OAAAp7B,EAAAo7B,EAAA,EACA,KAAAvlC,EAAA,EAAYA,EAAAokC,EAAKpkC,KACjBI,EAAA6f,EAAAjgB,IAAA,SAAAI,KAAA,KAAA+J,GAAAo7B,EAAA,KAAAp7B,EAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAA,WAAA8S,EAAA9S,KAAA1G,KACA+J,IAAAo7B,EAAA,KAAAp7B,EAAAo7B,EAAA,GAAA3rB,EAAA9S,KAAA,WACA1G,EAAA6jC,GAAA7jC,EAAA,MAAAwZ,EAAA9S,KAAA,OAAA8S,EAAA9S,KAAA,IAAA1G,IAAA,eAAA6f,IAAAjgB,KAGA,OADAmK,KAAAo7B,EAAA,IAAA3rB,EAAA9S,KAAA,UACA8S,GAEA/L,EAAA42B,KAAAa,IAAAz3B,EAAA22B,KAAAc,IAKAz3B,EAAA62B,KAAAS,MAAA,SAAAllB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,OAAA+3B,IACA,KAAAx7B,EAAA,EAAYA,EAAAokC,EAAKpkC,IAGjB,GAFAI,EAAA6f,EAAAjgB,GACA,GAAAI,KAAA,QAAAA,GAAA,KAAAA,GAAA,GAAAA,KAAA,OAAAA,KAAA,KAAAwZ,EAAA9S,KAAA1G,GAAA,KAAAA,GAAAwZ,EAAA9S,KAAA,MAAA8S,EAAA9S,KAAA,IAAA00B,EAAA10B,KAAA1G,IACAo7B,EAAA/3B,OAAA,GACA,MAAArD,EAAA6f,EAAAjgB,EAAA,UAAAI,KAAA,QAAAA,GAAA,KAAAA,GAAA,GAAAA,KAAA,OAAAA,KAAA,MAA4Fo7B,EAAA10B,KAAA1G,GAAYJ,GACxG4Z,KAAAiF,OAAAkmB,EAAAG,OAAAC,MAAA3J,EAAA3tB,EAAAg3B,UACAjrB,EAAA9S,KAAA,IACA00B,KAGA,MAAA5hB,IAEA/L,EAAA62B,KAAAU,IAAA,SAAAnlB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,OAAA+3B,IACA,KAAAx7B,EAAA,EAAYA,EAAAokC,EAAKpkC,IASjB,GARAI,EAAA6f,EAAAjgB,GACA,EAAAI,KAAA,SAAAA,GAAA,GAAAA,KAAA,UAAAA,GAAA,KAAAA,EACAwZ,EAAA9S,KAAA1G,GACA,KAAAA,EACA,MAAAA,EAAA6f,IAAAjgB,IACA4Z,EAAA9S,KAAA1G,GACAo7B,EAAA10B,KAAA1G,GACAwZ,EAAA9S,KAAA,IACA00B,EAAA/3B,OAAA,GACA,MAAArD,EAAA6f,EAAAjgB,EAAA,WAAAI,GAAA,GAAAA,KAAA,OAAAA,KAAA,OAAAA,KAAA,MAAoFo7B,EAAA10B,KAAA1G,GAAYJ,GAChG,MAAAigB,EAAAjgB,EAAA,IAAAA,IACA4Z,IAAAiF,OAAAkmB,EAAAG,OAAAE,IAAA5J,EAAA3tB,EAAAg3B,UACArJ,KAGA,MAAA5hB,IAqBA/L,EAAAi3B,MAAAK,MAAA,SAAAllB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,OAAA+3B,IACA,KAAAx7B,EAAA,EAAYA,EAAAokC,EAAKpkC,IAGjB,GAFAI,EAAA6f,EAAAjgB,GACA,GAAAI,KAAA,KAAAwZ,EAAA9S,KAAA1G,GAAA,KAAAA,GAAAwZ,EAAA9S,KAAA,MAAA8S,EAAA9S,KAAA,IAAA00B,EAAA10B,KAAA1G,IACAo7B,EAAA/3B,OAAA,GACA,MAAArD,EAAA6f,EAAAjgB,EAAA,MAAAI,EAAA,QAAAA,IAAoDo7B,EAAA10B,KAAA1G,GAAYJ,GAEhE,KADAw7B,EAAAuJ,EAAAG,OAAAC,MAAA3J,EAAA3tB,EAAAg3B,SACA3+B,EAAA,EAAoBA,EAAAs1B,EAAA/3B,OAAayC,IAAK,KAAAs1B,EAAAt1B,KAAAs1B,EAAAt1B,GAAA,GAEtC0T,KAAAiF,OAAA2c,GACA5hB,EAAA9S,KAAA,IACA00B,KAGA,MAAA5hB,IAEA/L,EAAAi3B,MAAAM,IAAA,SAAAnlB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,OAAA+3B,IACA,KAAAx7B,EAAA,EAAYA,EAAAokC,EAAKpkC,IASjB,GARAI,EAAA6f,EAAAjgB,GACA,GAAAI,KAAA,UAAAA,EACAwZ,EAAA9S,KAAA1G,GACA,KAAAA,EACA,MAAAA,EAAA6f,IAAAjgB,IACA4Z,EAAA9S,KAAA,IACA00B,EAAA10B,KAAA1G,GACAwZ,EAAA9S,KAAA,OACA00B,EAAA/3B,OAAA,GACA,MAAArD,EAAA6f,EAAAjgB,EAAA,SAAAI,KAAA,OAAAA,KAAA,OAAAA,KAAA,OAAAA,KAAA,MAAwFo7B,EAAA10B,KAAA,KAAA1G,EAAA,GAAAA,GAAsBJ,GAC9G,MAAAigB,EAAAjgB,EAAA,IAAAA,IACA4Z,IAAAiF,OAAAkmB,EAAAG,OAAAE,IAAA5J,EAAA3tB,EAAAg3B,UACArJ,KAGA,MAAA5hB,IAEA/L,EAAA82B,KAAAQ,MAAA,SAAAllB,GACA,GAAAjgB,GAAAI,EAAAwZ,KAAAwqB,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,KACjBI,EAAA6f,EAAAjgB,IAAA,IAAA4Z,EAAA9S,KAAA1G,GACAA,EAAA,KAAAwZ,EAAA9S,KAAA1G,IAAA,SAAAA,EAAA,KACAA,EAAA,MAAAwZ,EAAA9S,KAAA1G,IAAA,OAAAA,IAAA,YAAAA,EAAA,KACAwZ,EAAA9S,KAAA1G,IAAA,OAAAA,IAAA,UAAAA,IAAA,YAAAA,EAAA,IAEA,OAAAwZ,IAEA/L,EAAA82B,KAAAS,IAAA,SAAAnlB,GACA,GAAA7f,GAAAwZ,KAAA5Z,EAAA,EAAAokC,EAAAnkB,EAAAxc,MAEA,KADA,MAAAwc,EAAA,UAAAA,EAAA,UAAAA,EAAA,KAAAjgB,EAAA,GACSA,EAAAokC,EAAKpkC,IAAA4Z,EAAA9S,MACd1G,EAAA6f,EAAAjgB,IAAA,IAAAI,EACAA,EAAA,QAAAA,IAAA,KAAA6f,IAAAjgB,GACAI,EAAA,SAAAA,IAAA,KAAA6f,IAAAjgB,KAAA,KAAAigB,IAAAjgB,MACA,EAAAI,IAAA,KAAA6f,IAAAjgB,KAAA,KAAAigB,IAAAjgB,KAAA,KAAAigB,IAAAjgB,GAEA,OAAA4Z,IAEA/L,EAAA+2B,QAAAO,MAAA,SAAAllB,GACA,GAAAjgB,GAAAI,EAAAD,EAAAyZ,KAAAwqB,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,KAIjBI,EAAA6f,EAAAjgB,IAAA,QAAAG,GAAAC,IAAA,aAAAwZ,EAAA9S,KAAA,IAAA3G,MAAA,GAAAC,EAAA,KAAAA,EAAA,OACAwZ,EAAA9S,KAAA,IAAA1G,MAAA,EAEA,OAAAwZ,IAEA/L,EAAA+2B,QAAAQ,IAAA,SAAAnlB,GACA,GAAA7f,GAAAwZ,KAAA5Z,EAAA,EAAAokC,EAAAnkB,EAAAxc,MAEA,KADA,MAAAwc,EAAA,UAAAA,EAAA,KAAAjgB,EAAA,GACSA,EAAAokC,EAAKpkC,IACdI,EAAA6f,EAAAjgB,GAAAigB,IAAAjgB,IAAA,EACA,MAAAI,KAAA,QAAAA,GAAA,SAAAA,IAAA,WAAA6f,IAAAjgB,GAAAigB,IAAAjgB,IAAA,KACA4Z,EAAA9S,KAAA1G,EAEA,OAAAwZ,IAEA/L,EAAAg3B,QAAAM,MAAA,SAAAllB,GACA,GAAAjgB,GAAAI,EAAAD,EAAAyZ,KAAAwqB,EAAAnkB,EAAAxc,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,KACjBI,EAAA6f,EAAAjgB,IAAA,QAAAG,GAAAC,IAAA,aAAAwZ,EAAA9S,KAAA3G,IAAA,MAAAA,GAAAC,EAAA,KAAAA,EAAA,OACAwZ,EAAA9S,KAAA1G,IAAA,MAAAA,EAEA,OAAAwZ,IAEA/L,EAAAg3B,QAAAO,IAAA,SAAAnlB,GACA,GAAA7f,GAAAwZ,KAAA5Z,EAAA,EAAAokC,EAAAnkB,EAAAxc,MAEA,KADA,MAAAwc,EAAA,UAAAA,EAAA,KAAAjgB,EAAA,GACSA,EAAAokC,EAAKpkC,IACdI,EAAA6f,EAAAjgB,IAAA,EAAAigB,IAAAjgB,GACA,MAAAI,KAAA,QAAAA,GAAA,SAAAA,IAAA,WAAA6f,IAAAjgB,IAAA,EAAAigB,IAAAjgB,MACA4Z,EAAA9S,KAAA1G,EAEA,OAAAwZ,IAEA/L,EAAA43B,MAAA53B,EAAAg3B,QAeAh3B,EAAA63B,cAAA,SAAAzlB,EAAAgO,EAAAD,GAIA,MAHAA,MAAAngB,EAAAw2B,SACArW,EAAA7sB,eAAA,SAAA6sB,EAAAngB,EAAAmgB,KACAC,EAAA9sB,eAAA,WAAA8sB,EAAApgB,EAAAogB,IACAA,GAAAD,EAAmB/N,EACnB+N,EAAA7sB,eAAA,QAAA8sB,EAAA9sB,eAAA,SAAA8sB,EAAAoX,MAAArX,EAAAsX,IAAArlB,IACAgO,EAAAkX,MAAAnX,EAAAoX,IAAAnlB,KAgBApS,EAAAI,QAAA,SAAAoR,EAAA4O,EAAAD,GACA,GAAA/N,GAAA0lB,CAIA,OAHA3X,MAAAngB,EAAAw2B,SACArW,EAAA7sB,eAAA,SAAA6sB,EAAAngB,EAAAmgB,KACAC,EAAA9sB,eAAA,WAAA8sB,EAAApgB,EAAAogB,IACAA,GAAAD,EAAmB3O,GACnBsmB,EAAA3X,IAAAngB,EAAAw2B,QAAArW,EAAA+W,EAAAC,KACA/kB,EAAA0lB,EAAA9uB,MAAAwI,GACAxR,EAAAw2B,QAAA3uB,UAAA7H,EAAA63B,cAAAzlB,EAAAgO,EAAAD,MAYA+W,EAAAG,OAAAC,MAAA,SAAAllB,EAAAgO,GAEA,QADAA,KAAA,QAAA9sB,eAAA,WAAA8sB,EAAApgB,EAAAogB,IACA8W,EAAAG,OAAAU,MAAA3X,EAAAkX,MAAAllB,KAYA8kB,EAAAG,OAAAE,IAAA,SAAAnlB,EAAA+N,GAEA,QADAA,KAAA,QAAA7sB,eAAA,SAAA6sB,EAAAngB,EAAAmgB,IACAA,EAAAoX,IAAAL,EAAAG,OAAAW,IAAA5lB,KAUA8kB,EAAAG,OAAAU,MAAA,SAAA3lB,GACA,GACA7f,GADAwZ,KAAA5Z,EAAA,EAAAokC,EAAAnkB,EAAAxc,OACAoW,EAAA,mEAAAisB,IACA,KAAA9lC,EAAA,EAAYA,EAAA,GAAKA,IAAA8lC,EAAAh/B,KAAA+S,EAAAd,WAAA/Y,GACjB,KAAAA,EAAA,EAAYA,EAAAokC,EAAKpkC,IAAA4Z,EAAA9S,KAAAg/B,GAAA1lC,EAAA6f,EAAAjgB,MAAA,GAAA8lC,GAAA,EAAA1lC,IAAA,GAAAA,EAAA6f,IAAAjgB,MAAA,GAAA8lC,GAAA,GAAA1lC,IAAA,GAAAA,EAAA6f,IAAAjgB,MAAA,GAAA8lC,EAAA,GAAA1lC,GAEjB,OADA,KAAAJ,EAAAokC,EAAA,KAAAxqB,EAAA4Y,MAAA,IAAAxyB,GAAA4Z,EAAA4Y,OACA5Y,GAUAmrB,EAAAG,OAAAW,IAAA,SAAA5lB,GAEA,IADA,GAAqC7f,GAArCJ,EAAA,EAAA4Z,KAAAwqB,EAAAnkB,EAAAxc,OAAAqiC,KACA9lC,EAAA,IAAA8lC,EAAA,mEAAA/sB,WAAA/Y,OACA,KAAAA,EAAA,EAAYA,EAAAokC,EAAKpkC,IAAA4Z,EAAA9S,MAAA1G,EAAA0lC,EAAA7lB,EAAAjgB,MAAA,GAAAI,EAAA0lC,EAAA7lB,IAAAjgB,OAAA,MAAAI,IAAA,GAAAA,EAAA0lC,EAAA7lB,IAAAjgB,OAAA,KAAAI,IAAA,EAAA0lC,EAAA7lB,IAAAjgB,IAEjB,OADA,KAAAA,EAAAokC,EAAA,KAAAxqB,EAAA4Y,MAAAxyB,EAAA,GAAA4Z,EAAA4Y,OACA5Y,GAEAmrB,EAAAG,OAAAruB,MAAA,SAAAwI,GAEA,MADAA,KAAAlS,QAAA,UACA43B,EAAAG,OAAAW,IAAAd,EAAAC,KAAAnuB,MAAAwI,KAEA0lB,EAAAG,OAAAxvB,UAAA,SAAAuK,GACA,MAAA8kB,GAAAC,KAAAtvB,UAAAqvB,EAAAG,OAAAU,MAAA3lB,KAqBA8kB,EAAAG,OAAAa,OAAA,SAAA1mB,EAAA2mB,EAAAC,GACA,GAAAhmB,GAAA0lB,EAAA9rB,CAOA,SANAmsB,KAAA,WAAA7kC,eAAA,WAAA6kC,EAAAn4B,EAAAm4B,MACAC,KAAA,QAAA9kC,eAAA,WAAA8kC,EAAAp4B,EAAAo4B,IACAN,EAAAK,IAAAn4B,EAAAw2B,QAAA2B,EAAAjB,EAAAC,KACA/kB,EAAA0lB,EAAA9uB,MAAAwI,GACAxF,EAAAkrB,EAAAG,OAAAxvB,UAAAswB,IAAAn4B,EAAAw2B,QAAA4B,EAAAd,MAAAllB,MACApG,GAAA,MAAA8pB,UAAA,IAAA9pB,EAAApW,OAAA,IAqBAshC,EAAAG,OAAAgB,OAAA,SAAA7mB,EAAA2O,GACA3O,IAAAlS,QAAA,SACA,IAAA8S,GAAA8kB,EAAAG,OAAAruB,MAAAwI,EACA,YAAA2O,EACA+W,EAAAC,KAAAtvB,UAAAuK,MAEA+N,KAAA,QAAA7sB,eAAA,SAAA6sB,EAAAngB,EAAAmgB,IACAngB,EAAAw2B,QAAA3uB,UAAAsY,EAAAoX,IAAAnlB,MAoBA8kB,EAAAE,IAAAkB,OAAA,SAAAlmB,EAAAmmB,GACA,GAAApmC,GAAAI,EAAAiB,EAAA,GAAA+iC,EAAAnkB,EAAAxc,MACA,IAAA2iC,EACA,IAAApmC,EAAA,EAAoBA,EAAAokC,EAAKpkC,IAAAqB,IAAAjB,EAAA6f,EAAAjgB,IAAA,IAAAI,EAAA,OAAAA,KAAA,OAAAA,KAAA,SAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,MAAAA,EAAAoW,OAAAC,aAAArW,MAAA,aAAAA,EAAA8V,SAAA,IAAAmwB,kBAEzB,KAAArmC,EAAA,EAAgBA,EAAAokC,EAAKpkC,IAAAqB,IAAAjB,EAAA6f,EAAAjgB,IAAA,IAAAI,EAAA,OAAAA,KAAA,OAAAA,KAAA,UAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,MAAAA,EAAAoW,OAAAC,aAAArW,MAAA,aAAAA,EAAA8V,SAAA,IAAAmwB,aAErB,OAAAhlC,IAEA0jC,EAAAE,IAAAje,SAAA,SAAA3H,GACA,GAAArf,GAAAI,EAAAwZ,KAAAwqB,EAAA/kB,EAAA5b,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IAAA4Z,EAAA9S,KAAA,MAAA1G,EAAAif,EAAAtG,WAAA/Y,IAAAo3B,SAAA/X,EAAAskB,YAAA3jC,MAAA,YAAAI,EAAA,GAAAA,EACjB,OAAAwZ,IAWAmrB,EAAAE,IAAAhe,mBAAA,SAAA5H,EAAA4O,GAEA,QADAA,GAAA,QAAA9sB,eAAA,WAAA8sB,EAAApgB,EAAAogB,IACA8W,EAAAE,IAAAkB,OAAAlY,EAAAkX,MAAAt3B,EAAAw2B,QAAAxtB,MAAAwI,MAEA0lB,EAAAE,IAAAqB,mBAAA,SAAAjnB,EAAA2O,GAEA,QADAA,GAAA,QAAA7sB,eAAA,SAAA6sB,EAAAngB,EAAAmgB,IACAngB,EAAAw2B,QAAA3uB,UAAAsY,EAAAoX,IAAAL,EAAAE,IAAAje,SAAA3H,MAUA0lB,EAAAV,QAAA8B,OAAA,SAAAI,GACA,GAAAvmC,GAAAI,EAAAiB,EAAA,GAAA+iC,EAAAmC,EAAA9iC,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjBI,EAAAmmC,EAAAvmC,GACAqB,GAAA,GAAAjB,KAAA,QAAAA,GAAA,GAAAA,KAAA,OAAAA,KAAA,SAAAA,EAAAoW,OAAAC,aAAArW,MAAA,QAAAA,EAAA,QAAAA,EAAA,iBAAAA,EAAA8V,SAAA,IAAAmwB,aAEA,OAAAhlC,IASA0jC,EAAAV,QAAArd,SAAA,SAAA3H,GACA,GAAArf,GAAAI,EAAAwZ,KAAAwqB,EAAA/kB,EAAA5b,MACA,KAAAzD,EAAA,EAAYA,EAAAokC,EAAKpkC,IACjB4Z,EAAA9S,KACA,MAAA1G,EAAAif,EAAAtG,WAAA/Y,IACA,OAAAI,EAAAif,EAAAtG,aAAA/Y,IACAo3B,SAAA/X,EAAAukB,SAAA5jC,GAAAqf,EAAAukB,SAAA5jC,GAAAqf,EAAAukB,SAAA5jC,GAAAqf,EAAAukB,SAAA5jC,IAAA,OAAAI,EAAAif,EAAAukB,OAAA5jC,EAAA,OAAAA,EAAAI,GAAA,QACAg3B,SAAA/X,EAAAukB,OAAA5jC,GAAAqf,EAAAukB,SAAA5jC,GAAA,IACAI,EAGA,OAAAwZ,IAQAmrB,EAAAyB,YAAA,SAAAC,GACA,GAAAC,GAA0Jj7B,EAAAzL,EAA1J4mB,GAAmB+d,QAAAC,SAAA,SAAAC,WAAAP,MAAA,iCAAAC,OAAA,UAAAC,MAAA,cAAiIrkC,IACpJsmC,KAAoBA,EAAA,QACpB,KAAAh7B,IAAAmb,GAEA,IADAzmB,EAAAsL,KACAzL,EAAA,EAAgBA,EAAA4mB,EAAAnb,GAAAhI,OAAiBzD,IAAOG,EAAAymB,EAAAnb,GAAAzL,IAAAyL,CAGxC,MADAi7B,EAAAvmC,EAAAsmC,EAAAJ,cAAAl5B,QAAA,mBACc,SAAA5J,WAAAkjC,EAAA,6BACd1jC,MAAA0jC,WACA1jC,KAAAgjC,OAAA,SAAA94B,GACA,UAAAxK,YAAAoL,EAAA64B,GAAAvB,MAAAJ,EAAAC,KAAAnuB,MAAA5J,OASA83B,EAAA4B,YAAA,SAAAF,GACA,GAAAC,GAA0Jj7B,EAAAzL,EAA1J4mB,GAAmB+d,QAAAC,SAAA,SAAAC,WAAAP,MAAA,iCAAAC,OAAA,UAAAC,MAAA,cAAiIrkC,IACpJsmC,KAAoBA,EAAA,QACpB,KAAAh7B,IAAAmb,GAEA,IADAzmB,EAAAsL,KACAzL,EAAA,EAAgBA,EAAA4mB,EAAAnb,GAAAhI,OAAiBzD,IAAOG,EAAAymB,EAAAnb,GAAAzL,IAAAyL,CAGxC,MADAi7B,EAAAvmC,EAAAsmC,EAAAJ,cAAAl5B,QAAA,mBACc,SAAA5J,WAAAkjC,EAAA,6BACd1jC,MAAA0jC,WACA1jC,KAAAmjC,OAAA,SAAAU,GACA,MAAA7B,GAAAC,KAAAtvB,UAAA7H,EAAA64B,GAAAtB,IAAAwB,MAMA/4B,EAAAg5B,YAAA,SAAA5mB,GACA,GAAAjgB,GAAAoB,EAAAwY,EAAAktB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/C,EAAAnkB,EAAAxc,OAAArD,EAAA6f,EAAA,GAAAmnB,EAAA,IAGA,WADAA,EAAA,MAAAhnC,GAAA,MAAA6f,EAAA,UAAAA,EAAA,gBAAA7f,GAAA,MAAA6f,EAAA,mBAAA7f,GAAA,MAAA6f,EAAA,mBACA,MAAAmnB,EAGA,KADAA,EAAA,QAAAhmC,EAAAwY,GAAA,EAAAktB,EAAAC,GAAA,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,EACAnnC,EAAA,EAAYA,EAAAokC,EAAKpkC,IAAA,CAEjB,QADAI,EAAA6f,EAAAjgB,IACA,CAAkBonC,EAAA,SAAa,OAC/B,GAAAhnC,EAAA,QAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,IAAAA,EAAA,CAA+CgnC,EAAA,IAAQ,QACvDN,GAAAC,KACA,MAAA3mC,IAAA0mC,GAAA,GACA,EAAA1mC,KAAA,SAAAA,IAAA2mC,GAAA,GAEA,KAAA3mC,GACAgB,GAAA,GAAA0lC,GAAA9mC,IAAAoB,EAAA,GAAA4lC,IAAA5lC,GAAA,GAAAwY,GAAA,GAAAmtB,IAAA/mC,IAAA4Z,EAAA,GAAAqtB,IAAArtB,GAAA,GACAxY,EAAAwY,GAAA,IAEAktB,GAAA1lC,GAAA,KACA0lC,EAAA,KAAA1mC,GAAA,GAAAA,KAAA,OAAAA,KAAA,OAAAA,KAAA,KAAA8mC,IAAA9lC,GAAA,GAEA2lC,GAAAntB,GAAA,KACAmtB,EAAA,GAAA3mC,KAAA,OAAAA,KAAA,OAAAA,KAAA,OAAAA,KAAA,KAAA+mC,IAAAvtB,GAAA,IAGA,KAAAxZ,GAAAgB,EAAA,EAAAA,EAAApB,EAAA,KAAAI,GAAAwZ,EAAA,EAAAA,EAAA5Z,EAAA,KAAAI,GAAAJ,GAMA,MAJA,UAAAonC,IACAA,EAAAN,IAAAI,EAAA,GAAAF,EAAA,UAAAD,IAAAI,EAAA,GAAAF,EAAA,oBAGAG,GAAA7D,EAAAwB,EAAAE,IAAAkB,OAAAlmB,KAEApS,EAAAw5B,MAAA,SAAAhoB,GACA,MAAAxR,GAAAg5B,YAAA9B,EAAAC,KAAAnuB,MAAAwI,IAEA,IAAArf,GAAAsnC,GAAA,kFAAAlD,EAAAkD,EAAA7jC,MAEA,KADA2b,EAAAvR,UACA7N,EAAA,EAAQA,EAAAokC,EAAKpkC,IACb,YAAAsnC,EAAAtnC,IACAof,EAAA,uBAAAC,GAAkD,MAAA0lB,GAAAV,QAAA8B,OAAAt4B,EAAAw2B,QAAAxtB,MAAAwI,KAClDD,EAAA,yBAAAC,GAAoD,MAAAxR,GAAAw2B,QAAA3uB,UAAAqvB,EAAAV,QAAArd,SAAA3H,OAEpDD,EAAA,SAAAkoB,EAAAtnC,IAAA,SAAAunC,EAAAH,GAAwD,gBAAA/nB,GAAqB,MAAAkoB,GAAAloB,EAAA+nB,KAAsBrC,EAAAE,IAAAhe,mBAAApZ,EAAAy5B,EAAAtnC,KACnGof,EAAA,WAAAkoB,EAAAtnC,IAAA,SAAAunC,EAAAH,GAA0D,gBAAA/nB,GAAqB,MAAAkoB,GAAAloB,EAAA+nB,KAAsBrC,EAAAE,IAAAqB,mBAAAz4B,EAAAy5B,EAAAtnC,KACrGof,EAAAvR,QAAAy5B,EAAAtnC,IAAA6W,MAAA,SAAA0wB,GAA0D,gBAAAloB,GAAqB,MAAAkoB,GAAAxC,EAAAC,KAAAnuB,MAAAwI,MAAmCxR,EAAAy5B,EAAAtnC,IAAAolC,KAClHhmB,EAAAvR,QAAAy5B,EAAAtnC,IAAA0V,UAAA,SAAA6xB,GAA8D,gBAAAtnB,GAAuB,MAAA8kB,GAAAC,KAAAtvB,UAAA6xB,EAAAtnB,MAAyCpS,EAAAy5B,EAAAtnC,IAAAmlC,OAG9H/lB,GAAAnR,QAAAJ,EAAAI,QACAmR,EAAAsmB,cAAA73B,EAAA63B,cACAtmB,EAAA2lB,MACA3lB,EAAA+mB,OAAA/mB,EAAAooB,cACApoB,EAAA4H,SAAA5H,EAAAqoB,gBACAroB,EAAA6H,mBAAA8d,EAAAE,IAAAhe,mBACA7H,EAAAknB,mBAAAvB,EAAAE,IAAAqB,mBACAlnB,EAAAsoB,aAAA3C,EAAAG,OAAAa,OACA3mB,EAAAuoB,aAAA5C,EAAAG,OAAAgB,OACA9mB,EAAAonB,YAAAzB,EAAAyB,YACApnB,EAAAunB,YAAA5B,EAAA4B,YAKAvnB,EAAAykB,UAAmBE,OAAAC,YlC6uMb,SAAUjkC,EAAQuB,EAAqB3B,GAE7C,YmC1iOA2B,GAAA,aAEA,QAAAsmC,GAAAtnC,GACA,KAAAyC,eAAA6kC,IAAA,UAAAA,GAAAtnC,EAEAyC,MAAA0+B,MAAAnhC,GAAA,gBACAsnC,EAAAzZ,KAAA7tB,MA+JA,MA1JAsnC,GAAAzZ,QAsBAyZ,EAAAC,gBAAA,SAAA35B,EAAA45B,EAAAxgC,EAAA+4B,EAAA7I,EAAA9tB,GACAwE,KAAA,aACA45B,KAAAp/B,OACAgB,QACApC,KAAA,gBACA+4B,KAAA,GACA7I,KAAA,EAGA,IAAAhuB,GAAAG,KAAAuD,MAAA46B,EAAAr+B,YAAA42B,EAAA,MACAp7B,EAAA0E,KAAAuD,MAAA46B,EAAAj+B,aAAA2tB,EAAA,MACA3Z,EAAAlU,KAAAuD,MAAA46B,EAAAC,UAAAD,EAAAj+B,YAAA,EAAA5E,EAAA,GACA2Y,EAAAjU,KAAAuD,MAAA46B,EAAAE,WAAAF,EAAAr+B,WAAA,EAAAD,EAAA,GACAq2B,EAAA,SAAAr2B,EAAA,YAAAvE,EACA,SAAA4Y,EAAA,UAAAD,EACA,mFAIA4a,EAAA,GAAAoP,GAAAtgC,EAEAlD,KAAA8X,KAAA+rB,eAAA,WAEAzP,EAAA0P,SAAAh6B,EAAA2xB,EAGA,IAAAvjB,GAAAsrB,EAAAzZ,KAAA7mB,GAAAhC,SAAAgX,KACAqiB,GAA0BwJ,QAAA,yBAC1B,QAAAlnC,KAAA09B,GAAAriB,EAAA5S,MAAAzI,GAAA09B,EAAA19B,EAEA,QAAAA,KAAAyI,GAAA4S,EAAA5S,MAAAzI,GAAAyI,EAAAzI,MAgBA2mC,EAAA1mC,UAAAknC,QAAA,SAAAC,EAAAxI,GACAwI,KAAA,cACAxI,KAAA,uGAGA,IAAArH,GAAAoP,EAAAzZ,KAAAprB,KAAA0+B,MAYA,OAXAjJ,IAAA,kBAAAA,GAAA8P,QAAA9P,EAAA+P,QACA/P,EAAA8P,QAGAV,EAAAzZ,KAAAprB,KAAA0+B,OAAAjJ,EAAA9vB,OAAA8/B,KAAAH,EAAAtlC,KAAA0+B,MAAA5B,GAEArH,EAAAiQ,OACA//B,OAAAggC,QACAhgC,OAAA+/B,OACAjQ,EAAAkQ,QAEAlQ,GAcAoP,EAAA1mC,UAAAgnC,SAAA,SAAA5rB,EAAAujB,GASA,MARAvjB,MAAA,GACAujB,KAAA,wGAGA98B,KAAAqlC,QAAA,cAAAvI,GAEAv6B,SAAAgX,KAAA9T,UAAA8T,EAEAvZ,MAOA6kC,EAAA1mC,UAAAonC,MAAA,WACAV,EAAAzZ,KAAAprB,KAAA0+B,OAEA6G,SAUAV,EAAA1mC,UAAAynC,OAAA,SAAAt0B,GAMA,MALAA,MAAA,GACAuzB,EAAAzZ,KAAAprB,KAAA0+B,OAEAn8B,SAAAgX,KAAA9T,WAAA6L,EAEAyzB,KAUAF,EAAA1mC,UAAA0nC,QAAA,SAAAv0B,GACAA,KAAA,EACA,IAAAmkB,GAAAoP,EAAAzZ,KAAAprB,KAAA0+B,MAIA,OAFAjJ,GAAAlzB,SAAAgX,KAAA9T,UAAA6L,EAAAmkB,EAAAlzB,SAAAgX,KAAA9T,UAEAs/B,KAIAF,MnC+jOM,SAAU7nC,EAAQuB,EAAqB3B,GAE7C,YoCnuOA2B,GAAA,aAEA,QAAA6gB,GAAA3c,EAAAqjC,EAAAC,GACA,KAAA/lC,eAAAof,IAAA,UAAAA,GAAA7a,GAAAwM,MAAAg1B,EAEA/lC,MAAAyC,SACAzC,KAAA8lC,YACA9lC,KAAA+lC,WAgMA,MAzKA3mB,GAAAO,gBAAA,SAAAxa,EAAAZ,EAAAyhC,EAAAC,GAMA,MACA,iBAAA9gC,EAAApE,YAAAwD,EAAA,uCACA0hC,EAJA,sBAIA,wBACA9gC,EAAApE,YAAAwD,EAAA,KACAyhC,EAAA,YAeA5mB,EAAAjhB,UAAAyhB,eAAA,SAAAsmB,GAGA,MAFAA,MAAA,GAGA,yCAAAlmC,KAAA8lC,UACA,0BAAA9lC,KAAAyC,OAAA,mCAYA2c,EAAAjhB,UAAAqhB,iBAAA,SAAArN,GAGA,MAFAnS,MAAA,SAAAmS,GAAA,eAEAnS,MAYAof,EAAAjhB,UAAA2hB,QAAA,SAAAomB,GAGA,MAFAA,MAAA,GAEA,cAAAlmC,KAAAyC,OAAA,gDAEAzC,KAAAmS,SAAA,cACAnS,KAAA+lC,SAAA,KAAA/lC,KAAAyC,OAAA,OACAzC,KAAAmS,SAAA,SAAA+zB,EAAAlmC,KAAA8lC,UACA,aAaA1mB,EAAAjhB,UAAA4hB,WAAA,SAAAmmB,GAGA,MAFAA,MAAA,GAGA,cAAAlmC,KAAAyC,OAAA,+CAEAzC,KAAA+lC,SAAA,OACAG,EAAAlmC,KAAA8lC,UAAA,aAgBA1mB,EAAAjhB,UAAAoiB,cAAA,SAAA4lB,EAAA7I,EAAA7I,GAKA,MAJAz0B,MAAA,SAAAmmC,EACAnmC,KAAA,EAAAs9B,GAAA,GACAt9B,KAAA,EAAAy0B,GAAA,GAEAz0B,MAgBAof,EAAAjhB,UAAAuiB,aAAA,SAAAwlB,GAGA,MAFAA,MAAA,GAGA,cAAAlmC,KAAAyC,OAAA,qEAGAzC,KAAA+lC,SAAA,eAEA/lC,KAAAmmC,SAAA,KACAnmC,KAAAs9B,EAAA,IACAt9B,KAAAy0B,EAAA,aAEAyR,EAAAlmC,KAAA8lC,UAAA,qBAgBA1mB,EAAAjhB,UAAAsiB,gBAAA,SAAAylB,GAGA,MAFAA,MAAA,GAGA,cAAAlmC,KAAAyC,OAAA,0EAGAzC,KAAA+lC,SAAA,eAEA/lC,KAAAmmC,SAAA,KACAnmC,KAAAs9B,EAAA,IACAt9B,KAAAy0B,EAAA,aAEAyR,EAAAlmC,KAAA8lC,UAAA,qBAKA1mB,MpC2vOM,SAAUpiB,EAAQuB,EAAqB3B,GAE7C,YACqB,IAAIoH,GAA8CpH,EAAoB,GAClEwpC,EAAgExpC,EAAoB,EqC98O7G2B,GAAA,aAIA,QAAA8nC,KACA,KAAArmC,eAAAqmC,IAAA,UAAAA,GA8aA,MAlaAA,GAAAloC,UAAAyd,UAAA,WACA,kBAAA5X,EAAA,OAAAgH,KAAAC,UAAA,YAQAo7B,EAAAloC,UAAAwe,mBAAA,SAAA9P,GAgBA,QAAAy5B,GAAAz5B,EAAA05B,GACA,KAAAvmC,eAAAsmC,IAAA,UAAAA,GAAAz5B,EAAA05B,EAEAvmC,MAAA6M,OACA7M,KAAAwT,IAAA,GAAA9T,YAAAmN,GACA7M,KAAAumC,aAAAvmC,KAAAwT,IAAA9S,OACAV,KAAAwmC,OAAAxiC,EAAA,OAAAgH,KAAAC,UAAA,MAEAjL,KAAAirB,KAAA,EACAjrB,KAAAkrB,GAAA,EACAlrB,KAAAuX,IAAA,EACAvX,KAAAic,MAAyBpP,KAAA7M,KAAA6M,KAAAhC,IAAA,EAAAqS,MAAA,KAAAZ,IAAA,GAAAU,OAAA,GA8CzB,MArCA,WAAAhZ,EAAA,OAAAgH,KAAApG,cAAA,MACA0hC,EAAAnoC,UAAA4e,KAAA,WACA,GAAA/c,KAAAirB,MAAAjrB,KAAAumC,UACAvmC,KAAAic,MAAiCpP,KAAA7M,KAAA6M,KAAAhC,IAAA7K,KAAAumC,UAAArpB,MAAA,KAAAZ,IAAA,GAAAU,OAAA,OAChB,CACjBhd,KAAAuX,IAAA3Q,KAAA0Q,IAAAtX,KAAAumC,UAAAvmC,KAAAirB,KAAAjrB,KAAAwmC,OACA,IAAAtpB,GAAA,GAAAxd,YAAAM,KAAA6M,KAAA7M,KAAAirB,KAAAjrB,KAAAuX,IACAvX,MAAAic,MACApP,KAAA7M,KAAA6M,KACAhC,IAAA7K,KAAAirB,KACA/N,QACAZ,IAAA7I,OAAAC,aAAAC,MAAA,KAAAuJ,GACAF,OAAA,GAGA,MADAhd,MAAAirB,MAAAjrB,KAAAwmC,OACAxmC,KAAAic,MAGAqqB,EAAAnoC,UAAA4e,KAAA,WACA,GAAA/c,KAAAirB,MAAAjrB,KAAAumC,UACAvmC,KAAAic,MAAiCpP,KAAA7M,KAAA6M,KAAAhC,IAAA7K,KAAAumC,UAAArpB,MAAA,KAAAZ,IAAA,GAAAU,OAAA,OAChB,CACjBhd,KAAAkrB,GAAAlrB,KAAAwT,IAAA7T,QAAAK,KAAAwmC,OAAAxmC,KAAAirB,MACAjrB,KAAAkrB,GAAA,IAAAlrB,KAAAkrB,GAAAlrB,KAAAumC,WACAvmC,KAAAuX,IAAA3Q,KAAA0Q,IAAAtX,KAAAkrB,GAAAlrB,KAAAirB,KAAA,KACA,IAAA/N,GAAA,GAAAxd,YAAAM,KAAA6M,KAAA7M,KAAAirB,KAAAjrB,KAAAuX,IACAvX,MAAAic,MACApP,KAAA7M,KAAA6M,KACAhC,IAAA7K,KAAAirB,KACA/N,QACAZ,IAAA7I,OAAAC,aAAAC,MAAA,KAAAuJ,GACAF,OAAA,GAGA,MADAhd,MAAAirB,KAAAjrB,KAAAkrB,GAAA,EACAlrB,KAAAic,MAGA,GAAAqqB,GAAAz5B,IASAw5B,EAAAloC,UAAA4c,aAAA,WAQA,QAAApW,KACA,KAAA3E,eAAA2E,IAAA,UAAAA,EACA,IAAAtH,GAAA2G,EAAA,OAAAW,MAEA3E,MAAAymC,gBAAAziC,EAAA,IAAA3G,EAAA4N,UAAA,gBACAjL,KAAA0mC,cAAA1iC,EAAA,IAAA3G,EAAA4N,UAAA,cACAjL,KAAA2mC,YAAAC,MAAA5mC,KAAAymC,mBAAAG,MAAA5mC,KAAA0mC,eAGA1mC,KAAA6mC,eAAAxpC,EAAA4N,UAAA,iBACAjL,KAAA8mC,aAAAzpC,EAAA4N,UAAA,aAAA1L,OAAA2N,UACAlN,KAAA+mC,UAAA,IAAA/mC,KAAA6mC,gBAAA7mC,KAAA8mC,eAAAvnC,OAAA2N,UAGAlN,KAAAgnC,WAAA3pC,EAAA4N,UAAA,gBACA,mBAAAjL,KAAAgnC,WACAhnC,KAAAgnC,YAAA,EACa,mBAAAhnC,KAAAgnC,WACbhnC,KAAAgnC,YAAA,EAEAhnC,KAAAgnC,WAAA,KAGAhnC,KAAAinC,eAAA5pC,EAAA4N,UAAA,oBACAjL,KAAAknC,eAAA7pC,EAAA4N,UAAA,iBACAjL,KAAAmnC,gBAAA9pC,EAAA4N,UAAA,oBACAjL,KAAAonC,eAAA,GAAAC,QAAAhqC,EAAA4N,UAAA,qBAEAjL,KAAAsnC,UAAA,IAAAtnC,KAAA2mC,aACA,IAAA3mC,KAAA+mC,WAAA,MAAA/mC,KAAAgnC,WAGA3pC,EAAA,GAAA2G,GAAA,eACAhE,KAAAunC,UAAAlqC,EAAA4N,UAAA,OAAA+K,WAAA,GAmEA,MAzDArR,GAAAxG,UAAAqpC,MAAA,SAAApgC,GAEA,QAAApH,KAAAsnC,SAAA,QAEA,IAAAlgC,EAAAsB,EAAA1I,KAAAymC,iBAAAzmC,KAAA0mC,cAAAt/B,EAAAsB,EACA,QAGA,IAAAtB,EAAAuB,EAAA3I,KAAA6mC,gBAAA7mC,KAAA8mC,aAAA1/B,EAAAuB,EACA,QAGA,WAAA3I,KAAAgnC,WACA,QAEA,IAAA98B,GAAA,EACA,QAAApK,KAAAsH,EAAAyD,IAIA,MAFAX,GAAAk8B,EAAA,IAAAvhC,MAAAzC,WAAAwI,gBAAAxD,GAEApH,KAAAgnC,aAAAhnC,KAAAonC,eAAAtW,KAAA5mB,EAMA,QAHAwhB,GAAA,GAAAhsB,YAAA0mC,EAAA,IAAA9yB,iBAAAlM,EAAAiQ,QAAA,GAAAjQ,EAAAyD,IAAAzD,EAAAmQ,KAEAkwB,EAAA,EACAxqC,EAAA,EAA+BA,EAAA+C,KAAAmnC,eAAyBlqC,IACxDwqC,EAAA/b,EAAA/rB,QAAAK,KAAAunC,UAAAE,EAAA,EAEA,YAAAA,GAEAznC,KAAAgnC,YAIA98B,EAFAwhB,EAAAzrB,MAAAwnC,EAAA/b,EAAAhrB,QAEAT,MAAAD,KAAAknC,eAAAlnC,KAAAknC,eAAAlnC,KAAAinC,gBAEAjnC,KAAAgnC,aAAAhnC,KAAAonC,eAAAtW,KAAArd,OAAAC,aAAAC,MAAA,KAAAzJ,MAeAvF,EAAAxG,UAAA6c,OAAA,SAAAxQ,GACA,MAAAA,GACAA,EAAAwQ,OAAAhb,KAAAwnC,MAAAxnC,UAGA,GAAA2E,IASA0hC,EAAAloC,UAAA0e,iBAAA,WASA,QAAA6qB,KACA,KAAA1nC,eAAA0nC,IAAA,UAAAA,EAEA,IAAArqC,GAAA,GAAA2G,GAAA,cACAhE,MAAA2nC,QAAAtqC,EAAA4N,UAAA,OAEAjL,KAAA4nC,aAAAvqC,EAAA4N,UAAA,iBACAjL,KAAA6nC,cAAAxqC,EAAA4N,UAAA,kBACAjL,KAAA8nC,aAAAzqC,EAAA4N,UAAA,eACAjL,KAAA+nC,cAAA1qC,EAAA4N,UAAA,aACAjL,KAAAgoC,aAAA3qC,EAAA4N,UAAA,yCAGAjL,KAAAioC,cACA7T,KAAAp0B,KAAAgoC,aAAAroC,QAAA,QACA40B,GAAAv0B,KAAAgoC,aAAAroC,QAAA,MACA60B,GAAAx0B,KAAAgoC,aAAAroC,QAAA,MACA+0B,GAAA10B,KAAAgoC,aAAAroC,QAAA,MACAg1B,GAAA30B,KAAAgoC,aAAAroC,QAAA,MACAk1B,GAAA70B,KAAAgoC,aAAAroC,QAAA,MACAm1B,KAAA90B,KAAAgoC,aAAAroC,QAAA,MAEAK,KAAAkoC,MAAA,kBAAAloC,KAAA+nC,cAEA/nC,KAAAmoC,cAAAnoC,KAAAkoC,MAAA,EAAA7qC,EAAA4N,UAAA,gBAGAjL,KAAAooC,YAAA/qC,EAAA4N,UAAA,gBACAjL,KAAAqoC,aAAAhrC,EAAA4N,UAAA,iBACAjL,KAAAsoC,YAAAjrC,EAAA4N,UAAA,cACAjL,KAAAuoC,aAAAlrC,EAAA4N,UAAA,YACAjL,KAAAwoC,aAAAnrC,EAAA4N,UAAA,eACAjL,KAAAyoC,WAAAprC,EAAA4N,UAAA,UACAjL,KAAA0oC,SAAA,WAEA,GAAAl1B,GAAA,GAAAm1B,aAAA,EAIA,OAFA,IAAAC,UAAAp1B,GAAAq1B,UAAA,QAEA,OAAAC,aAAAt1B,GAAA,MAGAxT,KAAA+oC,cAAiCvsB,KAAA,EAAAhe,MAAA,EAAAie,SAAA,GAoHjC,MAxGAirB,GAAAsB,YAAA,WACA,GAAAC,GAAAroC,UAAA,GACA4c,EAAA5c,UAAA,EACA,KAAAqoC,EAAyD,MAAlCt0B,SAAAoH,IAAA,sBAAkC,CAEzD,IAAAmtB,GAAAD,EAAAlU,MAAA,cACA,KAAAmU,EAAA,MAAAlU,IAMA,QAJA1Y,GAAA4sB,EAAA,GACAjU,EAAA3Y,EAAA3c,QAAA,QAAA2c,KAAAxG,MAAA,KACAmuB,EAAA,GAAAhP,EAAA,QACAL,EAAA,EACA33B,EAAA,EAA0BA,EAAAg4B,EAAAv0B,OAAezD,IACzC23B,GAAAqP,EAAAr9B,KAAAssB,IAAA+B,EAAAh4B,IAAA2J,KAAAuiC,IAAA,GAAAlU,EAAAv0B,OAAAzD,EAAA,EAGA,OAAA23B,IAAApX,GAAA,IAQAkqB,EAAAvpC,UAAAirC,WAAA,SAAA1d,GACA,UAAAA,EAAAhrB,OAEA,GAAAkoC,UAAAld,EAAA3V,OAAA,KAAAszB,UAAA,EAAArpC,KAAAyoC,YAGAzoC,KAAAyoC,WACA/c,EAAA4d,YAAA,SAAAzyB,EAAAC,GAA0D,WAAAD,EAAAC,IAE1D4U,EAAA1U,OAAA,SAAAH,EAAAC,GAAqD,WAAAD,EAAAC,KAWrD4wB,EAAAvpC,UAAA2V,MAAA,SAAAmI,GAQA,OANAstB,GAAA3iC,KAAAyb,IAAAriB,KAAA4nC,aAAA5nC,KAAAooC,aACAoB,EAAAxpC,KAAA2nC,QAAA3xB,WAAA,GACAnL,EAAA,EACA4+B,EAAAxtB,EAAAiB,MAAAvd,QAAA6pC,GACA9gC,EAAA,EACAC,GAAA,EACA1L,EAAA,EAA2BA,GAAAssC,EAAatsC,IAAA,CACxC,GAAAA,IAAA+C,KAAA4nC,aAAA,CAEA,GAAAnM,GAAA5wB,EAAA7K,KAAA6nC,aACA6B,EAAA,EAAA1pC,KAAA8nC,aACA7rB,EAAAiB,MAAAjd,MAAAw7B,IAAAz7B,KAAA8nC,cACA7rB,EAAAiB,MAAAjd,MAAAw7B,EAAAgO,GACAE,EAAA,EAEA3pC,MAAAkoC,OACAyB,EAAAl2B,OAAAC,aAAAC,MAAA,KAAA+1B,GACAhhC,EAAA1E,EAAA,IAAA2lC,EAAA3pC,KAAAioC,eACqB,mBAAAjoC,KAAA+nC,eACrB4B,EAAAl2B,OAAAC,aAAAC,MAAA,KAAA+1B,GACAhhC,EAAAg/B,EAAAsB,YAAAW,IAGAjhC,EAAA1I,KAAAopC,WAAAM,GAGAhhC,GAAA1I,KAAAmoC,cAEA,GAAAlrC,IAAA+C,KAAAooC,YAAA,CAEA,GAAA1M,GAAA7wB,EAAA7K,KAAAqoC,YACAuB,EAAA,EAAA5pC,KAAAsoC,YACArsB,EAAAiB,MAAAjd,MAAAy7B,IAAA17B,KAAAsoC,aACArsB,EAAAiB,MAAAjd,MAAAy7B,EAAA+N,EAEA,sBAAAzpC,KAAAuoC,aAAA,CAEA,GAAAsB,GAAAp2B,OAAAC,aAAAC,MAAA,KAAAi2B,EACAjhC,GAAA++B,EAAAsB,YAAAa,OAGAlhC,GAAA3I,KAAAopC,WAAAQ,EAGAjhC,IAAA3I,KAAAwoC,aAEA39B,EAAA4+B,EAAA,EACAA,EAAAxtB,EAAAiB,MAAAvd,QAAA6pC,EAAA3+B,GACA4+B,EAAA,IAAAA,EAAAxtB,EAAAiB,MAAAxc,QAGA,SAAAgI,GAAA,GAAAC,GACwBD,IAAAC,IAAA8T,SAAA,IAEA/T,IAAAC,IAAA8T,SAAA,IAIxB,GAAAirB,IAWArB,EAAAloC,UAAAyM,gBAAA,SAAAxD,GACA,IAAAA,EAAA,QACA,IAAA8C,GAAA,EACA,aAAA9C,EAAAyD,IAEAX,EAAAlG,EAAA,IAAAoD,EAAAsB,EAAA,8BACA,KAAAtB,EAAAuB,EAAA,KAAAvB,EAAAuP,QAEAvP,EAAA0iC,SACA1iC,EAAA0iC,QAAA3iC,QAAA,SAAAstB,GACA,GAAAsV,GAAA,EACA,iBAAAtV,GAAA,OACAsV,EAAA/lC,EAAA,IAAAywB,EAAAvsB,KAAA,yBAEAgC,GAAA,KAAAuqB,EAAAuV,YAAA,IAAAvV,EAAAwV,OAAA,IACAF,EAAA/lC,EAAA,IAAAywB,EAAAyV,aAAA,iBACiBlqC,UAER,CAET,GAAAkX,GAAA,GAAAxX,YAAA0H,EAAAmQ,IAAA,GACA1K,EAAAu5B,EAAA,IAAA9yB,iBAAAlM,EAAAiQ,QACAH,GAAAE,IAAA,GAAA1X,YAAAmN,EAAAzF,EAAAyD,IACAjE,KAAA0Q,IAAAlQ,EAAAmQ,IAAA,EAAA1K,EAAAoK,WAAA7P,EAAAyD,OAEAX,EAAAuJ,OAAAC,aAAAC,MAAA,KAAAuD,GAEA,MAAAhN,IAKAm8B,MrC89OM,SAAUrpC,EAAQuB,EAAqB3B,GAE7C,YsCp5PA,SAAAutC,MtCq5PiC5rC,EAAuB,EAAI4rC,CACvC,IAAInmC,GAA8CpH,EAAoB,EACAA,GAAoB,EsCp5P/GutC,GAAAlpC,OAAA,WAEA,GACA5D,GAAA,GAAA2G,GAAA,OADA,OAEA3G,GACAE,KAAA,WAAAwT,MAAA,sBACA4G,MAAA,2BACAA,MAAA,yBAAA5Z,IAKAgT,MAAA,qDAAAhT,IACAR,KAAA,QAAAwT,MAAA,yBAOAiS,SAAA,UACAC,OAAA5lB,EAAA6lB,IAAA,yCACAD,OAAA5lB,EAAA6lB,IAAA,qCACAD,OAAA5lB,EAAA6lB,IAAA,kCACAD,OAAA5lB,EAAA6lB,IAAA,0CACAC,SAAAplB,IACAR,KAAA,MAAAwT,MAAA,gCAAAhT,IACA4Z,MAAAta,EAAAgjC,EAAA,+BACAtd,OAAA,mDAA0EhlB,IAC1E4Z,MAAAta,EAAA6lB,IAAA,8CAAAnlB,IACA4Z,MAAAta,EAAA6lB,IAAA,wCAAAnlB,IACA4Z,MAAAta,EAAA6lB,IAAA,iCAAAnlB,IACA4Z,MAAAta,EAAA6lB,IAAA,gCAAAnlB,IACA4Z,MAAAta,EAAAgjC,EAAA,kCACAtd,OAAA,gDAAwEhlB,IACxEA,EAAA,QACAR,KAAA,OAAAwT,MAAA,+BACAiS,SAAA,UACAC,OAAA5lB,EAAA6lB,IAAA,+BACAD,OAAA5lB,EAAA6lB,IAAA,+BACAD,OAAA5lB,EAAAgjC,EAAA,4BACAld,SAIAjZ,KAAA,qDAAAnM,IACAA,EAAA,QACAgT,MAAA,qDAAAhT,IACAR,KAAA,YAAAwT,MAAA,SACA4G,MAAA,6CACAA,MAAA,4CACAA,MAAA,8CAAA5Z,IACAA,EAAA,QACAR,KAAA,QAAAwT,MAAA,iCAAAhT,IACAglB,OAAA,4DAA4EhlB,IAE5EglB,OAAA,oEACAA,OAAA,qDAAqEhlB,IACrER,KAAA,aAAAwT,MAAA,gBAAAhT,IACA4Z,MAAA,gCACAzN,KAAA,iDACA,uDAAAnM,IACA4Z,MAAA,iCACAA,MAAA,8BAAA5Z,IACAuhC,QACA/hC,KAAA,aAAAwT,MAAA,0BACA4G,MAAAta,EAAA6lB,IAAA,+BACAvL,MAAAta,EAAA6lB,IAAA,oCACAqc,MACAxhC,EAAA,QACAA,EAAA,QACAR,KAAA,iBAAAwT,MAAA,iDAAAhT,IACAglB,OAAA,2DAA2EhlB,IAE3EglB,OAAA,mEACAA,OAAA,oDAAoEhlB,IACpEA,EAAA,QACAR,KAAA,YAAAwT,MAAA,kDAAAhT,IACAR,KAAA,YAAAwT,MAAA,0BACA4G,MAAAta,EAAA6lB,IAAA,iCACAvL,MAAAta,EAAA6lB,IAAA,gCAAAnlB,IACAR,KAAA,YAAAwT,MAAA,iBACA4G,MAAA,gCACAA,MAAA,6BAAA5Z,IACAuhC,QACA/hC,KAAA,UAAAwT,MAAA,0BACA4G,MAAAta,EAAA6lB,IAAA,mCACAvL,MAAAta,EAAA6lB,IAAA,6BACAqc,MACAxhC,EAAA,QAEAA,EAAA,QACAR,KAAA,iBAAAwT,MAAA,gDAAAhT,IACAmM,KAAA,qDACA,gCAAAnM,IACAmM,KAAA,iDACA,8BAAAnM,IACAA,EAAA,QAEAA,EAAA,QACAR,KAAA,iBAAAwT,MAAA,6CAAAhT,IACAglB,OAAA,8DAA8EhlB,IAE9EglB,OAAA,sEACAA,OAAA,uDAA2EhlB,IAC3ER,KAAA,iBAAAwT,MAAA,uCAAAhT,IACAuhC,QACAp1B,KAAA,gEACAA,KAAA,0DAAAnM,IACAwhC,MACAr1B,KAAA,+DACA,oCAAAnM,IACAA,EAAA,UtCu6PM,SAAUf,EAAQuB,EAAqB3B,GAE7C,YACqB,IAAIoH,GAA8CpH,EAAoB,EuCvhQ3F2B,GAAA,aAEA,QAAA6rC,GAAA3b,EAAAC,GACA,KAAA1uB,eAAAoqC,IACA,UAAAA,GAAA3b,EAAAC,EAEA1uB,MAAAqqC,UAAA5b,GAAA,cAGA,SAAAC,MACAA,EAAAC,UAAAD,EAAAC,YAA8CE,UAC9C7uB,KAAAsqC,UAAA5b,EAAAK,SAEA/uB,KAAAuqC,WAAA,KAAA7b,EAAA,MAAAA,EAAAM,MAAA,EAEAhvB,KAAAwqC,WAAA5jC,KAAAyb,IAAA,MACA,KAAAqM,EAAA,UAAAA,EAAAQ,UAAA,KAEAlvB,KAAAyqC,cAAA7jC,KAAAyb,IAAA,MACA,KAAAqM,EAAA,aAAAA,EAAAO,aAAA,KAEAjvB,KAAA0qC,aAAAhc,EAAA/X,QACA3W,KAAA2qC,SAAA,GACA3qC,KAAA4qC,YAGA5qC,KAAA6qC,WAAAtrC,OAAAE,iBACAO,KAAA8qC,cAAAvrC,OAAAE,iBACAO,KAAA+qC,aAAA,EAwVA,MA5TAX,GAAAjsC,UAAA6sC,OAAA,SAAAC,EAAAC,EAAAhjC,EAAAinB,EAAAgc,EAAAjhC,EAAAkhC,GAEA,GAAAF,EAAA,CACA,GAAAG,GAAA,CACA,IAAAF,KAAAG,UAAAj3B,SAAA82B,EAAAI,YAEAF,EAAA,EACAD,MAAA,wCACS,IAAAH,GAAAC,EACT,MAIA,IAAAM,GAAArc,EAAA,IAAAA,EAAAkb,UAAA,IACAoB,EAAAN,EAAA,KAAAA,EAAAzM,MAAA,SACAyM,EAAAO,UAAAr3B,OAAA,QACA82B,EAAAG,UAAAj3B,OAAA,IACA82B,EAAAI,YAAA,YACArhC,MAAA,EACA,IAAAyhC,GAAA3nC,EAAA,IAAAhE,KAAAiuB,UAAA,mBACAud,EAAA,IAAAxrC,KAAAuqC,OAAA,IAAAvqC,KAAA+qC,aAAA,IACAU,EACAvhC,CACAkhC,MAAA,EAGA,IAAAQ,GAAA,EACA,QAAAP,EAAA,CACA,GAAAQ,OAAA/rC,EACAqrC,GAAAG,UAAAj3B,OAAA82B,EAAAI,cACAM,EAAAV,EAAAG,UAAA1hB,IAAA5pB,OAEA6rC,EACAD,EAAA,wBAAAC,EAAApd,SAAA,KAEAmd,EAAA,8BACAT,EAAAI,YAAAJ,EAAAG,UAAAj3B,QAKA+2B,GAAAQ,EACAj3B,QAAAoH,IAAA4vB,EAAA,MAAAP,EAAA,IAAAQ,GAEAj3B,QAAAoH,IAAA4vB,KAYAvB,EAAAjsC,UAAA0sB,MAAA,SAAAihB,GAQA,MAPA9rC,MAAAuqC,SACAvqC,KAAA+qC,aAAA,EACA/qC,KAAA6qC,WAAAiB,EACA9rC,KAAA8qC,cAAAgB,EACA9rC,KAAA2qC,SAAA3qC,KAAA0qC,aACA1qC,KAAA4qC,YACA5qC,KAAA+rC,WAAA,SACA/rC,MASAoqC,EAAAjsC,UAAA8vB,QAAA,WACA,MAAAjuB,MAAA8qC,eAWAV,EAAAjsC,UAAA6tC,UAAA,SAAAb,GACA,UAWAf,EAAAjsC,UAAA4e,KAAA,SAAAkvB,GACAjsC,KAAAgrC,OAAA,EAAAiB,EAAApe,KAAAoe,EAAAhe,UAAAjuB,SAAAF,GAAA,WAAAA,GACA,IAAA0vB,MACA4F,GAAmB7hB,QAAA,EAAAic,QAAAxvB,MAEnB,IAAAA,KAAA+qC,aAAA/qC,KAAAsqC,UAAA5pC,OAAA,CACA,GAAAwrC,GAAAlsC,KAAAsqC,UAAAtqC,KAAA+qC,aAWA,IATAmB,EAAArc,MAAA,KAAAqc,EAAArc,MAEAuF,EAAA6W,EAAAtc,WAAAuc,EAAArc,WAAAoc,EAAAjsC,MACAwvB,EAAA4F,EAAA5F,QAGAA,GAAAxvB,MAGA,EAAAwvB,EAAA9uB,QAAA,GAAAV,KAAAuqC,QAAAnV,EAAA7hB,OAAA,CAEA,GAAA44B,GAAAvlC,KAAAoB,KAAAhE,EAAA,SAAAorB,YAAA8c,EAAAllC,IAAAklC,EAAApd,QAGA,IAFA9uB,KAAAosC,gBAAApsC,KAAA8qC,eAAAoB,EAAApd,OAAAqd,EAAAD,EAAArc,MAEAqc,EAAApc,KACA,OAAA7yB,GAAA,EAAmCA,EAAAivC,EAAApc,KAAApvB,OAAqBzD,IACxDuyB,IAAA1T,OAAAmwB,EAAAtc,WAAAuc,EAAApc,KAAA7yB,IAAA6yB,KAAA9vB,MAIAA,MAAA+qC,eAEA,MAAAvb,GAYA,MARAxvB,MAAA0vB,QAAAuc,EAAA,UAMAzc,EAAAzrB,KAAA/D,MAEAwvB,GAaA4a,EAAAjsC,UAAAiuC,gBAAA,SAAAlkC,EAAA+hC,GAKA,MAJAA,MAAA,GAEAjqC,KAAA8qC,cAAA5iC,EAEAlI,KAAA+rC,WAAA9B,IAaAG,EAAAjsC,UAAA4tC,WAAA,SAAA9B,EAAA/hC,GAcA,MANAlI,MAAA4qC,SAAA7mC,MACAimC,YAAAhqC,KAAA+qC,aACAd,SACA/hC,OACAgiC,aAAAlqC,KAAA8qC,gBAEA9qC,MAqBAoqC,EAAAjsC,UAAAkuC,MAAA,SAAAJ,EAAAK,EACAC,EAAAC,EAAAC,EAAAC,GACAH,KAAA,QACAG,KAAAT,EAAAhe,UACAwe,EAAA,qBAAAA,CACA,IAAAjd,KACAxvB,MAAAgrC,OAAA,EAAAiB,EAAApe,KAAA7tB,KAAA8qC,cAAA9qC,KAAAssC,EAAA,YAAAxsC,GACA,IAAAosC,GAAAlsC,KAAAsqC,UAAAtqC,KAAA+qC,aAEAmB,MAAArc,MACAoc,EAAAre,WAAAse,EAAArc,MAAA8c,QAAA3sC,KAGA,IAAA4sC,EAGA,IADAV,IAAAU,EAAAV,EAAAjc,SACA2c,EACA,OAAA3vC,GAAA2vC,EAAAlsC,OAAA,EAA6C,GAAAzD,EAAQA,KAErD2vC,EAAA3vC,KAAAqvC,EAAA5N,OAAA+N,KAEAjd,IAAA1T,OAAAmwB,EAAAre,WAAAgf,EAAA3vC,IAAA6yB,KAAA9vB,OAKAA,MAAAosC,gBAAAM,EAAAH,EACA,IAAApd,GAAAnvB,KAAA0vB,QAAAuc,EAAAM,EAAAC,EAKA,OAHArd,IAAA,GAAAnvB,KAAAuqC,SACA/a,IAAA1T,QAAAqT,KAEAK,GAiBA4a,EAAAjsC,UAAAuxB,QAAA,SAAAuc,EAAAM,EAAAC,EAAAK,GACAN,KAAA,QACAC,KAAA,EACA,IACAb,GAAAY,EAAA,IAAAvsC,KAAAqqC,UAAA,IAAAmC,EAAA,IAAAxsC,KAAA2qC,SACAmC,EAAA9sC,KAAA8qC,aAGA,uBAaA,MAXA9qC,MAAA6qC,YAAAgC,IAEAZ,EAAAzhC,KAAAzG,MAAmC2E,EAAAmkC,EACnClkC,EAAA/B,KAAAuD,MAAA0iC,EAAA7sC,KAAA6qC,YACA1tB,QAAA,EACAxG,QAAAg1B,EACA7B,QAAA9pC,KAAA4qC,WACA5qC,KAAAgrC,OAAA,EAAAiB,EAAApe,KAAAgf,EAAA7sC,SAAAF,GAAA,kBAAA6rC,IAEA3rC,KAAA+qC,aAAA/qC,KAAAsqC,UAAA5pC,YACAV,KAAA6qC,WAAA7qC,KAAA8qC,cAwBA,IAnBA9qC,KAAA6qC,YAAAiC,GAEAb,EAAAzhC,KAAAzG,MAA+B2E,EAAAokC,EAC/BnkC,EAAA/B,KAAAuD,MAAA2iC,EAAA9sC,KAAA6qC,YACA1tB,QAAA,EACAxG,QAAAg1B,EACA7B,QAAA9pC,KAAA4qC,WACA5qC,KAAAgrC,OAAA,EAAAiB,EAAApe,KAAAif,EAAA9sC,SAAAF,GAAA,aAAA6rC,IAEA3rC,KAAAgrC,OAAA,EAAAiB,EAAApe,KAAAif,EAAA9sC,SAAAF,GACA,yDACAkE,EAAA,IAAAhE,KAAA6qC,WAAA,mBACA,IAAA7qC,KAAA6qC,WAAA,MAAAiC,EACA,QAAA9sC,KAAA+qC,aACAY,GAEA3rC,KAAA2qC,SAAA3qC,KAAA0qC,aAGA,EAAA1qC,KAAAuqC,OAAA,CAEA,GAAAwC,GAAA/sC,KAAAiuB,UAAAjuB,KAAAyqC,aAMA,OALAzqC,MAAAyqC,cAAAzqC,KAAAwqC,aACAuC,GAAAnmC,KAAAoB,KAAApB,KAAAssB,IACAlvB,EAAA,SAAAorB,YAAApvB,KAAAwqC,WAAAxqC,KAAAyqC,kBAGAzqC,KAAA6qB,MAAAkiB,GAGA/sC,KAAAuqC,SACAvqC,KAAA+qC,aAAA/qC,KAAAsqC,UAAA5pC,OACAV,KAAA6qC,WAAA7qC,KAAA8qC,eAKAV,MvC4iQM,SAAUptC,EAAQuB,EAAqB3B,GAE7C,YACqB,IAAIoH,GAA8CpH,EAAoB,EwC55Q3F2B,GAAA,aAEA,QAAAyuC,GAAAf,EAAA1uC,EACA0vC,EAAA7e,EAAA8e,EAAAC,EAAApxB,GACA,KAAA/b,eAAAgtC,IACA,UAAAA,GAAAf,EAAA1uC,EACA0vC,EAAA7e,EAAA8e,EAAAC,EAAApxB,EAEA/b,MAAAotC,QAAAnB,EACAjsC,KAAA0+B,MAAAnhC,GAAA,YACAyC,KAAA6tB,KAAA9R,KAAA,EAGA/b,KAAAqtC,iBAAA,OACAF,EAAA,IACAntC,KAAAstC,kBAAA,OACAJ,EAAA3tC,OAAAC,iBACAQ,KAAA0rC,UAAA1nC,EAAA,KACA,SAAAkP,GAA8B,MAAAA,GAAA+a,YAG9BjuB,KAAAutC,iBAAA,OACAnf,EAAA,IACApuB,KAAAwtC,kBAAA,OACAP,EAAA,EACAjtC,KAAAurC,YAAA,EACAvrC,KAAAsrC,UAAAtnC,EAAA,KACA,SAAA60B,GAAgC,MAAAA,GAAAr0B,KAChC,SAAAq0B,GAAgC,MAAAA,GAAA3lB,MAGhClT,KAAA8qC,cAAA,EACA9qC,KAAAytC,cAAA,EACA,EAAAztC,KAAAqtC,cAAA,EAAArtC,KAAAutC,aACAvtC,KAAA0tC,UAAA9mC,KAAA0Q,IAAAtX,KAAAqtC,aAAArtC,KAAAutC,cACS,EAAAvtC,KAAAqtC,aACTrtC,KAAA0tC,UAAA1tC,KAAAqtC,aACS,EAAArtC,KAAAutC,aACTvtC,KAAA0tC,UAAA1tC,KAAAutC,aAEAvtC,KAAA0tC,UAAA,EAqQA,MAnPAV,GAAA7uC,UAAA0sB,MAAA,SAAAihB,EAAAG,GAIA,MAHAjsC,MAAA8qC,cAAAgB,EAAA9rC,KAAA0tC,UACAzB,EAAA5c,SAAArvB,MACAA,KAAAytC,cAAA,EACAztC,MASAgtC,EAAA7uC,UAAA8vB,QAAA,WACA,MAAAjuB,MAAA8qC,eAWAkC,EAAA7uC,UAAA4e,KAAA,SAAAkvB,GAKA,IAJA,GAAAzc,MACAsd,EAAA9sC,KAAAiuB,UAEA0f,EAAApuC,OAAAE,iBACA,EAAAO,KAAA0rC,UAAAr3B,QAAArU,KAAAqtC,cAAAP,EAAAa,GAEA,GADAA,EAAA3tC,KAAA0rC,UAAA5wB,MAAAmT,UACAjuB,KAAAqtC,cAAAP,EAAAa,EAAA,CAEA,GAAAC,GAAA5tC,KAAA0rC,UAAAjc,MAEAoe,EAAAD,EAAAvB,MAAAJ,EAAAjsC,KAAA,QAAAA,KAAA0+B,MAAA,kBACA,EAAAiP,EAAA3tC,KAAAqtC,aAEAQ,GAAAntC,SACA8uB,IAAA1T,OAAA+xB,IAMA,IADA,GAAAC,GAAAvuC,OAAAE,iBACA,EAAAO,KAAAsrC,UAAAj3B,QAAAy5B,GAAAhB,GAAA,CACA,GAAAhyB,GAAA9a,KAAAsrC,UAAAxwB,KAEA,KADAgzB,EAAAhzB,EAAAtW,MACAsoC,EAAA,CACA,GAAAc,GAAA9yB,EAAA5H,GAEA+4B,GAAA3c,YAAAse,GAEApe,IAAA1T,OAAA9b,KAAA8vB,KAAA8d,IAEApe,IAAA1T,OAAA8xB,EAAAvB,MAAAJ,EAAAjsC,KAAA,QACAA,KAAA0+B,MAAA,mBAAAoP,KAIA,KAAA9tC,KAAA0rC,UAAAr3B,QAAA,EAAArU,KAAAsrC,UAAAj3B,OAAA,CAIA,GAAA05B,GAAAxuC,OAAAC,gBACA,GAAAQ,KAAAqtC,eAGAU,EAFA,EAAA/tC,KAAA0rC,UAAAr3B,QACAy4B,GAAA9sC,KAAAqtC,aAAArtC,KAAA0rC,UAAA5wB,MAAAmT,UACAjuB,KAAA0rC,UAAA5wB,MAAAmT,UAAAjuB,KAAAqtC,aAEAP,EAAA9sC,KAAAqtC,aAGA,IAAAW,GAAAzuC,OAAAC,gBACA,GAAAQ,KAAAutC,eAEAS,EADA,EAAAhuC,KAAAsrC,UAAAj3B,OACArU,KAAAsrC,UAAAxwB,MAAAtW,IAEAsoC,EAAA9sC,KAAAutC,cAGAvtC,KAAA8qC,cAAAlkC,KAAA0Q,IAAAy2B,EAAAC,GACAhuC,KAAA8qC,cAAAvrC,OAAAC,iBACAgwB,EAAAzrB,KAAA/D,MAEAA,KAAAytC,cAAA,MAIAztC,MAAAytC,cAAA,CAEA,OAAAje,IAoBAwd,EAAA7uC,UAAA0xB,KAAA,SAAAoc,EAAA9c,GACA,GAAAiG,IAAmB7hB,QAAA,EACnBic,QAAAL,GACA,kBAAAnvB,KAAA0+B,MAAA,MAAAtJ,EACAjG,GAAA6b,OAAA,EAAAhrC,KAAA6tB,KAAAsB,EAAA2b,cAAA3b,EAAAnvB,KAAA,WAAAF,KAEAE,KAAAytC,cAAA,EAAAztC,KAAA0tC,WACA1tC,KAAA6qB,MAAAohB,EAAAhe,UAAAge,EAGA,IAAAgC,GAAA9e,EAAA6c,UAAAhsC,KACA,IAAAiuC,GAAAjuC,KAAAwtC,cAAAxtC,KAAAurC,YAQA,MANAvrC,MAAAurC,aAAA0C,EAEA,EAAAjuC,KAAAutC,cACAvtC,KAAAsrC,UAAAvnC,MAAqCmP,IAAAic,EAAA3qB,IAAAynC,EAAAhe,UAAAjuB,KAAAutC,eAErCpe,EAAA6b,OAAA,EAAAhrC,KAAA6tB,KAAAoe,EAAAhe,UAAAkB,EAAAnvB,KAAA,WAAAF,IACAs1B,CAIA,IAAAp1B,KAAA0rC,UAAAr3B,OAAArU,KAAAstC,eAAA,EAAAttC,KAAAqtC,aAKA,MAHArtC,MAAA0rC,UAAA3nC,KAAAorB,GACAA,EAAA4c,WAAA,QAAA/rC,KAAA0+B,MAAAuN,EAAAhe,WACAkB,EAAA6b,OAAA,EAAAhrC,KAAA6tB,KAAAoe,EAAAhe,UAAAkB,EAAAnvB,KAAA,WAAAF,KACoByT,QAAA,EAAAic,UAIpB,IAAAqe,GAAA1e,EAAAkd,MAAAJ,EAAAjsC,KAAA,QACA,IAAAA,KAAA0+B,MAAA,iBAEA,OADAvP,GAAA6b,OAAA,EAAAhrC,KAAA6tB,KAAAoe,EAAAhe,UAAAkB,EAAAnvB,KAAA,WAAAF,KACgByT,QAAA,EAAAic,OAAAqe,IAchBb,EAAA7uC,UAAA2xB,KAAA,SAAAX,EAAAsd,GAGA,GAFAtd,EAAA6b,OAAA,EAAAhrC,KAAA6tB,KAAA7tB,KAAAotC,QAAAnf,UAAAkB,EAAAnvB,KAAA,WAAAF,IACA2sC,EAAA,qBAAAA,EACA,cAAAzsC,KAAA0+B,MAAA,QACA,IAAAwP,KAGA,SAAAzB,EAAA,CAGA,GAFAzsC,KAAAurC,aAAApc,EAAA6c,UAAAhsC,MAEA,EAAAA,KAAAutC,aACA,GAAAK,GAAA5tC,KAAAsrC,UAAA1hB,IAAAuF,EAEAA,GAAA4c,WAAA,QAAA/rC,KAAA0+B,MAAA1+B,KAAAotC,QAAAnf,WACAkB,EAAA6b,OAAA,EAAAhrC,KAAA6tB,KAAA7tB,KAAAotC,QAAAnf,UAAAkB,EAAAnvB,KAAA,UAAAF,IAOA,OAJAquC,GAAAnuC,KAAAwtC,cAAAxtC,KAAAurC,YACA6C,EAAApuC,KAAA0rC,UAAA5wB,MACA9a,KAAA0rC,UAAA5wB,MAAAkxB,UAAAhsC,MACAT,OAAAC,iBACAvC,EAAA+C,KAAA0rC,UAAAr3B,QAAA+5B,GAAAD,EAAkE,EAAAlxC,EAAOA,IAAA,CAEzE,GAAA2wC,GAAA5tC,KAAA0rC,UAAAjc,KAGAme,GAAAxB,gBAAApsC,KAAAotC,QAAAnf,UAAA,WAAAjuB,KAAA0+B,OACAwP,EAAAnqC,KAAA6pC,GAEAQ,GAAApuC,KAAA0rC,UAAA5wB,MACA9a,KAAA0rC,UAAA5wB,MAAAkxB,UAAAhsC,MACAT,OAAAC,iBAEA,MAAA0uC,IAYAlB,EAAA7uC,UAAAwuC,QAAA,SAAAxd,GACA,GAAAye,GAAA5tC,KAAA0rC,UAAA9hB,IAAAuF,EAEA,OADAye,IAAAze,EAAA4c,WAAA,UAAA/rC,KAAAotC,QAAAnf,WACA2f,GAmBAZ,EAAA7uC,UAAAuxB,QAAA,SAAAuc,EAAAM,EACAC,EAAAK,GAIA,IAFAN,KAAA,QACAC,KAAA,GACA,EAAAxsC,KAAA0rC,UAAAr3B,QACAnI,MAAAlM,KAAA0rC,UAAAjc,MACAvjB,MAAAwjB,SACAxjB,MAAAwjB,QAAAuc,EAAAM,EACA,IAAAvsC,KAAA0+B,MAAA,KAAA8N,EAAAK,IAMAG,MxCw7QM,SAAUhwC,EAAQuB,EAAqB3B,GAE7C,YACqB,IAAIyxC,GAA4DzxC,EAAoB,IAChF6wB,EAA8C7wB,EAAoB,EyCtvR3F2B,GAAA,aAEA,QAAA+vC,KACA,KAAAtuC,eAAAsuC,IACA,UAAAA,GAgLA,MA5JAA,GAAA/zB,QAAA,SAAAF,GAUA,OATAk0B,MAEA97B,EAAAC,KAAAoB,MAAAuG,GAEA0B,MAAAjc,KAAA2S,EAAAsJ,KAAAtJ,EAAAsJ,IACA8O,MAAA/qB,KAAA2S,EAAAoY,MACA4C,EAAA,IAAAhb,EAAAoY,OAAA,GAAAtZ,MAAA,UACApR,EAAA0qB,EAAA4C,EAAA,IAAAhb,EAAAtS,IAAA,QACA4vB,EAAAtd,EAAAsd,UACA9yB,EAAA,EAAuBA,EAAA8yB,EAAArvB,OAAsBzD,IAC7C8yB,EAAA9yB,GAAAmxB,QAAAX,EAAA,IAAAsC,EAAA9yB,GAAAmxB,QAAA,UACA2B,EAAA9yB,GAAAqxB,MAAAb,EAAA,IAAAsC,EAAA9yB,GAAAqxB,MAAA,SAEAigB,GAAA7wC,OAAA2wC,EAAA,GAAAxjB,EAAA1qB,EAAAsS,EAAAsd,UAAAhU,EAGA,QADAyyB,GAAA/7B,EAAA+7B,OACAvxC,EAAA,EAAuBA,EAAAuxC,EAAA9tC,OAAmBzD,IAAA,CAK1C,OAJAyxB,GAAA8f,EAAAvxC,GACAM,EAAAG,OAAA8jB,KAAAkN,GAAA,GACAtxB,EAAAsxB,EAAAnxB,GACAoxB,EAAAvxB,EAAAuxB,UACAxrB,EAAA,EAA2BA,EAAA/F,EAAA2xB,SAAAruB,OAAuByC,IAElD/F,EAAA2xB,SAAA5rB,GAAA2rB,OAAArB,EAAA,IAAArwB,EAAA2xB,SAAA5rB,GAAA2rB,QACA1xB,EAAA2xB,SAAA5rB,GAAA6D,IAAAymB,EAAA,IAAArwB,EAAA2xB,SAAA5rB,GAAA6D,IAGAwnC,GAAAjxC,GAAA8wC,EAAA,EAAAzf,SACAD,EAAAE,MACApB,EAAA,IAAAkB,EAAAG,QAAArB,EAAA,IAAAkB,EAAA3nB,KACA5J,EAAA2xB,SACA,gBAAA3xB,GAAA,MAAAA,EAAA4xB,MAAA,EACAvB,EAAA,IAAArwB,EAAA6xB,cAAAxB,EAAA,IAAArwB,EAAA8xB,YAIA,OADAuf,GAAAh8B,EAAAg8B,QACAxxC,EAAA,EAAuBA,EAAAwxC,EAAA/tC,OAAoBzD,IAAA,CAC3C,GAAAI,GAAAoxC,EAAAxxC,GACAyxC,EAAA7jB,EAAA4C,EAAA,IAAApwB,EAAAwtB,MAAA,GACA8jB,EAAA9jB,EAAA4C,EAAA,IAAApwB,EAAA8C,IAAA,MACAouC,GAAA/f,WAAAnxB,EAAAmuC,KAAAnuC,EAAAsZ,QAAAtZ,EAAAksB,IAAAmlB,EAAAC,EAAAH,EAAAnxC,EAAAqxB,QAGA,MADA,GAAA3S,GAAApH,QAAAoH,IAAAwyB,GACAA,EAAAhf,WAYA+e,EAAAh0B,cAAA,SAAAvc,GACAA,MAAA,OAAAA,EAAA,CACA,IAAAsc,GAAA,EA8FA,OA7FA,KAAAtc,EACAsc,EAAA,smDAuCS,IAAAtc,IAETsc,EAAA,iuEAmDAA,GAIAi0B,MzCqwRM,SAAUtxC,EAAQuB,EAAqB3B,GAE7C,Y0C37RA,SAAAgyC,M1C47RiCrwC,EAAuB,EAAIqwC,CACvC,IAAI5qC,GAA8CpH,EAAoB,GAClEiyC,EAAiEjyC,EAAoB,E0C57R9GgyC,GAAA3tC,OAAA,WAEA,GAAA6tC,GAAA,WAAqCpxC,OAAAmxC,EAAA,oCACrCE,EAAA,WAAqCrxC,OAAAmxC,EAAA,mCAGrC,IAAA7qC,GAAA,OADA,aAGAjG,EAAA,QACAgT,MAAA,2CAAAhT,IACAgT,MAAA,8CAAAhT,IACAA,EAAA,QACAR,KAAA,UACAoa,MAAA,kBACA,wFAGA,OAAAm3B,GAAA/wC,IACA4Z,MAAA,8BACA,OAAAo3B,GAAAhxC,M1C88RM,SAAUf,EAAQuB,EAAqB3B,GAE7C,Y2Cr+RA,SAAAoyC,M3Cs+RiCzwC,EAAuB,EAAIywC,CACvC,IAAIhrC,GAA8CpH,EAAoB,GAClEkmB,EAAkElmB,EAAoB,E2Ct+R/GoyC,GAAA/tC,OAAA,WACA,GACA5D,GAAA,GAAA2G,GAAA,OADA,UAGAirC,EAAA,WAAuCnsB,EAAA,QAAA3e,aAAA9C,IAAAwD,MAAA9B,QACvCmsC,EAAA,WAAwCpsB,EAAA,QAAA3e,aAAA9C,IAAAyD,OAAA/B,OAExC1F,GACAE,KAAA,UAAAwT,MAAA,aACA4G,MAAA,oCAAAs3B,GACAt3B,MAAA,sCAAAu3B,GACAv3B,MAAA,2BAAA5Z,IACAgT,MAAA,mDAAAhT,IACAA,EAAA,QACAR,KAAA,UAAAwT,MAAA,6BAAAhT,IACAgT,MAAA,uCAAAhT,IACAmM,KAAA,gFACA6G,MAAA,YAAAhT,IACAmM,KAAA,8EAAAnM,IACAA,EAAA,QACAR,KAAA,SAAAwT,MAAA,6CAAAhT,IACAgT,MAAA,kCAAAhT,IACAglB,OAAA,kDACAA,OAAA,kDAA0EhlB,IAC1EA,EAAA,QACAR,KAAA,UAAAwT,MAAA,6BAAAhT,IACA4Z,MAAA,mCACAA,MAAA,kCACAA,MAAA,kCAAA5Z,IACAglB,OAAA,wDACAA,OAAA,8DAAsFhlB,IACtFglB,OAAA,8EAAsGhlB,IACtGmM,KAAA,mFAAAnM,IACAA,EAAA,SAIAixC,EAAA/5B,MAAA,WAEA,GAAA5X,GAAA,GAAA2G,GAAA,gBACA3G,GAAAiH,QAAA,oBACAjH,EAAAiH,QAAA,oBACAjH,EAAAiH,QAAA,kBACAjH,EAAAiH,QAAA,gBACAjH,EAAAiH,QAAA,iBACAjH,EAAAkjC,YAAA,cACAljC,EAAAiH,QAAA,mBACAjH,EAAAiH,QAAA,gBACAjH,EAAAiH,QAAA,gBACAjH,EAAAiH,QAAA,qB3Cw/RM,SAAUtH,EAAQD,EAASH,G4ChiSjC,QAAAuyC,GAAAC,GACA,MAAAxyC,GAAAyyC,EAAAD,IAEA,QAAAC,GAAAD,GACA,GAAA7qC,GAAAsf,EAAAurB,EACA,MAAA7qC,EAAA,GACA,SAAA8gB,OAAA,uBAAA+pB,EAAA,KACA,OAAA7qC,GA3BA,GAAAsf,IACAyrB,gBAAA,EACAC,0BAAA,EACAC,6BAAA,EACAC,sBAAA,EACAC,yBAAA,EACAC,oBAAA,EACAC,uBAAA,EACAC,qBAAA,EACAC,wBAAA,EACAC,qBAAA,EACAC,wBAAA,EACAC,sCAAA,GACAC,yCAAA,GACAC,qBAAA,EACAC,wBAAA,EACAC,2BAAA,GACAC,oBAAA,GACAC,mBAAA,EAWApB,GAAA3tB,KAAA,WACA,MAAA9jB,QAAA8jB,KAAAqC,IAEAsrB,EAAAqB,QAAAnB,EACAryC,EAAAD,QAAAoyC,EACAA,EAAA5qC,GAAA,I5C0jSM,SAAUvH,EAAQD,G6C5lSxBC,EAAAD,QAAA","file":"tatLogDiver.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_TouchPanel_js__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_string_js__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_Random_js__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_addEventListener_js__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_setZeroTimeout_js__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_Logger_js__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_copyToClipboard_js__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__util_binarySearch_js__ = __webpack_require__(30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__util_Heap_js__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__util_Element_js__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__config_config_js__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__util_Encoding_js__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__util_SubWindow_js__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__util_Menu_js__ = __webpack_require__(37);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"TouchPanel\", function() { return __WEBPACK_IMPORTED_MODULE_0__util_TouchPanel_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"S2D\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"DateToString\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"D2S\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"N2S\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"S2N\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Random\", function() { return __WEBPACK_IMPORTED_MODULE_2__util_Random_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"addEventListener\", function() { return __WEBPACK_IMPORTED_MODULE_3__util_addEventListener_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"setZeroTimeout\", function() { return __WEBPACK_IMPORTED_MODULE_4__util_setZeroTimeout_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Logger\", function() { return __WEBPACK_IMPORTED_MODULE_5__util_Logger_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"copyToClipboard\", function() { return __WEBPACK_IMPORTED_MODULE_6__util_copyToClipboard_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"binarySearch\", function() { return __WEBPACK_IMPORTED_MODULE_7__util_binarySearch_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Heap\", function() { return __WEBPACK_IMPORTED_MODULE_8__util_Heap_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Element\", function() { return __WEBPACK_IMPORTED_MODULE_9__util_Element_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Config\", function() { return __WEBPACK_IMPORTED_MODULE_10__config_config_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Encoding\", function() { return __WEBPACK_IMPORTED_MODULE_11__util_Encoding_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"SubWindow\", function() { return __WEBPACK_IMPORTED_MODULE_12__util_SubWindow_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Menu\", function() { return __WEBPACK_IMPORTED_MODULE_13__util_Menu_js__[\"a\"]; });\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n // #82\r\n // #95\r\n // #95\r\n\r\n\r\n\r\n\r\n/** ie11 互換用 * */\r\nif(!Number.MAX_SAFE_INTEGER) Number.MAX_SAFE_INTEGER = 9007199254740991; // #59\r\nif(!Number.MIN_SAFE_INTEGER) Number.MIN_SAFE_INTEGER = -9007199254740991;\r\n\r\nif(!Uint8Array.prototype.indexOf){\r\n    Uint8Array.prototype.indexOf = function(target,index){\r\n        index = (index === undefined) ? 0 : index;  // #29\r\n        for(var i = index, last = index + 4096; i < last; i++){ // 暫定：1レコード4KBまでチェック\r\n            if(this[i] === target) return i;\r\n        }\r\n        return -1;\r\n    };\r\n}\r\nif (!Uint8Array.prototype.slice) {  // #29\r\n    Uint8Array.prototype.slice = function(begin, end) {\r\n        return this.subarray(begin, end);\r\n    };\r\n}\r\n// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\r\nif (!Array.prototype.findIndex) {\r\n    Array.prototype.findIndex = function(predicate) {\r\n      if (this === null) throw new TypeError('Array.prototype.findIndex called on null or undefined');\r\n      if (typeof predicate !== 'function') throw new TypeError('predicate must be a function');\r\n      var list = Object(this), length = list.length >>> 0, thisArg = arguments[1], value;\r\n      for (var i = 0; i < length; i++) {\r\n        value = list[i];\r\n        if (predicate.call(thisArg, value, i, list)) return i;\r\n      }\r\n      return -1;\r\n    };\r\n  }\r\n// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\nif (!Array.prototype.find) {\r\n    Array.prototype.find = function(predicate) {\r\n      if (this === null) throw new TypeError('Array.prototype.find called on null or undefined');\r\n      if (typeof predicate !== 'function')  throw new TypeError('predicate must be a function');\r\n      var list = Object(this), length = list.length >>> 0, thisArg = arguments[1], value;\r\n      for (var i = 0; i < length; i++) {\r\n        value = list[i];\r\n        if (predicate.call(thisArg, value, i, list))  return value;\r\n      }\r\n      return undefined;\r\n    };\r\n  }\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"default\"] = Graph;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__simulator_simulator_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Menu_js__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_Init_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__ = __webpack_require__(5);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* ******1*********2*********3*********4*********5*********6*********7****** */\r\n\r\n/**\r\n * インスタンス内の定数を設定する。併せて性能対策として頻繁に使うDOM要素を取り込む\r\n * \r\n * @memberof tatLogDiver\r\n * @class Graph\r\n * @classdesc TAT(Turnaround time)ログ分析用グラフ\r\n * @param {string}\r\n *            chartIdName グラフを作成するHTML要素のID\r\n * @param {string}\r\n *            [globalName=\"HJN.chartD\"] グラフのID\r\n * @param {Object}\r\n *            [config] グラフの設定\r\n * @example HJN.chart = new HJN(chartName, \"HJN.chart\"); HJN.chart.init();\r\n *          HJN.chartD = new HJN(chartName + \"Detail\", \"HJN.chartD\");\r\n *          HJN.chartD.init();\r\n */\r\nfunction Graph(chartIdName, globalName, config) {\r\n    /* メンバ変数 */\r\n    this.seriesSet = [];\r\n    this.chartIdName = chartIdName; // arg0 \"chart\",\"chartD\"\r\n    this.globalName = globalName || \"HJN.chartD\"; // arg1\r\n    if (!config) { // arg2\r\n        var isMain = (globalName === \"HJN.chart\") ? true : false;\r\n        config = {\r\n            SERIESES: [ \r\n                { n: HJN.Tat.CONC.N, process: !isMain, visiblity: !isMain, renderer: 'area' },\r\n                { n: HJN.Tat.CTPS.N, process: true,    visiblity: true,    renderer: isMain ? 'scatterplot' : 'bar' },\r\n                { n: HJN.Tat.ETPS.N, process: true,    visiblity: isMain,  renderer: 'line' },\r\n                { n: HJN.Tat.STAT.N, process: !isMain, visiblity: !isMain, renderer: 'scatterplot' },\r\n                { n: HJN.Tat.ETAT.N, process: !isMain, visiblity: !isMain, renderer: 'scatterplot' },\r\n                { n: HJN.Tat.EMPS.N, process: true,    visiblity: true,    renderer: 'line' }, \r\n                { n: HJN.Tat.EAPS.N, process: true,    visiblity: isMain,  renderer: 'line' } ],\r\n            height : 0.40,\r\n            isVisiblity : true\r\n        };\r\n    }\r\n\r\n    // File.Parserを設定する\r\n    this.fileParser = __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"b\" /* FileParser */](); // #24\r\n   \r\n    // グラフ定義領域の宣言\r\n    this.windowId = document.getElementById(\"hjn_chart\");\r\n    this.menuId = document.getElementById(\"hjnBoxBuger\");\r\n    this.menuPlaceOnId = document.getElementById(\"hjnBoxPlaceOn\");\r\n    this.chartId = document.getElementById(this.chartIdName);\r\n    this.dyData = [];\r\n    this.dySeries = {};\r\n\r\n    this.scale = [ null, null ];\r\n    this.graph = null;\r\n    this.cTpsUnit = __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"e\" /* Tat */].UNIT_CTPS[0]; // #75\r\n\r\n    // グラフの設定(処理対象データの設定のみ this.SERIESES[] に取り込む）\r\n    this.SERIESES = [];\r\n    this.labels = [ 'Date' ];\r\n    for (var i = 0, j = 0; i < config.SERIESES.length; i++) {\r\n        if (config.SERIESES[i].process === true) {\r\n            this.SERIESES[j] = {\r\n                key : '',\r\n                name : '',\r\n                visiblity : false,\r\n                renderer : '',\r\n                order : 0,\r\n                scale : 0,\r\n                color : ''\r\n            };\r\n            // 定数(HJN.Tat.seriesConfig)指定項目を設定する\r\n            for ( var attr in HJN.Tat.seriesConfig[i]) {\r\n                this.SERIESES[j][attr] = HJN.Tat.seriesConfig[i][attr];\r\n            }\r\n            // 引数(config)指定項目を設定する\r\n            this.SERIESES[j].visiblity = config.SERIESES[i].visiblity;\r\n            this.SERIESES[j].renderer = config.SERIESES[i].renderer;\r\n\r\n            var renderer = config.SERIESES[i].renderer;\r\n            if (renderer === 'scatterplot') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    drawPoints : true\r\n                };\r\n            } else if (renderer === 'line') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 2.0,\r\n                    connectSeparatedPoints : true,\r\n                    stepPlot : true\r\n                };\r\n            } else if (renderer === 'area') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    stepPlot : true,\r\n                    fillGraph : true\r\n                };\r\n            } else { // if (renderer === 'bar' ) {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    connectSeparatedPoints : true,\r\n                    stepPlot : true,\r\n                    fillGraph : true\r\n                };\r\n            }\r\n            this.dySeries[this.SERIESES[j].key].color = this.SERIESES[j].color;\r\n\r\n            if (this.SERIESES[j].scale === 1) {\r\n                this.dySeries[this.SERIESES[j].key].axis = 'y2';\r\n            }\r\n\r\n            this.labels.push(this.SERIESES[j].key);\r\n            j++;\r\n        }\r\n    }\r\n\r\n    this.height = config.height;\r\n    this.isVisiblity = config.isVisiblity;\r\n};\r\n\r\n/**\r\n * クラス定数\r\n */\r\n// Graph.prototype = {};\r\n\r\n/**\r\n * クラスメソッド：menuのFilterのｘｙ幅指定エリアにグラフのｘｙ幅を設定する<br>\r\n * dygraphのdrawCallbackに設定する関数<br>\r\n * menuのRadio(F_SYNC)選択時に呼び出す関数（このためにクラスメソッド）\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.DrawCallback = function (g, is_initial) { // #50 #51\r\n    // 初期表示時は、メニューを設定しない\r\n    if (is_initial)\r\n        return;\r\n    // Filterメニューで指定されている F_SYNC の状態を取得する\r\n    var syncMode = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].Filter.getValueByKey(\"F_SYNC\"); // #59\r\n    // \"F_SYNC_UPPER\"かつ上段グラフ もしくは、\"F_SYNC_DETAIL\"かつ下段グラフのとき処理する\r\n    if ((syncMode === \"F_SYNC_UPPER\" && g.HJN === HJN.chart)\r\n            || (syncMode === \"F_SYNC_DETAIL\" && g.HJN === HJN.chartD)) {\r\n        // ｘ軸の幅をFilterメニューフェールドに反映する\r\n        setText(\"Filter.F_TIME_FROM\", __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](g.xAxisRange()[0],\r\n                \"yyyy/MM/dd hh:mm:ss.000\", true)); // #92\r\n        setText(\"Filter.F_TIME_TO\", __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](g.xAxisRange()[1],\r\n                \"yyyy/MM/dd hh:mm:ss.000\", true)); // #92\r\n        // ｙ軸(右)の幅をFilterメニューフェールドに反映する\r\n        setText(\"Filter.F_TAT_FROM\", +(g.yAxisRange(1)[0].toPrecision(4)));\r\n        setText(\"Filter.F_TAT_TO\", +(g.yAxisRange(1)[1].toPrecision(4)));\r\n    }\r\n\r\n    function setText(id, val) {\r\n        document.getElementById(id).value = val;\r\n        document.getElementById(id).onchange();\r\n    }\r\n};\r\n\r\n/**\r\n * グラフを初期化する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.init = function () {\r\n    // メニューを作成する\r\n    Object(__WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Menu_js__[\"default\"])(this);\r\n    // 凡例を作成する\r\n    if (this.isVisiblity)\r\n        addLegend(this);\r\n    // 既にグラフがあるときは削除する\r\n    if (this.graph) {\r\n        this.graph.HJN = null; // （注：循環参照対策\r\n        this.graph.destroy();\r\n    }\r\n    // ウィンドウ枠に合わせて描画領域をリサイズするイベントを登録し、リサイズする\r\n    window.addEventListener(\"resize\", this.resize.bind(this));\r\n    // tablet回転時も、リサイズする #22\r\n    window.addEventListener(\"orientationchange\", this.resize.bind(this));\r\n    var resizes = document.getElementsByClassName(\"hjnResize\");\r\n    for (var i = 0; i < resizes.length; i++) {\r\n        resizes[i].addEventListener(\"change\", this.resize.bind(this)); // メニュ－の開閉\r\n        // #31\r\n    }\r\n\r\n    // legendを追加する（内部関数）\r\n    function addLegend(that) { // arg0 : this\r\n        var chartIdName = that.chartIdName;\r\n        var serieses = that.SERIESES;\r\n        var divLegend = document.getElementById(chartIdName + \"_legend\");\r\n        var formName = chartIdName + \"_LegendForm\";\r\n        var htmlText = '<form name=\"' + formName + '\">';\r\n        for (var i = 0; i < serieses.length; i++) {\r\n            var ckBox = serieses[i].visiblity ? 'checked=\"checked\"' : '';\r\n            htmlText += '<label class=\"legend\" style=\"background:'\r\n                        + serieses[i].color + ';\">' \r\n                    + '<input type=\"checkbox\" '\r\n                        + 'name=\"' + serieses[i].key + '\"' + 'onclick=\"'\r\n                        + that.globalName + '.onClickSetVisibility(' + i + ');\" '\r\n                        + ckBox + '>' \r\n                    + serieses[i].name \r\n                    + '</label><BR>';\r\n        }\r\n        htmlText += '</form>';\r\n        divLegend.innerHTML = htmlText;\r\n    }\r\n};\r\n\r\n/**\r\n * legendの表示指定をグラフに反映する(onclick呼出用）\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {index}\r\n *            i seriesSet配列の設定変更するグラフのインデックス\r\n */\r\nGraph.prototype.onClickSetVisibility = function (i) { //\r\n    var formName = this.chartIdName + \"_LegendForm\";\r\n    var ck = document[formName].elements[i].checked;\r\n    this.graph.setVisibility(i, ck);\r\n};\r\n\r\n/**\r\n * ウィンドウ枠に合わせて描画領域をリサイズする（dygraphは幅は自動、高さは指定）\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.resize = function () {\r\n    // 幅（メニューの状態に合わせて計算） #31\r\n    var dWidth = 0;\r\n    if (this.menuId.checked && !this.menuPlaceOnId.checked) {\r\n        dWidth = this.menuId.parentNode.clientWidth;\r\n    }\r\n    var width = window.innerWidth - dWidth;\r\n    this.windowId.style.width = width + \"px\";\r\n    // 高さ（ウィンドウサイズの比率(this.height)をかけて算出）\r\n    var height = Math.floor(window.innerHeight * this.height);\r\n    this.chartId.style.height = height + \"px\";\r\n\r\n    if (this.graph)\r\n        this.graph.resize(width, height);\r\n    return height;\r\n};\r\n\r\n/**\r\n * seriesSetを取り込む\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Obcjet}\r\n *            [tat] 応答時間(Turnaround time)の時系列データ管理クラス\r\n * @param {array}\r\n *            [seriesSet] tat内の応答時間の時系列データ管理配列\r\n */\r\nGraph.prototype.setSeriesSet = function (tat, seriesSet) { // #30\r\n    if(tat) {\r\n        this.seriesSet = tat.getSeriesSet();\r\n        this.cTpsUnit = tat.getCTpsUnit(); // #75\r\n    }\r\n    if(seriesSet){\r\n        this.seriesSet = seriesSet;\r\n    }\r\n    HJN.Tat.seriesConfig.forEach(function (e) {\r\n        this[e.key] = this.seriesSet[e.N];\r\n    }, this);\r\n};\r\n\r\n\r\n/**\r\n * データを変更し描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {seriesSet}\r\n *            seriesSet dygraph用時系列データ配列\r\n * @param {Integer}\r\n *            n 選択されたグラフのseriesSet配列位置\r\n */\r\nGraph.prototype.update = function (seriesSet, n) {\r\n    // 指定データがあるとき取り込む\r\n    if (seriesSet) this.setSeriesSet(undefined, seriesSet);\r\n    // dygraph用表示データを作成する\r\n    var xy = [[{x:0,y:0}],[{x:0,y:0}],[{x:0,y:0}],[{x:0,y:0}]], // グラフデータの一覧（グラフ１本が配列要素）\r\n        idx = [], // グラフデータの処理中配列位置を保有する配列\r\n        x = [], // グラフデータの処理中配列のｘ(時刻)の値を保有する配列\r\n        row = [], // dygraph１レコードワーク配列：（[x,y0,y1...]の配列）の一レコード分を保持する配列\r\n        minX = 0,\r\n        i = 0; // グラフ番号用ワーク\r\n    // 表示対象データがないとき空データのdygraphを表示する #72\r\n    if (this.seriesSet.length === 0) {\r\n        var cols = [0]; // 日時（ミリ秒）\r\n        for (i = 0; i < this.SERIESES.length; i++) cols[i+1] = null;\r\n        this.dyData = [cols];\r\n        if (this.graph) {\r\n            // 既にグラフがあるときはデータのみ変更する（注：ここでdestroy()すると下段のpointClickCallback時にエラー）\r\n            this.graph.updateOptions( {\r\n                file : this.dyData\r\n            } );\r\n            this.graph.resetZoom(); // #51\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    // xy[] に処理対象seriesを指定する\r\n    for (i = 0; i < this.SERIESES.length; i++) {\r\n        xy[i] = this.seriesSet[this.SERIESES[i].N];\r\n        idx[i] = 0;\r\n    }\r\n    // dygraph表示時間帯を設定する（上段グラフは全期間が処理対象）\r\n    var xRangeMin = Number.MIN_VALUE;\r\n    var xRangeMax = Number.MAX_VALUE;\r\n    var xRangeUnit = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getConfig(\"D_UNIT\"); // #61\r\n    if (HJN.chartD === this) { // 詳細（下段グラフ）のとき画面で指定された期間を設定する // ミリ秒\r\n        var detailRangePlus = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getConfig(\"D_RANGE_PLUS\"); // #27\r\n        var detailRangeMinus = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getConfig(\"D_RANGE_MINUS\");\r\n        var detailRangeUnit = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getConfig(\"D_UNIT\");\r\n        var detailDateTime = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getConfig(\"D_TIME\");\r\n        if ((n === HJN.Tat.ETPS.N || n === HJN.Tat.EMPS.N || n === HJN.Tat.EAPS.N)  // #57\r\n                && xRangeUnit < __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE){ // #61\r\n            var dt = Math.floor(detailDateTime / __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE) * __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE;\r\n            xRangeMin = dt - detailRangeMinus * detailRangeUnit;\r\n            xRangeMax = dt + detailRangePlus * detailRangeUnit;\r\n        } else { // undefined, HJN.Tat.CTPS.N, HJN.Tat.CONC.N,\r\n                    // HJN.Tat.STAT.N, HJN.Tat.ETAT.N\r\n            var dt = Math.floor(detailDateTime / xRangeUnit) * xRangeUnit; // #61\r\n            xRangeMin = dt - detailRangeMinus * detailRangeUnit; // #48\r\n            xRangeMax = dt + detailRangePlus * detailRangeUnit; // #48\r\n        }\r\n    }\r\n\r\n    // dygraph用arrayを空にする\r\n    this.dyData = [];\r\n\r\n    // 指定範囲の先頭が秒単位の端数のとき、dygraph用arrayに、先頭ワークデータを登録する #3\r\n    var xVal = Math.floor(xRangeMin / 1000) * 1000;\r\n    if (Number.MIN_VALUE < xRangeMin && xRangeMin !== xVal) { // 範囲指定（＝下段）\r\n        var firstRow = [ xRangeMin ]; // 先頭はx（時刻）\r\n        xy.forEach(function (xyData, i) {\r\n            // 秒間最大値系のyは最大値or０を、他はnullを設定する\r\n            var yVal = null;\r\n            if (this.SERIESES[i].key === HJN.Tat.CTPS.key) {\r\n                // 始端時刻を含む秒の値（最大値）を、始端時刻にセットする\r\n                var j = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"binarySearch\"](xVal, xyData, function (e) {\r\n                    return e.x;\r\n                });\r\n                yVal = (0 <= j) ? xyData[j].y : 0;\r\n            }\r\n            firstRow.push(yVal);\r\n        }, this);\r\n        this.dyData.push(firstRow);\r\n    }\r\n\r\n    // dygraph用arrayに表示データを登録する\r\n    while (xy.some(function (e, i) {\r\n        return (idx[i] < e.length);\r\n    })) {\r\n        // dygraph１レコードワーク配列 を空にする\r\n        row = [];\r\n        // dygraph１レコードワーク配列 の先頭に、次に追加するｘ（時刻＝各ｘｙ処理位置が持つｘの最小値）を設定する\r\n        xy.forEach(function (e, i) {\r\n            x[i] = (idx[i] < e.length) ? e[idx[i]].x : Number.MAX_VALUE;\r\n        });\r\n        minX = x[0]; // minX = Math.min.apply(null, x);\r\n        for (i = 1; i < x.length; i++) {\r\n            if (x[i] < minX)\r\n                minX = x[i];\r\n        }\r\n        row.push(minX); // ミリ秒\r\n        // dygraph１レコードワーク配列 の２番目以降に、各ｘｙのｘを設定する\r\n        xy.forEach(function (e, i) {\r\n            if (e.length <= idx[i]) {\r\n                row.push(null); // 末尾を過ぎたｘｙのyはnull\r\n            } else if (e[idx[i]].x === minX) {\r\n                // ｘｙのｘ(e[idx[i]].x)が、出力するｘ(minX)と同じとき、ｙを設定し、ｘｙの処理位置(idx[i])を次に進める\r\n                row.push(e[idx[i]].y);\r\n                idx[i]++;\r\n            } else {\r\n                row.push(null); // xと ｘｙのｘが異なる場合 null\r\n            }\r\n        });\r\n        // dygraph用arrayに、編集したdygraph１レコードワーク配列 を登録する\r\n        if (xRangeMin <= minX && minX <= xRangeMax) {\r\n            this.dyData.push(row);\r\n        }\r\n    }\r\n    // 指定範囲の先頭が秒単位の端数のとき、dygraph用arrayに、末尾ワークデータを登録する #3\r\n    if (xRangeMax < Number.MAX_VALUE && // 範囲指定（＝下段）\r\n    xRangeMax !== Math.floor(xRangeMax / 1000) * 1000) {\r\n        var lastRow = [ xRangeMax ]; // 先頭はx（時刻）\r\n        xy.forEach(function (e, i) { // 秒間最大値系のyは始端：最大値、終端：０を、他はnullを設定\r\n            lastRow.push((this.SERIESES[i].key === HJN.Tat.CTPS.key) ? 0 : null);\r\n        }, this);\r\n        this.dyData.push(lastRow);\r\n    }\r\n\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"[7:dygraph data created] \"\r\n            + this.dyData.length + \" rows\", \"calc\");\r\n\r\n    // グラフの設定\r\n    var visibility = [];\r\n    if (this.isVisiblity) {\r\n        // visiblity指定できるとき画面の表示指定を取り込む\r\n        var inputs = document[this.chartIdName + \"_LegendForm\"];\r\n        for (i = 0; i < this.SERIESES.length; i++) {\r\n            visibility.push(inputs[this.SERIESES[i].key].checked);\r\n        }\r\n    } else {\r\n        // visiblity指定できないとき、デフォルト設定を取り込む\r\n        for (i = 0; i < this.SERIESES.length; i++) {\r\n            visibility.push(this.SERIESES[i].visiblity);\r\n        }\r\n    }\r\n\r\n    // グラフの作成\r\n    if (this.graph) {\r\n        // 既にグラフがあるときはデータのみ変更する（注：ここでdestroy()すると下段のpointClickCallback時にエラー）\r\n        this.graph.updateOptions( {\r\n            file : this.dyData\r\n        } );\r\n        this.graph.resetZoom(); // #51\r\n    } else {\r\n        // グラフが無いときは新規作成する\r\n        this.graph = new Dygraph(this.chartId, this.dyData, {\r\n            height : this.resize(),\r\n            labels : this.labels,\r\n            title : this === HJN.chart ? '' : '', // タイトル\r\n            titleHeight : 10, // タイトルの高さ＆フォントサイズ（デフォルト18px)\r\n            legend : 'always', // 'follow', //\r\n            showLabelsOnHighlight : false, // 効果不明\r\n            // labelsDiv : document.getElementById(HJN.chartName + 'Labels'), //\r\n            // ラベル表示先の変更\r\n            labelsSeparateLines : false,\r\n            // legendFormatter: this.legendFormatter, // コメントアウトでlegendが非表示\r\n            axes : {  // 軸の設定\r\n                x : { // X軸の設定\r\n                    axisLabelFormatter : xAxisLabelFormatter, // ラベル表示文字列編集関数\r\n                    axisLabelWidth : 100        // X軸ラベルの表示幅（幅が不足すると文字が切れる）\r\n                },\r\n                y : { // Y2（左）軸の設定\r\n                    independentTicks : true,    // 目盛合わせ（falseはY2軸に合わせる）\r\n                    axisLabelWidth : 40,        // ラベル表示幅\r\n                    // axisLineColor : 'rgb(0,0,0)',// 軸の色\r\n                    // axisLabelFontSize : 14, // ラベルのフォントサイズ(デフォルト:14)\r\n                    logscale : false            // 対数軸\r\n                },\r\n                y2 : { // Y2（右）軸の設定\r\n                    axisLabelFormatter : yAxisLabelFormatter, // ラベル表示文字列編集関数\r\n                    independentTicks : true,    // 目盛合わせ（falseはY1軸に合わせる）\r\n                    axisLabelWidth : 65,        // ラベル表示幅\r\n                    drawGrid : true,            // 横罫線\r\n                    gridLinePattern : [ 1, 2 ], // 罫線形状（破線）\r\n                    logscale : false            // 対数軸\r\n                }\r\n            },\r\n            includeZero : true,\r\n            // axisLabelFontSize: 10,\r\n            axisLineColor : 'rgba(0, 0, 0, 0.2)',\r\n            gridLineColor : 'rgba(0, 0, 0, 0.2)',\r\n            strokeWidth : 2,\r\n            pointSize : 3,\r\n            ylabel: 'Number of transactions',\r\n            y2label : 'Sec', // this === HJN.chart ? '' : 'Sec',\r\n            // rollPeriod: 7,\r\n            // errorBars: true,\r\n            // showRangeSelector: true\r\n            // drawPointCallback: drawPointCallback,\r\n            drawHighlightPointCallback : drawHighlightPointCallback,\r\n            highlightCircleSize : 3,\r\n            highlightCallback : highlightCallback,\r\n            pointClickCallback : pointClickCallback,\r\n            annotationClickHandler : annotationClickHandler,\r\n            annotationDblClickHandler : annotationDblClickHandler,\r\n            // clickCallback: clickCallback,\r\n            drawCallback : Graph.DrawCallback, // #50 #51\r\n            highlightSeriesOpts : {\r\n            // strokeWidth: 3,\r\n            // strokeBorderWidth: 1,\r\n            // highlightCircleSize: 5\r\n            },\r\n            series : this.dySeries,\r\n            labelsKMB : true,\r\n            visibility : visibility,\r\n            interactionModel: { // #22\r\n                mousedown: Dygraph.defaultInteractionModel.mousedown,\r\n                willDestroyContextMyself: true,\r\n                // touchstart: function(){}, 空functionと未登録は同じ効果\r\n                // touchmove: function(){},\r\n                // touchend: function(){},\r\n                dblclick: Dygraph.defaultInteractionModel.dblclick\r\n            },\r\n            animatedZooms : true, // ズームするときのアニメーション有無（デフォルト:false）\r\n            connectSeparatedPoints : true\r\n        });\r\n        // dygraphイベント処理でHJJを取れるように（注：循環参照）\r\n        this.graph.HJN = this;\r\n        // スマフォ対応 #22\r\n        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"TouchPanel\"].DispatchEventTouchToMouse(this.graph.canvas_);\r\n        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"TouchPanel\"].DispatchEventTouchToMouse(this.graph.canvas_ctx_.canvas);\r\n    }\r\n    // zoom reset ボタン追加 #22\r\n    // this.addIcon_ZoomReset(); #78 グラフ毎から全体で一つに変更に伴いcall停止\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"[8:dygraph showen] \", \"calc\");\r\n\r\n    // 初期表示の不活性グラフの設定\r\n    function xAxisLabelFormatter(d, gran, opts) {\r\n        // return Dygraph.dateAxisLabelFormatter(new Date(d), gran, opts); #63\r\n        var isTop = (this.xAxisRange()[0] === d);\r\n        var format = \"\";\r\n        var diffTime = this.xAxisRange()[1] - this.xAxisRange()[0];\r\n        if (diffTime < 60000) { \r\n            format = isTop ? \"hh:mm:ss.000\" : \"ss.000\"; // #92\r\n        } else if (diffTime < 86400000) { // 1日未満\r\n            format = \"hh:mm:ss\";\r\n        } else if (diffTime < 31536000000) { // 365日未満\r\n            format = isTop ? \"yyyy/MM/dd\": \"MM/dd hh\";\r\n        } else { // 365日以上\r\n            format = \"yyyy/MM/dd\";\r\n        }\r\n        return __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](d,format,true);\r\n    }\r\n    function yAxisLabelFormatter(d, gran, opts) { // #63\r\n        var range = this.yAxisRanges()[1];\r\n        var format = \"\";\r\n        var diff = range[1] - range[0];\r\n        if (diff < 300000) { // 300秒未満\r\n            return \"\" + d / 1000;\r\n        } else if (diff < 86400000) { // 1日未満\r\n            return __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](d, \"hh:mm:ss\", true);\r\n        } else if (diff < 172800000) { // 2日未満\r\n            var hours = Math.ceil(d / 3600000) + \":\";\r\n            return hours + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](d, \"mm:ss\", true);\r\n        } else { // 2日以上\r\n            var days = Math.ceil(d / 86400000) + \" days+\";\r\n            var time = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](d, \" hh:mm:ss\", false);\r\n            return (d < 172800000) ? time : days; // 2日未満？\r\n        }\r\n    }\r\n\r\n    // 再描画する\r\n    this.showBalloon();\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"[9:balloon showen] \", \"calc\");\r\n\r\n    // updateメソッド内部関数宣言\r\n    // 点がハイライトになったときの描画処理（内部関数宣言） g:{dygraph} HJN.chartD.graph\r\n    function drawHighlightPointCallback(g, name, ctx, cx, cy, color, r, idx) {\r\n        // file dropのとき、新グラフデータに更新後に、旧グラフのidx値が引き渡されたとき 処理しない #12\r\n        if (!g.rawData_ || g.rawData_.length - 1 < idx)\r\n            return;\r\n        var x = g.rawData_[idx][HJN.Tat.CONC.N]; // 選択されている点(時刻)のCONCのxの値（無いときundefined)\r\n        var eTat = HJN.chart.eTat;\r\n        var sTat = HJN.chart.sTat;\r\n        var n = 0;\r\n\r\n        // ETAT,STATのときlogレコードを表示する #28\r\n        if ((name === HJN.Tat.STAT.key || name === HJN.Tat.ETAT.key)\r\n                && typeof x != 'undefined') { // #41\r\n            // eTatの配列位置をを求める\r\n            if (name === HJN.Tat.ETAT.key) {\r\n                // ETATのとき、終了時刻(x)からeTatの配列位置(n)を検索する\r\n                n = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"binarySearch\"](x, eTat, \r\n                                    function (e) { return e.x; });\r\n            } else {\r\n                // STATのとき、開始時刻(x)からsTatの配列位置(sTatN)を検索し、sTatからeTatの配列位置を取得する\r\n                var sTatN = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"binarySearch\"](x, sTat, \r\n                                    function (e) { return e.x; });\r\n                n = sTat[sTatN].eTatIdx;\r\n            }\r\n            // ログデータを表示し、線を引く\r\n            if (0 <= n) {\r\n                // ログデータを取得する\r\n                var e = eTat[n];\r\n                var logRow = this.HJN.fileParser.getRecordAsText(e);\r\n                // シミュレータ生成データでないとき、文字コード変換する #82\r\n                if (typeof e.pos != \"undefined\") { \r\n                    var charset = HJN.Config.File.getConfig(\"CHAR\");\r\n                    logRow = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Encoding\"].charset.convert(logRow, \"Unicode\", charset); \r\n                }\r\n                // ログデータを表示する #62\r\n                var iHtml = document.getElementById(\"lineViewer\");\r\n                iHtml.textContent = \"\"; // #82\r\n                iHtml.insertAdjacentHTML('afterBegin', logRow);\r\n                // 線を引く #30\r\n                drawTatLine(ctx, e.x, e.y, 2, color);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n\r\n        // CONCのとき同時処理の線を引く\r\n        if (name === HJN.Tat.CONC.key && typeof eTat.tatMap != 'undefined') { // #17\r\n            // #41\r\n            // 指定時刻に動いているeTatの一覧(trans)を取得する\r\n            var trans = eTat.tatMap.search(x, x, 1000); // #18\r\n            // 以前に選択した線を消す\r\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            // 同時処理の線を引く\r\n            if (0 <= i && 0 < trans.length) {\r\n                // TRANS分の線を引く\r\n                trans.forEach(function (e) {\r\n                    drawTatLine(ctx, e.x, e.y, 1, HJN.Tat.CONC.color);\r\n                });\r\n            }\r\n            ctx.stroke();\r\n        }\r\n\r\n        // 選択点の点と数値を表示する\r\n        var val = \"\";\r\n        var time = \"\";\r\n        if (0 <= idx) {\r\n            time = g.rawData_[idx][0]; // #60\r\n            val = name ? g.rawData_[idx][g.setIndexByName_[name]] : \"\";\r\n            // valが時間のとき、 時間表記に文字列編集する\r\n            if (name === HJN.Tat.STAT.key || name === HJN.Tat.ETAT.key \r\n                    || name === HJN.Tat.EMPS.key || name === HJN.Tat.EAPS.key) {\r\n                val = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](val);\r\n            }\r\n        }\r\n        drawPoint(ctx, cx, cy, r, color, val, time);\r\n        // 縦線を引く\r\n        drawLine(ctx, [ {\r\n            x : cx,\r\n            y : 0\r\n        }, {\r\n            x : cx,\r\n            y : ctx.canvas.height\r\n        } ], 1, \"rgba(127,127,127,0.5)\", [ 1, 2 ]);\r\n\r\n        // drawHighlightPointCallback 内部関数宣言\r\n        // TAT線を表示する（内部関数）\r\n        function drawTatLine(ctx, x, y, heigth, color) {\r\n            // isXend指定の始点(false)／終点（true)に合わせて、線の座標を求める\r\n            var tXs = g.toDomXCoord(x - y), // ミリ秒\r\n            tXe = g.toDomXCoord(x), // ミリ秒\r\n            tY = g.toDomYCoord(y, 1); // 第二軸:1\r\n            drawLine(ctx, [ {\r\n                x : tXs,\r\n                y : tY\r\n            }, {\r\n                x : tXe,\r\n                y : tY\r\n            } ], heigth, color);\r\n            drawPoint(ctx, tXs, tY, r, HJN.Tat.STAT.color);\r\n            drawPoint(ctx, tXe, tY, r, HJN.Tat.ETAT.color);\r\n        }\r\n\r\n        // 線を表示する（内部関数）\r\n        function drawLine(ctx, plots, r, color, lineDashSegments) {\r\n            ctx.beginPath();\r\n            ctx.lineWidth = r;\r\n            ctx.lineCap = \"round\";\r\n            ctx.strokeStyle = color;\r\n            if (lineDashSegments)\r\n                ctx.setLineDash(lineDashSegments); // lineDashは[num]\r\n            ctx.moveTo(plots[0].x, plots[0].y);\r\n            plots.forEach(function (p) {\r\n                ctx.lineTo(p.x, p.y);\r\n            });\r\n            ctx.stroke();\r\n        }\r\n\r\n        // 点を表示する（内部関数）\r\n        function drawPoint(ctx, cx, cy, r, color, val, time) {\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = color;\r\n            ctx.fillStyle = color;\r\n            ctx.arc(cx, cy, r, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            var text = \"\";\r\n            if (val || time) {\r\n                if (typeof(val) === \"number\") {\r\n                    text += Math.round(val * 10) / 10;\r\n                } else if (typeof(val) === \"string\") { // #60\r\n                    text += val;\r\n                }\r\n                if (val && time) text += \" \";\r\n                if (time) text += \"[\" + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](time, \"hh:mm:ss.000\", true) + \"]\"; // #60\r\n                                                                                    // #92\r\n                ctx.beginPath();\r\n                ctx.fillStyle = color.replace(/\\,[\\s\\.0-9]*\\)/,\",1)\"); // #60\r\n                ctx.textAlign = \"left\"; // \"rigth\" \"center\" #60\r\n                ctx.fillText(text, cx, cy - 12);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 点がハイライトになったときの処理（内部関数宣言）\r\n    function highlightCallback(e, x, pts, row, seriesName) {\r\n        // マウスクリック用に座標をHJN.hoverXYに退避する\r\n        HJN.hoverXY = {\r\n            x : x,\r\n            pts : pts,\r\n            row : row,\r\n            seriesName : seriesName\r\n        };\r\n    }\r\n\r\n    // 点をクリックしたときの処理(内部関数宣言）\r\n    function pointClickCallback(event, p) {\r\n        if (!p.annotation)\r\n            HJN.Plot.PointClickCallback(p);\r\n    }\r\n\r\n    // アノテーション（グラフ中の吹出し）をクリックしたときの処理(内部関数宣言）\r\n    function annotationClickHandler() { // annotation, p, dygraph, event\r\n        HJN.Plot.PointClickCallback(arguments[1]);\r\n    }\r\n\r\n    // アノテーション（グラフ中の吹出し）をダブルクリックしたときの処理(内部関数宣言）\r\n    function annotationDblClickHandler() { // annotation, p, dygraph, event\r\n        // 指定ポイントを削除する\r\n        HJN.Plot.PointDblClickCallback(arguments[1]);\r\n    }\r\n\r\n    // グラフをクリックしたときの処理(内部関数宣言）\r\n    // function clickCallback(e, x, pts) {}\r\n};\r\n\r\n/**\r\n * dygraphのBalloonを再描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.showBalloon = function () {\r\n    if (this.cTps.length === 0)\r\n        return; // ctpsが空の時何もしない\r\n\r\n    var ann = {\r\n        series : \"\",\r\n        xval : 0,\r\n        shortText : \"\",\r\n        text : \"\"\r\n    }, anns = [];\r\n    // 表示時間帯を求める\r\n    var ctps = this.cTps, minX = ctps[0].x, maxX = ctps[ctps.length - 1].x;\r\n    // アノテーションをdygparhに追加する\r\n    HJN.Plot.List.forEach(function (e) {\r\n        if (minX <= e.x && e.x <= maxX) {\r\n            ann = {\r\n                series : HJN.Tat.seriesConfig[e.n].key,\r\n                xval : e.x, // ミリ秒\r\n                shortText : e.y,\r\n                text : e.label\r\n            };\r\n            anns.push(ann);\r\n            // 詳細Plot＆詳細グラフデータが無いとき、詳細Plot内のTPS Plotを追加する #7\r\n            if (\"tpsPlot\" in e) { // 詳細plotのとき\r\n                if (this.SERIESES.findIndex(function (s) {\r\n                    return s.N === e.n;\r\n                }) < 0) { // 詳細グラフデータが無いとき\r\n                    ann = {\r\n                        series : HJN.Tat.seriesConfig[e.tpsPlot.n].key,\r\n                        xval : e.tpsPlot.x, // ミリ秒\r\n                        shortText : e.tpsPlot.y,\r\n                        text : e.tpsPlot.label\r\n                    };\r\n                    anns.push(ann);\r\n                }\r\n            }\r\n        }\r\n    }, this);\r\n    // dygraphの残描画処理が完了してからアノテーションをセットする\r\n    this.graph.ready(function () {\r\n        this.setAnnotations(anns);\r\n    });\r\n};\r\n\r\n/**\r\n * dygraphのlegendを編集する(dygraph オプション登録用関数）\r\n * {@link http://dygraphs.com/options.html#legendFormatter}\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {ETAT}\r\n *            data [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]\r\n * @return {string} dygraphのlegendに表示する文字（HTML)\r\n */\r\nGraph.prototype.legendFormatter = function (data) {\r\n    // legend: 'always'指定のとき、マウスがグラフ外にあると dataに値が設定されていなことを考慮\r\n    var html = (typeof data.x === \"undefined\") ? '' : __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"DateToString\"](\r\n            new Date(data.xHTML), \"yyyy/MM/dd hh:mm:ss.000\"); // #92\r\n    html = '<label class=\"datetime\">' + html + '</label>';\r\n    data.series\r\n            .forEach(function (series) {\r\n                if (!series.isVisible)\r\n                    return;\r\n                var val = (typeof series.yHTML === \"undefined\") ? \"\"\r\n                        : series.yHTML, text = '<label '\r\n                        + getStyle(series.label)\r\n                        + '\">'\r\n                        + \"&nbsp;\"\r\n                        + series.labelHTML\r\n                        + ':'\r\n                        + ('####' + val.replace(/\\.[0-9]*/, \"\")).slice(-4)\r\n                                .replace(/#/g, \"&nbsp;\") + '</label>';\r\n                html += series.isHighlighted ? '<b>' + text + '</b>' : text;\r\n                html += '&nbsp;';\r\n            });\r\n    return html;\r\n    // keyに設定された色指定するstyle文字列を取得する（legendFormatter内部関数宣言）\r\n    function getStyle(key) {\r\n        var i = HJN.Tat.seriesConfig.findIndex(function (e) {\r\n            return (e.key === key);\r\n        });\r\n        return 'style=\"background:' + HJN.Tat.seriesConfig[i].color + ';';\r\n    }\r\n};\r\n\r\n\r\n\r\n/**\r\n * メニュー機能：CSVデータファイルを開く\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {evt}\r\n *            evt ファイルオープンイペント\r\n */\r\nGraph.prototype.menuOpenCsv = function (evt) {\r\n    var file_list = evt.target.files;\r\n    // 指定されたファイルを処理する\r\n    HJN.init.FileReader(file_list);\r\n};\r\n\r\n/**\r\n * メニュー機能：画面設定をJSON形式のセーブファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuSaveConfig = function (menuId, fileName) {\r\n    // plotsをjsonに変換する\r\n    var save = {\r\n        \"HJN.Plot.List\" : HJN.Plot.List,\r\n        \"HJN.Config.File\" : HJN.Config.File.__config, // #76\r\n        \"HJN.Config.Filter\" : HJN.Config.Filter.__config\r\n    };\r\n    var json = JSON.stringify(save, null, 4);\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(this.menuBuffToBlob(json), menuId, fileName);\r\n};\r\n/**\r\n * メニュー機能：JSON形式の画面設定ファイルをロードし画面表示に反映する TODO\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ？\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名 ？\r\n */\r\nGraph.prototype.menuLoadConfig = function (evt) { // #10\r\n    // 指定されたファイルを開く\r\n    var files = evt.target.files;\r\n    for (var i = 0; i < files.length; i++) { // データを順番に取得する\r\n        try {\r\n            // ファイルを取得する\r\n            var file = files[i];\r\n            // ログ出力用にファイル名（サイズ）を編集する\r\n            if (10000 < file.size) {\r\n                var msg = \"Too large(>10KB) \" + file.name + \" [\" + file.size\r\n                        + \"byte]\";\r\n                __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowText([ \"<mark>\" + msg + \"</mark>\" ]);\r\n                return;\r\n            }\r\n            // ファイルの読み込みに成功したら、その内容をドロップエリアに追記して表示する\r\n            var reader = new FileReader();\r\n            reader.onloadend = funcOnloadend.bind(this, files[i], i);\r\n            // ファイルにArrayBufferで参照を取得する（onloadendイベントを起こす）\r\n            reader.readAsArrayBuffer(files[i]);\r\n        } catch (e) {\r\n            // 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n            var msg = \"The \" + i + \"th dropped object is not a file\";\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowText([ \"<mark>\" + msg + \"</mark>\" ]);\r\n            console.error(\"[%o]%o\", msg, e);\r\n        }\r\n    }\r\n\r\n    // 内部関数：ファイルを読み込み後の処理（指定ファイルを読み込んだ後に呼び出される）\r\n    function funcOnloadend(file, i, evt) {\r\n        if (evt.target.readyState === FileReader.DONE) {\r\n            // ファイルからjsonを読み込む\r\n            var filesArrayBuffer = evt.target.result;\r\n            var buf = new Uint8Array(filesArrayBuffer);\r\n            var json = String.fromCharCode.apply(null, buf);\r\n            alert(json);\r\n            var jsonObj = JSON.parse(json);\r\n\r\n            // jsonからHJN.chartD.fileParserに登録されているConfig の定義を作成する\r\n            var conf = jsonObj[\"HJN.chart.fileParser\"];\r\n            HJN.chart.fileParser._config_File.__config = conf;\r\n            var confD = jsonObj[\"HJN.chartD.fileParser\"];\r\n            HJN.chartD.fileParser._config_File.__config = confD;\r\n\r\n            // jsonからHJN.Plot.Listを作成する\r\n            var tmpPlots = jsonObj[\"HJN.Plot.List\"];\r\n            var plots = [];\r\n            // フォーマットに合致する項目のみ抽出する\r\n            if (isSameType([], tmpPlots)) { // 最上位が配列\r\n                tmpPlots.forEach(function (e) { // 2層目がオブジェクト\r\n                    if (isSameType(0, e.x))\r\n                        plots.push(e);\r\n                });\r\n            }\r\n            if (0 < plots.length) {\r\n                HJN.Plot.List = plots;\r\n            }\r\n            HJN.Plot.Render();\r\n            // グラフ内の吹き出しを再表示する\r\n            HJN.Plot.ShowBalloon();\r\n\r\n            // 型判定\r\n            function isSameType(sample, obj) {\r\n                var clas0 = Object.prototype.toString.call(sample);\r\n                var clas1 = Object.prototype.toString.call(obj);\r\n                return clas0 === clas1;\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * メニュー機能：メニューで指定されたフィルタの条件で再描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuFilterApply = function () { // #34\r\n    if (HJN.files && HJN.files.length === 0) {\r\n        // 自動生成データのグラフを表示しているとき\r\n        HJN.init.ChartShow(HJN.chart.eTatOriginal)\r\n    } else {\r\n        // ファイル指定のグラフを表示しているとき\r\n        HJN.init.FileReader(HJN.files);\r\n    }\r\n};\r\n/**\r\n * メニュー機能：フィルタ条件を初期値にし、再描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuFilterReset = function () { // #34\r\n    __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"d\" /* MenuConfigFilter */].reset();\r\n};\r\n\r\n/**\r\n * メニュー機能：シミュレータ 指定JSONでシミュレートする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuSimulatorSimulate = function () { // #53\r\n    // グラフを再生成する\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ResetTimestamp(); // #79\r\n    var json = document.getElementById(\"SimulatorEditor\").value;\r\n    HJN.files = []; // #61\r\n    HJN.Plot.List = [];\r\n    Object(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_Init_js__[\"CreateSampleTatLogAndChartShow\"])(json);\r\n\r\n};\r\n/**\r\n * メニュー機能：シミュレータ JSON入力エリアを広げる\r\n * \r\n */\r\nGraph.prototype.menuSimulatorEditor = function () { // #53\r\n    var divSimulator = document.getElementById(\"Simulator\");\r\n    var divSimulatorEditor = document.getElementById(\"SimulatorEditor\");\r\n    if (divSimulator.style.height === \"100%\") { // #60\r\n        // 開いているとき、textareaの親を閉じる\r\n        divSimulator.style.visibility = \"hidden\"; // #79\r\n        divSimulator.style.height = \"0\";\r\n        divSimulator.style.width = \"190px\";\r\n    } else{ // 閉じているとき\r\n        // textareaを一度閉じる（textareaが大きいとき親が大きくなりスクロールが出るため）\r\n        divSimulatorEditor.style.height = \"0\";\r\n        // textareaの親を開く\r\n        divSimulator.style.height = \"100%\";\r\n        divSimulator.style.width = \"70%\";\r\n// divSimulatorEditor.style.height = (divSimulator.scrollHeight - 10) + \"px\";\r\n        divSimulatorEditor.style.height = divSimulator.clientHeight + \"px\";\r\n        divSimulator.style.visibility = \"visible\"; // #79\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * メニュー機能：canvas画像をファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadImg = function (menuId, fileName) {\r\n    var type = 'image/png';\r\n    // canvas から DataURL で画像を出力\r\n    var canvas = this.chartId.getElementsByTagName('canvas')[0], dataurl = canvas\r\n            .toDataURL(type);\r\n    // DataURL のデータ部分を抜き出し、Base64からバイナリに変換\r\n    var bin = atob(dataurl.split(',')[1]);\r\n    // Uint8Array ビューに 1 バイトずつ値を埋める\r\n    var buffer = new Uint8Array(bin.length);\r\n    for (var i = 0; i < bin.length; i++) {\r\n        buffer[i] = bin.charCodeAt(i);\r\n    }\r\n    // Uint8Array ビューのバッファーを抜き出し、それを元に Blob を作る\r\n    var blob = new Blob([ buffer.buffer ], {\r\n        type : type\r\n    });\r\n    // var url = window.URL.createObjectURL(blob);\r\n\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(blob, menuId, fileName);\r\n};\r\n\r\n/**\r\n * メニュー機能：グラフ全データをCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadCsv = function (menuId, fileName) {\r\n    var bom = new Uint8Array([ 0xEF, 0xBB, 0xBF ]), // Excel対応UTF8のBOMコード指定\r\n    csv = this.labels.join(','); // csvヘッダ行の作成\r\n    this.dyData.forEach(function (e) {\r\n        csv += \"\\r\\n\" + e.join(',');\r\n    }); // csvデータ展開\r\n    var blob = new Blob([ bom, csv ], {\r\n        \"type\" : \"text/csv\"\r\n    }); // blob変換\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(blob, menuId, fileName);\r\n};\r\n\r\n/**\r\n * メニュー機能：グラフ全データの編集元に該当するTATログの該当行をCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadLog = function (menuId, fileName) {\r\n    var eTat = this.eTat;\r\n    if (0 < eTat.length) { // 出力対象データがあるとき\r\n        if (typeof eTat[0].pos === \"undefined\") { // 生成データのとき\r\n            // 生成データをCSVに編集する #88\r\n            var delimiter = '';\r\n            var separator = delimiter + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].File.getConfig(\"SEP\") + delimiter; // #76\r\n            var eTatCsv = delimiter + '終了年月日 時分秒ミリ秒' \r\n                        + separator + '処理時間(ms)'\r\n                        + separator + 'シミューレート情報'\r\n                        + delimiter + '\\r\\n';\r\n            eTat.forEach(function (e) {\r\n                eTatCsv += delimiter + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](e.x, 'yyyy/MM/dd hh:mm:ss.000') // #92\r\n                        + separator + e.y \r\n                        + separator + e.message \r\n                        + delimiter + '\\r\\n'; // #61\r\n            });\r\n            // ダウンロードする\r\n            this.menuDownloadBlob(this.menuBuffToBlob(eTatCsv), menuId,\r\n                    fileName);\r\n        } else { // ファイル読込のとき\r\n            // 出力データを元ファイルのpos順にソートする（改行コードのないファイル末尾レコートがある場合も最後に来るように） #45\r\n            eTat.sort(function (a, b) {\r\n                return a.pos - b.pos;\r\n            });\r\n            // 最大作業領域として元ファイルサイズの合計分のメモリを確保する #23\r\n            var maxSize = HJN.filesArrayBuffer.reduce(function (p, c) {\r\n                return p + c.byteLength + 2;\r\n            }, 0);\r\n            var buff = new Uint8Array(maxSize), offset = 0;\r\n            // ファイルの該当行を Uint8Arrayに登録する\r\n            eTat.forEach(function (e) {\r\n                buff.set(new Uint8Array(HJN.filesArrayBuffer[e.fileIdx], e.pos,\r\n                        Math.min(e.len + 2,\r\n                                HJN.filesArrayBuffer[e.fileIdx].byteLength\r\n                                        - e.pos)), offset);\r\n                offset += (e.len + 2);\r\n            });\r\n            // 未使用作業領域を削除する\r\n            var buff2 = new Uint8Array(buff.slice(0, offset));\r\n            // ダウンロードする\r\n            this.menuDownloadBlob(this.menuBuffToBlob(buff2), menuId, fileName);\r\n        }\r\n    } else { // 出力対象データがないとき\r\n        var str = \"No log in the time.\";\r\n        // ダウンロードする\r\n        this.menuDownloadBlob(this.menuBuffToBlob(str), menuId, fileName);\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー機能：plotsでconcが選択されているとき、同時処理に該当するTATログの該当行をCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadConc = function (menuId, fileName) {\r\n    var plot = HJN.Plot.List.find(function (e) {\r\n        return e.radio;\r\n    });\r\n    if (plot.n === HJN.Tat.CONC.N || plot.n === HJN.Tat.STAT.N || plot.n === HJN.Tat.ETAT.N) {\r\n        // CONC|STAT|ETATが選択されているとき\r\n        var trans = this.eTat.tatMap.search(plot.x); // #18\r\n        if (0 < trans.length) { // 出力テキストを編集する\r\n            if (typeof trans[0].pos === \"undefined\") {\r\n                // 初期表示データのとき、CSVを編集する\r\n                // 生成データをCSVに編集する #88\r\n                var delimiter = '';\r\n                var separator = delimiter + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].File.getConfig(\"SEP\") + delimiter; // #76\r\n                var csv = delimiter + '終了年月日 時分秒ミリ秒'\r\n                        + separator + '処理時間(ms)'\r\n                        + delimiter + '\\r\\n';\r\n                trans.forEach(function (e) {\r\n                    csv += delimiter + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](e.x, \"yyyy/MM/dd hh:mm:ss.000\") // #92\r\n                        + separator + e.y\r\n                        + delimiter + '\\r\\n';\r\n                });\r\n                // ダウンロードする\r\n                this.menuDownloadBlob(this.menuBuffToBlob(csv), menuId,\r\n                        fileName);\r\n            } else {\r\n                // ファイル読み込みの時、対象レコードを表示する\r\n                // 出力データを元ファイルのpos順にソートする（改行コードのないファイル末尾レコートがある場合も最後に来るように） #45\r\n                trans.sort(function (a, b) {\r\n                    return a.pos - b.pos;\r\n                });\r\n                // 最大作業領域として元ファイルサイズの合計分のメモリを確保する #23\r\n                var maxSize = HJN.filesArrayBuffer.reduce(function (p, c) {\r\n                    return p + c.byteLength + 2;\r\n                }, 0);\r\n                var buff = new Uint8Array(maxSize), offset = 0;\r\n                // ファイルの該当行を Uint8Arrayに登録する\r\n                trans.forEach(function (e) {\r\n                    buff.set(new Uint8Array(HJN.filesArrayBuffer[e.fileIdx],\r\n                            e.pos, Math.min(e.len + 2,\r\n                                    HJN.filesArrayBuffer[e.fileIdx].byteLength\r\n                                            - e.pos)), offset);\r\n                    offset += (e.len + 2);\r\n                });\r\n                // 未使用作業領域を削除する\r\n                var buff2 = new Uint8Array(buff.slice(0, offset));\r\n                // ダウンロードする\r\n                this.menuDownloadBlob(this.menuBuffToBlob(buff2), menuId,\r\n                        fileName);\r\n            }\r\n        }\r\n\r\n    } else { // CONCが選択されていないとき\r\n        var msg = \"抽出対象データがありません。空データがダウンロードされます\\r\\n\"\r\n                + \"conc：多重度（詳細）の点を選択した状態で行ってください\";\r\n        alert(msg);\r\n        this.menuDownloadBlob(this.menuBuffToBlob(msg), menuId, fileName);\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー共通機能：BinaryString, UintXXArray, ArrayBuffer をBlobに変換する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Object}\r\n *            arrayBuffer 変換元\r\n * @return {Blob} 変換後\r\n */\r\nGraph.prototype.menuBuffToBlob = function (arrayBuffer) {\r\n    return new Blob([ arrayBuffer ], {\r\n        type : \"application/octet-stream\"\r\n    });\r\n};\r\n\r\n/**\r\n * メニュー共通機能：指定blobをファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Objcet}\r\n *            blob ダウンロードさせるblogデータ\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadBlob = function (blob, menuId, fileName) {\r\n    if (window.navigator.msSaveBlob) { // ie11以降のとき\r\n        window.navigator.msSaveBlob(blob, fileName);\r\n        // msSaveOrOpenBlobの場合はファイルを保存せずに開ける\r\n        window.navigator.msSaveOrOpenBlob(blob, fileName);\r\n    } else { // Chrome, FireFoxのとき\r\n        document.getElementById(menuId).href = window.URL.createObjectURL(blob);\r\n    }\r\n};\r\n\r\n/**\r\n * Zoomリセットアイコンを追加する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.addIcon_ZoomReset = function () {\r\n    var divChart = this.chartId; // document.getElementById(\"Icons\");\r\n    var idName = this.chartIdName + \"Zoom\";\r\n    var input = document.getElementById(idName);\r\n    if (input !== null) { // 既にある場合削除する\r\n        var div = input.parentElement;\r\n        div.parentElement.removeChild(div);\r\n    }\r\n\r\n    if (divChart) {\r\n        var div = document.createElement('div');\r\n        var htmlText = '<input id=\"' + idName + '\" type=\"buttom\" class=\"hjnBoxSwitch hjnResize\" '\r\n                                + 'onClick=\"HJN.' + this.chartIdName + '.graph.resetZoom()\">'\r\n                     + '<label for=\"' + idName + '\" class=\"hjnCtrlBox\"><span></span></label>';\r\n        div.innerHTML = htmlText;\r\n        divChart.insertBefore(div, divChart.firstChild);\r\n    }\r\n};\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HJN\", function() { return HJN; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_Tat_js__ = __webpack_require__(14);\n/* ******1*********2*********3*********4*********5*********6*********7****** */\r\n\r\n\r\n\r\n/**\r\n * @namespace\r\n * @prop {function} init - 初期登録処理関連（Init で、イベントハンドラ呼出し関数を登録する先）\r\n * @prop {Objcet} Tat - timeSeries#Tat\r\n * @prop {Objcet} chart - 上段グラフ\r\n * @prop {Objcet} chartD - 下段詳細グラフ\r\n * @prop {String} chartName - グラフオブジェクトの名称\r\n * @prop {Array} files - データファイル一覧\r\n * @prop {Array} filesArrayBuffer - データ読込領域\r\n * @prop {Date} timer - 前回ログ出力時刻退避領域（処理時間計算用）\r\n */\r\nvar HJN = {};\r\nwindow.HJN = HJN; // #67\r\n\r\n/**\r\n * @namespace\r\n */\r\nHJN.init = {}; // 初期登録処理関連\r\n\r\nHJN.Config = HJN.Config || __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"]; // #76\r\nHJN.Tat = __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_Tat_js__[\"a\" /* default */];\r\n\r\nHJN.chart = HJN.chartD = null;\r\nHJN.chartName = \"chart\";\r\n\r\nHJN.files = [];\r\nHJN.filesArrayBuffer = [];\r\n\r\nHJN.timer = {};\r\n__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"](\"DetailGraph\").setValueByKey(\"D_TIME\", +(new Date()));  // 下段表示時刻\r\n                                                                    // #27\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"default\"] = Init;\n/* harmony export (immutable) */ __webpack_exports__[\"CreateSampleTatLogAndChartShow\"] = CreateSampleTatLogAndChartShow;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Copyright_js__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__tatLogDiver_Graph_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__tatLogDiver_Plot_js__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__tatLogDiver_MenuConfigDetailGraph_js__ = __webpack_require__(10);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* *****1*********2*********3*********4*********5*********6*********7******* */\r\n/**\r\n * HTMLから呼び出すAPI\r\n * \r\n * @memberof HJN\r\n * @class Init\r\n * @param {string}\r\n *            [chartName=HJN.chartName=\"chart\"] グラフを作成するHTMLタグ名\r\n * @return {ETAT} 終了時刻のTAT（応答時間）時系列データ\r\n * @example <!doctype html> <html> <head> <meta charset=\"UTF-8\"> <link\r\n *          type=\"text/css\" rel=\"stylesheet\" href=\"../libs/dygraph.css\"> <link\r\n *          type=\"text/css\" rel=\"stylesheet\" href=\"./tatLogDiver.css\"> </head>\r\n *          <body> <div id=\"hjn_chart\"></div> <script src=\"../libs/dygraph.js\"></script>\r\n *          <script src=\"../libs/extras/synchronizer.js\"></script> <script\r\n *          type=\"module\"> import {HJN_init_ChartRegist} from\r\n *          \"./tatLogDiver-Init.js\";\r\n *          window.addEventListener(\"DOMContentLoaded\",function(eve){\r\n *          Bundle(\"chart\"); // チャートを作成する }); </script> </body> </html>\r\n */\r\nfunction Init(chartName){ // #70\r\n    // グローバル登録\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].Util = __WEBPACK_IMPORTED_MODULE_0__util_util_js__; // #95\r\n\t// 引数１ ：デフォルトHJN.chartName(\"chart\")\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chartName = chartName = chartName || __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chartName;\r\n\t// タイトルを設定する #57\r\n\tdocument.title = \"tat log diver \" + __WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Copyright_js__[\"Copyright\"].Version;\r\n\t// htmlを作成する #52\r\n\tvar html_chart = document.getElementById(\"hjn_\" + chartName) || document.body;\r\n\thtml_chart.innerHTML = ''\r\n\t\t+ '<div id=\"' + chartName + '\"></div>'\r\n\t\t+ '<div id=\"' + chartName + 'D\"></div>'\r\n\t// CONCデータ表示領域 #78\r\n\t\t+ '<div class=\"lineViewer hjnDraggableBox hjnCode\" >' // #79\r\n\t\t+ '<div id=\"lineViewer\" readonly>logdata</div></div>';\r\n\t// 手前にメニュ－用htmlを作成する #52\r\n\tvar html_nav = document.createElement('nav');\r\n\thtml_nav.innerHTML = ''\r\n\t\t+ '<header>'\r\n\t\t// シミュレータ JSON Edit画面 領域 #53\r\n\t\t+ '<div id=\"Simulator\" class=\"hjnDraggableBox\" style=\"visibility:hidden\"></div>'\r\n\t\t// ハンバーガーメニュー 領域\r\n\t\t+ '<div class=\"hjnBurgerTray\">'\r\n\t\t\t// ステータスバー（ログ表示）領域\r\n\t\t+\t'<div class=\"statusbar hjnDraggableBox\">'\r\n\t\t+\t'<iframe id=\"fileInfo\" style=\"height:100%;\"></iframe></div>' // #79\r\n\t\t\t// ×ボタン\r\n\t\t+\t'<input id=\"hjnBoxBuger\" type=\"checkbox\" class=\"hjnBurger hjnResize\" checked=\"checked\" />'\r\n\t\t+\t '<label for=\"hjnBoxBuger\" class=\"hjnCtrlBox\"><span></span></label>'\r\n\t\t// グラフZoomリセットボタン #78\r\n\t\t+\t '<input id=\"chartZoom\" type=\"buttom\" class=\"hjnBoxSwitch hjnResize\" '\r\n\t\t+\t 'onClick=\"HJN.init.ResetStyle();\" />'\r\n\t\t+\t\t'<label for=\"chartZoom\" class=\"hjnCtrlBox\"><span></span></label>'\r\n\t\t\t// メニュー上部タイトル\r\n\t\t+\t'<div class=\"hjnBurgerTitle\">'\r\n\t\t\t\t// メニューオーバレイモード変更 ボタン\r\n\t\t+\t '<input id=\"hjnBoxPlaceOn\" type=\"checkbox\" class=\"hjnBoxSwitch hjnResize\" />'\r\n\t\t+\t\t'<label for=\"hjnBoxPlaceOn\" class=\"hjnCtrlBox\"><span></span></label>'\r\n\t\t\t\t// メニュー上部テキスト 領域\r\n\t\t+\t '<p>'\r\n\t\t\t\t\t// ツール名称＆JSDocリンク\r\n\t\t+\t\t'<a class=\"hjnLabel4Input\" href=\"../jsdoc/index.html\" '\r\n\t\t+\t\t\t\t 'target=”_hirosejnJSDoc3”>TAT log diver</a><BR>'\r\n\t\t+\t '</p>'\r\n\t\t+\t'</div>'\r\n\t\t// メニュー画面本体（左右開閉ラッパー）\r\n\t\t+\t'<div class=\"hjnBurgerWrap\">'\r\n\t\t\t// アコーディオンメニュー\r\n\t\t+\t '<div class=\"hjnAccordion\">'\r\n\t\t+\t\t'<div id=\"' + chartName + '_menu\"></div>'\r\n\t\t+\t\t'<div id=\"' + chartName + 'D_menu\"></div>'\r\n\t\t+\t '</div>'\r\n\t\t+\t'</div>'\r\n\t\t+ '</div>'\r\n\t\t+ '</header>';\r\n\thtml_chart.parentNode.insertBefore(html_nav, html_chart);\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].init.ResetStyle(true); // #79\r\n\r\n\tvar dropFieldName = chartName;\t// ファイルドロップを受け付けるタグ名\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogTextInit(); // 処理時間計測の初期化\r\n\r\n\t// コンフィグプロパティを初期化する #74\r\n\t// HJN.Config = HJN.Config || Util.Config;\r\n\t__WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"c\" /* MenuConfigFile */].config();\r\n\t__WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"d\" /* MenuConfigFilter */].config();\r\n\t__WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__[\"a\" /* MenuConfig */].config();\r\n\t__WEBPACK_IMPORTED_MODULE_7__tatLogDiver_MenuConfigDetailGraph_js__[\"default\"].config();\r\n\r\n\t// グラフのインスタンスを作成し初期化する\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart = new __WEBPACK_IMPORTED_MODULE_5__tatLogDiver_Graph_js__[\"default\"](chartName, \"HJN.chart\");\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.init();\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chartD = new __WEBPACK_IMPORTED_MODULE_5__tatLogDiver_Graph_js__[\"default\"](chartName + \"D\", \"HJN.chartD\");\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chartD.init();\r\n\t// ドロップフィールドに、処理を登録する(注：dygraphはイベントリスナーを登録しないとクリック時にエラーが出る）\r\n\tInit.DropField(dropFieldName);\r\n\tInit.DropField(dropFieldName+ \"D\");\r\n\r\n\t// 初期表示データを自動生成する // #53\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].GetConfig(\"Simulator\").getFunctionByKey(\"S_SIMU\")(); // #53\r\n\r\n\t// イベントハンドラを登録する\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Element\"].enableDraggableClass();\r\n}\r\n\r\n/**\r\n * スタイルを初期設定する（Reset zoomボタンからも呼ばれる）\r\n * \r\n * @memberof HJN.init\r\n * @param {Boolean}\r\n *            [isInit=false] リセット時true：初期設定値も再設定する\r\n *            シミュレーション条件JSONテキスト、もしくはサンプルJSON番号\r\n * \r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].init.ResetStyle = Init.ResetStyle = function(isInit){ // #79\r\n\t// 指定クラス名が設定された要素にスタイルを設定する\r\n\tvar elements = document.getElementsByClassName(\"lineViewer\");\r\n\tfor(var i = 0; i < elements.length; i++){\r\n\t\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Element\"].SetStyles(elements[i],\r\n\t\t\t\t{ bottom: 0, left: \"\", top: \"\", width: \"70%\", height: \"10vh\"});\r\n\t}\r\n\telements = document.getElementsByClassName(\"statusbar\");\r\n\tfor(var i = 0; i < elements.length; i++){\r\n\t\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Element\"].SetStyles(elements[i],\r\n\t\t\t\t{ left: \"10px\", top: 0, width: \"155px\", height: \"40px\"});\r\n\t}\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Element\"].SetStyles(document.getElementById(\"Simulator\"),\r\n\t\t\t\t{ left: 0, top: 0, width: \"190px\", height: 0});\r\n\t// 別途初期設定される値を再設定する\r\n\tif (!isInit) {\r\n\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.graph.resetZoom();\r\n\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chartD.graph.resetZoom();\r\n\t}\r\n}\r\n/**\r\n * データを自動生成し表示する\r\n * \r\n * @memberof HJN.init\r\n * @param {String|Number}\r\n *            [json = Simulator.virtualSystemByJson.GetJsonConfig(0)]\r\n *            シミュレーション条件JSONテキスト、もしくはサンプルJSON番号\r\n */\r\nfunction CreateSampleTatLogAndChartShow(json){ // #53\r\n\tvar jsonText;\r\n\tif (typeof(json) === \"number\") { // #53\r\n\t\tjsonText = __WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__[\"d\" /* virtualSystemByJson */].GetJsonConfig(json);\r\n\t} else{\r\n\t\tjsonText = json || __WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__[\"d\" /* virtualSystemByJson */].GetJsonConfig(0);\r\n\t}\r\n\t// JSON Editorを更新する\r\n\tdocument.getElementById(\"SimulatorEditor\").value = jsonText;\r\n\t// 初期表示データを自動生成する\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.eTatOriginal = __WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__[\"d\" /* virtualSystemByJson */].Execute(jsonText);\r\n\t// データを表示する\r\n\tInit.ChartShow(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.eTatOriginal);\r\n}\r\n\r\n/**\r\n * 終了時刻とtatの配列をグラフ表示する（Menuイベントから呼び出される）\r\n * \r\n * @memberof HJN.init\r\n * @param {ETAT}\r\n *            HJN.chart.eTatOriginal 終了時刻とtatを含む配列\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].init.ChartShow = Init.ChartShow = function(eTatOriginal){\r\n\t// フィルタしたeTatを取得する #34\r\n\tvar eTat = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.fileParser.createFilter().filter(eTatOriginal);\r\n\r\n\t// グラフを初期表示する\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].Plot.List = []; // #53\r\n\t// 上段\r\n\tif (eTat.length === 0) eTat = [{x:0, y:0}]; // #72\r\n\tvar tat = new __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"e\" /* Tat */](eTat); // #75\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.setSeriesSet(tat);\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.update();\r\n\tshowLogForUpperGraph(\"Simulator\"); // #79\r\n\r\n\t// 下段(非同期）\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"setZeroTimeout\"]( function(){\r\n\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chartD.update(Init.ChartRegistDetail(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.cTps));\r\n\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.showBalloon();\t// 上段のBalloonを描画する\r\n\t\tif (__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chartD.eTat){\r\n\t\t\tshowLogForLowerGraph(\"Simulator\"); // #79\r\n\t\t} else { // #72\r\n\t\t\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"<mark>表示データがありません</mark>\", \"msg\");\r\n\t\t}\r\n\t\t// 上下段のマウス操作同期設定 #49\r\n\t\tvar sync = Dygraph.synchronize(\r\n\t\t\t\t [ __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.graph, __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chartD.graph ],\r\n\t\t\t\t {selection: true, zoom: false});\r\n\t});\r\n}\r\nfunction showLogForUpperGraph(fileName){\r\n\t// 上段グラフの処理時間をログに出力\r\n\t// Util.Logger.ShowLogText(\"+ \", \"elaps\");\r\n}\r\nfunction showLogForLowerGraph(fileName){\r\n\t// 下段グラフの処理時間をログに出力\r\n\t// Util.Logger.ShowLogText(\"\", \"elaps\", true);\r\n\r\n\t// ファイル名、取込レコード数のログ編集\r\n\tvar text = \"<mark>\" + /* fileName + */ \" [\"\r\n\t\t\t+ (__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.eTat.length.toString() + \"\")\r\n\t\t\t\t.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') // 整数文字列のカンマ編集\r\n\t\t\t+ \"]行</mark> \";\r\n\t// 下段の表示レコード数をログに出力\r\n\tif (__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chartD.eTat){\r\n\t\ttext += \"下段[\"\r\n\t\t\t\t+ (__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chartD.eTat.length + \"\")\r\n\t\t\t\t\t.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') // 整数文字列のカンマ編集\r\n\t\t\t\t+ \"]行\";\r\n\t}else{\r\n\t\ttext = \"\" +\r\n\t\t\t\t\"表示データなし　要確認：Charset, delimiter, Line feed code\"\r\n\t}\r\n\t// ログ出力\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(text, \"msg\");\r\n}\r\n\r\n/**\r\n * HTMLタグに、CSVファイルのドロップを受付けイベントを登録する\r\n * \r\n * @memberof HJN.init\r\n * @param {string}\r\n *            dropFieldName ファイルのドロップイベントを受けるフィールド名\r\n */\r\nInit.DropField = function (dropFieldName) {\r\n\t// 第一引数で指定された名前の ID 属性のエレメントを取得する\r\n\tvar element = document.getElementById(dropFieldName);\r\n\r\n\t// ドラッグ操作中に実行されるイベント（マウスカーソルが要素内に滞在中）\r\n\telement.addEventListener(\"dragover\" , function (e){\r\n\t\te.preventDefault();\t// ドロップを許可し受け入れを表明\r\n\t});\r\n\r\n\t// ドロップ時に実行されるイベント\r\n\telement.addEventListener(\"drop\", function (e){\r\n\t\t\tvar data_transfer = e.dataTransfer;\t\t// DataTransfer オブジェクトを取得する\r\n\t\t\tif(!data_transfer.types) return;\t\t// ファイルのコンテンツタイプを取得できたことを確認する\r\n\t\t\tvar files = data_transfer.files;\t// ファイルのリストを取得する\r\n\t\t\tInit.FileReader(files);\r\n\t\t\te.preventDefault();\t\t// デフォルトのドロップ機能を無効化\r\n\t});\r\n};\r\n\r\n/**\r\n * 指定されたファイルを読込んで処理する\r\n * \r\n * @memberof HJN.init\r\n * @param {Object}\r\n *            files ファイルハンドラ\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].init.FileReader = Init.FileReader = function (files){  // #15\r\n\tfor(var i = 0; i < files.length; i++){\t// データを順番に取得する\r\n\t\ttry{\r\n\t\t\t// ファイルを取得する\r\n\t\t\tvar file = files[i];\r\n\t\t\t// ログ出力用にファイル名、ファイルサイズ、ファイル更新日時を編集する\r\n\t\t\tvar textArray = \"<mark><b>\" + file.name + \"</b></mark><BR>\"\r\n\t\t\t\t\t\t+ (file.size + \"\")\r\n\t\t\t\t\t\t\t.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') // 整数文字列のカンマ編集\r\n\t\t\t\t\t\t+ \"Kbyte<BR>\"\r\n\t\t\t\t\t\t+ file.lastModifiedDate.toLocaleString() + \"<BR>\";\r\n\t\t\t// ファイルの読み込みに成功したら、その内容をドロップエリアに追記して表示する\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.onloadend = funcOnloadend.bind(this, files[i], i);\r\n\t\t\t// ファイルにArrayBufferで参照を取得する（loadイベントを起こす）\r\n\t\t\treader.readAsArrayBuffer(files[i]);\r\n\t\t}catch(e){\r\n\t\t\t// 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n\t\t\tvar msg = \"The \" + i + \"th dropped object is not a file\";\r\n\t\t\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowText( [\"<mark>\"+msg+\"</mark>\"] );\r\n\t\t\tconsole.error(\"[%o]%o\",msg,e );\r\n\t\t}\r\n\t}\r\n\r\n\t// 内部関数：ファイルを読み込みｸﾞﾗﾌを表示する（指定ファイルを読み込んだ後に呼び出される） #23\r\n\tfunction funcOnloadend(file, i, evt) {\r\n\t\tif (evt.target.readyState === FileReader.DONE) { // DONE == 2\r\n\t\t\tvar filesIdx = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].files.length;\r\n\t\t\t// ファイルの先頭2行をログ表示する\r\n\t\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].filesArrayBuffer[filesIdx] = evt.target.result;\r\n\t\t\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ResetTimestamp();\t\t\t  // 情報表示 : 初期化\r\n\t\t\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(textArray, \"msg\");  // 情報表示：ドロップファイル情報\r\n\t\t\t// 指定ファイルを読み込む\r\n\t\t\t// CSVファイルを上段用eTatに展開する[{x:, y:,pos:,len:},...] 全件展開する\r\n\t\t\tif (i === 0 && __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.fileParser.isNewETAT()){\r\n\t\t\t\t// 新規モードかつ、同時複数ファイル指定時の最初のファイルのとき、新たに作成する\r\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].files = [file];\r\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.eTatOriginal = getTatLogArray(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].filesArrayBuffer, filesIdx);\r\n\t\t\t} else { // 2件目以降のファイルのとき、もしくは、追加モード\"ADDDATA\"のとき、追加する\r\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].files.push(file);\r\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.eTatOriginal = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.eTatOriginal.concat(\r\n\t\t\t\t\t\tgetTatLogArray(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].filesArrayBuffer, filesIdx));\r\n\t\t\t}\r\n\r\n\t\t\t// 全ファイルを読み込んだらグラフを描画する\r\n\t\t\tif (__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].files[__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].files.length - 1] === file){ // 指定ファイル群の最後のファイルを処理しているとき\r\n\t\t\t\t// フィルタしたeTatを取得する #34\r\n\t\t\t\tvar eTat = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.fileParser.createFilter().filter(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.eTatOriginal);\r\n\r\n\t\t\t\t// 上段グラフを描画する（ eTatから上段用 時系列分析データ(seriesSet)を展開する）\r\n\t\t\t\tif (eTat.length === 0) eTat = [{x:0, y:0}]; // #72\r\n\t\t\t\tvar tat = new __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"e\" /* Tat */](eTat); // #75\r\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.setSeriesSet(tat);\r\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.update();\r\n\t\t\t\tshowLogForUpperGraph(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].files[0].name); // #79\r\n\r\n\t\t\t\t// 下段用データの展開とグラフ描画（非同期処理）\r\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].Plot.List = [];\r\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"setZeroTimeout\"](function(){\r\n\t\t\t\t\tif (__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.cTps) {\r\n\t\t\t\t\t\t// 下段グラフを描画する（下段用 時系列分析データ(seriesSet)を展開する）\r\n\t\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chartD.update(Init.ChartRegistDetail(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.cTps));\r\n\t\t\t\t\t\t// 上段のBalloonを描画する(上段update時にはplots登録されていないので、ここで処理）\r\n\t\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.showBalloon();\r\n\t\t\t\t\t\tshowLogForLowerGraph(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].files[0].name); // #79\r\n\t\t\t\t\t} else { // #72\r\n\t\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"<mark>表示データがありません</mark>\", \"msg\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 内部関数： 指定ファイルの先頭ｎ行を、改行文字<BR> のテキストに変換してリターンする\r\n\tfunction topLines(file, n) {\r\n\t\tvar fileInfo = \"\",\r\n\t\t\tline;\r\n\t\ttry{\t// 先頭からnレコード取得\r\n\t\t\tvar getterOfLine = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.fileParser.createGetterOfLine(file);\r\n\t\t\tfor (var i = 0; i < n; i++) {\r\n\t\t\t\tline = getterOfLine.next();\r\n\t\t\t\tfileInfo += line.str + \"<BR>\";\r\n\t\t\t}\r\n\t\t}catch (e) {\r\n\t\t\talert(\"[Init.DropField 改行コードの無いファイルは扱えません]\");\r\n\t\t\tconsole.error(e);\r\n\t\t}\r\n\t\treturn fileInfo;\r\n\t}\r\n\r\n\t// 内部関数： CSVファイルを読み込み、TatLog用アレイ[{x:日時, y:値, pos:レコード開始位置,\r\n\t// len:レコード長},...]に展開する\r\n\tfunction getTatLogArray(files, idx) { // arg0:csvﾌｧｲﾙのファイルﾊﾟｽ\r\n\t\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"----- read file -----------------------------\",\"calc\");\r\n\t\tvar file = files[idx], // #23\r\n\t\t\teTat = [],\r\n\t\t\txy = {date: 0, value: 0, isError: false },\r\n\t\t\ti = 0,  // timelog用\r\n\t\t\tgetterOfLine = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.fileParser.createGetterOfLine(file),\r\n\t\t\tgetterOfXY = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.fileParser.createGetterOfXY(),\r\n\t\t\tisDataType_TatStart = (__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].File.getConfig(\"DATATYPE\") == \"DATATYPE_TATSTART\"),\r\n\t\t\tisDataType_StartEnd = (__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].File.getConfig(\"DATATYPE\") == \"DATATYPE_START_END\"), // #89\r\n\t\t\tline = getterOfLine.next(), // 先頭行の初期処理\r\n\t\t\tlineNum = 0,\r\n\t\t\terrorNum = 0,\r\n\t\t\tcharset = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].Config.File.getConfig(\"CHAR\");\r\n\t\twhile (!line.isEoF) {\t\t\t\t// 以降最終行まで処理する\r\n\t\t    lineNum++;\r\n\t\t\ttry {\r\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ByInterval(i++, line); // 一定時刻毎に進捗を出力する\r\n\t\t\t\txy = getterOfXY.parse(line);\r\n\t\t\t\tif(!xy.isError){\r\n\t\t\t\t\tif (isDataType_TatStart){ // #81 DATATYPE_TATSTART\r\n\t\t\t\t\t\teTat.push( {x: (xy.x + xy.y), y: xy.y, fileIdx: idx, // #93\r\n\t\t\t\t\t\t\tpos: line.pos, len: line.array.byteLength, sTatIdx: 0} );\r\n\t\t\t\t\t} else { // DATATYPE_TATEND\r\n\t\t\t\t\t\teTat.push( {x: xy.x, y: xy.y, fileIdx: idx, // #23\r\n\t\t\t\t\t\t\tpos: line.pos, len: line.array.byteLength, sTatIdx: 0} );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 先頭４行までパース結果をログ出力する\r\n\t\t\t\t\tif (lineNum < 5){\r\n\t\t\t\t\t    log(true, xy, line);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t    log(false, xy, line);\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\t/* 改行だけレコードをスキップ */\r\n\t\t\t    log(false, xy, line);\r\n\t            if (e) console.log(e); // #93\r\n\t\t\t}\r\n            line = getterOfLine.next(); // #24 #96\r\n\t\t}\r\n\t\t// エラーレコード数をログ出力する\r\n        if (!errorNum){\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(errorNum + \" times failed to parse as CSV.\", \"msg\");\r\n        }\r\n\t\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"[0:file readed & got eTat]---------------\",\"calc\");\r\n\t\treturn eTat;\r\n\r\n\t\t// ログ出力する（内部関数）\r\n\t\tfunction log(okng, xy, line){\r\n            if (okng){\r\n                // 正常ログの出力は、５行目まで\r\n                if (lineNum > 5) return;\r\n                else __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"<br>OK:line \" + lineNum + \" <br>\"\r\n                        + \" [\" +  window.HJN.Util.D2S(xy.x, \"yyyy/MM/dd hh:mm:ss.000\")\r\n                        + \", \" + window.HJN.Util.N2S(xy.y) + \"]<br>\"\r\n                        + window.HJN.Util.Encoding.charset.convert(line.str, \"Unicode\", charset)\r\n                        , \"msg\");\r\n            } else {\r\n                errorNum++;\r\n                // エラーログの出力は、５回まで\r\n                if  (errorNum > 5) return;\r\n                else __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"<br>NG:line \" + lineNum + \" <br>\" \r\n                        + window.HJN.Util.Encoding.charset.convert(line.str, \"Unicode\", charset)\r\n                        , \"msg\");\r\n            }\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * 詳細グラフ用機能： 表示対象期間のcTpsから、eTps範囲を取得し、詳細Seriesを生成する。併せてPlotsを登録する。\r\n * \r\n * @memberof HJN.init\r\n * @param {xMs}\r\n *            cTps 日時（ミリ秒単位）\r\n * @return {seriesSet} dygraph用時系列データ配列\r\n */\r\nInit.ChartRegistDetail = function(cTps){\r\n\t// CTPSの最大値となるplotを取得する\r\n\tvar maxY =Number.MIN_VALUE,\r\n\t\tmaxYIdx = -1;\r\n\tcTps.forEach(function(c, i){\r\n\t\tif (maxY < c.y){\r\n\t\t\tmaxY = c.y;\r\n\t\t\tmaxYIdx = i;\r\n\t\t}\r\n\t});\r\n\tif(0 <= maxYIdx){\t// #26\r\n\t\t// 秒単位より大きいとき、最大値を含む時刻(秒)に補正する #38\r\n\t\tvar x = cTps[maxYIdx].x;\r\n\t\tif(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.cTpsUnit.unit >= 1000){\r\n\t\t\tvar cTpsIdx = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.conc.findIndex(function(e,i){return e.y === cTps[maxYIdx].y;});\r\n\t\t\tx = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.conc[cTpsIdx].x;\r\n\t\t}\r\n\t\t// slider rangeに、下段の表示時刻を設定する\r\n\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].init.SetDetailDateTime(x);\r\n\t\t// eTpsの範囲を取得し、詳細用seriesSet(HJN.chartD.seriesSet）を設定する\r\n\t\tvar tat = new __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"e\" /* Tat */](__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].init.GetSliderRangedEtat()); // #75\r\n\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chartD.setSeriesSet(tat);\r\n\t\t// plotsアイコン用 HJN.Plot.Listに、下段表示したplotを登録する\r\n\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].Plot.Add(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].Tat.CTPS.N, cTps[maxYIdx].x, cTps[maxYIdx].y);\r\n\t}\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"[6:Plot added] \" + __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].Plot.List.length + \" plots\",\"calc\");\r\n\r\n\treturn __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chartD.seriesSet;\r\n};\r\n/**\r\n * 詳細グラフ用機能： sliderRangeで指定された範囲のeTatを返却する（グラフの点クリックイベント時に呼び出される）\r\n * \r\n * @memberof HJN.init\r\n * @return {ETAT} 詳細グラフ用eTat\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].init.GetSliderRangedEtat = function() {\r\n\t// 指定時刻（ｄｔ ± range）を取得し、HJNグローバル変数に退避する #27\r\n\tvar rangeTagPlus  = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getConfig(\"D_RANGE_PLUS\");\r\n\tvar rangeTagMinus = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getConfig(\"D_RANGE_MINUS\");\r\n\tvar rangeTagUnit  = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getConfig(\"D_UNIT\"); // #48\r\n\tvar rangeCycle = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.cTpsUnit.unit / 1000; // 変動する #38\r\n\r\n\trangeTagPlus = rangeTagPlus  ? +rangeTagPlus : 1 + rangeCycle;\t // 幅（秒）\r\n\trangeTagMinus = rangeTagMinus ? +rangeTagMinus : rangeCycle;\t // 幅（秒）\r\n\trangeTagUnit = rangeTagUnit  ? +rangeTagUnit : __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE; // #48\r\n\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.setValueByKey(\"D_RANGE_PLUS\",rangeTagPlus);\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.setValueByKey(\"D_RANGE_MINUS\",rangeTagMinus);\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.setValueByKey(\"D_UNIT\",rangeTagUnit);\r\n\r\n\tvar detailDateTime = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getValueByKey(\"D_TIME\");\r\n\tvar eTatDetail = (new __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"a\" /* ETat */](__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].chart.eTat)).sliceByRangeUnit(detailDateTime,\r\n\t\t\t\trangeTagMinus, rangeTagPlus, rangeTagUnit); // #75\r\n\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"[0:HJN.init.GetSliderRangedEtat] \",\"calc\");\r\n\treturn eTatDetail;  // 詳細グラフ用eTatを返却する\r\n};\r\n/**\r\n * 詳細グラフ用機能： 指定日時を秒単位に丸めて、FORMのslider Rangeに設定する（Plotから呼び出される）\r\n * \r\n * @memberof HJN.init\r\n * @param {xMs}\r\n *            date 日時（ミリ秒単位）\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].init.SetDetailDateTime=function(date) {\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.setValueByKey(\"D_TIME\",\r\n\t\t\tMath.floor(date / 1000) * 1000); // 秒単位に丸める #27\r\n};\r\n\r\n/**\r\n * 使い方HTMLを取得する（Menuイベントから呼び出される） #84\r\n * \r\n * @memberof HJN.init\r\n * @return {String} str 使い方HTML\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].init.Usage=function(){\r\n    var UsageHtmlFile = \"tatLogDiver-Usage.html\";\r\n    var UsageHtmlURL = \"./tatLogDiver/\" + UsageHtmlFile;\r\n    // requireメソッドの有無で、webpack環境下か判定する\r\n    if (false) {\r\n        // webpack でパッケージ化していないとき、ダイアログ内にhtmlへのパスを表示する\r\n        var url = \"https://github.com/hirosejn/HJN/wiki/Usage(JP)\";\r\n        var label = \"GitHub wiki : \" + url;\r\n        var html = 'Usage of TAT log diver'\r\n            + '<br>'\r\n            + 'webpack 未適用モード'\r\n            + '<br>'\r\n            + '<a class=\"hjnLabel4Input\" href=\"' + url + '\"'\r\n            + 'target=”_hirosejnUsage”>' + label +'</a><BR>'\r\n            + '<br>'\r\n            + '<a class=\"hjnLabel4Input\" href=\"' + UsageHtmlURL + '\"'\r\n            + 'target=”_hirosejnUsage”>' + UsageHtmlURL +'</a><BR>';\r\n        return html;\r\n    } else {\r\n        // webpack でパッケージ化するとき、ダイアログ内にhtmlを表示する\r\n        return __webpack_require__(45)(\"./\" + UsageHtmlFile); // #94\r\n    }\r\n};\r\n\r\n/**\r\n * 著作権表記文字を取得する（Menuイベントから呼び出される）\r\n * \r\n * @memberof HJN.init\r\n * @return {String} str 著作権表記文字\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"HJN\"].init.Copyright=function(){\r\n\treturn __WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Copyright_js__[\"Copyright\"].getAboutText();\r\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__simulator_VirtualApp_js__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__simulator_VirtualResource_js__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__simulator_VirtualSystemByJson_js__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__simulator_MenuConfig_js__ = __webpack_require__(43);\n/* unused harmony reexport VirtualSystem */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__simulator_VirtualApp_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__simulator_VirtualResource_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__simulator_VirtualSystemByJson_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_4__simulator_MenuConfig_js__[\"a\"]; });\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__timeSeries_Tat_js__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_ETat_js__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timeSeries_FileParser_js__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__timeSeries_MenuConfigFile_js__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__timeSeries_MenuConfigFilter_js__ = __webpack_require__(44);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_0__timeSeries_Tat_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__timeSeries_ETat_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__timeSeries_FileParser_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_3__timeSeries_MenuConfigFile_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_4__timeSeries_MenuConfigFilter_js__[\"a\"]; });\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * seriesSet: dygraph用時系列データ配列\r\n * \r\n * @typedef {array.<CONC, CTPS, ETPS, STAT, ETAT, EMPS, EAPS>} seriesSet\r\n */\r\n\r\n/**\r\n * CONC:多重度の時系列データ<br>\r\n * [{x:変化時刻(ms) ,y:多重度数 }]\r\n * \r\n * @typedef {array.<xMs, yInt>} CONC\r\n */\r\n\r\n/**\r\n * CTPS: 秒間最大多重度の時系列データ<br>\r\n * [{x:秒毎時刻(ms), y:秒内最大多重度数 }]\r\n * \r\n * @typedef {array.<xMs, index>} CTPS\r\n */\r\n\r\n/**\r\n * ETPS: 秒間終了件数の時系列データ<br>\r\n * [{x:秒毎時刻(ms), y:秒内終了件数 }]\r\n * \r\n * @typedef {array.<xMs, yInt>} ETPS\r\n */\r\n\r\n/**\r\n * STAT: 開始時刻のTAT（応答時間）時系列データ<br>\r\n * [{x:開始時刻(ms) ,y:レスポンス(sec), eTatIdx: eTatの配列位置 }]\r\n * \r\n * @typedef {array.<xMs, ySec, index>} STAT\r\n */\r\n\r\n/**\r\n * ETAT: 終了時刻のTAT（応答時間）時系列データ<br>\r\n * [{x:変化時刻(ms) ,y:レスポンス(sec), fileIdx:ファイル配列位置, pos:レコード位置, len:レコード長, sTatIdx:\r\n * sTatの配列位置 }]\r\n * \r\n * @typedef {array.<xMs, ySec, index, index, number, index>} ETAT\r\n */\r\n\r\n/**\r\n * EMPS: 秒間最大TAT（応答時間）時系列データ（終了時刻ベース）<br>\r\n * [{x:秒毎時刻(ms), y:秒内最大レスポンス(sec) }]\r\n * \r\n * @typedef {array.<xMs, ySec>} EMPS\r\n */\r\n\r\n/**\r\n * EAPS: 秒間平均TAT（応答時間）時系列データ（終了時刻ベース）<br>\r\n * [{x:秒毎時刻(ms), y:秒内平均レスポンス(sec) }]\r\n * \r\n * @typedef {array.<xMs, ySec>} EAPS\r\n */\r\n\r\n\r\n\r\n/**\r\n * xMs: x軸に用いる時刻(ms)\r\n * \r\n * @typedef {number} xMs\r\n */\r\n/**\r\n * ySec: y軸に用いる秒単位の時間（応答時間など）\r\n * \r\n * @typedef {number} ySec\r\n */\r\n\r\n\r\n\r\n/**\r\n * yInt: y軸に用いる整数（個数など）\r\n * \r\n * @typedef {number} yInt\r\n */\r\n/**\r\n * index: 配列の位置（インデックス）に用いる整数\r\n * \r\n * @typedef {number} index\r\n */\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__libs_dygraph_css__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__libs_dygraph_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__libs_dygraph_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_css__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Init_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Graph_js__ = __webpack_require__(1);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Init\", function() { return __WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Init_js__[\"default\"]; });\n\r\n\r\n\r\n\r\n\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\",function(eve){\r\n    Object(__WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Init_js__[\"default\"])(\"chart\");      // チャートを作成する\r\n});\r\n\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"default\"] = Menu;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__simulator_simulator_js__ = __webpack_require__(4);\n\r\n\r\n\r\n/**\r\n * tatLogDiverのメニューを追加する\r\n * \r\n * @memberof tatLogDiver\r\n * @class Menu\r\n * @param {Object}\r\n *            that グラフへの参照\r\n */\r\nfunction Menu(that) {\r\n    // メニュー用のエレメントを取得する\r\n    var divMenuId = that.chartIdName + \"_menu\";\r\n    var divMenu = document.getElementById(divMenuId);\r\n    // menu用divがないとき、chartの直前に追加する #13\r\n    if (!divMenu) {\r\n        var div = document.createElement('div');\r\n        div.id = divMenuId;\r\n        div.className = \"menuBar\";\r\n        divMenu = that.chartId.parentNode.insertBefore(div, that.chartId);\r\n    }\r\n    // メニューボタン定義を登録する\r\n    var g = that.globalName;\r\n    // 上下段共通ボタンの定義(Download Menu)\r\n    var menuDownloadImg = (new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"]( // ATag\r\n                divMenuId + \"_DownloadImg\",\r\n                \"graph image(.png)\",\r\n                g + \".menuDownloadImg\"))\r\n            .makeDownloadable(\"graph.png\");\r\n    var menuDownloadCsv = (new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"]( // ATag\r\n                divMenuId + \"_DownloadCsv\",\r\n                \"graph data(.csv)\",\r\n                g + \".menuDownloadLog\"))\r\n            .makeDownloadable(\"graph.csv\");\r\n    var menuDownloadLog = (new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"]( // ATag\r\n                divMenuId + \"_DownloadLog\",\r\n                \"graph log records(.csv)\",\r\n                g + \".menuDownloadLog\"))\r\n            .makeDownloadable(\"tatlog.csv\");\r\n    var menuDownloadConc = (new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"]( // ATag\r\n                divMenuId + \"_DownloadConc\",\r\n                \"conc log records(.csv)\",\r\n                g + \".menuDownloadConc\"))\r\n            .makeDownloadable(\"conclog.csv\");\r\n    \r\n    // メニューを追加する\r\n    var accordion = document.createElement('div'); // 要素の作成\r\n    var _id = 0;\r\n    if (HJN.chart.chartId === that.chartId) { // 上段グラフ用機能のメニュー追加\r\n        // File Menu\r\n        var menuOpenCsv = (new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"]( // FileOpenTag\r\n                divMenuId + \"_OpenCsv \",\r\n                \"Open csv data file\",\r\n                g + \".menuOpenCsv\"));\r\n        var menuSaveConfig = (new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"]( // ATag\r\n                divMenuId + \"_SaveCongig\",\r\n                \"save format (.json)\",\r\n                g + \".menuSaveConfig\"))\r\n            .makeDownloadable(\"hjnconfig.json\");\r\n        var menuLoadConfig = (new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"]( // FileOpenTag\r\n                divMenuId + \"_LoadCongig\", // #10\r\n                \"load format (.json)\",\r\n                g + \".menuLoadConfig\"));\r\n        accordion.innerHTML = '<li class=\"hjnMenuLv1\">'\r\n                + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"].getAccordionTag(that, ++_id, \"File\", true)\r\n                + '<ul class=\"hjnMenuLv2\">'\r\n                + menuOpenCsv.getFileOpenTag()     // オープンボタン #24\r\n                + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].File.getHtml()       // 設定HTML #76\r\n                + menuSaveConfig.getATag()         // セーブボタン\r\n                + menuLoadConfig.getFileOpenTag()  // ロードボタン #10\r\n                + '</ul>' + '</li>';\r\n\r\n        // Filter Menu #34\r\n        var menuFilterApply = (new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"]( // FuncTag\r\n                divMenuId + \"_FilterApply\",\r\n                \"Apply filter & reload\",\r\n                g + \".menuFilterApply\"));\r\n        var menuFilterReset = (new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"]( // FuncTag\r\n                divMenuId + \"_FilterClear\",\r\n                \"Reset filter condition\",\r\n                g + \".menuFilterReset\"));\r\n\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Filter\">'\r\n                + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"].getAccordionTag(that, ++_id, \"Filter\")\r\n                + '<ul class=\"hjnMenuLv2\">'    // #24\r\n                + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].Filter.getHtml() // 設定HMTL #76\r\n                + menuFilterApply.getFuncTag() // フィルターボタン\r\n                + menuFilterReset.getFuncTag() // クリアボタン\r\n                + '</ul>' + '</li>';\r\n\r\n        // Simulator Menu #53\r\n        var menuSimulatorSimulate = (new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"]( // FuncTag\r\n                divMenuId + \"_SimulatorSimulate\",\r\n                \"Simulate\",\r\n                g + \".menuSimulatorSimulate\"));\r\n        var menuSimulatorEditor = (new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"]( // FuncTag\r\n                divMenuId + \"_SimulatorEditor\",\r\n                \"JSON Editor(Open/Close)\",\r\n                g + \".menuSimulatorEditor\"));\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Simulator\">'\r\n                + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"].getAccordionTag(that, ++_id, \"Simulator\")\r\n                + '<ul class=\"hjnMenuLv2\">'\r\n                + menuSimulatorSimulate.getFuncTag()   // シミュレート実行ボタン\r\n                + menuSimulatorEditor.getFuncTag()     // JSONエディタボタン\r\n                + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].Simulator.getHtml()      // 設定HTML #74\r\n                + '</ul>' + '</li>';\r\n        // シミュレーション条件JSON Editエリアを設定する\r\n        var divSimulator = document.getElementById(\"Simulator\");\r\n        var jsonEditor = document.createElement('div'); // 要素の作成\r\n        jsonEditor.innerHTML = '<textarea id=\"SimulatorEditor\" '\r\n                + 'style=\"width:100%;border:none;resize:none;background:rgba(255,255,255,0.5);height:100%;\">'\r\n        divSimulator.appendChild(jsonEditor);\r\n        var divSimulatorEditor = document.getElementById(\"SimulatorEditor\");\r\n        // divSimulatorEditor.readOnly = true; // #22\r\n        divSimulatorEditor.value = __WEBPACK_IMPORTED_MODULE_1__simulator_simulator_js__[\"d\" /* virtualSystemByJson */]\r\n                .GetJsonConfig(); // デフォルトJSON\r\n\r\n        // View Menu\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_View\">'\r\n                + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"].getAccordionTag(that, ++_id, \"View\", true)\r\n                + '<ul class=\"hjnMenuLv2\">' //\r\n                + '<li><div id=\"' + that.chartIdName + '_legend\"></div></li>'\r\n                + '</ul>' + '</li>';\r\n\r\n        // Download Menu\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Download\">'\r\n                + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"].getAccordionTag(that, ++_id, \"Download\")\r\n                + '<ul class=\"hjnMenuLv2\">'\r\n                + menuDownloadImg.getATag(\"Upper \")   // 上段画像ダウンロードボタン\r\n                + menuDownloadCsv.getATag(\"Upper \")   // 上段グラフcsvダウンロードボタン\r\n                + menuDownloadLog.getATag(\"Upper \")   // 上段生データダウンロードボタン\r\n                + '</ul>' + '</li>';\r\n\r\n        \r\n        // メニュー登録\r\n        divMenu.appendChild(accordion);\r\n        // イベントリスナー登録\r\n        document.getElementById(menuOpenCsv.menuId).addEventListener( //\r\n                'change', that.menuOpenCsv.bind(that), false); // File Open用\r\n        document.getElementById(menuLoadConfig.menuId).addEventListener(\r\n                'change', that.menuLoadConfig.bind(that), false); // LoadConfig用\r\n\r\n    } else { // 下段用グラフ機能のメニュー追加\r\n        _id += 100;\r\n        // Download Menu\r\n        var chartDownloadUl = document.createElement('ul');\r\n        chartDownloadUl.className = \"hjnMenuLv2\";\r\n        chartDownloadUl.innerHTML = '' //\r\n                + menuDownloadImg.getATag(\"Detail \")   // 下段画像ダウンロードボタン\r\n                + menuDownloadCsv.getATag(\"Detail \")   // 下段グラフcsvダウンロードボタン\r\n                + menuDownloadLog.getATag(\"Detail \")   // 下段生データダウンロードボタン\r\n                + menuDownloadConc.getATag(\"Detail \"); // 下段conc csvダウンロードボタン\r\n        var chartDownload = document.getElementById(\"menu_Download\");\r\n        chartDownload.appendChild(chartDownloadUl);\r\n\r\n        // View Menu\r\n        var chartViewUl = document.createElement('ul');\r\n        chartViewUl.className = \"hjnMenuLv2\";\r\n        chartViewUl.innerHTML = '<li><div id=\"' + that.chartIdName\r\n                + '_legend\"></div></li>';\r\n        var chartView = document.getElementById(\"menu_View\");\r\n        chartView.appendChild(chartViewUl);\r\n\r\n        // \"Bottom detail graph\" Menu\r\n        accordion.innerHTML = ''\r\n                + '<li class=\"hjnMenuLv1\">'\r\n                +   __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"].getAccordionTag(that, ++_id, \"Bottom detail graph\", true)\r\n                +   '<ul class=\"hjnMenuLv2\">'\r\n                +     '<ol><div id=\"detailTimeRange\">'\r\n                +     __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getHtml()     // 設定HMTL #76\r\n                +     '</div></ol>' // #51\r\n                +   '<li><div id=\"chartPlots\"></div></li>' // Plot一覧用タグ\r\n                +   '</ul>'\r\n                + '</li>';\r\n\r\n        // Help Menu\r\n        var menuHelpUsage = (new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"]( // DialogTag\r\n                divMenuId + \"_HelpUsage\", // #84\r\n                \"Usage of TAT log diver\",\r\n                \"HJN.init.Usage\"))\r\n            .makePopupable(\"HJN.dialogUsage\", 70, 60);\r\n        var menuHelpAbout = (new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"]( // DialogTag\r\n                divMenuId + \"_HelpAbout\",\r\n                \"about TAT log diver\",\r\n                \"HJN.init.Copyright\"))\r\n            .makePopupable(\"HJN.dialogAbout\", 30, 50);\r\n\r\n        \r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\">'\r\n                + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Menu\"].getAccordionTag(that, ++_id, \"Help\")\r\n                + '<ul class=\"hjnMenuLv2\" style=\"width: 100%;\">' //\r\n                + menuHelpUsage.getSubWindowTag() // #84 #95\r\n                + menuHelpAbout.getDialogTag()\r\n                + '</ul>' + '</li>';\r\n\r\n        // メニュー登録\r\n        divMenu.appendChild(accordion);\r\n    }\r\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Copyright\", function() { return Copyright; });\n/**\r\n * @memberOf tatLogDiver\r\n * @class Copyright\r\n * @classdesc コピーライト定義と表示用メソッド\r\n * @prop {String} name - 名称：\"TAT log diver\"\r\n * @prop {String} Version - バージョン\r\n * @prop {String} text - コピーライト表示文字列\r\n * @prop {String} url - GitHubリンク：\"https://github.com/hirosejn/\"\r\n */\r\n\r\nvar Copyright = {\r\n    name : \"TAT log diver\",\r\n    Version : \"b19.06.30\",\r\n    text : \"&copy; 2017-\" + (new Date()).getFullYear() + \" Junichiroh Hirose\",\r\n    url : \"https://github.com/hirosejn/\",\r\n};\r\n\r\n\r\n/**\r\n * about tat Log Diver として表示する説明文をHTMLで取得する\r\n * \r\n * @memberof tatLogDiver.Copyright\r\n * @return {String}表示用HTML\r\n */\r\nCopyright.getAboutText = function(){\r\n    return Copyright.name + \" (\" + Copyright.Version + \")<br>\"\r\n        + Copyright.text + \" <br> \"\r\n        + Copyright.getGitHubHTML() + \" <br> \"\r\n        + Copyright.getJSDocHTML() + \" <br> \"\r\n        + Copyright.getHtmlHTML();  // #84\r\n}\r\n\r\n/**\r\n * GitHubリンク(HTML)を取得する\r\n * \r\n * @memberof tatLogDiver.Copyright\r\n * @param {String}\r\n *            [text=Copyright.url] HTMLの表示文字列\r\n * @return {String} GitHubリンク(HTML)文字列\r\n */\r\nCopyright.getGitHubHTML = function(text){\r\n    text = text || Copyright.url;\r\n    return '<a class=\"hjnLabel4Input\" href=\"' + Copyright.url+ '\"'\r\n        + ' target=”_hirosejnGit”>' + text + '</a>'\r\n}\r\n\r\n/**\r\n * JSDOCリンク(HTML)を取得する\r\n * \r\n * @memberof tatLogDiver.Copyright\r\n * @param {String}\r\n *            [name=\"JSDoc\"] HTMLの表示文字列\r\n * @return {String} JSDOCリンク(HTML)文字列\r\n */\r\nCopyright.getJSDocHTML = function(name){\r\n    name = name || \"JSDoc\";\r\n    return '<a class=\"hjnLabel4Input\" href=\"../jsdoc/index.html\"'\r\n        +  'target=”_hirosejnJSDoc3”>' + name +'</a><BR>'\r\n}\r\n\r\n/**\r\n * HTMLページのリンク(HTML)を取得する\r\n * \r\n * @memberof tatLogDiver.Copyright\r\n * @param {String}\r\n *            [name=\"HTML : \" + Copyright.url] HTMLの表示文字列\r\n * @return {String} HTMLページのリンク(HTML)文字列\r\n */\r\nCopyright.getHtmlHTML = function(name){ // #84\r\n    var url = \"https://hirosejn.github.io/HJN/\";\r\n    name = name || \"HTML : \" + url;\r\n    return '<a class=\"hjnLabel4Input\" href=\"' + url + '\"'\r\n        +  'target=”_hirosejnHTML”>' + name +'</a><BR>'\r\n}\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"default\"] = Plot;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__ = __webpack_require__(5);\n\r\n\r\n\r\n\r\n/**\r\n * グラフの点をクリックした際に決まる下段グラフの表示条件\r\n * \r\n * @memberof tatLogDiver\r\n * @class Plot\r\n */\r\nfunction Plot(){};\r\n__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot = Plot;\r\n\r\n/**\r\n * Plotの一覧\r\n * \r\n * @type array.<String, Boolean, Boolean, index, xMs, Number, Number, Number>\r\n * @prop {String} label Plot一覧に表示する文字列\r\n * @prop {Boolean} ckBox チェックボックスの選択状態<br>\r\n *       （選択後すぐに削除されるのでtrueとなることはない）\r\n * @prop {Boolean} radio ラジオボタンの選択状態\r\n * @prop {index} n グラフ番号\r\n * @prop {xMs} x xの値\r\n * @prop {Number} y yの値\r\n * @prop {Number} rangeMinus 表示幅時間マイナス（秒）\r\n * @prop {Number} rangePlus 表示幅時間プラス（秒）\r\n * @prop {Number} rangeUnit 表示幅時間 単位（sec:1/min:60/hour:3600/day:86400)\r\n * \r\n */\r\n__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List = [];\r\n\r\n/**\r\n * point/baloonクリック時呼出し用関数<br>\r\n * 詳細グラフを描画し、Plotを更新する\r\n * \r\n * @param {Objcet}\r\n *            point dygraph の point\r\n */\r\nPlot.PointClickCallback = function(point) {\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"[0:PointClickCallback]start---------------\",\"calc\");\r\n    var n = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.seriesConfig.findIndex(function(e){ return e.key === point.name; }),// シリーズ番号\r\n        x = point.xval, // ミリ秒\r\n        y = point.yval; // 秒\r\n\r\n    // ETPS,EMPS,EAPSのとき、TATが幅に含まれるよう、幅(range)を拡大する #57\r\n    var rangeTagUnit = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getConfig(\"D_UNIT\"); \r\n    var rangeUnit  = rangeTagUnit  ? rangeTagUnit : __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE;\r\n    if ((n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.ETPS.N || n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.EMPS.N || n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.EAPS.N) \r\n            && rangeUnit < __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE) {\r\n        rangeUnit = __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE;\r\n        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.setValueByKey(\"D_UNIT\", rangeUnit);\r\n\r\n        // selectリストの選択を、rangeUnitに合わせる #57\r\n        var options = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getKeyConfig(\"D_UNIT\"); // option一覧\r\n        var valueArray = Object.keys(options).sort(function(a,b){return a - b}); // optionの値の一覧(降順)\r\n        for (var i = 0; i < valueArray.length; i++) { // #27\r\n            if (rangeUnit <= +valueArray[i]) {\r\n               var optionKey = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getOptionKey(\"D_UNIT\", valueArray[i]);\r\n               __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.setText(\"D_UNIT\", optionKey)\r\n               break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // グラフの日時で、詳細グラフを再作成する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].init.SetDetailDateTime(x);\r\n    var tat = new __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */](__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].init.GetSliderRangedEtat()); // #57\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].chartD.setSeriesSet(tat); // #75\r\n    \r\n    // 下段の残処理終了後、下段データを登録描画する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].chartD.graph.ready(function(){ __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].chartD.update(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].chartD.seriesSet, n); }); // #57\r\n    // Hover表示しているplotを、Plot.Listに登録し、plotsアイコンを再描画する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.Add(n, x, y);\r\n    // Balloonを再描画する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.ShowBalloon();\r\n};\r\n\r\n/**\r\n * point/baloonダブルクリック時呼出し用関数<br>\r\n * Plotを削除する\r\n * \r\n * @param {object}\r\n *            plot dygraphのpoint\r\n */\r\nPlot.PointDblClickCallback = function(point) {\r\n    // 指定plotを削除する\r\n    var n = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.seriesConfig.findIndex(function(e){ return e.key === point.name; }),\r\n        x = point.xval, // ミリ秒\r\n        i = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List.findIndex(function(p){\r\n                return(p.n === n && p.x === x) ||   // 完全一致\r\n                        (\"tpsPlot\" in p &&          // 詳細一致\r\n                        p.tpsPlot.n === n && p.tpsPlot.x === x); });\r\n    if(0 <= i) __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List.splice(i, 1);\r\n    \r\n    Plot.Render();\r\n    // グラフ内の吹き出しを再表示する\r\n    Plot.ShowBalloon();\r\n};\r\n\r\n/**\r\n * クリック時のHoverからPlot.Listを設定する\r\n * \r\n * @param {index}\r\n *            n グラフのシリーズ番号\r\n * @param {xMs}\r\n *            x マウスクリック時のxの値（ミリ秒）\r\n * @param {Number}\r\n *            y マウスクリック時のyの値\r\n * @return {index} i plots内のplotの位置\r\n */\r\nPlot.Add=function(n, x, y) {\r\n    // 各plotを非選択状態とする\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List.forEach(function(e){e.radio = false;});\r\n    // ラベルフォーマットの設定\r\n    var format = (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.ETPS.N || n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.CTPS.N) ? \"hh:mm:ss\" : \"hh:mm:ss.000\", // #92\r\n        label = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](x, format, true) + \" \" + // #61\r\n                __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.seriesConfig[n].label.replace(\"%N\",__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"N2S\"](y));\r\n    // 幅(range)を取り込む（秒）\r\n    var rangePlusTag  =  document.getElementById(\"DetailRangePlus\"),\r\n        rangeMinusTag =  document.getElementById(\"DetailRangeMinus\"),\r\n        rangeUnitTag  =  document.getElementById(\"DetailRangeUnit\"), // #48\r\n        rangeUnit  = rangeUnitTag  ? +rangeUnitTag.value : __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE, // #57\r\n        rangePlus  = rangePlusTag  ? +rangePlusTag.value  : 1,  // 幅\r\n        rangeMinus = rangeMinusTag ? +rangeMinusTag.value : 1;\r\n\r\n    // 既存Poltを検索する\r\n    var i = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List.findIndex(function(p){\r\n                return(p.n === n && p.x === x) ||   // 完全一致\r\n                        (\"tpsPlot\" in p &&          // 詳細一致\r\n                        p.tpsPlot.n === n && p.tpsPlot.x === x); });\r\n    // Plotを設定する\r\n    var plot;\r\n    if(0 <= i){ // 既存Plotsにある時、選択状態とし、rangeを再設定する\r\n        plot = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List[i];\r\n        plot.radio = true;\r\n        plot.rangePlus  = rangePlus; // 秒\r\n        plot.rangeMinus = rangeMinus;\r\n        plot.rangeUnit  = rangeUnit; // #48\r\n    }else{      // 既存に無いときPlotを追加する\r\n        // ETAT,STATのとき、TATが幅に含まれるよう、幅(range)を拡大する #30 #48 #57\r\n        if (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.ETAT.N){\r\n            rangeMinus = Math.max(rangeMinus, \r\n                    Math.floor(x / rangeUnit) - Math.floor((x - y) / rangeUnit)); // #48\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.setText(\"D_RANGE_MINUS\", rangeMinus);\r\n        }else if (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.STAT.N){\r\n            rangePlus = Math.max(rangePlus,\r\n                    Math.floor((x + y) / rangeUnit)) - Math.floor(x / rangeUnit) ; // #48\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.setText(\"D_RANGE_PLUS\", rangePlus);\r\n        }\r\n        // Plotを追加する\r\n        plot = {label: label, ckBox:false,\r\n                 radio:true, n: n, x: x, y: y, \r\n                 rangePlus: rangePlus, rangeMinus: rangeMinus, rangeUnit: rangeUnit };\r\n        if (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.CTPS.N){          // CTPSのとき秒内最大CONCとして登録する\r\n            adjustPlotToY(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].chartD.conc, x, x + __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].chart.cTpsUnit.unit, y, \r\n                    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.CONC.N, plot, rangePlus, rangeMinus, rangeUnit);\r\n        }else if (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.EMPS.N){    // EMPSのとき秒内最大ETATとして登録する\r\n            adjustPlotToY(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].chartD.eTat, x, x + __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE, y, \r\n                    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.ETAT.N, plot, rangePlus, rangeMinus, rangeUnit);\r\n        }else { // CTPS,EMPS以外の時、選択Plotを追加する\r\n            __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List.push(plot);\r\n        }\r\n        // Plotsを時刻順にソートする\r\n        __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List.sort(\r\n                function(a, b) { return a.x - b.x; });\r\n        i = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List.findIndex(\r\n                function(p){ return(p.n === n && p.x === x); });\r\n    }\r\n    Plot.Render();\r\n    return i;   // plots内のplotの位置\r\n\r\n    \r\n    // 内部関数：プロット位置を、指定秒から詳細グラフの最大時刻に変更する #19\r\n    function adjustPlotToY(conc, x, toX, y, n, plot, rangePlus, rangeMinus, rangeUnit){\r\n        if (!conc) return;\r\n        var maxTime = 0,\r\n            concMax = 0,\r\n            i = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"binarySearch\"](x, conc, function(e){ return e.x; });\r\n        for (; i < conc.length && conc[i].x < toX; i++){    // #26\r\n            if (concMax <= conc[i].y){\r\n                    maxTime = conc[i].x;\r\n                    concMax = conc[i].y;\r\n            }\r\n        }\r\n        if (concMax === y) { // 補正すべき時刻が求まったときCONC,ETATを追加する #23\r\n            x = maxTime;\r\n            format = \"hh:mm:ss.000\"; // #92\r\n            label = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](x, format, true) + \" \" + // #61\r\n                    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Tat.seriesConfig[n].label.replace(\"%N\",__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"N2S\"](y));\r\n            __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List.push( {label: label, ckBox:false,\r\n                 radio:true, n: n, x: x, y: y, \r\n                 rangePlus: rangePlus , rangeMinus: rangeMinus, rangeUnit: rangeUnit,\r\n                 tpsPlot: plot} );  // 詳細plotには、tpsのplot情報も保持する\r\n        } else { // 補正すべき時刻がない場合、元のPlotを追加する\r\n            __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List.push(plot);\r\n        }\r\n\r\n    }\r\n};\r\n\r\n/**\r\n * Plot.Listを再表示する\r\n */\r\nPlot.Render = function() {\r\n    var divCheckedPlots =  document.getElementById(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].chartName + \"Plots\");\r\n    // 既存のアイコンを削除する\r\n    while (divCheckedPlots.firstChild){\r\n        divCheckedPlots.removeChild(divCheckedPlots.firstChild);\r\n    }\r\n    // 登録されているplots分のアイコンを追加する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List.forEach( function(e, i){\r\n        var div = document.createElement('div'),        // 要素の作成\r\n            radio = e.radio ? 'checked=\"checked\"' : '', // radio選択指定\r\n            ckBox = e.ckBox ? 'checked=\"checked\"' : ''; // check boxのチェック指定\r\n        div.className = \"hjnPlot\";\r\n        div.innerHTML =\r\n            '<input type=\"checkbox\" value=\"' + e.x + '\" id=\"checkBox_' + i + '\" ' + ckBox +\r\n                    ' title=\"delete\" onclick=\"HJN.Plot.CheckBox(' + i + ')\">' +\r\n            '<label for=\"checkBox_' + i + '\"></label>' +\r\n            '<input type=\"radio\" name=\"CheckedPlot\" id=\"SaveTime_' + i + '\" ' + radio +\r\n                    ' onclick=\"HJN.Plot.CheckRadio(' + i + ')\">' +\r\n            '<label for=\"SaveTime_' + i + '\">' + e.label + '</label>';\r\n        divCheckedPlots.appendChild(div);\r\n    } );\r\n};\r\n/**\r\n * PlotのChekBox変更時呼出用関数<br>\r\n * 指定Plotを削除し、PlotsとBaloonを再描画する\r\n * \r\n * @param {index}\r\n *            i 削除対象plotの、plots内位置\r\n */\r\nPlot.CheckBox = function(i) {\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List.splice(i,1);      // checkされたplotを削除する\r\n    Plot.Render();          // Plotsを再描画する\r\n    Plot.ShowBalloon();     // グラフのBalloonを再描画する\r\n};\r\n/**\r\n * PlotのRadioボタン変更時呼出用関数<br>\r\n * radio選択時に下段グラフを更新する\r\n * \r\n * @param {index}\r\n *            i 選択されたplotの、plots内位置\r\n */\r\nPlot.CheckRadio = function(i) {\r\n    // Plot.Listにradioの状態を反映する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List.forEach(function(e){ e.radio = false; });\r\n    var plot = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].Plot.List[i];\r\n    plot.radio = true;\r\n    // グラフの日時で、詳細グラフを再作成する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].init.SetDetailDateTime(plot.x); // 中心時刻に設定する\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.setText(\"D_RANGE_PLUS\", plot.rangePlus); // 幅を設定する\r\n                                                                        // #74\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.setText(\"D_RANGE_MINUS\", plot.rangeMinus);\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.setText(\"D_UNIT\", \r\n                __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getOptionKey(\"D_UNIT\", plot.rangeUnit)); // #48\r\n    var n = plot.tpsPlot ? plot.tpsPlot.n : plot.n; // #61\r\n    var tat = new __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */](__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].init.GetSliderRangedEtat()); // #75\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].chartD.setSeriesSet(tat); // #57\r\n    // 下段データを登録描画する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].chartD.update(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].chartD.seriesSet, n); // #57\r\n    // Balloonを再描画する\r\n    Plot.ShowBalloon();\r\n};\r\n/**\r\n * Balloonを再描画する\r\n */\r\nPlot.ShowBalloon =function(){\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].chart.showBalloon();\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"HJN\"].chartD.showBalloon();\r\n    // タッチデバイスでないとき、lineViewerに表示をクリップボードにコピーする #78\r\n    if (!__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"TouchPanel\"].isTouchableDevice()) { // #22\r\n        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"copyToClipboard\"](\"lineViewer\"); // #61\r\n    }\r\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"default\"] = MenuConfigDetailGraph;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__ = __webpack_require__(5);\n\r\n\r\n\r\n\r\n/**\r\n * @memberOf tatLogDiver\r\n * @class MenuConfigDetailGraph\r\n * @classdesc DetailGraph用メニューHTML定義\r\n * \r\n */\r\nfunction MenuConfigDetailGraph() {} // #27\r\n\r\nMenuConfigDetailGraph.config = function () {\r\n    var prefix = \"DetailGraph\";\r\n    var c = new  __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"](prefix);\r\n    // Config設定画面定義\r\n    c \r\n        .name(\"D_RANGE\").label(null,\"Range:\")\r\n            .number(\"D_RANGE_MINUS\", \" - \", \"\", \"1\", 'style=\"width:40px;\"', func_D)\r\n            .number(\"D_RANGE_PLUS\"  , \" + \", \"\", \"2\", 'style=\"width:40px;\"', func_D)\r\n        .name(\"D_UNIT\").startTag(\"select\")\r\n            .option(c.def(\"D_UNIT_SEC\",         1000), null, \"sec\",   false, null, func_D) // #48\r\n            .option(c.def(\"D_UNIT_10SEC\",      10000), null, \"10sec\", true,  null, func_D)\r\n            .option(c.def(\"D_UNIT_MIN\",        60000), null, \"min\",   false, null, func_D)\r\n            .option(c.def(\"D_UNIT_HOUR\",     3600000), null, \"hour\",  false, null, func_D)\r\n            .option(c.def(\"D_UNIT_6HOUR\",   21600000), null, \"6hour\", false, null, func_D)\r\n            .option(c.def(\"D_UNIT_DAY\",     86400000), null, \"day\",   false, null, func_D)\r\n            .option(c.def(\"D_UNIT_YEAR\", 31536000000), null, \"year\",  false, null, func_D)\r\n        .endTag()\r\n    ;\r\n}\r\n\r\n// Config登録関数定義\r\nfunction func_D(){\r\n    clearTimeout(HJN.timer);\r\n    HJN.timer = setTimeout(function(){\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogTextInit(\"[-:HJN.init.setDetailRange]start---------------\",\"calc\");\r\n            // 表示中Plotsのrangeを更新する #30\r\n            var i = HJN.Plot.List.findIndex(function(e){ return (e.radio === true); });\r\n            var plot = HJN.Plot.List[i];\r\n            plot.rangePlus  = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getConfig(\"D_RANGE_PLUS\"); // #27\r\n            plot.rangeMinus = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getConfig(\"D_RANGE_MINUS\");\r\n            plot.rangeUnit = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.getConfig(\"D_UNIT\"); // #48\r\n            plot.rangeUnit = plot.rangeUnit  ? plot.rangeUnit  : __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */].CYCLE; // #57\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].DetailGraph.setValueByKey(\"D_UNIT\", plot.rangeUnit);\r\n\r\n            // 下段データを登録する\r\n            var tat = new __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"e\" /* Tat */](HJN.init.GetSliderRangedEtat()); // #75\r\n            HJN.chartD.setSeriesSet(tat);\r\n            // 下段グラフを描画する\r\n            __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__[\"default\"].prototype.update.call(HJN.chartD, HJN.chartD.seriesSet);\r\n        }, 750);    // 750ms 値の変更がなかった時に、処理を開始する\r\n };\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(21);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(22);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(12)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Tat;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_MappedETat_js__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timeSeries_ETat_js__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__timeSeries_Cash_js__ = __webpack_require__(17);\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class Tat\r\n * @classdesc Tat 応答時間(Turnaround time)の時系列データ管理クラス\r\n * @param {ETAT}\r\n *            [eTat] [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]<br>\r\n *            eTatが指定されているとき、this.seriesSet を設定する\r\n */\r\nfunction Tat(eTat) {\r\n    \r\n    this.cTpsUnit = Tat.UNIT_CTPS[0];\r\n    this.seriesSet = [];\r\n\r\n    if (eTat){\r\n        this.createSeries(eTat);\r\n    }\r\n}\r\n\r\n/**\r\n * クラス定数\r\n */\r\nTat.UNIT_CTPS = [\r\n        { label: \"/sec\",   unit: 1000 },\r\n        { label: \"/min\",   unit: 60000 },\r\n        { label: \"/hour\",  unit: 3600000 },\r\n        { label: \"/day\",   unit: 86400000 }];\r\nTat.CYCLE = 60000;  // ミリ秒 #57\r\n\r\n// グラフ定数\r\nTat.CONC = {\r\n        key : 'conc',\r\n        name : '多重度（詳細）',\r\n        label : 'conc:%N',\r\n        N : 0,\r\n        scale : 0,\r\n        color : 'rgba(  0,  0,127, 0.3)',\r\n        tpsN : 1\r\n    }; // #7\r\nTat.CTPS = {\r\n        key : 'cTps',\r\n        name : '多重度（区間最大）',\r\n        label : 'conc(max):%N',\r\n        N : 1,\r\n        scale : 0,\r\n        color : 'rgba(  0,  0,127, 0.1)',\r\n        detailN : 0\r\n    };\r\nTat.ETPS = {\r\n        key : 'eTps',\r\n        name : 'average tps / min (end) [line]', // #57\r\n        label : 'end:%Ntps',\r\n        N : 2,\r\n        scale : 0,\r\n        color : 'rgba(  0, 127, 127, 0.3)'\r\n    };\r\nTat.STAT = {\r\n        key : 'sTat',\r\n        name : 'response by start time [Y2軸:plot]',\r\n        label : 'start:%Nms',\r\n        N : 3,\r\n        scale : 1,\r\n        color : 'rgba(127, 127, 0, 0.3)'\r\n    };\r\nTat.ETAT = {\r\n        key : 'eTat',\r\n        name : 'response by end time   [Y2軸:plot]',\r\n        label : 'end:%Nms',\r\n        N : 4,\r\n        scale : 1,\r\n        color : 'rgba(127,  0,  0, 0.3)'\r\n    };\r\nTat.EMPS = {\r\n        key : 'eMps',\r\n        name : 'max response / min (end) [Y2軸:line]', // #57\r\n        label : 'max:%Nms',\r\n        N : 5,\r\n        scale : 1,\r\n        color : 'rgba(127,   0,  64, 0.3)'\r\n    };\r\nTat.EAPS = {\r\n        key : 'eAps',\r\n        name : 'average response / min (end) [Y2軸:line]', // #57\r\n        label : 'ave:%Nms',\r\n        N : 6,\r\n        scale : 1,\r\n        color : 'rgba(127,   0,  64, 0.1)'\r\n    };\r\nTat.toSeriesArray = function(conc, cTps, eTps, sTat, eTat, eMps, eAps) {\r\n    return [ conc, cTps, eTps, sTat, eTat, eMps, eAps ];\r\n}\r\nTat.seriesConfig = Tat.toSeriesArray(\r\n        Tat.CONC, Tat.CTPS, Tat.ETPS, Tat.STAT, Tat.ETAT,\r\n        Tat.EMPS, Tat.EAPS);\r\n\r\n/**\r\n * 終了時刻のTAT時系列データ(eTat)から、描画用時系列データ配列を作成する\r\n * \r\n * @memberOf TimeSeries\r\n * @param {ETAT}\r\n *            eTat [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]\r\n * @return {seriesSet} dygraph用時系列データ配列\r\n */\r\nTat.prototype.createSeries = function (eTat) {\r\n    // 時系列データを初期化する\r\n    var conc = [], cTps = [], eTps = [], sTat = [], eMps = [], eAps = [];\r\n\r\n    // 集計対象データがないとき\r\n    if (eTat.length === 0)\r\n        return Tat.toSeriesArray(conc, cTps, eTps, sTat, eTat, eMps, eAps);\r\n\r\n    /** eTatをソートする * */\r\n    // 開始時刻でソートする #35\r\n    eTat.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"[1:eTat sorten ] \" + eTat.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** eTps(時間あたり処理件数),eMps,eAps(時間あたり最大/平均応答時間)時系列データを作成する * */\r\n    var dFrom = Math.floor(eTat[0].x / Tat.CYCLE) * Tat.CYCLE,\r\n        dTo = dFrom + Tat.CYCLE,\r\n        num = 0, // #39\r\n        maxTat = 0.0, // #19\r\n        aveTmp = 0.0;\r\n    eTat.forEach(function (e) {\r\n        if (e.x < dTo) {\r\n            num += 1;\r\n            if (maxTat < e.y) maxTat = e.y; // #19\r\n            aveTmp += e.y;\r\n        } else {\r\n            eTps.push({x : dFrom, y : num * 1000 / Tat.CYCLE}); // #57\r\n            eMps.push({x : dFrom, y : maxTat}); // #19\r\n            eAps.push({x : dFrom, y : aveTmp / num});\r\n            dFrom = Math.floor(e.x / Tat.CYCLE) * Tat.CYCLE;\r\n            dTo = dFrom + Tat.CYCLE;\r\n            num = 1;\r\n            maxTat = e.y; // #19 #39\r\n            aveTmp = e.y; // #39\r\n        }\r\n    }, this);\r\n    eTps.push({x : dFrom,             y : num * 1000 / Tat.CYCLE}); // #57\r\n    eTps.push({x : dFrom + Tat.CYCLE, y : num * 1000 / Tat.CYCLE}); // #57\r\n    eMps.push({x : dFrom,             y : maxTat}); // #19\r\n    eMps.push({x : dFrom + Tat.CYCLE, y : maxTat}); // #57\r\n    eAps.push({x : dFrom,             y : aveTmp / num});\r\n    eAps.push({x : dFrom + Tat.CYCLE, y : aveTmp / num}); // #57\r\n    \r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"[3:eTps,eMps,eAps created] \" + eTps.length\r\n            + \" plots\", \"calc\");\r\n\r\n    /** sTat（開始時間）時系列データを作成する,同時に入力eTatを補正する * */\r\n    // eTatからsTatを登録する\r\n    eTat.forEach(function (e, i) {\r\n        // 処理時間=0 のとき、1マイクロ秒とみなす(有効桁0.2マイクロ秒に切上される）\r\n        if (e.y === 0) {\r\n            e.y = 0.001;\r\n            e.x += e.y;\r\n        } // ミリ秒\r\n        // sTatにeTatデータを登録する\r\n        sTat.push({\r\n            x : e.x - e.y,\r\n            y : e.y,\r\n            eTatIdx : i\r\n        });\r\n    });\r\n    // 開始時刻でソートする\r\n    sTat.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    // eTatにsTatの位置を設定する\r\n    sTat.forEach(function (s, i) {\r\n        eTat[s.eTatIdx].sTatIdx = i;\r\n    });\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"[2:sTat created] \" + sTat.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** CONC(多重度)時系列データを作成する * */\r\n    var concTmp = [];\r\n    // eTatから、多重度が変化した時刻の一覧を作成する\r\n    eTat.map(function (e, i) {\r\n        // 開始時刻にカウントアップ情報を追加する\r\n        concTmp.push({x : e.x - e.y, y : 1});\r\n        // 終了時刻をカウントダウン情報を追加する\r\n        concTmp.push({x : e.x, y : -1});\r\n    });\r\n    // concを変化した時刻（開始or終了）でソートする\r\n    concTmp.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    // concに同時取引数を設定する\r\n    var concNum = 0;\r\n    concTmp.forEach(function (c, i, a) {\r\n        // 重複削除用フラグを立てる #23\r\n        if (i > 0 && c.x === a[i - 1].x) {\r\n            a[i - 1].del = true;\r\n        }\r\n        // 同時取引数を集計する(前提：c.y に、開始なら1、終了なら(-1)が設定されている)\r\n        concNum += c.y;\r\n        c.y = concNum;\r\n    });\r\n    // concの同じ時刻の点を削除する #23\r\n    conc = concTmp.filter(function (c) {\r\n        return !c.del;\r\n    });\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"[4:conc created] \" + conc.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** cTPS秒間同時処理件数（concurrent transactions/sec）時系列データを作成する #18 * */\r\n    var XSec = floorTime(conc[0].x, Tat.CYCLE), // ミリ秒\r\n    YMax = conc[0].y, YNext = conc[0].y;\r\n    // concの先頭と末尾の時刻(x)の差よりPlot数を求め、Plot数が規定数(8000個)を超えたら、桁上げする #38\r\n    var cTpsMaxPlots = 8000, // 桁上げするPlot数\r\n    cTpsUnits = Tat.UNIT_CTPS, // #48\r\n    concTerm = conc[conc.length - 1].x - conc[0].x, // ミリ秒\r\n    cTpsIdx = 0;\r\n    while (cTpsIdx < cTpsUnits.length\r\n            && concTerm / cTpsUnits[cTpsIdx].unit > cTpsMaxPlots) {\r\n        cTpsIdx++;\r\n    }\r\n    cTpsIdx = (cTpsUnits.length > cTpsIdx) ? cTpsIdx : cTpsUnits.length - 1;\r\n    this.cTpsUnit = cTpsUnits[cTpsIdx];\r\n    // メニューのViewのcTPSのラベルに単位を追加する\r\n    var pos = (this === HJN.chart) ? 0 : 1;\r\n    document.getElementsByName(\"cTps\")[pos]\r\n                .parentNode.lastChild.data = HJN.Tat.CTPS.name + this.cTpsUnit.label;\r\n\r\n    // 規定時間単位の最大同時処理数cTPSを作成する\r\n    conc.forEach(function (c) {\r\n        if (floorTime(c.x, this.cTpsUnit.unit) === XSec) { // c.xは ミリ秒\r\n            YMax = Math.max(YMax, c.y);\r\n        } else {\r\n            cTps.push({x : XSec, y : Math.max(YMax, YNext)});\r\n            for (var t = XSec + this.cTpsUnit.unit;\r\n                    t < floorTime(c.x, this.cTpsUnit.unit);\r\n                    t += this.cTpsUnit.unit) { // c.xはミリ秒\r\n                        cTps.push({x : t, y : YNext});\r\n                if (YNext === 0) break;\r\n            }\r\n            XSec = floorTime(c.x, this.cTpsUnit.unit);\r\n            YMax = Math.max(YNext, c.y);\r\n        }\r\n        YNext = c.y;\r\n    }, this);\r\n    cTps.push({x : XSec, y : YMax});\r\n    cTps.push({x : XSec + this.cTpsUnit.unit, y : YNext});\r\n\r\n    // Util.Logger.ShowLogText(\"[5-1:cTps created] \" + cTps.length + \"\r\n    // plots\",\"calc\");\r\n\r\n    // cTpsのxからindexを引くMapを作成する #18\r\n    eTat = new __WEBPACK_IMPORTED_MODULE_2__timeSeries_ETat_js__[\"a\" /* default */](eTat); // #75\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Logger\"].ShowLogText(\"[5:cTps created] \" + cTps.length + \" plots(\"\r\n            + +Math.floor(concTerm / 1000) + \"sec\" + cTpsUnits[cTpsIdx].label\r\n            + \")\", \"calc\");\r\n\r\n    // 集計結果をHJN.Graphに設定する 注）this.SERIESESと同じ順番にすること\r\n    this.seriesSet = Tat.toSeriesArray(conc, cTps, eTps, sTat, eTat, eMps, eAps);\r\n\r\n    return this;\r\n\r\n    \r\n    // 時刻を指定ミリ秒間隔で切り捨てる（内部関数）\r\n    function floorTime(t, cycle) {\r\n        return Math.floor(Math.floor(t / cycle) * cycle);\r\n    }\r\n};\r\n\r\n/**\r\n * cTpsの集計単位を取得する\r\n * \r\n * @memberOf TimeSeries\r\n * @return {object} 単位構造体 { label: \"/sec\", unit: 1000 }\r\n */\r\nTat.prototype.getCTpsUnit = function () {\r\n    return this.cTpsUnit;\r\n}\r\n\r\n/**\r\n * seriesSetを取得する\r\n * \r\n * @memberOf TimeSeries\r\n * @return {array} seriesSet\r\n */\r\nTat.prototype.getSeriesSet = function () {\r\n    return this.seriesSet;\r\n}\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf TimeSeries\r\n * @class MappedETat\r\n * @classdesc 期間指定eTat取得用Map\r\n *            <p>\r\n *            指定期間に動いているeTatの一覧を、高速に取得するマップ\r\n * @param {ETAT}\r\n *            eTat インデックスを追加するETAT\r\n * @example eTat.tatMap = new HJN_util.MappedETat(eTat); var trans =\r\n *          eTat.tatMap.search(x, x, 1000);\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #18\r\n    /** @static */\r\n    MappedETat.prototype = {\r\n            _abscissa: [],\r\n            _conf :[{ms:      10, step:5, label:\"0_10ms_\"},\r\n                    {ms:      50, step:2, label:\"1_50ms_\"},\r\n                    {ms:     100, step:5, label:\"2_100ms_\"},\r\n                    {ms:     500, step:2, label:\"3_500ms_\"},\r\n                    {ms:    1000, step:5, label:\"4_1sec_\"},\r\n                    {ms:    5000, step:4, label:\"5_5sec_\"},\r\n                    {ms:   20000, step:3, label:\"6_20sec_\"},\r\n                    {ms:   60000, step:5, label:\"7_1min_\"},\r\n                    {ms:  300000, step:4, label:\"8_5min_\"},\r\n                    {ms: 1200000, step:3, label:\"9_20min_\"},\r\n                    {ms: 3600000, step:6, label:\"10_1h_\"},\r\n                    {ms:21600000, step:4, label:\"11_6h_\"},\r\n                    {ms:Number.MAX_VALUE, step:1, label:\"12_overDay_\"}] // 最後はstep:１\r\n        };\r\n    /** @constructor */\r\n    function MappedETat(eTat){\r\n        if(!(this instanceof MappedETat)) return new MappedETat(eTat);\r\n        // MappedArrayを作成する\r\n        this._tatMap = new MappedArray(eTat, this._getKey, true);\r\n    }\r\n\r\n    /** @private */\r\n    MappedETat.prototype._row = function(label, step) {return label + step;};\r\n\r\n    /** @private */\r\n    // MapKey取得関数\r\n    MappedETat.prototype._getKey = function(e, i) {        // MapedMap用Key配列関数\r\n        var start = e.x - e.y,      // x,yはミリ秒\r\n            end = e.x,\r\n            _conf = MappedETat.prototype._conf,\r\n            _row = MappedETat.prototype._row,\r\n            term = _conf[0].ms,\r\n            rowLv = 0;\r\n        if(Math.ceil(end / term) - 1 === Math.floor(start / term)){ // 最小BOX\r\n            return [_row(_conf[0].label, 0),\r\n                    (Math.ceil(e.x / _conf[0].ms) - 1) * _conf[0].ms];\r\n        }\r\n        for (i = 1; i < _conf.length; i++) {                // 最下位から上に評価\r\n            term = _conf[i].ms;\r\n            if(Math.floor(end / term) === Math.floor(start / term) \r\n                    || end - start < term){                      // 上位BOXを起点\r\n                term = _conf[i-1].ms;   // ひとつ下位のBOX期間（下から評価したので二段下となることは無い\r\n                rowLv = Math.floor(end / term) - Math.floor(start / term);\r\n                return [_row(_conf[i-1].label, rowLv),\r\n                        (Math.ceil(e.x / _conf[i-1].ms) - 1) * _conf[i-1].ms];\r\n            }\r\n        }\r\n        return \"error\";\r\n    };\r\n\r\n    // static メンバーの設定\r\n    // _confから_abscissa(横軸）を生成する\r\n    var c = MappedETat.prototype._conf,\r\n        e2 = c[c.length - 2],\r\n        \r\n        e  = c[c.length - 1];\r\n    MappedETat.prototype._abscissa.push(\r\n            {label: MappedETat.prototype._row(e.label, e.step), ms: e.ms ,i: 1,\r\n                step: e.step, from: e2.ms * e2.step, to: e.ms} );   // 末尾を先頭に追加\r\n    for (var j = c.length - 1; 0 <= j; j--){    // 降順に追加\r\n        e = c[j];\r\n        for (var i = e.step; 0 < i; i--){ // #39\r\n            MappedETat.prototype._abscissa.push(\r\n                    {label: MappedETat.prototype._row(e.label, i), ms: e.ms, i: i, \r\n                                step: e.step, from: e.ms * i, to: e.ms * (i + 1)} );\r\n        }\r\n    }\r\n    MappedETat.prototype._abscissa.push( \r\n            {label: MappedETat.prototype._row(c[0].label, 0), ms: c[0].ms, i: 0,\r\n                step: 0, from: 0, to: c[0].ms} );   // 先頭を末尾に追加\r\n\r\n    \r\n    // public\r\n    /**\r\n     * 指定期間に動いているeTatを検索する\r\n     * \r\n     * @memberOf Util.MappedETat\r\n     * @parm {Number} from 指定期間(from)\r\n     * @parm {Number} [to=from] 指定期間(to)\r\n     * @parm {Number} [cap] cap件数となったら抽出を終了する（指定なしの時：全件）\r\n     * @return {ETAT} eTatArr 指定期間内のeTat配列\r\n     */\r\n    MappedETat.prototype.search = function (from, to, cap) {\r\n        to = to || from;    // to省略時は時刻指定(from=to)\r\n        cap = cap || Number.MAX_VALUE; // 指定なしの時：全件\r\n        var map = this._tatMap._map,\r\n            eTat = this._tatMap._arr,\r\n            abscissa = this._abscissa,\r\n            eTatArr = [],\r\n            start = 0,\r\n            end = 0;\r\n        // 検索対象のBOX一覧を生成する\r\n        abscissa.forEach(function(e){   // 存在しうる横軸のうち（tatが長時間の方から）\r\n            if (map[e.label]){          // 横軸が存在するものについて\r\n                var boxNum = e.i + Math.ceil(to / e.ms) - Math.floor(from / e.ms), // #45\r\n                    key = Math.floor(from / e.ms) * e.ms;\r\n                // 存在しうるKey値を終了時間が早い方から集計する\r\n                for(var j = 0; j <= boxNum; j++){\r\n                    // Key値が存在するものみが集計対象\r\n                    if (map[e.label][key]){ \r\n                        // かつ、Keyが持っている要素(eTatへの参照:k)が集計対象\r\n                        map[e.label][key].forEach(function(k){\r\n                            // かつ、from-toの期間に動いている要素(eTatのindex)が集計対象\r\n                            start = eTat[k].x - eTat[k].y;\r\n                            end   = eTat[k].x;\r\n                            if((start <= to) && (from <= end)){\r\n                                // かつ、戻り値の配列要素数がcap未満の場合が集計対象\r\n                                if(eTatArr.length < cap){\r\n                                    // 集計対象条件に合致する要素を、戻り値の配列に追加する\r\n                                    eTatArr = eTatArr.concat(eTat[k]);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    key += e.ms;    // 次のKey値\r\n                }\r\n            }\r\n        }, this);\r\n        return eTatArr;\r\n    };\r\n    \r\n    // newの戻り値\r\n    return MappedETat;\r\n}());\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class MappedArray\r\n * @classdesc 配列位置逆引きマップ\r\n *            <p>\r\n *            配列に格納されているオブジェクトのx値で、配列位置を高速検索するマップ<br>\r\n *            指定関数の戻り値(x)をキーとするマップを作成する\r\n *            <p>\r\n *            参考 {@link http://qiita.com/alucky0707/items/10052866719ba5c5f5d7}\r\n * \r\n * @param {Array}\r\n *            arr インデクスをつける対象の配列\r\n * @param {String|function}\r\n *            [getKey=\"\"] MappedArrayのKey値の取得方法\r\n *            <p>\r\n *            String指定のとき（デフォルト\"\"を含む）、配列要素の値(valueOf)\r\n *            <p>\r\n *            注： 0,00,\"0\"は同値、1,01,\"1\"は同値 Stringのとき、 配列要素が持つ指定要素の値\r\n *            <p>\r\n *            functionのとき、配列要素に指定関数を適用した戻り値\r\n *            <p>\r\n *            関数の引数：(配列要素オブジェクト、配列のインデックス、作成中のMappedArrayへの参照）\r\n * @param {Boolean}\r\n *            [isMappedMap] getKeyが2段Map用の配列を返却する\r\n * @return {object} Index arrに対するインデックス（連想配列名で検索）\r\n * @example _tatMap = new HJN_util.MappedArray(eTat, this._getKey, true);\r\n */\r\nvar MappedArray = (function() {    // #18\r\n    /** @constructor */\r\n    function MappedArray(arr, getKey, isMappedMap){\r\n        if(!(this instanceof MappedArray)) return new MappedArray();\r\n        this._arr = arr;\r\n        // getKeyによりIndex作成関数を設定する\r\n        if(!getKey || getKey === \"\"){\r\n            // getKey指定がないとき、配列の値\r\n            this._getKey = function(e){ return e.valueOf(); };\r\n        }else if ((typeof(getKey) === \"string\") && (getKey !== \"\")){    // #29\r\n            // getKeyが文字列のとき、配列内オブジェクトのgetKey要素の値\r\n            this._getKey = function(e){ return e[getKey]; };\r\n        }else if (typeof(getKey) === \"function\" ){  // #29\r\n            // getKeyが関数のとき、配列内オブジェクトに関数を適用した戻り値\r\n            this._getKey = getKey;\r\n        }else{  // 以外のときエラーログを出力し、getKey指定なしと同様、配列の値\r\n            console.error(\"MappedArrayの第二引数エラー：[ %o ]を無視します \",getKey);\r\n            this._getKey = function(e){ return e.valueOf(); };\r\n        }\r\n        // MappedArrayを作成する\r\n        if(!isMappedMap){\r\n            this._createMappedArray();          \r\n        }else{\r\n            this._createMappedMappedArray();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    MappedArray.prototype._createMappedArray = function() {\r\n        var key = \"\"; \r\n        this._map = this._arr.reduce(function(m, a, i) {\r\n            key = this._getKey.call(a, a, i, m);\r\n            m[key] = (m[key] || []).concat(i);\r\n            return m;\r\n        }, {});\r\n    };\r\n    /** @private */\r\n    MappedArray.prototype._createMappedMappedArray = function() {\r\n        var keys = [],\r\n            key = \"\",\r\n            mKey = \"\",\r\n            _getKey = this._getKey;\r\n        this._map = this._arr.reduce(function(m, a, i) {\r\n            keys = _getKey.call(a, a, i, m);\r\n            key = keys[1] || \"error\";\r\n            mKey = keys[0] || \"error\";\r\n            if(m[mKey] === undefined) m[mKey] = {};\r\n            m[mKey][key] = (m[mKey][key] || []).concat(i);\r\n            return m;\r\n        }, {});\r\n    };\r\n\r\n    // public\r\n    /**\r\n     * 値の存在チェック\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.has = function (keyValue) {\r\n        return keyValue in this._map;\r\n    };\r\n    /**\r\n     * 該当位置を配列で返す\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.indexes = function (keyValue) {\r\n        return this._map[keyValue] || [];\r\n    };\r\n    /**\r\n     * 該当する要素を配列で返す\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.search = function (keyValue) {    \r\n        var arr = this._arr;\r\n        return this.indexes(keyValue).reduce(function(m, i) {\r\n            m.push(arr[i]);\r\n            return m;\r\n        }, []);\r\n    };\r\n    /**\r\n     * Array.prototype.indexOf() 同等\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.indexOf = function (keyValue) {\r\n        var idxArr = this._map[keyValue],\r\n            i = idxArr ? idxArr.length : -1;\r\n        return (0 < i) ? idxArr[0] : -1;\r\n    };\r\n    /**\r\n     * Array.prototype.lastIndexOf() 同等\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.lastIndexOf = function (keyValue) {\r\n        var idxArr = this._map[keyValue],\r\n            i = idxArr ? idxArr.length : -1;\r\n        return (0 < i) ? idxArr[i-1] : -1;\r\n    };\r\n    \r\n    \r\n    return MappedArray;\r\n}());\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ETat;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__timeSeries_MappedETat_js__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_Cash_js__ = __webpack_require__(17);\n\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class ETat\r\n * @extends Array\r\n * @classdesc eTat管理クラス、Arrayのメソッドを継承\r\n * @param {Array}\r\n *            [that] ETAT構造の配列\r\n */\r\nfunction ETat(that) {\r\n    /** @private */\r\n    // cTpsのxからindexを引くMapを作成する #18\r\n    that.tatMap = new __WEBPACK_IMPORTED_MODULE_0__timeSeries_MappedETat_js__[\"a\" /* default */](that);\r\n    // キャッシュを作成する\r\n    that.cash = Object(__WEBPACK_IMPORTED_MODULE_1__timeSeries_Cash_js__[\"a\" /* default */])();\r\n\r\n    /**\r\n     * 指定期間のeTatを取得する<br>\r\n     * 性能対策としてキャッシュを持っている\r\n     * \r\n     * @memberof TimeSeries.ETat\r\n     * @param {Number}\r\n     *            [detailDateTime] 期間の基準時刻(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangeMinus] 抽出開始時刻を求める基準時刻から引く時間(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangePlus] 抽出終了時刻を求める基準時刻に足す時間(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangeUnit] 抽出開始終了時刻を丸める時間の単位(ミリ秒)\r\n     * @return {ETAT} 指定期間のETAT配列\r\n     */\r\n    that.sliceByRangeUnit = function (detailDateTime, detailRangeMinus, detailRangePlus, detailRangeUnit){\r\n        var rangeUnit = detailRangeUnit || TimeSeries.Tat.CYCLE;\r\n        var dt = Math.floor(detailDateTime / rangeUnit) * rangeUnit; // 中央時刻(ミリ秒)\r\n        var from = dt - detailRangeMinus * rangeUnit;  // #48\r\n        var to = dt + detailRangePlus  * rangeUnit;  // 幅（ミリ秒）\r\n        var eTatDetail = [{x: 0, y: 0.001, sTatIdx: 0}];    // tatMapが無い場合の返却値\r\n        if (this.tatMap){ // #18\r\n            // eTatDetailがレンジキャッシュにあるか確認する #30\r\n            eTatDetail = this.cash.getRangedCash(from, to);\r\n            if(eTatDetail === undefined){\r\n                // キャッシュヒットしないとき、eTatDetailを抽出し、キャッシュにセットする\r\n                eTatDetail = this.tatMap.search(from,to);\r\n                this.cash.setRangedCash(eTatDetail, from, to);\r\n            }\r\n        }\r\n        return eTatDetail;\r\n    }\r\n\r\n    return that\r\n}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf TimeSeries\r\n * @class Cash\r\n * @classdesc キャッシュ\r\n *            <p>\r\n *            キャッシュを保持させるオブジェクト\r\n * @param {Number}\r\n *            [size=10] キャッシュ最大件数（未対応機能、設定は無視される）\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() {\r\n    /** constructor */\r\n    function Cash(size){\r\n        size = size || 10;  // TODO 未使用\r\n        if(!(this instanceof Cash)) return new Cash(size);\r\n        // インスタンス変数\r\n        this._cash = {};    // キャッシュ {data:, count:, lastTime:}\r\n        this._ranges = [];  // RangedCash用 {key: ,from: , to:, }\r\n        this._size = size;  // キャッシュ最大件数\r\n    }\r\n    \r\n    /* method */\r\n    /**\r\n     * 第一引数のargumentsを配列に変換する<br>\r\n     * （注：引数が１つ以上あることを前提）\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            args 引数一覧（arguments）\r\n     * @return {Array} 引数の配列\r\n     */\r\n    Cash._arg2arr = function(args) {\r\n            return args.length === 1 ? [args[0]] : Array.apply(null, args);\r\n        };\r\n    /**\r\n     * cash判定Keyを取得する<br>\r\n     * （注：引数を'.'でつないだ文字列をkeyとするので、関数名長の上限を超える大きな配列は不可）\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            args 引数一覧（argumentsオブジェクト）\r\n     * @return {String} キャッシュキー用の文字列\r\n     */\r\n    Cash._getKey = function(args) {\r\n            var argsArr = this._arg2arr(args);\r\n            return argsArr.reduce(function(a,b){return a+'.'+b; });\r\n        };\r\n        \r\n    /* private */\r\n\r\n    /* public */\r\n    /**\r\n     * cashオブジェクトを、cashが無いときはundefinedを返却する<br>\r\n     * cashヒットした場合、cashの使用回数をカウントアップする\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            arguments 引数からキー文字列を定める\r\n     * @return {Number|undefined} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.getCash = function () {\r\n            if (arguments.length < 1) return undefined;\r\n            var args = Cash._arg2arr(arguments),\r\n                key = Cash._getKey(args);\r\n            if (key in this._cash){\r\n                var cash = this._cash[key];\r\n                cash.lastTime = new Date();\r\n                cash.count++;\r\n                return cash.data;\r\n            }else{\r\n                return undefined;\r\n            }\r\n        };\r\n    /**\r\n     * オブジェクトをcashする\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            cashVal キャッシュするオブジェクト\r\n     * @param {Object}\r\n     *            arguments 第二引数以降の、引数からキー文字列を定める\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.setCash = function () {\r\n            if (arguments.length < 2) return undefined;\r\n            var cashVal = arguments[0],\r\n                args = Cash._arg2arr(arguments).slice(1, arguments.length),\r\n                key = Cash._getKey(args);\r\n            this._cash[key] = {data: cashVal, count: 0, lastTime:new Date()};\r\n            return cashVal;\r\n        };\r\n\r\n    /**\r\n     * レンジキー(form,to)範囲内でキーマッチするcashを、cashが無いときはundefinedを返却する<br>\r\n     * キーは大小比較できる数値であることが前提\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            from 抽出するキャッシュキー最小値\r\n     * @param {Number}\r\n     *            to 抽出するキャッシュキーの最大値\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.getRangedCash = function (from, to) {\r\n            var range = this._ranges.find(function(e){\r\n                    return (e.from <= from && to <= e.to);\r\n                });\r\n            return (range !== undefined) ? this.getCash(range.from,range.to) : undefined;\r\n        };\r\n    /**\r\n     * レンジキー(from,to)指定でキャッシュする<br>\r\n     * キーは大小比較できること（通常、数値）、from-to期間内の既存のキャッシュは削除される\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            cashVal キャッシュするオブジェクト\r\n     * @param {Number}\r\n     *            from 抽出するキャッシュキー最小値\r\n     * @param {Number}\r\n     *            to 抽出するキャッシュキーの最大値\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.setRangedCash = function (cashVal, from, to) {\r\n            if (arguments.length < 3) return undefined;\r\n            // 登録キー範囲に包含される既存キャッシュを削除する\r\n            var count = 0;\r\n            this._ranges = this._ranges.filter(function(e){\r\n                    if (from <= e.from && e.to <= to){\r\n                        // 登録キャッシュ範囲内のキャッシュを削除する\r\n                        count += this._cash[e.key].count;   // 削除分のカウンタ合算\r\n                        delete this._cash[e.key];\r\n                        return false;\r\n                    }else{  // 登録キャッシュの範囲外の一覧を返却する\r\n                        return true;\r\n                    }\r\n                }, this);\r\n            // 引数をキャッシュに登録する\r\n            var key = Cash._getKey([from, to]);\r\n            this._ranges.push( {from: from, to: to, key: key} );\r\n            this.setCash(cashVal, from, to);\r\n            this._cash[key].count= count + 1;   // 再作成時はカウンタ合算値\r\n            return cashVal;\r\n        };\r\n\r\n    // newの戻り値\r\n    return Cash;\r\n}());\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__simulator_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util_js__ = __webpack_require__(0);\n\r\n\r\n\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualSystem\r\n * @classdesc 仮想システム\r\n *            <p>\r\n *            Web3層(Web-AP-DB)をシミュレートしたWebのTATログ生成する\r\n *            <p>\r\n *            Webサーバ<br>\r\n *            最大スレッド数： Apache 2.4 [MaxClients = 1024]<br>\r\n *            JBossトランザクションタイムアウト [default-timeout = 300 秒]<br>\r\n *            キュー長 ： Apache 2.4 ListenBackLog (511) + Linux\r\n *            tcp_max_syn_backlog(769=1024*0.75+1)、タイムアウトなし<br>\r\n *            APサーバ<br>\r\n *            最大スレッド数(maxThreads)<br>\r\n *            JBossトランザクションタイムアウト [default-timeout=300 秒]<br>\r\n *            DBサーバ 最大コネクション数(max_connections)\r\n * \r\n * @param {Number}\r\n *            [start = 1970/01/02 00:00:00)] シミュレート開始時刻（UNIX日付（ミリ秒））\r\n * @param {Number}\r\n *            [end = startの24時間後] シミュレート終了時刻（UNIX日付（ミリ秒））\r\n * @param {String}\r\n *            [resourcesJson] リソース指定JSONテキスト\r\n * @param {Boolean}\r\n *            [log=false] 詳細ログ出力有無\r\n * @example sim = simulator.VirtualSystem()\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #53　\r\n    /** @constructor */\r\n    function VirtualSystem(start, end, resourcesJson, log){\r\n        if(!(this instanceof VirtualSystem)){\r\n            return new VirtualSystem(start, end, resourcesJson, log);\r\n        }\r\n        if (!resourcesJson) {\r\n            var jsonText =  '['\r\n                +   '{\"type\" :\"WEB\",\"thread\":1024,\"timeout\":300000, \"q\":1280, \"qWait\":0},'\r\n                +   '{\"type\" :\"AP\", \"thread\":20,  \"timeout\":300000, \"q\":1280, \"qWait\":0},'\r\n                +   '{\"type\" :\"DB\", \"thread\":2,   \"timeout\": 10000, \"q\":1000, \"qWait\":10000}'\r\n                + ']';\r\n            resourcesJson = JSON.parse(jsonText);\r\n        }\r\n        this.eTat = []; // シミュレートにより生成するTATログ出力先\r\n        var _resources = resourcesJson;\r\n        this._log = log ? log : false; // #53\r\n        this._start = +start || new Date(1970, 1, 2);   // シミュレート開始時刻\r\n        this._end = end || this._start + 24*60*60*1000; // シミュレート終了時刻（デフォルト：24時間後)\r\n        this._simulator = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"Heap\"](                // イベント予約スケジュール（ヒープ）\r\n                function(obj){ return obj.getTime(); }, // プライオリティの判定\r\n                function(obj){ return obj; });  // 削除対象の判定 #61\r\n        this._now = 0; // シミュレーション時の現在時刻\r\n        // リソースを設定する\r\n        this._resources = {}\r\n        for (var i = 0; i < _resources.length; i++) {\r\n            var e = _resources[i];\r\n            e.log = e.log ? e.log : this._log; // #53\r\n            this._resources[e.type] = Object(__WEBPACK_IMPORTED_MODULE_0__simulator_js__[\"c\" /* VirtualResource */])(this, // #61\r\n                    e.type, e.thread, e.timeout, e.q, e.qWait, e.log);\r\n        };\r\n        VirtualSystem.debug = this; // ★\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * 仮想クライアントをスケジューラに登録する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {String}\r\n     *            [userName = \"Default_\"] ログに出力するユーザ名\r\n     * @param {String}\r\n     *            [message = \"\"] ログの末尾に出力するデータ\r\n     * @param {Number}\r\n     *            [num = 3] 期間内に生成する仮想クライアントの数\r\n     * @param {Number}\r\n     *            [start = Util.S2D(\"1970/01/02 00:00:00\")]\r\n     *            仮想クライアント生成開始時刻（UNIX時刻の数値、ミリ秒）\r\n     * @param {Number}\r\n     *            [end = startの0.1秒後] 仮想アプリケーション強制終了時刻（UNIX時刻の数値、ミリ秒）\r\n     * @param {Object}\r\n     *            model 仮想クライアントが実行する取引モデル\r\n     */\r\n    VirtualSystem.prototype.setClients = function(userName, message, num, start, end, model) {\r\n        userName = userName || \"Default_\";\r\n        message = message || \"\";\r\n        num = (typeof(num) === \"number\") ? num : 1; // #61\r\n        start = +start || __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"S2D\"](\"1970/01/02 00:00:00\");\r\n        end = +end || start + 100;\r\n        // baseModelが指定されているとき、modelに展開する\r\n        if (model.baseModel){\r\n            model = VirtualSystem.getModel(\r\n                model.baseModel.holds, model.baseModel.tatMin, model.baseModel.tat,\r\n                model.sequence, model.times, model.thinkTimeMin, model.thinkTime);\r\n        }\r\n        // modelにmessageを設定する\r\n        if (typeof(model.message) === \"string\") {\r\n            model.message += message;\r\n        } else {\r\n            model.message = message;\r\n        }\r\n        // 仮想APを登録する\r\n        var checkStart = start;\r\n        var r = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"Random\"]((end - start) / num);\r\n        var t = start;\r\n        for (var i = 0; i < num; i++) {\r\n            // 仮想APを作成する\r\n            var vApp = Object(__WEBPACK_IMPORTED_MODULE_0__simulator_js__[\"b\" /* VirtualApp */])(userName + i, model);\r\n            // 仮想APに開始時刻（指数分布）を設定し、登録する\r\n            t += Math.round(r.exponential());\r\n            this.setEvent(vApp.start(t));\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * イベントをスケジューラに登録する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Object}\r\n     *            event 仮想クライアントもしくは仮想リソースのイベント\r\n     */\r\n    VirtualSystem.prototype.setEvent = function(event) {\r\n        this._simulator.push(event);\r\n    }\r\n\r\n    /**\r\n     * スケジューラからイベントを削除する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Object}\r\n     *            event 仮想クライアントもしくは仮想リソースのイベント\r\n     */\r\n    VirtualSystem.prototype.removeEvent = function(event) {\r\n        this._simulator.del(event);\r\n    }\r\n\r\n    /**\r\n     * シミュレーションを実行する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @return {eTat} シミュレート実行結果のログ（this.eTat）\r\n     */\r\n    VirtualSystem.prototype.execute = function() {\r\n        var event, events;\r\n        // 処理対象がなくなるか、シミュレート終了時刻になるまでシミュレートする\r\n        while(0 < this._simulator.size() &&\r\n                this._simulator.top().getTime() <= this._end ) {\r\n            // 次にイベントを迎える仮想APを取り出し、「次の処理」をシミュレートする\r\n            event = this._simulator.pop();\r\n            this._now = event.getTime(); // #59\r\n            events = event.next(this);\r\n            // 「次の処理」のシミュレートに伴い発生したイベントを、スケジュールする\r\n            while (events.length) {\r\n                this._simulator.push(events.pop());\r\n            }\r\n        }\r\n        // シミュレーション終了後処理（処理中のvAppを強制終了する） #59\r\n        while(0 < this._simulator.size()){\r\n            event = this._simulator.pop();\r\n            if (event._finish) {\r\n                event._finish(this, \"N_EoS\", \"\", this._end);\r\n            }\r\n        }\r\n        // シミュレーション終了後処理（リソース開放待ちのvAppを強制終了する） #59\r\n        for (var key in this._resources){\r\n            this._resources[key]._finish(this, \"N_EoS\", \"\", this._end);\r\n        }\r\n        \r\n        return this.eTat;\r\n    };\r\n\r\n    /**\r\n     * リソースを取得する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {String}\r\n     *            [name = \"unlimited\"] 仮想リソース名\r\n     * @return {Object} 仮想リソース（登録されていないときは、新たにholdCapacity=1の仮想リソースを登録）\r\n     */\r\n    VirtualSystem.prototype.getResouce = function(name) {\r\n        if (typeof(this._resources[name]) === \"undefined\") {\r\n            this._resources[name] = Object(__WEBPACK_IMPORTED_MODULE_0__simulator_js__[\"c\" /* VirtualResource */])(this, name);\r\n        }\r\n        return this._resources[name];\r\n    };\r\n\r\n    /**\r\n     * シミュレーション現在時刻（処理中のイベントの時刻）を返却する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualSystem.prototype.getTime = function() {\r\n        return this._now;\r\n    };\r\n\r\n\r\n    // Static Method\r\n    /**\r\n     * 取引モデルを取得する（ユーティリティ）\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Array}\r\n     *            [baseModel = []] 使用リソースの一覧[\"WEB\",\"AP\",\"DB\"]\r\n     * @param {Number}\r\n     *            [tat = 5] 使用リソースの平均取得時間＆平均開放時間\r\n     * @param {Number}\r\n     *            [tatMin = 2] 使用リソースの最小取得時間＆最小開放時間\r\n     * @param {Array}\r\n     *            [sequence = []] イベントシーケンス\r\n     * @param {Number}\r\n     *            [times = undefined] イベントシーケンスの繰り返し回数（未指定時:1)\r\n     * @param {Number}\r\n     *            [thinkTime= undefined] イベントシーケンス終了時に再実行する場合の平均再開時間（未指定時:500)\r\n     * @param {Number}\r\n     *            [thinkTimeMin = undefined]\r\n     *            イベントシーケンス終了時に再実行する場合の最小再開時間（未指定時:thinkTimeと同じ）\r\n     * @param {String}\r\n     *            [message = \"\"] 自動生成ログの末尾に追加する文字列\r\n     * @return {Object} 取引モデル\r\n     */\r\n    VirtualSystem.getModel = function(baseModel, tatMin, tat, sequence, times, thinkTimeMin, thinkTime, message) {\r\n        baseModel = baseModel || [];\r\n        tatMin = tatMin || 2;\r\n        tat = tat || 5;\r\n        message = message || \"\";\r\n        sequence = sequence || [\r\n                {tatMin:6,   tat:15,  note:\"Req\",     hold:\"DB\",    free:[]},\r\n                {tatMin:70,  tat:100, note:\"selectA\", hold:\"TBL_A\", free:[\"TBL_A\"]},\r\n                {tatMin:150, tat:200, note:\"updateB\", hold:\"TBL_B\", free:[]},\r\n                {tatMin:30,   tat:50,  note:\"Res\",     hold:\"\",      free:[\"TBL_B\",\"DB\"]}\r\n            ];\r\n        var model = {sequence :[], message : message}; // 戻り値\r\n        if (typeof(times) === \"number\") model.times = times;\r\n        if (typeof(thinkTimeMin) === \"number\") model.thinkTimeMin = thinkTimeMin;\r\n        if (typeof(thinkTime) === \"number\") model.thinkTime = thinkTime;\r\n        \r\n        // baseModelを返却用シーケンスに展開する\r\n        baseModel.forEach( function(e) {\r\n            model.sequence.push({hold:e, tatMin:tatMin, tat:tat, free:[]});\r\n        });\r\n        // 指定シーケンスを返却用シーケンスに追加する\r\n        model.sequence = model.sequence.concat(sequence);\r\n\r\n        // 返却用シーケンスに、holdingを追加するとともにシーケンス終了時未開放リソースを取得する\r\n        var resources = []; // #61\r\n        var holding = []; // #59\r\n        model.sequence.forEach( function(tran) { // #61\r\n            // tatMinがtatより大きいとき、tatをtatMin一定とする #59\r\n            if (tran.tat < tran.tatMin) tran.tat = tran.tatMin;\r\n            // 処理開始時にholdしているリソース一覧をholdingに登録する #59\r\n            tran.holding = [];\r\n            resources.forEach(function(r) {tran.holding.push(r)});\r\n            // 未開放リソース一覧を更新する\r\n            if (typeof(tran.hold) !== \"undefined\" && tran.hold !== \"\") {\r\n                resources.push(tran.hold);                \r\n            }\r\n            if (tran.free) {\r\n                tran.free.forEach( function(free){\r\n                    resources.some( function(r, i){\r\n                        if (r == free) {\r\n                            resources.splice(i,1);\r\n                            return true;\r\n                        }\r\n                    })    \r\n                })\r\n            }\r\n        }, this);\r\n        // シーケンス終了時未開放リソースが残っているとき、返却用シーケンスにリソース開放処理を追加する\r\n        if (0 < resources.length){\r\n            model.sequence = model.sequence.concat(\r\n                    [{hold: \"\", tatMin: tatMin * baseModel.length, tat: tat * baseModel.length,\r\n                        free: resources.reverse()}]);\r\n        }\r\n        return model;\r\n    };\r\n    \r\n    /* new */\r\n    return VirtualSystem;\r\n}());\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(20);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(12)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./dygraph.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./dygraph.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(11)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"/**\\n * Default styles for the dygraphs charting library.\\n */\\n\\n.dygraph-legend {\\n  position: absolute;\\n  font-size: 14px;\\n  z-index: 10;\\n  width: 250px;  /* labelsDivWidth */\\n  /*\\n  dygraphs determines these based on the presence of chart labels.\\n  It might make more sense to create a wrapper div around the chart proper.\\n  top: 0px;\\n  right: 2px;\\n  */\\n  background: white;\\n  line-height: normal;\\n  text-align: left;\\n  overflow: hidden;\\n}\\n\\n/* styles for a solid line in the legend */\\n.dygraph-legend-line {\\n  display: inline-block;\\n  position: relative;\\n  bottom: .5ex;\\n  padding-left: 1em;\\n  height: 1px;\\n  border-bottom-width: 2px;\\n  border-bottom-style: solid;\\n  /* border-bottom-color is set based on the series color */\\n}\\n\\n/* styles for a dashed line in the legend, e.g. when strokePattern is set */\\n.dygraph-legend-dash {\\n  display: inline-block;\\n  position: relative;\\n  bottom: .5ex;\\n  height: 1px;\\n  border-bottom-width: 2px;\\n  border-bottom-style: solid;\\n  /* border-bottom-color is set based on the series color */\\n  /* margin-right is set based on the stroke pattern */\\n  /* padding-left is set based on the stroke pattern */\\n}\\n\\n.dygraph-roller {\\n  position: absolute;\\n  z-index: 10;\\n}\\n\\n/* This class is shared by all annotations, including those with icons */\\n.dygraph-annotation {\\n  position: absolute;\\n  z-index: 10;\\n  overflow: hidden;\\n}\\n\\n/* This class only applies to annotations without icons */\\n/* Old class name: .dygraphDefaultAnnotation */\\n.dygraph-default-annotation {\\n  border: 1px solid black;\\n  background-color: white;\\n  text-align: center;\\n}\\n\\n.dygraph-axis-label {\\n  /* position: absolute; */\\n  /* font-size: 14px; */\\n  z-index: 10;\\n  line-height: normal;\\n  overflow: hidden;\\n  color: black;  /* replaces old axisLabelColor option */\\n}\\n\\n.dygraph-axis-label-x {\\n}\\n\\n.dygraph-axis-label-y {\\n}\\n\\n.dygraph-axis-label-y2 {\\n}\\n\\n.dygraph-title {\\n  font-weight: bold;\\n  z-index: 10;\\n  text-align: center;\\n  /* font-size: based on titleHeight option */\\n}\\n\\n.dygraph-xlabel {\\n  text-align: center;\\n  /* font-size: based on xLabelHeight option */\\n}\\n\\n/* For y-axis label */\\n.dygraph-label-rotate-left {\\n  text-align: center;\\n  /* See http://caniuse.com/#feat=transforms2d */\\n  transform: rotate(90deg);\\n  -webkit-transform: rotate(90deg);\\n  -moz-transform: rotate(90deg);\\n  -o-transform: rotate(90deg);\\n  -ms-transform: rotate(90deg);\\n}\\n\\n/* For y2-axis label */\\n.dygraph-label-rotate-right {\\n  text-align: center;\\n  /* See http://caniuse.com/#feat=transforms2d */\\n  transform: rotate(-90deg);\\n  -webkit-transform: rotate(-90deg);\\n  -moz-transform: rotate(-90deg);\\n  -o-transform: rotate(-90deg);\\n  -ms-transform: rotate(-90deg);\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(11)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"@CHARSET \\\"UTF-8\\\";\\r\\n/*   ****1**** ****2**** ****3**** ****4**** ****5**** ****6**** ****7***** */\\r\\n/* リセットCSS */\\r\\nhtml, body, h1, h2, h3, h4, ul, ol, dl, li, dt, dd, p, div, span, img, a, table, tr, th, td, selector{\\r\\n margin: 0; padding: 0; border: 0; font-weight: normal; font-size: 100%; vertical-align:baseline;\\r\\n -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }\\r\\narticle, header, footer, aside, figure, figcaption, nav, section { display:block; }\\r\\nbody { line-height: 1; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; }\\r\\nol, ul { list-style: none; list-style-type: none; }\\r\\n*:focus { outline: 0; }\\r\\n\\r\\n/* TAT log diver */\\r\\nbody\\t{ font-size: 12px; font-family: \\\"\\\\30E1\\\\30A4\\\\30EA\\\\30AA\\\",\\\"Meiriyo\\\",\\\"\\\\30D2\\\\30E9\\\\30AE\\\\30CE\\\\89D2\\\\30B4   ProN W3\\\",\\\"Hiragino Kaku Gothic ProN\\\",\\\"sans-serif\\\"; }\\r\\nnav \\t{ height: 36px; }\\r\\ninput\\t{ border-width: 1px; font-size: 12px; }\\r\\nselect  { background: #eee;}\\r\\n#Simulator {overflow: auto; resize: both; position: absolute; z-index: 100; background: rgba(255,255,255,0.5); }\\r\\n.statusbar\\t{ z-index: 99; visibility:visible; padding: 5px; background: #fff; }\\r\\n.statusbar > iframe { overflow: hidden; border: 0; width: 100%; }\\r\\n.lineViewer {margin: 10px 0px 2px; overflow: hidden; padding: 0px; border: 1px #cccccc dotted; }\\r\\n.hjnCode { font-family: \\\"monospace\\\",\\\"Consolas\\\", \\\"\\\\FF2D\\\\FF33\\\\30B4\\\\30B7\\\\30C3\\\\30AF\\\";}\\r\\n/* draggable box */\\r\\n.hjnDraggableBox {}\\r\\n.hjnDraggableItem:hover {background: rgba(128, 128, 128, 0.2); transition: all 0.2s; }\\r\\nfooter { position: fixed; bottom: 0%; text-align: right; font-size: smaller; }\\r\\n\\r\\n/* ハンバーガーメニュー */\\r\\n.hjnBurgerTray { position :fixed; display: inline-block; visibility: hidden; z-index: 96;\\r\\n\\ttop :0; right :0; width :305px; height:100%; padding :0 18px 0 0; background :#fff; }\\r\\n/* ハンバーガーボタン */\\r\\n.hjnCtrlBox { position: relative; float: right; cursor: pointer; z-index: 98;\\r\\n\\twidth: 40px; height: 40px; background-color: #fff; visibility: visible;\\r\\n\\tborder: 1px solid #ccc; box-shadow:\\t1px 1px 1px #ccc; border-radius: 4px; \\r\\n\\tline-height: 12px; box-sizing: border-box;\\ttransition: all 0.1s; }\\r\\n.hjnCtrlBox:hover { border: #ccc; }\\r\\n.hjnCtrlBox:active { border: 1px solid #999;  }\\r\\n.hjnBurger { display: none; }\\r\\n.hjnBurger + label span { top: 17px; height: 4px; border-radius: 2px;\\r\\n\\tposition: absolute; left: 6px; width: 69%; background-color: #888; }\\r\\n.hjnBurger + label span::before, .hjnBurger + label span::after { border-radius: 2px;\\r\\n\\tposition: absolute; width: 26px; height: 4px; background: #888;\\r\\n\\tdisplay: block; content: ''; transition: transform 0.1s; }\\r\\n.hjnBurger + label span::before { top: -8px; }\\r\\n.hjnBurger + label span::after { top: 8px; }\\r\\n.hjnBurger:checked + label span { background: transparent; }\\r\\n.hjnBurger:checked + label span::before { transform: translateY(8px) rotate(-45deg); }\\r\\n.hjnBurger:checked + label span::after { transform: translateY(-8px) rotate(45deg); }\\r\\n\\r\\n/* メニュー 全体 */\\r\\n.hjnBurgerTitle { /* ハンバーガーメニューオープン時の見出し */\\r\\n\\tposition: absolute; visibility: visible; color: #999; background:#fff; width: 100%;\\r\\n\\tpadding: 0 98px 0 15px; opacity: 0; z-index: 97; background-color: transparent;\\r\\n\\ttransform: translate3d(0, -15px, 0); transition: transform 0.1s, opacity 0.5s; }\\r\\n.hjnBurgerTitle p { word-wrap: break-word; line-height: 18px; width: 160px; }\\r\\n.hjnBurger:checked ~ .hjnBurgerTitle { transform: none;  opacity: 1; }\\r\\n.hjnBurgerWrap { position: absolute;  visibility: visible; width :100%; height :100%;\\r\\n\\tbackground: #fff; opacity: 0.9;\\ttop: 0; right: -100%; transition: right 0.1s;\\r\\n\\tpadding: 43px 0 0 0; overflow: scroll;}\\r\\n.hjnBurger:checked ~ .hjnBurgerWrap { right: 0; }\\r\\n/* Copyright表示 */\\r\\n.hjnBurgerTitle a {\\r\\n    color: #4d4e53; text-decoration: none; border-bottom: 1px dotted #afafaf; }\\r\\n/* モードボタン */\\r\\n.hjnBoxSwitch { display: none; }\\r\\n.hjnBoxSwitch + label span::before, .hjnBoxSwitch + label span::after\\r\\n\\t\\t{ display: inline-block; text-align:center; transition: all 0.1s; width: 100%}\\r\\n.hjnBoxSwitch + label span::before, .hjnBoxSwitch:checked + label span::after\\r\\n\\t\\t{ color: #ddd; }\\r\\n.hjnBoxSwitch + label span::after, .hjnBoxSwitch:checked + label span::before \\r\\n\\t\\t{ color: #888; font-weight: bold; }\\r\\n\\r\\n#hjnBoxPlaceOn + label span::before { content: \\\"Place on\\\"; }\\r\\n#hjnBoxPlaceOn + label span::after  { content: \\\"side\\\"; }\\r\\n#chartZoom + label span::before, #chartDZoom + label span::before  { content: \\\"reset zoom\\\"; }\\r\\n/* スイッチラベル */\\r\\n.hjnBoxOn { display: none; }\\r\\n.hjnBoxOn + label { text-align:center; color: #ddd; }\\r\\n.hjnBoxOn:checked + label { color: #888; font-weight: bold;}\\r\\n\\r\\n /* アコーデオンメニュー */\\r\\n.hjnAccordion { list-style-type: none; margin: 0; padding: 0; }\\r\\n.hjnMenuLv1 { position:rerative; margin: 0 0 0 10px; }\\r\\n.hjnMenuLv1 > input { display: none; }\\r\\n.hjnMenuLv1 > label::before { content: \\\"\\\"; transition: 0.1s; transform: rotate(-90deg);\\r\\n /* ▲ */border-style: solid; border-color: #aaa transparent transparent transparent; border-width: 10px 5px 0 5px;\\r\\n\\t\\tdisplay: inline-block; vertical-align: middle; margin: 10px 5px 10px 10px; }\\r\\n.hjnMenuLv1 > input:checked ~ label::before { transform: rotate(0deg); }\\r\\n\\r\\n.hjnMenuLv1 > label, .hjnMenuLv1 > a { display: block; cursor: pointer;\\r\\n\\t\\tborder-bottom: 1px solid #fff; background: #eee; transition: all 0.1s; }\\r\\n.hjnMenuLv1 > label:hover { background: rgba(0,0,0,0.2); }\\r\\n.hjnMenuLv1 > label:active { background: #999;  }\\r\\n.hjnMenuLv1 > input:checked ~ .hjnMenuLv2 { height: auto; padding: 10px; }\\r\\n\\r\\n/* 詳細メニューリスト   */\\r\\n.hjnMenuLv2 { transition: 0.1s; height: 0; overflow: hidden; padding: 0 10px; background: #ddd; }\\r\\n.hjnMenuLv2 ol { display: block; margin: 2px 0; }\\r\\n.hjnMenuLv2 label { height: 12px; }\\r\\n.hjnLabel4Input:hover,  .hjnButton4Input:hover { background: rgba(0,0,0,0.2); }\\r\\n.hjnLabel4Input:active, .hjnButton4Input:active { background: #999; }\\r\\n/* 詳細メニューリスト  ボタン */\\r\\n.hjnMenuLv2 .hjnButton4Input label, .hjnMenuLv2 label.hjnButton4Input, .hjnPlot \\r\\n\\t\\t{ display: block; padding: 8px 12px 8px 22px;}\\r\\n.hjnButton4Input { position: relative; display: block; overflow: hidden; transition: all 0.1s;\\r\\n\\t\\ttext-decoration: none; color: #000; border: outset #fff; border-radius: 14px; }\\r\\n.hjnButton4Input:active { border: inset #fff; }\\r\\n.hjnMenuLv2 li .hjnButton4Input { padding: 8px 12px 8px 22px; } /* Download用 */\\r\\n.hjnMenuLv2 .hjnButton4Input input[type=\\\"file\\\"] { display: none; } /* File Open用 */\\r\\n/* 詳細メニューリスト  文字 */\\r\\n.hjnMenuLv2 .hjnLabel4Input { display: inline-block; position: relative;\\r\\n\\t\\t border-radius: 14px; padding-left: 1em; cursor: pointer; transition: all 0.1s; }\\r\\n.hjnMenuLv2 input { height: 12px; text-align: right; border-radius: 5px; }\\r\\n.hjnMenuLv2 .hjnLabel4Input input[type=\\\"radio\\\"] { position: absolute;\\r\\n\\t\\t top: 0; bottom: 0; left: 0; margin: auto;  cursor: pointer; }\\r\\n.hjnMenuLv2 select.hjnLabel4Input  {padding-left: 0; }\\r\\n/* 詳細メニューリスト  Legend */\\r\\n.hjnMenuLv2 .legend {cursor: pointer; width:206px; height: auto;\\r\\n \\t\\tdisplay: inline-block; padding: 8px 12px 8px 22px; border-radius: 14px;}\\r\\n.hjnMenuLv2 .legend > input { display: inline; cursor: pointer; margin: auto -15px; }\\r\\n.hjnMenuLv1 > input:checked ~ .hjnMenuLv2 .legend > input { position: absolute; }\\r\\n.hjnMenuLv2 .legend:hover { font-style: oblique; } \\r\\n\\r\\n/* dygraph用設定 */\\r\\n.item.active{ background: rgba(0,0,0,0.2) !important; border: rgba(0,0,0,0.2) !important; }\\r\\n.column { display: inline-block; }\\r\\n.dygraph-annotation { color: rgba(0,0,0,0.8) !important;\\r\\n\\t\\tbackground-color: rgba(256,256,256,0.2) !important; width: 40px !important; }\\r\\n\\r\\n/* Bottom detail graph用設定 */\\r\\n#detailTimeRange { padding: 8px; }\\r\\n#chartPlots div { float: left; padding: 2px 0; top: 5vh; }\\r\\n.hjnPlot { margin: 2px 0; width:250px; }\\r\\n.hjnPlot > label { position:relative; margin: 2px 0px; background-color: #eee;\\r\\n\\t\\tpadding: 0px 5px; cursor: pointer; border-radius: 5px; }\\r\\n.hjnPlot > input[type=checkbox] { /* 削除アイコン */\\r\\n\\t\\tvisibility: hidden; z-index: 98; float: left; margin: -2px 0 0 0;\\r\\n\\t\\tbackground-color: #fff; box-shadow: 1px 1px 1px #ccc; height: 16px; width: 16px; }\\r\\n.hjnPlot > input[type=checkbox] + label{ /* 削除アイコンの横棒*/\\r\\n\\t\\tvisibility: hidden; z-index: 97; float: left; left: -13px; top: 2px;\\r\\n\\t\\tbackground: #aaa; height: 3px; width: 9px; padding: 0; border-radius: 2px; }\\r\\n.hjnPlot:hover > input[type=checkbox], .hjnPlot:hover > input[type=checkbox] + label\\r\\n\\t\\t{ visibility: visible; cursor: pointer; }\\r\\n.hjnPlot > input[type=radio] { display:none; }\\r\\n.hjnPlot > input[type=radio]:checked + label { background-color: #ccc; }\\r\\n.hjnPlot:hover { font-weight: bold; }\\r\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * @memberOf Util\r\n * @class TouchPanel\r\n * @classdesc タッチパネル用ツール\r\n *            <p>\r\n *            参考 {@link https://code.i-harness.com/ja/q/4f2389}\r\n * \r\n * @param {Number}\r\n *            [average=0.5] 平均値\r\n * @example var r = HJN_util.TouchPanel(10), val = r.exponential();\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #56\r\n    /** @constructor */\r\n    function TouchPanel(average){\r\n        if(!(this instanceof TouchPanel)) return new TouchPanel(average);\r\n        this._average = average || 0.5;\r\n    }\r\n    /** @private */\r\n\r\n    // public\r\n    /**\r\n     * タッチデバイスか判定する\r\n     * <p>\r\n     * クラスロード後、touchstart と mouosemove の初回のイベントがどちらが先に発生したかにより判定する 参考\r\n     * {@link https://lab.syncer.jp/Web/JavaScript/Snippet/44/}\r\n     * \r\n     * @memberof TouchPanel\r\n     * @return {String} 先に検出したイベントがマウス移動のとき false、以外のときtrue\r\n     * \r\n     */\r\n    TouchPanel.isTouchableDevice = function() {\r\n        __WEBPACK_IMPORTED_MODULE_0__util_js__[\"Logger\"].ShowText([TouchPanel._deviceType]);\r\n        return  (TouchPanel._deviceType === \"MOUSE\") ? false : true; // #78\r\n    }\r\n\r\n    // タッチデバイスか判定する（クラス定数）\r\n    TouchPanel._deviceType = \"SHIMULATED_TOUCH\";\r\n    function detectDeviceType(event) {\r\n        TouchPanel._deviceType = event.changedTouches ? \"TOUCH\" : \"MOUSE\" ;\r\n        document.removeEventListener(\"touchstart\", detectDeviceType) ;\r\n        document.removeEventListener(\"mousemove\", detectDeviceType) ;\r\n    }\r\n    document.addEventListener(\"touchstart\", detectDeviceType) ;\r\n    document.addEventListener(\"mousemove\", detectDeviceType) ;\r\n\r\n    /**\r\n     * タッチパネル操作をマウス操作に転送する\r\n     * <p>\r\n     * 参考 {@link https://code.i-harness.com/ja/q/4f2389}\r\n     * \r\n     * @memberof Util.TouchPanel\r\n     * @param {Object}\r\n     *            element 対象dom要素\r\n     * @param {Boolean}\r\n     *            [isStopTouch=false] 元のタッチのデフォルトイベントを消すか（個別に登録されているリスナーには無関係）\r\n     * \r\n     * @example HJN_util.DispatchEventTouchToMouse();\r\n     */\r\n    TouchPanel.DispatchEventTouchToMouse = function(element, isStopTouch) { // #22\r\n        element.addEventListener(\"touchstart\", touchHandler, true);\r\n        element.addEventListener(\"touchmove\", touchHandler, true);\r\n        element.addEventListener(\"touchend\", touchHandler, true);\r\n        element.addEventListener(\"touchcancel\", touchHandler, true);\r\n        return;\r\n\r\n        function touchHandler(ev) {\r\n            var bIgnoreChilds = false;\r\n            if( !window.__TOUCH_TYPES ) {\r\n                window.__TOUCH_TYPES  = { touchstart:'mousedown', touchmove:'mousemove', touchend:'mouseup' };\r\n                window.__TOUCH_INPUTS = { INPUT: 1, TEXTAREA: 1, SELECT: 1, OPTION: 1,\r\n                                         'input':1,'textarea':1,'select':1,'option':1 };\r\n            }\r\n            var bSame = (ev.target == this);\r\n            if (bIgnoreChilds && !bSame) { return; }\r\n            // Get if object is already tested or input type\r\n            var b = (!bSame && ev.target.__ajqmeclk);\r\n            // allow multi-touch gestures to work\r\n            if (b === true || !ev.touches || ev.touches.length > 1 || !window.__TOUCH_TYPES[ev.type]) { return; }\r\n\r\n            var oEv = (!bSame && typeof b != 'boolean') ? ev.target.getAttribute('events') : false;\r\n            var b = (!bSame)\r\n                  ? (ev.target.__ajqmeclk = oEv\r\n                      ? (oEv['click'] || oEv['mousedown'] || oEv['mouseup'] || oEv['mousemove']) \r\n                      : false )\r\n                  :false;\r\n            // allow default clicks to work (and on inputs)\r\n            if (b || window.__TOUCH_INPUTS[ev.target.tagName]) { return; } \r\n\r\n            var touch = ev.changedTouches[0];\r\n            var tmpClientX = touch.clientX;\r\n            var tmpClientY = touch.clientY;\r\n            // クリックに変換するタップ誤差範囲\r\n            var CLICK_MARGIN = 20; // px\r\n            var CLICK_DELAY = 1000; // ms\r\n\r\n            // 前回touchstart時の座標と時刻が一定範囲内の時、dygraphがクリックと判定するよう補正する\r\n            if ((ev.type === \"touchstart\" || ev.type === \"touchend\") &&\r\n                    this.startTouch &&\r\n                    Math.abs(this.startTouch.x - touch.clientX) < CLICK_MARGIN && // タッチ補正幅(px)\r\n                    Math.abs(this.startTouch.y - touch.clientY) < CLICK_MARGIN &&\r\n                    +new Date() - this.startTouch.t < CLICK_DELAY) { // タッチ時間(ms)\r\n                // 位置補正\r\n                tmpClientX = this.startTouch.x;\r\n                tmpClientY = this.startTouch.y;\r\n            } else if (ev.type === \"touchstart\"){\r\n                // touchstart時の座標と時刻を退避する\r\n                this.startTouch = {x: touch.clientX, y: touch.clientY, t: +new Date()};\r\n            } else if (ev.type === \"touchend\") {  \r\n                // touchstart時の座標と時刻を初期化する\r\n                this.startTouch = {};\r\n            }\r\n            // マウスイベントを発生させる\r\n            var newEvent = document.createEvent(\"MouseEvent\");\r\n            newEvent.initMouseEvent(\r\n                window.__TOUCH_TYPES[ev.type],    // type\r\n                true,             // bubbles\r\n                true,             // cancelable\r\n                window,           // view\r\n                1,                // detail\r\n                touch.screenX,    // screenX スクリーンサイズ\r\n                touch.screenY,    // screenY\r\n                tmpClientX,       // clientX タッチ座標\r\n                tmpClientY,       // clientY\r\n                false,            // ctrlKey\r\n                false,            // altKey\r\n                false,            // shiftKey\r\n                false,            // metaKey\r\n                0,                // button\r\n                null              // relatedTarget\r\n              );\r\n            touch.target.dispatchEvent(newEvent);\r\n\r\n            // タッチイベントを止める #22\r\n            if(isStopTouch) {\r\n                ev.stopImmediatePropagation();\r\n                ev.stopPropagation();\r\n                ev.preventDefault();\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n\r\n    /* new */\r\n    return TouchPanel;\r\n}());\n\n/***/ }),\n/* 24 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DateToString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return S2D; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return D2S; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return N2S; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return S2N; });\n/**\r\n * 日時(Date)から、ローカル時刻に基づく、指定フォーマットの文字列を取得する\r\n * \r\n * @memberOf Util\r\n * @param {Date}\r\n *            dt Date型（内部実装はミリ秒単位）\r\n * @param {String}\r\n *            str フォーマット yyyy-MM-dd hh:mm:ss.000 （戻り値で上書きされる）\r\n * @return {String} str 編集後文字列\r\n */\r\nvar DateToString = function() {\r\n    var dt = arguments[0],  // arg0\r\n        str = arguments[1]; // arg1\r\n    // if (typeof(dt) === \"number\") dt = new Date(dt);\r\n    str = str.replace(/yyyy/, dt.getFullYear() );\r\n    str = str.replace(/MM/, ('0' + (dt.getMonth() + 1) ).slice(-2) );\r\n    str = str.replace(/dd/, ('0' + dt.getDate()).slice(-2) );\r\n    str = str.replace(/hh/, ('0' + dt.getHours()).slice(-2) );\r\n    str = str.replace(/mm/, ('0' + dt.getMinutes()).slice(-2) );\r\n    str = str.replace(/ss/, ('0' + dt.getSeconds()).slice(-2) );\r\n    str = str.replace(/000/,('00' + dt.getMilliseconds()).slice(-3) ); // #92\r\n    // str = str.replace(/000/,('00' + Math.floor(dt % 1000)).slice(-3) ); #60\r\n    return str;\r\n};\r\n\r\n/**\r\n * 日時文字列を指定フォーマットでパースして数値(ミリ秒単位）を取得する\r\n * \r\n * @memberOf Util\r\n * @param {String}\r\n *            str\r\n * @param {Object|String}\r\n *            [conf={YYYY: 0, MM: 5, DD: 8, hh: 11, mm: 14, ss: 17, p000: 20}]\r\n *            Object指定のとき：年月日時分秒ミリ秒の先頭位置を示す構造体オブジェクト<br>\r\n *            String指定とき：フォーマットを示す文字列<br>\r\n *            デフォルト値は、\"YYYY/MM/DD hh:mm:ss.000\" 相当\r\n * @return {Number} timeNum 日時（１ミリ秒を１とする数値、エラーのときNumber.NaN）\r\n */\r\nvar S2D = function(str, conf){ // #34\r\n    if(!str) return Number.NaN;\r\n\r\n    if(typeof(conf) === \"object\"){ // #92\r\n        // confが\"object\"のとき、指定された構造体オブジェクトの条件でパースする（最も高速な処理）\r\n        return parse(str, conf);\r\n    } else if (typeof(conf) === \"string\") {\r\n        // confが\"String\"のとき、指定された文字列フォーマットから構造体オブジェクトを作成し、パースする（準高速処理）\r\n        var config = {  // YYYY/MM/DD hh:mm:dd.ss.000 #41\r\n                YYYY: conf.indexOf(\"YYYY\"),\r\n                MM: conf.indexOf(\"MM\"),\r\n                DD: conf.indexOf(\"DD\"),\r\n                hh: conf.indexOf(\"hh\"),\r\n                mm: conf.indexOf(\"mm\"),\r\n                ss: conf.indexOf(\"ss\"),\r\n                p000: conf.indexOf(\"0\")}; // #92\r\n        return parse(str, config);\r\n    } else {\r\n        // confが指定されていないとき、デフォルト条件でパースする（汎用処理）\r\n        // デフォルトフォーマット：\"YYYY/MM/DD hh:mm:dd.ss.000\" #42\r\n        var config = {YYYY: 0, MM: 5, DD: 8, hh: 11, mm: 14, ss: 17, p000: 20};\r\n        return parse(str, config);\r\n    }\r\n\r\n    // 内部関数：構造体オブジェクトで指定された条件でパースする\r\n    function parse(str, conf){\r\n        var y   = (0 <= conf.YYYY) ? parseInt( str.substr( conf.YYYY, 4), 10) : 1970,\r\n                m   = (0 <= conf.MM)   ? parseInt( str.substr( conf.MM, 2), 10) - 1 : 0, // デフォルト1月\r\n                // 1970/1/1だと時差でマイナスになることがあるので日付のデフォルトは2日\r\n                d   = (0 <= conf.DD)   ? parseInt( str.substr( conf.DD, 2), 10) : 2,\r\n                h   = (0 <= conf.hh)   ? parseInt( str.substr( conf.hh, 2), 10) : 0,\r\n                min = (0 <= conf.mm)   ? parseInt( str.substr( conf.mm, 2), 10) : 0,\r\n                sec = (0 <= conf.ss)   ? parseInt( str.substr( conf.ss, 2), 10) : 0,\r\n                // ミリ秒以下を指定すると丸め誤差が生じるため、秒以下のミリ秒は個別に加算\r\n                p   = (0 <= conf.p000)  \r\n                    ? (\"0.\" + str.substr( conf.p000).match(/[0-9]*/)[0]) * 1000.0 \r\n                    : 0;\r\n        return +(new Date( y, m, d, h, min, sec )) + p;  // #14\r\n    }\r\n};\r\n\r\n/**\r\n * 日時(ミリ秒：Ｘ軸用）から、時差補正のない、指定フォーマットの文字列を取得する\r\n * \r\n * @memberOf Util\r\n * @param {Number|Date}\r\n *            ds 時刻をUNIX経過時間（ミリ秒）で表した数値、もしくはDate(日付）\r\n * @param {String}\r\n *            [str=自動] フォーマット yyyy-MM-dd hh:mm:ss.000 （戻り値で上書きされる）<br>\r\n *            自動のとき 日数+ hh:mm:ss.000 表示単位に至らない単位は表示しない、ミリ秒は分単位以下の時表示<br>\r\n *            例： 日数表示：\"1 02:03:04\",時表示\"02:03:04\" 分表示\"0:03:04.567\" 秒表示\"04.567\"\r\n * @param {Boolean}\r\n *            [isLocal=false] trueのとき時差補正をしない\r\n * @return {String} str 編集後文字列\r\n */\r\nvar D2S = function(ds, str, isLocal){ // #60\r\n    var minus = \"\";\r\n    var ret = \"\";\r\n    if (ds < 0) {\r\n        minus = \"-\";\r\n        ds = -1 * ds;\r\n    }\r\n    var datetime = new Date(ds);\r\n    if (!isLocal) { // #60\r\n        datetime = new Date(+datetime + 60000 * datetime.getTimezoneOffset()); // 環境タイムゾーンの補正\r\n    }\r\n    if(str){ // フォーマット指定があるとき #93\r\n        ret = DateToString(datetime, str);\r\n    } else if (ds < 1000) { // 自動で1秒(1000)未満のとき\r\n        ret = DateToString(datetime, \"0.000\"); \r\n    } else if (ds < 60000) { // 自動で1分(1*60*1000)未満のとき\r\n        ret = DateToString(datetime, \"ss.000\").replace(/^0+/,\"\"); // #92\r\n    } else if (ds < 3600000) { // 自動で1分以上、1時間(1*60*60*1000)未満のとき\r\n        ret = \"0:\" + DateToString(datetime, \"mm:ss.000\").replace(/^0+/,\"\"); // #92\r\n    } else if (ds < 86400000) { // 自動で1時間以上、1日(1*24*60*60*1000)未満のとき\r\n        ret = DateToString(datetime, \"hh:mm:ss\").replace(/^0+/,\"\");\r\n    } else { // 自動で1日以上のとき\r\n        ret = Math.floor(ds / 86400000) + \" \";\r\n        ret += DateToString(datetime, \"hh:mm:ss\");\r\n    }\r\n    return minus + ret;\r\n};\r\n\r\n/**\r\n * 数値(Ｙ軸用）から、誤差のない表示用文字列を取得する<br>\r\n * （hover、legendなどでY軸の値を使うときに使用する）\r\n * \r\n * @memberOf Util\r\n * @param {Number|Date}\r\n *            y 時刻をUNIX経過時間（ミリ秒）で表した数値、もしくはDate(日付）\r\n * @return {String} str 編集後文字列\r\n *         {@linkhttps://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat}\r\n */\r\nvar N2S = function(y){\r\n    return Intl.NumberFormat().format(y); // #96\r\n};\r\n\r\n/**\r\n * 文字列を数値に変換する\r\n * \r\n * @memberOf Util\r\n * @param {String|Number}\r\n *            [str = sub] 計算式（日時分秒ミリ秒(d,h,mim,sec,ms)の文字は、ミリ秒に変換する）\r\n * @param {String|Number}\r\n *            [sub] 第一引数が指定されていない(undefined)ときの代用\r\n * @return {Number} n eval(str||sub)で取得した数値\r\n * \r\n */\r\nvar S2N = function(str, sub){ // #53\r\n    var s = (typeof(str) !== \"undefined\") ? str : sub;\r\n    var h = 3600000; // 1時間（ミリ秒）\r\n    var min = 60000; // 1分（ミリ秒）\r\n    var sec =  1000; // 1秒（ミリ秒）\r\n    var ms =      1; // 1ミリ秒\r\n\r\n    return eval(s);\r\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class Random\r\n * @classdesc Random 乱数取得\r\n *            <p>\r\n *            ある事象の単位時間あたりの発生回数がポアソン分布, その発生間隔が指数分布に従う<br>\r\n *            M/M/1モデルは、到着がポアソン過程となり、(したがって到着間隔は指数分布に従う)、サービス時間が指数分布に従う\r\n *            <p>\r\n *            参考 {@link http://www.ishikawa-lab.com/montecarlo/4shou.html}\r\n * \r\n * @param {Number}\r\n *            [average=0.5] 平均値\r\n * @example var r = HJN_util.Random(10), val = r.exponential();\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #56\r\n    /** @constructor */\r\n    function Random(average){\r\n        if(!(this instanceof Random)) return new Random(average);\r\n        this._average = average || 0.5;\r\n    }\r\n\r\n    /** @private */\r\n\r\n    // public\r\n    /**\r\n     * 一様分布となる乱数を返却する\r\n     *\r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.uniform = function(average) {\r\n        average = average || this._average;\r\n        return  2.0 * average * Math.random();\r\n    };\r\n\r\n    /**\r\n     * 指数分布となる乱数を返却する(lambda = 1/average)\r\n     *\r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値=1/λ、分散=1/(λ^2)<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.exponential = function(average) {\r\n        average = average || this._average;\r\n        return (-1.0 * average) * Math.log(1.0 - Math.random());\r\n    };\r\n    \r\n    /**\r\n     * ポアソン分布となる乱数を返却する(lambda = average)\r\n     * \r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値=分散=λ<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.poisson = function(average) {\r\n        var lambda = average || this._average;\r\n        var xp = Math.random();\r\n        var k = 0;\r\n        while (xp >= Math.exp(-lambda)) {\r\n            xp = xp * Math.random();\r\n            k = k + 1;\r\n        }\r\n        return (k);\r\n    };\r\n    \r\n    /* new */\r\n    return Random;\r\n}());\n\n/***/ }),\n/* 26 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class addEventListener\r\n * \r\n * 1つのイベントターゲットにイベントリスナーを1つ登録する\r\n * \r\n * @param {dom}\r\n *            element DOM要素、document.getElementById(\"xx\");などで取得\r\n * @param {string}\r\n *            [type=\"click\"] イベントの種類\r\n *            {@link https://developer.mozilla.org/en-US/docs/Web/Events}\r\n * @param {function}\r\n *            func 実行する関数\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(element, type, func) { // #74\r\n    type = type || \"click\";\r\n    if (element.addEventListener) {\r\n        element.addEventListener(type, func, false);\r\n    } else if (element.attachEvent) {\r\n        element.attachEvent(\"on\" + type, func); \r\n    } else {\r\n        console.log(\"unable addEventListner %o\", element);\r\n    }\r\n});;\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class setZeroTimeout\r\n * 非同期化\r\n * \r\n * @param {function}\r\n *            global 非同期化して実行する関数\r\n *            <p>\r\n *            参考 {@link https://jsfiddle.net/kou/j73tLum4/8/}\r\n *            {@link https://gist.github.com/mathiasbynens/579895}\r\n *            {@link http://dbaron.org/log/20100309-faster-timeouts}\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(global) {\r\n    var timeouts = [], \r\n        messageName = \"zero-timeout-message\";\r\n    function handleMessage(event) {\r\n        if (event.source === global && event.data === messageName) {\r\n            if (event.stopPropagation)  event.stopPropagation();\r\n            if (timeouts.length) timeouts.shift()();\r\n        }\r\n    }\r\n    if (global.postMessage) {\r\n        if (global.addEventListener) {\r\n            global.addEventListener(\"message\", handleMessage, true); \r\n        }else if (global.attachEvent) {\r\n            global.attachEvent(\"onmessage\", handleMessage); \r\n        }\r\n        return function (fn) { timeouts.push(fn); global.postMessage(messageName, \"*\"); };\r\n    } \r\n    else {\r\n        return function (fn) { setTimeout(fn, 0); }; \r\n    }\r\n}(window));\n\n/***/ }),\n/* 28 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * @memberOf Util\r\n * @class Logger\r\n * @classdesc ロガー\r\n *            <p>\r\n *            モードに応じたログを出力する。画面ログ表示領域、コンソールログへの出力に対応\r\n * \r\n * @param {String}\r\n *            [mode=0] ログ出力モード\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #27\r\n    /** @static */\r\n    Logger.prototype = {\r\n            _logText: [],\r\n            _timestamp : new Date(),\r\n            _logtime : new Date()\r\n        };\r\n    /** @constructor */\r\n    function Logger(mode){\r\n        if(!(this instanceof Logger)) return new Logger(mode);\r\n        this._mode = mode || 0;\r\n        // getKeyによりIndex作成関数を設定する\r\n    }\r\n    /**\r\n     * 一定時間（１分）経過後、最初に本メソッドが呼ばれたときのみログ出力する（ループ用）\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {Number}\r\n     *            i 参考番号<br>\r\n     *            経過時間内のループ回数などの表示に使用することを想定\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     */\r\n    Logger.ByInterval = function(i, text) {\r\n        var ts = new Date(),\r\n            freq = 60000;   // 1分毎\r\n        if (freq < ts - Logger._logtime){\r\n            var t = Object(__WEBPACK_IMPORTED_MODULE_0__util_js__[\"D2S\"])(ts, \"hh:mm:ss.000\"); // #60 #92\r\n            console.log(t + \"[\" + i + \"]~~~~\" + text);\r\n            Logger._logtime = ts;\r\n        }\r\n    };\r\n    /**\r\n     * ログ出力： ログテキストおよびタイムスタンプを初期化する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     * @param {String}\r\n     *            [type] ログ区分（\"calc\"：計算用ログ、\"msg\"：メッセージのみ（タイムスタンプなし））\r\n     */\r\n    Logger.ShowLogTextInit=function(text, type) {\r\n        Logger._timestamp = new Date();\r\n        Logger._logText = [];\r\n        if(text) Logger.ShowLogText(text, type);\r\n    };\r\n    /**\r\n     * ログ出力： タイムスタンプを初期化する\r\n     * \r\n     * @memberof Util.Logger\r\n     */\r\n    Logger.ResetTimestamp=function() {\r\n        Logger._timestamp = new Date();\r\n    };\r\n    /**\r\n     * ログ出力： ログテキストをテキストアレイに追記し、表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     * @param {String}\r\n     *            [type] ログ区分（\"calc\"：計算用ログ、\"msg\"：メッセージのみ（タイムスタンプなし））\r\n     * @param {Boolean}\r\n     *            [isSameline=false] 直前のログと同一ラインにするか\r\n     */\r\n    Logger.ShowLogText=function(text, type, isSameline) {\r\n        if (type === \"calc\") return; // 集計時評価用ログ出力抑止\r\n        // \"msg\"指定のときは経過時間を取らずに、ログのみ出力する\r\n        if (type !== \"msg\"){\r\n            // 処理時間情報を追加する\r\n            var lastTimestamp = Logger._timestamp;\r\n            Logger._timestamp = new Date();\r\n            text = (Math.round( Logger._timestamp - lastTimestamp ) / 1000.0)\r\n                    + \"s \" + text;\r\n            // 数値のカンマ編集（小数部もカンマが入る）\r\n            text = text.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n        }\r\n        if (isSameline){\r\n            var last = Logger._logText.length - 1;\r\n            Logger._logText[last] += text;\r\n        } else {\r\n            Logger._logText.push(text);\r\n        }\r\n        Logger.ShowText(Logger._logText);\r\n        if(true) console.log(Object(__WEBPACK_IMPORTED_MODULE_0__util_js__[\"D2S\"])(Logger._timestamp, \"hh:mm:ss.000     \") + text); // #60 #92\r\n    };\r\n    /**\r\n     * 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            textArray 出力するログ（配列１行がログ１件）\r\n     */\r\n    Logger.ShowText=function(textArray) {\r\n        var iHtmlBody = \"\";\r\n        for (var i = textArray.length - 1; 0 <= i; i--){\r\n            iHtmlBody += textArray[i] + \"<BR>\"; \r\n        }\r\n        Logger.ShowIHtmlBody('fileInfo',iHtmlBody);\r\n    };\r\n    /**\r\n     * 第一引数のID名のiframeに、第二引数のログ（HTML化）を表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            elementId iframeのID名\r\n     * @param {String}\r\n     *            iHtmlBody ログ（HTML化）\r\n     */\r\n    Logger.ShowIHtmlBody=function(elementId, iHtmlBody){\r\n        var body = document.createElement('body');\r\n        body.innerHTML = \"\"\r\n            + \"<style>body{font-size: x-small; margin: 0; }</style>\"\r\n            + \"<body id='iHtmlBody'>\" + iHtmlBody + \"</body>\";\r\n        var iframe = document.getElementById(elementId);\r\n        iframe.contentDocument.body = body;\r\n    };\r\n    \r\n    // newの戻り値\r\n    return Logger;\r\n}());\n\n/***/ }),\n/* 29 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = copyToClipboard;\n/**\r\n * 指定されたelementIDのテキストをクリップボードにコピーする<br>\r\n * 一時的にdocument.bodyの下にコピー処理用要素を作成する<br>\r\n * スマフォ等で書き込み可能なtextareaにフォーカスが移らないよう一時的にreadonlyにする\r\n *\r\n * @memberof Util\r\n * @param {String}\r\n *            elementID textareaのID名\r\n */\r\nfunction copyToClipboard(elementId) { // #61\r\n    // コピー元要素を取得する\r\n    var el = document.getElementById(elementId);\r\n    // ワーク領域を作成する\r\n    var input = document.createElement('textarea');\r\n    input.setAttribute('id', 'copyinput');\r\n    document.body.appendChild(input);\r\n    // クリップボードにコピーする\r\n    input.value = (el.innerText === \"\") ? el.value : el.innerText;\r\n    copy2Clipboard(input); // 内部関数\r\n    // ワーク領域を削除する\r\n    document.body.removeChild(input);\r\n}\r\n\r\n/*\r\n * textareaをクリップボードにコピーする<br>\r\n * iOSに対応したtextareaのselect機能 #78\r\n * {@link https://marmooo.blogspot.jp/2018/02/javascript.html}\r\n */\r\nfunction copy2Clipboard(el){\r\n    // handle iOS as a special case\r\n    if (navigator.userAgent.match(/ipad|ipod|iphone/i)) {\r\n        // save current contentEditable/readOnly status\r\n        var editable = el.contentEditable;\r\n        var readOnly = el.readOnly;\r\n        // convert to editable with readonly to stop iOS keyboard opening\r\n        el.contentEditable = true;\r\n        el.readOnly = true;\r\n        // create a selectable range\r\n        var range = document.createRange();\r\n        range.selectNodeContents(el);\r\n        // select the range\r\n        var selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        el.setSelectionRange(0, 999999);\r\n        // restore contentEditable/readOnly to original state\r\n        el.contentEditable = editable;\r\n        el.readOnly = readOnly;\r\n    }\r\n    else {\r\n        el.select();\r\n    }\r\n    // execute copy command\r\n    document.execCommand('copy');\r\n}\n\n/***/ }),\n/* 30 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class binarySearch\r\n * @classdesc 配列二分木検索\r\n * \r\n * @param {Number}\r\n *            val 検索する値\r\n * @param {Array}\r\n *            arr 検索対象の配列\r\n * @param {Function}\r\n *            [func=function(val){return val.valueOf();}] 配列要素に対して、値を取得する関数\r\n * @param {Index}\r\n *            [low=0] 配列の検査範囲の下限\r\n * @param {Index}\r\n *            [high=arr.length-1] 配列の下限検査範囲の上限\r\n * @param {Boolean}\r\n *            [isEqual=false] 完全一致しないときのリターン値：trueのとき-1、falseのとき値との差が最も少ない位置\r\n * @example i=Util.binarySearch(x,arrXY,function(e){return e.x;});\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (val, arr, func, low, high, isEqual) {\r\n    func = func || function(val){ return val.valueOf(); };\r\n    low = low || 0;\r\n    if (!arr) return -1;\r\n    high = high || arr.length - 1;\r\n    isEqual = isEqual || false;\r\n    var middle,\r\n        valMiddle;\r\n    while( low <= high ){\r\n        middle = Math.floor(low + high) / 2 | 0;\r\n        valMiddle = func(arr[middle]);\r\n        if(valMiddle === val) return middle;\r\n        else if(val < valMiddle) high = middle - 1;\r\n        else low = middle + 1;\r\n    }\r\n    // 値が完全一致する要素がなかった場合の戻り値を編集する\r\n    if (isEqual){\r\n        return -1;  // 完全一致指定のとき(-1)をリターンする\r\n    } else {        // 完全一致指定でないとき、値との差が最も少ない位置をリターンする #46\r\n        // low,middle,high を補正する\r\n        low = Math.min(Math.max(0, low), arr.length - 1);\r\n        high = Math.max(0, Math.min(high, arr.length - 1));\r\n        middle = Math.max(low, Math.min(middle, high));\r\n        if(high < low){\r\n            var tmp = high;\r\n            high= low;\r\n            low = tmp;\r\n        }\r\n        // low,middle,high のうち、値との差が最も少ない位置をリターンする\r\n        if(func(arr[middle]) < val){\r\n            if (val - func(arr[middle]) < func(arr[high]) - val) {\r\n                return middle;\r\n            } else {\r\n                return high;\r\n            }\r\n        }else{\r\n            if (func(arr[high]) <= val && val < func(arr[middle])){\r\n                return high;\r\n            } else if (val - func(arr[low]) < func(arr[middle]) - val){\r\n                return low;\r\n            } else {\r\n                return middle;\r\n            }\r\n        }\r\n        return -1;  // 指定範囲外\r\n    }\r\n});;\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class Heap\r\n * @classdesc Heap ヒープ(二分ヒープ)\r\n *            <p>\r\n *            最小値(最大値)を効率よく取り出すことができるデータ構造\r\n *            <p>\r\n *            参考 {@link http://d.hatena.ne.jp/otaks/20121220/1355993039}\r\n * \r\n * @param {Function}\r\n *            [func=function(obj){ return +obj; }]\r\n *            pushで登録するオブジェクトからヒープの大小比較判定値を取り出す関数\r\n * @param {Function}\r\n *            [delFunc=function(obj){ return obj; }] 削除対象ノードを特定する関数<br>\r\n *            「delの引数オブジェクト === delFunc(heapのノードのオブジェクト)」 で判定する\r\n * \r\n * @example h = HJN_util.Heap( function(obj){ return +obj; } );<br>\r\n *          h.push(\"12.34\") // データを登録する ;<br>\r\n *          h.push(0.12) // ;<br>\r\n *          h.pop() // => 0.12 最小値のオブジェクトを取り出す ;<br>\r\n *          h.pop() // => \"12.34\" ;<br>\r\n *          h.top() // =>undefined 最小値のオブジェクト ;<br>\r\n *          h.size() // =>0 登録オブジェクト数\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #55\r\n    /** @constructor */\r\n    function Heap(func, delFunc){ \r\n        if(!(this instanceof Heap)) return new Heap(func, delFunc);\r\n\r\n        this._func = (typeof(func) === \"function\")\r\n                ? func\r\n                : function(node){\r\n                    if (typeof(node.val) === \"undefined\") { return node }\r\n                    else { return node.val}; \r\n                  };\r\n        this._delFunc = (typeof(delFunc) === \"function\")\r\n                ? delFunc\r\n                : function(node){\r\n                    if(typeof(node.obj) === \"undefined\"){ return node }\r\n                    else { return node.obj};\r\n                  };\r\n        this._heap = []; // Heap構造体（大小比較数値用）\r\n    }\r\n\r\n    //\r\n    /**\r\n     * upheap：root方向へheapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     */\r\n    Heap.prototype._upHeap = function(k) {\r\n        // 指定位置のオブジェクトとその値の控えを取る\r\n        var obj = this._heap[k];\r\n        var val = this._func(obj);\r\n        while( 0 < k ) {\r\n            // 親ノードの配列位置を求める\r\n            var p = Math.floor( (k - 1) / 2 );\r\n            // 逆転していなければ処理終了\r\n            if( this._func(this._heap[p]) <= val ) break;\r\n            // 親ノードと処理対象を入れ替える\r\n            this._heap[k] = this._heap[p];\r\n            this._heap[p] = obj;\r\n            k = p;\r\n        }\r\n    };\r\n    /**\r\n     * downheap：reaf方向へheapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     */\r\n    Heap.prototype._downHeap = function(k) {\r\n        // 指定位置のオブジェクトとその値を控えを取る\r\n        var obj = this._heap[k];\r\n        var val = this._func(obj);\r\n        var size = this._heap.length;\r\n        // 子ノードが無くなるまで繰り返す\r\n        while( k * 2 + 1 < size) {\r\n            var a = k * 2 + 1;  // 子ノード（左）\r\n            var b = a + 1;      // 子ノード（右）\r\n            // aが大小比較対象先となる小さい子ノードを指すようにする\r\n            if( b < size && this._func(this._heap[a]) > this._func(this._heap[b]) ) a = b;\r\n            // 逆転していなければ処理終了\r\n            if( val < this._func(this._heap[a]) ) break;\r\n            // 子ノード（比較対象）と処理対象を入れ替える\r\n            this._heap[k] = this._heap[a];\r\n            this._heap[a] = obj;\r\n            k = a;\r\n        }\r\n    };\r\n    /**\r\n     * _heapのk番目を削除し、_heapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     * @return {object|undefined} 削除したオブジェクト（削除対象が無いとき undefined）\r\n     */\r\n    Heap.prototype._del = function(k) {\r\n        if (this._heap.length <= k) return undefined; // ヒープ外を指定したとき\r\n\r\n        var ret = this._heap[k]; // 削除したオブジェクト\r\n        var obj = this._heap.pop(); // 末尾ノードを取り出す\r\n        var size = this._heap.length;\r\n        if (k === size) return ret; // 末尾ノードを削除したとき再構築不要\r\n\r\n        this._heap[k] = obj; // 末尾ノードを指定位置に移動する\r\n        if (size === 1) return ret; // ヒープが１個のとき、再構築不要\r\n\r\n        // upHeapの判定\r\n        var val = this._func(obj); // 末尾ノードにあったオブジェクトの値\r\n        var p = Math.floor( (k - 1) / 2 );\r\n        if (0 < k && val < this._func(this._heap[p])) {\r\n            // 親ノードより小さいときupheapする\r\n            this._upHeap(k);\r\n        } else {\r\n            var a = k * 2 + 1;  // 子ノード（左）\r\n            var b = a + 1;      // 子ノード（右）\r\n            if (a < size) { // 子ノードがあるとき（末端の枝葉でないとき）のみdownHeapする\r\n                // aに、子ノードの小さい方のノードを設定する\r\n                if( b < size && (this._func(this._heap[a]) > this._func(this._heap[b])) ) a = b;\r\n                // 自分より小さい子ノードがあるとき、downheapする\r\n                if( this._func(this._heap[a]) < val ) this._downHeap(k);\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    // public\r\n    /**\r\n     * データを追加する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @param {Object}\r\n     *            obj 登録オブジェクト\r\n     */\r\n    Heap.prototype.push = function(obj) {\r\n        // 末尾に追加し、upHeapする\r\n        this._heap.push(obj);\r\n        this._upHeap(this._heap.length - 1);\r\n        if (this._deletable) {\r\n            this._deleteMap = {};\r\n        }\r\n    };\r\n    /**\r\n     * 最小値のデータを取り出す\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Object|undefined} 最小値\r\n     */\r\n    Heap.prototype.pop = function() {\r\n        // 先頭ノードを戻り値用に退避する\r\n        var ret = this._heap[0];\r\n        // 末尾ノードを退避し削除する\r\n        var obj = this._heap.pop();\r\n        if(0 < this._heap.length){\r\n            // ヒープが空でないとき、末尾ノードを先頭に移動し、downHeapする\r\n            this._heap[0] = obj;\r\n            this._downHeap(0);\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * 指定データを削除する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @param {Object}\r\n     *            obj 削除対象と同一オブジェクト(=== で判定)\r\n     * @return {Object|undefined} 削除したオブジェクト（undefined：合致するオブジェクトが無いとき）\r\n     */\r\n    Heap.prototype.del = function(obj) { // #59\r\n        // 削除対象オブジェクトのHeap配列位置を取得する\r\n        var k = -1;\r\n        if (this._heap.some(find, this)){\r\n            // 合致するオブジェクトのノードを削除し、合致ノードをリターンする\r\n            return this._del(k);\r\n        }\r\n        // 合致するオブジェクトが無いとき\r\n        return undefined;\r\n        \r\n        function find(e, i) {\r\n            if(this._delFunc(e) === obj){\r\n                k = i;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * 最小値を返却する（登録データは変更しない）\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Object|undefined} 最小値\r\n     */\r\n    Heap.prototype.top = function() {\r\n        return this._heap[0];\r\n    };\r\n    /**\r\n     * ヒープのサイズを返却する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Number} ヒープサイズ（0以上）\r\n     */\r\n    Heap.prototype.size = function() {\r\n        return this._heap.length;\r\n    };\r\n    \r\n    /* new */\r\n    return Heap;\r\n}());\n\n/***/ }),\n/* 32 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Element;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * @memberOf Util\r\n * @class Element\r\n * @classdesc 追加する挙動の操作要素は、後に記述した挙動の要素が上位になる 参考\r\n *            {@link https://q-az.net/elements-drag-and-drop/}\r\n * @param {DOM}\r\n *            element ドラッグ機能を付与するDOM要素\r\n * @constructor\r\n */\r\nfunction Element(element){\r\n    this._element = element;    // 挙動を追加する要素\r\n    this._wrapper = {};         // マウスイベントを取得するdivを追加する下地要素\r\n\r\n    // width,height :100%が有効となるようposition: absoluteを指定する\r\n    element.style.position = \"absolute\";\r\n    // ドラッグ＆ドロップ用divを作成する(下地のみクリック透過）\r\n    this._wrapper = document.createElement('div');\r\n    setStyles(this._wrapper, { background : \"rgba(192,192,192,0.1)\",\r\n        position : \"absolute\", width : \"100%\", height : \"100%\", top : \"0\", left : \"0\",\r\n        \"pointer-events\": \"none\"});\r\n    // ドラッグ＆ドロップ用divを登録する\r\n    this._element.appendChild(this._wrapper);\r\n}\r\n\r\n// グローバル（のような）変数\r\nvar pos = {};        // マウス押下時の位置情報の保管用\r\n\r\n/**\r\n * CSSクラス名\"hjnDraggableBox\"が付いた要素をドラッグ＆ドロップで移動できるようにする\r\n * \r\n * @memberOf Util.Element\r\n * @example .hjnDraggableBox {} .hjnDraggableItem:hover {cursor: move;\r\n *          background: rgba(128, 128, 128, 0.5); transition: all 0.2s; }\r\n * @example <div class=\"hjnDraggableBox\"></div>\r\n */\r\nElement.enableDraggableClass = function(){\r\n    var elements = document.getElementsByClassName(\"hjnDraggableBox\");  // 要素の取得\r\n    // マウスが要素内で押されたとき、又はタッチされたとき発火\r\n    for(var i = 0; i < elements.length; i++){\r\n        var element = new Element(elements[i]);\r\n        element     // 移動指定要素がリサイズ指定要素よりが下になるよう、移動を先に記述する\r\n            .makeMoveable()\r\n            .makeResizable();\r\n    }\r\n}\r\n\r\n/**\r\n * ダイアログを生成し表示する\r\n * \r\n * @memberOf Util.Element\r\n * @param {String}\r\n *            [iHtml=\"no message\"] ダイアログのinnerHTMLに設定する文字列\r\n * @param {DOM}\r\n *            [element=document.body] ダイアログの位置とサイズを指定する際の基準となる要素\r\n * @param {String}\r\n *            [id=\"HJN.dialog\"] ダイアログ要素のid名、同一名称のダイアログを閉じて作成する\r\n * @param {Number}\r\n *            [w=40] elementに対するダイアログの幅の比率％\r\n * @param {Number}\r\n *            [h=40] elementに対するダイアログの高さの比率％\r\n * @param {Object}\r\n *            [style={ width: w+\"%\", height: h+\"%\", left: 50-w/2+\"%\", top: 50-h/2+\"%\", position: \"absolute\", background: \"rgba(255, 255, 255, 0.8)\", border: \"medium solid #aaa\"}] \r\n *            ダイアログ背景のCSSスタイル\r\n */\r\nElement.createDialog = function(iHtml, element, id, w, h, style){\r\n    iHtml = iHtml || \"no message\";\r\n    element = element || document.body;\r\n    style = style || {};\r\n    id = id || \"HJN.dialog\";\r\n    w = w || 40; // 幅40%\r\n    h = h || 40; // 高さ40%\r\n    // 既存の同一idの要素を削除する\r\n    var div = document.getElementById(id);\r\n    if (div) { div.parentElement.removeChild(div);}\r\n    // ダイアログ要素を作成する\r\n    div = document.createElement('div');\r\n    div.id = id;\r\n    element.appendChild(div);\r\n    div.innerHTML =\"<iframe></iframe>\";\r\n    setStyles(div.children[0],\r\n            {width: \"100%\", height: \"100%\", border: 0, \"pointer-events\": \"auto\"});\r\n    var body = document.createElement('body');\r\n    var htmlText = \"<body>\" + iHtml + \"</body>\";\r\n    body.textContent = \"\"; // #82\r\n    body.insertAdjacentHTML('afterBegin', htmlText);\r\n    \r\n    div.children[0].contentDocument.body = body;\r\n    // スタイルを設定する（デフォルト：縦横40%（親サイズに連動）で中央に配置）\r\n    setStyles(div, style, \r\n            { width: w+\"%\", height: h+\"%\", left: 50-w/2+\"%\", top: 50-h/2+\"%\",\r\n              position: \"absolute\", \"z-index\" : \"80\",\r\n              background: \"rgba(255, 255, 255, 0.8)\", border: \"medium solid #aaa\"});\r\n    var draggable = new Element(div);\r\n    draggable        // 移動指定要素がリサイズ指定要素よりが下になるよう、×ボタン、移動、リサイズの順に記述する\r\n        .makeRemovable(id)\r\n        .makeMoveable()\r\n        .makeResizable();\r\n}\r\n\r\n/**\r\n * ×ボタンによる要素削除機能を付与する\r\n * \r\n * @memberOf Util.Element\r\n * @param {String}\r\n *            [id=\"\"] ×ボタン要素のid名（重複すると先に作成された×ボタンのダイアログが閉じられる）\r\n * @param {Object}\r\n *            [style={cursor: \"move\", top:\"0\", left:\"50%\", width:\"100%\",height:\"20px\"};]\r\n *            ×ボタン要素のCSSスタイル\r\n * @return this\r\n */\r\nElement.prototype.makeRemovable = function(id, style) {\r\n    // inputタグを追加する\r\n    // <input id=\"hjnDialog\" type=\"checkbox\" class=\"hjnBurger\" checked=\"checked\"\r\n    // onChange=\"...\"/>\r\n    var input = document.createElement(\"input\");\r\n    input.type = \"checkbox\";\r\n    input.id = (id || \"\") + \"_BATSU\"; // #86\r\n    input.classList.add(\"hjnBurger\");\r\n    input.checked = true;\r\n    input.onchange = function(){\r\n        var e = this.parentElement.parentElement;\r\n        e.parentElement.removeChild(e);\r\n    };\r\n    this._wrapper.appendChild(input);\r\n    // ×ボタンlabelタグを追加する\r\n    // <label for=\"hjnDialog\"><span></span></label>\r\n    var label = document.createElement(\"label\");\r\n    label.classList.add(\"hjnCtrlBox\");\r\n    label.htmlFor = input.id;\r\n    label.appendChild(document.createElement(\"span\"));\r\n    setStyles(label, style, { top:\"4px\", right: \"4px\", \r\n        position: \"absolute\", background: \"transparent\"});\r\n    this._wrapper.appendChild(label);\r\n    return this;\r\n}\r\n\r\n/**\r\n * ドラッグによる移動機能を付与する\r\n * \r\n * @memberOf Util.Element\r\n * @param {Object}\r\n *            [style={cursor: \"move\", top:\"0\", left:\"50%\", width:\"100%\", height:\"20px\"};] ドラッグ移動機能要素のCSSスタイル\r\n * @return this\r\n */\r\nElement.prototype.makeMoveable = function(style) {\r\n    // 制御用divを追加する\r\n    this.addHandleElement(elementMove, style, // 上：20px\r\n            {cursor: \"move\", top:\"0\",  left:\"50%\", width:\"100%\", height:\"20px\"},\r\n            \"inside\");\r\n    return this;\r\n}\r\n/**\r\n * ドラッグによる リサイズ機能を付与する\r\n * \r\n * @memberOf Util.Element\r\n * @param {object}\r\n *            [style] リサイズ機能要素のCSSスタイルを、デフォルトから変更する際に指定\r\n * \r\n * @return this\r\n */\r\nElement.prototype.makeResizable = function(style) {\r\n    // 制御用divを追加する\r\n    this.addHandleElement(elementUpper,  style,  // 上:Upper\r\n            {cursor: \"ns-resize\", top:\"0\",    left:\"50%\", width:\"100%\"});\r\n    this.addHandleElement(elementBottom, style,  // 下:Bottom\r\n            {cursor: \"ns-resize\", top:\"100%\", left:\"50%\", width:\"100%\"});\r\n    this.addHandleElement(elementLeft,   style,  // 左:Left\r\n            {cursor: \"ew-resize\", top:\"50%\",  left:\"0\",   height:\"100%\"});\r\n    this.addHandleElement(elementRight,  style,  // 右:Right\r\n            {cursor: \"ew-resize\", top:\"50%\",  left:\"100%\",height:\"100%\"});\r\n    this.addHandleElement(elementUpperLeft,  style,  // 左上:UpperLeft\r\n            {cursor: \"nwse-resize\", top:\"0\",    left:\"0\"});\r\n    this.addHandleElement(elementUpperRight, style,  // 右上:UpperRight\r\n            {cursor: \"nesw-resize\", top:\"0\",    left:\"100%\"});\r\n    this.addHandleElement(elementBottomLeft, style,  // 左下:BottomLeft\r\n            {cursor: \"nesw-resize\", top:\"100%\", left:\"0\"});\r\n    this.addHandleElement(elementBottomRight,style,  // 右下:BottomRight\r\n            {cursor: \"nwse-resize\", top:\"100%\", left:\"100%\"});\r\n   return this;\r\n}\r\n/**\r\n * マウスクリック用要素を追加\r\n * \r\n * @memberOf Util.Element\r\n * @param {Function}\r\n *            func マウス押下時に発火する処理\r\n * @param {object}\r\n *            [style] elementに設定するスタイル\r\n * @param {object}\r\n *            [styleD={top:\"0\", left:\"0\" width:\"5px\", height:\"5px\"}]\r\n *            elementに設定するデフォルトスタイル（styleに同じ属性がある場合styleが優先される）\r\n * @param {String}\r\n *            [transform=\"over\"] paddingに対する要素の位置\r\n *            \"onFrame\":線上、\"inside\":内側、その他：指定文字列をtransformスタイルに設定\r\n * @param {String}\r\n *            [className=\"hjnDraggableItem\"] マウスイベントを取得するdivに設定するCSSクラス名\r\n */\r\nElement.prototype.addHandleElement = function(func, style, styleD, transform, className) {\r\n    style = style || {};\r\n    styleD = styleD || {};\r\n    transform = transform || \"onFrame\";\r\n    for (var property in style) styleD[property] = style[property];\r\n\r\n    var div = document.createElement('div');\r\n    div.classList.add(className || \"hjnDraggableItem\");\r\n    // 要素がpaddingの内側になるtransform設定値を求める\r\n    // 例：上下左右中央の時\"translateY(-50%) translateX(-50%)\"\r\n    if (transform === \"onFrame\") {\r\n        transform = 'translateX(-50%) translateY(-50%)';\r\n    } else if (transform === \"inside\"){\r\n        transform = 'translateX(-' + (styleD.left || 0) + ') translateY(-' + (styleD.top || 0) + ')';\r\n    }\r\n    // スタイルを設定する（デフォルト：縦横10pxで左上{top:0,ledt:0}に配置）\r\n    setStyles(div, styleD, \r\n            { width : \"5px\", height : \"5px\", position : \"absolute\", transform : transform });\r\n    // 要素を追加する\r\n    this._wrapper.appendChild(div);\r\n    // 追加した要素に、マウス押下時の処理を登録する\r\n    div.addEventListener(\"mousedown\", func, false);\r\n    div.addEventListener(\"touchstart\", func, false);\r\n};\r\n\r\n\r\n// マウス押下後の発火関数定義（イベントリスナーに登録する関数を指定）\r\nfunction elementMove(e)       {dragStart(e, this, draggingMove,        dragEndMove       ); }\r\nfunction elementUpper(e)      {dragStart(e, this, draggingUpper,       dragEndUpper      ); }\r\nfunction elementBottom(e)     {dragStart(e, this, draggingBottom,      dragEndBottom     ); }\r\nfunction elementLeft(e)       {dragStart(e, this, draggingLeft,        dragEndLeft       ); }\r\nfunction elementRight(e)      {dragStart(e, this, draggingRight,       dragEndRight      ); }\r\nfunction elementUpperLeft(e)  {dragStart(e, this, draggingUpperLeft,   dragEndUpperLeft  ); }\r\nfunction elementUpperRight(e) {dragStart(e, this, draggingUpperRight,  dragEndUpperRight ); }\r\nfunction elementBottomLeft(e) {dragStart(e, this, draggingBottomLeft,  dragEndBottomLeft ); }\r\nfunction elementBottomRight(e){dragStart(e, this, draggingBottomRight, dragEndBottomRight); }\r\n// マウスドラッグ時の挙動定義（マウス移動距離に乗算する値を定義）\r\nfunction draggingMove(e)       {dragging(e, {posX: 1, posY: 1, width: 0, height: 0 }); }  // 移動\r\nfunction draggingUpper(e)      {dragging(e, {posX: 1, posY: 1, width: 0, height:-1 }); }  // 上リサイズ\r\nfunction draggingBottom(e)     {dragging(e, {posX: 0, posY: 0, width: 0, height: 1 }); }  // 下リサイズ\r\nfunction draggingLeft(e)       {dragging(e, {posX: 1, posY: 0, width:-1, height: 0 }); }  // 左リサイズ\r\nfunction draggingRight(e)      {dragging(e, {posX: 0, posY: 0, width: 1, height: 0 }); }  // 右リサイズ\r\nfunction draggingUpperLeft(e)  {dragging(e, {posX: 1, posY: 1, width:-1, height:-1 }); }  // 左上リサイズ\r\nfunction draggingUpperRight(e) {dragging(e, {posX: 0, posY: 1, width: 1, height:-1 }); }  // 右上リサイズ\r\nfunction draggingBottomLeft(e) {dragging(e, {posX: 1, posY: 0, width:-1, height: 1 }); }  // 左下リサイズ\r\nfunction draggingBottomRight(e){dragging(e, {posX: 0, posY: 0, width: 1, height: 1 }); }  // 右下リサイズ\r\n// マウス解放後の発火関数定義（イベントリスナーから解放する関数を指定）\r\nfunction dragEndMove(e)       {dragEnd(draggingMove,        dragEndMove       ); }\r\nfunction dragEndUpper(e)      {dragEnd(draggingUpper,       dragEndUpper      ); }\r\nfunction dragEndBottom(e)     {dragEnd(draggingBottom,      dragEndBottom     ); }\r\nfunction dragEndLeft(e)       {dragEnd(draggingLeft,        dragEndLeft       ); }\r\nfunction dragEndRight(e)      {dragEnd(draggingRight,       dragEndRight      ); }\r\nfunction dragEndUpperLeft(e)  {dragEnd(draggingUpperLeft,   dragEndUpperLeft  ); }\r\nfunction dragEndUpperRight(e) {dragEnd(draggingUpperRight,  dragEndUpperRight ); }\r\nfunction dragEndBottomLeft(e) {dragEnd(draggingBottomLeft,  dragEndBottomLeft ); }\r\nfunction dragEndBottomRight(e){dragEnd(draggingBottomRight, dragEndBottomRight); }\r\n\r\n/**\r\n * DOM要素にスタイル設定\r\n * \r\n * @memberOf Util.Element\r\n * @param {DOM}\r\n *            element CSSスタイルを設定するDOM要素\r\n * @param {object}\r\n *            [style] elementに設定するスタイル {top:\"50%\", left:\"50%\"}\r\n * @param {object}\r\n *            [styleD] elementに設定するデフォルトスタイル {top:\"50%\", left:\"50%\"}\r\n */\r\nElement.SetStyles = setStyles;\r\nfunction setStyles(element, style, styleD){\r\n    // ポインタ操作の透過が指定されていないとき有効化にする（ダイアログなど上位レイヤで透過となっていることがあるため）\r\n    styleD = styleD || {};\r\n    styleD[\"pointer-events\"] = styleD[\"pointer-events\"] || \"auto\";\r\n    // デフォルトスタイルを設定する\r\n    for (var property in styleD) element.style[property] = styleD[property];\r\n    // 指定スタイルを設定する\r\n    for (var property in style) element.style[property] = style[property];\r\n}\r\n\r\n/**\r\n * マウス押下したときに発火する関数から呼ばれる\r\n * \r\n * @private\r\n * @memberOf Util.Element\r\n * @param {Event}\r\n *            e 発火イベント\r\n * @param {DOM}\r\n *            element マウス押下を発火したDOM要素（CALL元のthis)\r\n * @param {function}\r\n *            dragging マウス移動イベントに登録する関数消去するイベントに登録されている関数\r\n * @param {function}\r\n *            dragEnd 消去するイベントに登録する関数\r\n */\r\nfunction dragStart(e, element, dragging, dragEnd) {\r\n    // タッチイベントとマウスのイベントの差異を吸収する\r\n    var event = (e.type === \"mousedown\") ? e : e.changedTouches[0];\r\n    pos.pageX = event.pageX; \r\n    pos.pageY = event.pageY;\r\n    // 親の親要素(hjnDraggableBox指定)内の相対座標を取得\r\n    var grandparent = element.parentNode.parentNode;\r\n    pos.offsetLeft = grandparent.offsetLeft;\r\n    pos.offsetTop = grandparent.offsetTop;\r\n    // margin補正値、縦横を取得\r\n    var style = document.defaultView.getComputedStyle(grandparent);\r\n    pos.marginLeft = parseInt(style.getPropertyValue(\"margin-left\")) || 0;\r\n    pos.marginTop = parseInt(style.getPropertyValue(\"margin-top\")) || 0;\r\n    pos.width = grandparent.clientWidth || 0;\r\n    pos.height = grandparent.clientHeight || 0;\r\n\r\n    // 処理範囲外のとき何もしない\r\n    // if (pos.y > 10) return;\r\n\r\n    // 全画面にマウスアップ用要素を被せる\r\n    var hjnDrag = document.getElementById(\"hjnDrag\");\r\n    if (!hjnDrag) {\r\n        hjnDrag = document.createElement('div');\r\n        hjnDrag.id = \"hjnDrag\";\r\n        element.parentElement.appendChild(hjnDrag);\r\n    }\r\n    setStyles(hjnDrag,  \r\n            { width  : window.innerWidth + \"px\",\r\n              height : window.innerHeight + \"px\",\r\n              position : \"fixed\", top : \"0\", left : \"0\",\r\n              });\r\n    // 親の親要素（hjnDraggableBox指定)に、CSSクラス\"drag\"を追加\r\n    grandparent.classList.add(\"drag\");\r\n    // addEventListenerの第三引数を判定\r\n    var isPassive = isSupportsPassive() ? {passive: false} : false;\r\n    // ムーブイベントにコールバック\r\n    document.body.addEventListener(\"mousemove\", dragging, isPassive);\r\n    document.body.addEventListener(\"touchmove\", dragging, isPassive);\r\n    // マウスボタンが離されたとき、またはカーソルが外れたときに発火するイベントを登録する\r\n    hjnDrag.addEventListener(\"mouseup\", dragEnd, isPassive);\r\n    hjnDrag.addEventListener(\"touchend\", dragEnd, isPassive);\r\n    document.body.addEventListener(\"mouseleave\", dragEnd, isPassive);\r\n    document.body.addEventListener(\"touchleave\", dragEnd, isPassive);\r\n}\r\n\r\n// addEventListenerの第三引数を判定するためにがpassive対応かどうか判定する\r\nfunction isSupportsPassive(){\r\n    var supportsPassive = false;\r\n    try {\r\n      var opt = {\r\n        get passive() {\r\n          supportsPassive = true;\r\n        }\r\n      },\r\n      handler = function() {};\r\n\r\n      window.addEventListener(\"checkpassive\", handler, opt);\r\n      window.removeEventListener(\"checkpassive\", handler, opt);\r\n    } catch (err) {}\r\n    return supportsPassive; \r\n}\r\n/**\r\n * 親の親要素をマウス押下後、マウスカーソルが動いたときに発火する関数から呼ばれる\r\n * \r\n * @private\r\n * @memberOf Util.Element\r\n * @param {Event}\r\n *            e 発火イベント\r\n * @param {Object}\r\n *            multiply 補正スタイル毎のマウスカーソル移動幅の掛け目<br>\r\n *            要素を移動する場合 {posX:1, posY:1, width:0, height:0}<br>\r\n *            左上リサイズの場合 {posX:1, posY:1, width:-1, height:-1}<br>\r\n *            右下リサイズの場合 {posX:0, posY:0, width:1, height:1}\r\n */\r\nfunction dragging(e, multiply) {\r\n    // タッチイベントとマウスのイベントの差異を吸収する\r\n    var event = (e.type === \"mousemove\") ? e : e.changedTouches[0];\r\n    // フリックしたときに画面を動かさないようにデフォルト動作を抑制する\r\n    e.preventDefault();\r\n    // マウスが動いた場所に要素を動かす（\"drag\"は同時に一つしか存在しない前提）\r\n    var drag = document.getElementsByClassName(\"drag\")[0];\r\n    if (drag) {\r\n        drag.style.left = pos.offsetLeft - pos.marginLeft \r\n            + multiply.posX * (event.pageX - pos.pageX) + \"px\";\r\n        drag.style.top  = pos.offsetTop  - pos.marginTop\r\n            + multiply.posY * (event.pageY - pos.pageY) + \"px\";\r\n        drag.style.width  = pos.width\r\n            + multiply.width  * (event.pageX - pos.pageX) + \"px\";\r\n        drag.style.height = pos.height\r\n            + multiply.height * (event.pageY - pos.pageY) + \"px\";\r\n    }\r\n}\r\n/**\r\n * マウスボタンが上がった場合、もしくは画面外にマウスが出た場合に発火する関数から呼ばれる\r\n * \r\n * @private\r\n * @memberOf Util.Element\r\n * @param {function}\r\n *            dragging 消去するイベントに登録されている関数\r\n * @param {function}\r\n *            dragEnd 消去するイベントに登録されている関数\r\n */\r\nfunction dragEnd(dragging, dragEnd) {\r\n    // イベントハンドラを消去する\r\n    document.body.removeEventListener(\"mousemove\", dragging, false);\r\n    document.body.removeEventListener(\"touchmove\", dragging, false);\r\n    document.body.removeEventListener(\"mouseleave\", dragEnd, false);\r\n    document.body.removeEventListener(\"touchleave\", dragEnd, false);\r\n    // クラス名 .drag を外す\r\n    var drag = document.getElementsByClassName(\"drag\")[0];\r\n    if (drag) drag.classList.remove(\"drag\");\r\n    // マウスアップ検知用要素を削除する\r\n    var hjnDrag = document.getElementById(\"hjnDrag\");\r\n    if (hjnDrag) { hjnDrag.parentElement.removeChild(hjnDrag);}\r\n}\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_Config_js__ = __webpack_require__(34);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__util_Config_js__[\"a\"]; });\n\r\n\r\n// import Config_addMenu from \"./util-config_addMenu.js\";\r\n// Config.addMenu = Config_addMenu;\r\n\r\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class Config\r\n * @classdesc 定数設定機能（設定HTML作成機能付き）\r\n *            <p>\r\n *            日時、TATフォーマット指定機能追加用に作成\r\n * \r\n * @param {String}\r\n *            [prefix=''] 定数の名前空間を一位に指定する文字列、指定しない場合グローバル\r\n * @param {String}\r\n *            [ol='ol'] インデント(.nDown() .nUp())に使うHTMLタグ\r\n * @param {String}\r\n *            [globalName='HJN'] Configを登録するグローバル変数(window)の変数名\r\n * @example this._config = HjnConfig(\"m\") // config設定画面定義\r\n *          .label(null,\"------\").n() // ラベルを表示し、改行\r\n *          .name(\"ENDIAN\").label(null,\"[endian(long field)]\") //key:ENDIAN\r\n *          .radio(def(\"ENDIAN_LIL\", true), null, \"little\", true) //表示ラベルと選択時設定値\r\n *          .radio(def(\"ENDIAN_BIG\", false), null, \"big\");\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #24\r\n    /** @static */\r\n    Config.prototype.__config = {};   // config設定コンテナ\r\n    Config.prototype.__config._onFunctions = {}; // 関数登録用\r\n    Config.prototype.__config.__keyConfig = {};  // キー値登録用\r\n\r\n    /** @constructor */\r\n    function Config(prefix, ol, globalName){ \r\n        if(!(this instanceof Config)) return new Config(prefix, ol, globalName);\r\n\r\n        // グローバル変数(window)にHJN.Configを登録する #74\r\n        this._globalName = globalName || \"HJN\";\r\n        var globalConfig = window[this._globalName].Config;\r\n        globalConfig = globalConfig || Config;\r\n\r\n        this._prefix = prefix; // #76\r\n        this._pre = (prefix || '') + \".\"; // 各フィールド、要素の名称のプレフィックス(区切り文字\".\")\r\n        this._ols = ol ? '<' + ol + '>' : '<ol>';   // リストに使用する要素（初期値 ol )\r\n        this._ole = ol ? '</' + ol + '>' : '</ol>';\r\n        this._html = this._ols; // config設定画面のHtml\r\n        this._nameHtml = '';    // HTMLタグの name属性指定\r\n        this._name = '';        // radioのConfig.get用\r\n\r\n        if (globalConfig[prefix] === undefined){\r\n            globalConfig[prefix] = this;\r\n            return this;\r\n        } else {\r\n            return globalConfig[prefix]; \r\n        }\r\n    }\r\n\r\n    /**\r\n     * HTML要素の値が変更した時に、configに当該要素を登録する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.on = function(t) {\r\n        var funcId = t.id;\r\n        if (t.type === \"radio\") { // radioのとき、nameに対して、選択されたキー値（idからprefixを削除した値）を登録\r\n            this.prototype.__config[t.name] = t.id.substr(t.id.indexOf(\".\") + 1);\r\n        }else if (t.type === \"number\") {    // numberのとき、idに、value(入力値)を数値として登録\r\n            this.prototype.__config[t.id] = +t.value;\r\n        } else if (t.type === \"select-one\") {    // selectのとき、idに、valueの設定値を登録\r\n            this.prototype.__config[t.id] = t.value.substr(t.value.indexOf(\".\") + 1); // #96\r\n            funcId = t.value;\r\n        } else {                            // textのとき、idに、value(入力値)を登録\r\n            this.prototype.__config[t.id] = t.value;\r\n        }\r\n        // on呼出し関数が登録されているとき、登録関数を呼び出す #51\r\n        var func = Config.GetConfig().getFunctionById(funcId); // #59\r\n        if(typeof(func) === \"function\") func();\r\n    };\r\n\r\n    /**\r\n     * Configリポジトリ管理インスタンスを取得する\r\n     * \r\n     * @memberof Util.Config\r\n     * @example Config.GetConfig(\"File\") === Config(\"File\"); // true 既に登録されているとき\r\n     */\r\n    Config.GetConfig = function(prefix) { // #59\r\n        return new Config(prefix);\r\n    }\r\n    \r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * keyの値に指定されたvalue（なければkey値）を返却する\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    Config.prototype.getConfig = function(key) {\r\n        var cKey = this.getValueByKey(key);\r\n        var keyConfig = Config.prototype.__config.__keyConfig[this._pre + cKey];\r\n        if(!keyConfig || keyConfig.value === undefined){\r\n            return cKey;    // valueが定義されていないとき、keyの設定値を返却\r\n        }else{\r\n            return keyConfig.getConfig(); // keyの設定値のvalueが定義されているとき\r\n        }\r\n    };\r\n    /**\r\n     * configに登録されているid(=prefix+key)の設定値を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getObjctById = function(id) {\r\n        // return this.__config[id];\r\n        return Config.prototype.__config[id];\r\n    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の設定値を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getValueByKey = function(key) { \r\n        var val = Config.prototype.__config[this._pre + key];\r\n        // selectorでon未実行時に、選択項目の値を取り込む #96\r\n        if (!val) {\r\n            var e = document.getElementById(this._pre + key);\r\n            if (e && typeof e.selectedIndex === \"number\") {\r\n                var t = e[e.selectedIndex].value;\r\n                val = t.substr(t.indexOf(\".\") + 1);\r\n                Config.prototype.__config[this._pre + key] = val;\r\n            }\r\n        }\r\n        return val;\r\n    };\r\n    /**\r\n     * configにkey(prefix補填)に値を設定する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.setValueByKey = function(key, val) { \r\n        Config.prototype.__config[this._pre + key] = val;\r\n    };\r\n    /**\r\n     * configの指定Idに登録されている関数を取得する<br>\r\n     * \r\n     * @memberof Util.Config\r\n     * @example // Config.onでradioボタン選択時に関数を呼ぶ場合に使用 var func =\r\n     *          Config.GetConfig().getFunctionById(t.id);\r\n     */\r\n\r\n    Config.prototype.getFunctionById = function(id) { // #53\r\n        return Config.prototype.__config._onFunctions[id];\r\n    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の関数を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     * @example Util.Config.GetConfig(\"Simulator\").getFunctionByKey(\"S_SIMU\")();\r\n     */\r\n    Config.prototype.getFunctionByKey = function(key) { // #59\r\n        return Config.prototype.__config._onFunctions[this._pre + this.getValueByKey(key)];\r\n    };\r\n    /**\r\n     * 指定keyに登録されている関数を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getFunction = function(key) { // #76\r\n        return Config.prototype.__config._onFunctions[this._pre + key];\r\n    };\r\n    /**\r\n     * 指定keyに関数を登録する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.setFunction = function(key, func) { // #76\r\n        Config.prototype.__config._onFunctions[this._pre + key] = func;\r\n    };\r\n    \r\n\r\n    /**\r\n     * config設定用HTMLテキストを取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getHtml = function() { \r\n        return this._html + this._ole;\r\n    };\r\n    /**\r\n     * keyに値を設定する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.set = function(key, val) { \r\n        this.value[this._pre + key] = val;\r\n    };\r\n    \r\n    // config作成用 メソッド\r\n    /**\r\n     * 定義＆設定画面作成用機能： 改行\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.n = function (str) {\r\n        str = str || \"\";\r\n        this._html += this._ole + str + this._ols;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ネスト一つ下げ\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.nDown = function () {\r\n        this._html += this._ols;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ネスト一つ上げ\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.nUp = function () {\r\n        this._html += this._ole;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： nameを変更する（radio等の先頭で指定）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.name = function (str) {\r\n        this._nameHtml = str ? 'name=\"' + this._pre + str + '\" ' : '';\r\n        this._name = str;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラベル要素(prefix+keyで関連付けるformのid属性となる)\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.label = function (key, str, attribute) {\r\n        this._html += '<label ' +\r\n                        (key ? 'for=\"' + this._pre + key + '\" ': '') +\r\n                        (attribute || '') + '>' +\r\n                        (str || '') +\r\n                        '</label>\\n'; // #51\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラベル付された各種入力フォーム\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.labeledForm = function (key, type, typedAttribute,\r\n                                pLabel, sLabel, val, attribute, check, cssClass) {\r\n        var classStr = (cssClass) ? ' class=\"' + cssClass + '\"' : ''; // #51\r\n        // optionの時(select用）\r\n        if (type === \"option\"){\r\n            this._html += '<option value=\"' + this._pre + key + '\"' + (typedAttribute || '') + '>' +\r\n                    (pLabel ? pLabel : '') + (sLabel ? sLabel : '') + '</option>\\n'\r\n            return this;\r\n        }\r\n        // option以外の時\r\n        this._html += '<label' + classStr + '>' + // #51\r\n                    (pLabel ? pLabel : '') +\r\n                    '<input type=\"' +type + '\" ' +\r\n                        (typedAttribute || '') + \r\n                        this._nameHtml +\r\n                        'id=\"' + this._pre + key + '\" '+ // idがユニークになるようkeyにprefixを付与\r\n                        'onchange=\"' + this._globalName + '.Config.on(this);\" ' + // #74\r\n                        (val ? \"value='\" + val + \"' \" : \"\") +   // val は、キー値のまま\r\n                                                                // #92\r\n                        (attribute || '') + \r\n                        (check ? ' checked=\"checked;\"' : '') +\r\n                    '>' +\r\n                    (sLabel ? sLabel : '') +\r\n                    '</label>\\n'; // #51\r\n        // デフォルト指定があるとき configにデフォルト値を設定する\r\n        if (type === \"radio\" && check) {    // radioのとき、nameに対して、選択状態のkeyを登録\r\n            Config.prototype.__config[this._pre + this._name] = key;\r\n        } else if (type === \"number\") { // numberのとき、keyに対する、val(入力値)を数値として登録\r\n            Config.prototype.__config[this._pre + key] = +val;\r\n        } else {    // textのとき、keyに対する、val(入力値)を登録\r\n            Config.prototype.__config[this._pre + key] = val;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： テキストボックス要素で、文字列を設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.number = function (key, pLabel, sLabel, val, attribute, func) {\r\n        Config.prototype.labeledForm.call(this, key, \"number\", \"\", \r\n                                pLabel, sLabel, val, attribute);\r\n        if (func) this.setFunction(key, func); // #74\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： テキストボックス要素で、数値を設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.text = function (key, pLabel, sLabel, val, attribute) {\r\n        Config.prototype.labeledForm.call(this, key, \"text\", \"\", \r\n                                pLabel, sLabel, val, attribute);\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラジオボタン要素で、選択肢の一つを設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.radio = function (key, pLabel, sLabel, check, attribute, func) {\r\n        Config.prototype.labeledForm.call(this, key, \"radio\", (check ? 'checked=\"checked;\"' : ''),\r\n                                pLabel, sLabel, \"\", attribute, check, \"hjnLabel4Input\");\r\n        // 関数登録指定時、attributeを関数名として、指定関数を登録する #51\r\n        if (func) this.setFunction(key, func);\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： セレクトボックス要素で、選択肢の一つを設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.option = function (key, pLabel, sLabel, check, attribute, func) { // #74\r\n        Config.prototype.labeledForm.call(this, key, \"option\", (check ? ' selected' : ''),\r\n                                pLabel, sLabel, \"\", attribute, check, \"hjnLabel4Input\");\r\n        // 関数登録指定時、attributeを関数名として、指定関数を登録する #51\r\n        if (func) this.setFunction(key, func);\r\n        // 逆引きリストに追加する\r\n        var reverseList = Config.prototype.__config.__keyConfig[this._pre + this._name] || {};\r\n        var reverseVal = this._pre + key;\r\n        var reverseKey = this.__config.__keyConfig[reverseVal].getConfig(); \r\n        reverseList[reverseKey] = reverseVal;\r\n        Config.prototype.__config.__keyConfig[this._pre + this._name] = reverseList; \r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： option用タグの開始宣言（selectタグ用）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.startTag = function (type) { // #74\r\n        this._tag = type || \"\";\r\n        this._html += '<' + this._tag \r\n                            + ' id=\"' + this._pre + this._name + '\"'\r\n                            + 'class=\"hjnLabel4Input\" onchange=\"HJN.Config.on(this);\">\\n'  ;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： option用タグの終了宣言（selectタグ用）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.endTag = function (type) { // #74\r\n        this._html += '</' + this._tag + '>\\n'\r\n        this._tag = undefined;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 定義＆設定画面作成用機能： keyConfigの設定値を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getKeyConfig = function (key) { // #74\r\n        return this.__config.__keyConfig[this._pre + key];\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： option設定値からoptionキー値を逆引きする（selectタグ用）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getOptionKey = function (key, val) { // #74\r\n        return this.__config.__keyConfig[this._pre + key][val];\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： 固定値を取得するキーの宣言<br>\r\n     * __keyConfig[\"File.SEP_COMMA\"] = {value: \",\", getConfig:\r\n     * LF_ELSE.vから値を取得するfunction, onFunc: null}\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key キー値\r\n     * @param {Object}\r\n     *            [val=key] 取得する固定値（getValueByKeyの返却値、デフォルト：keyと同じ文字列）\r\n     * @param {function}\r\n     *            [onFunc] onイベント時に実行する処理（メニューのa属性などで利用）\r\n     */\r\n    Config.prototype.def = function(key, val, onFunc) { // #76\r\n        var _keyConf = Config.prototype.__config.__keyConfig[this._pre + key] = {};\r\n        _keyConf.value = (val === undefined) ? key : val; // \r\n        _keyConf.getConfig = function () { return (val === undefined) ? key : val; };\r\n        _keyConf.onFunc = onFunc || null; \r\n        return key;\r\n    }\r\n    /**\r\n     * 定義＆設定画面作成用機能： 画面より値を取得するキーの宣言<br>\r\n     * __keyConfig[\"File.LF_ELSE\"] = {value: \"LF_ELSE\", getConfig:\r\n     * LF_ELSE.vから値を取得するfunction}\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key キー値\r\n     * @param {String}\r\n     *            [fieldId=key+\".v\"] 値を取得する画面フィールドのキー\r\n     */\r\n    Config.prototype.v = function (key, fieldId) { // #76\r\n        var _keyConf = Config.prototype.__config.__keyConfig[this._pre + key] = {};\r\n        _keyConf.value = key;           // getValueByKeyの返却値（デフォルト：keyと同じ文字列）\r\n        _keyConf.getConfig = function () {\r\n            _keyConf.getConfig = (function (_prefix, key, fieldId) {\r\n                return window.HJN.Config(_prefix).getValueByKey(fieldId || key + \".v\");\r\n            }).bind(null, this._prefix, key, fieldId); // #96\r\n        };\r\n        return key;\r\n    };\r\n\r\n\r\n    /**\r\n     * HTMLの入力フィールドに、指定値を設定し、Configに反映する\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    Config.prototype.setText = function(key, val) { // #76\r\n        var id = this._pre + key;\r\n        document.getElementById(id).value = val;\r\n        document.getElementById(id).onchange();\r\n    }    \r\n    /**\r\n     * HTMLのselectorを、指定値を選択し、Configに反映する\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    Config.prototype.setSelector = function(key) { // #76\r\n        var id = this._pre + key;\r\n        document.getElementById(id).checked = true;\r\n        document.getElementById(id).onchange();\r\n    }    \r\n    \r\n    /* new */\r\n    return Config;\r\n}());\n\n/***/ }),\n/* 35 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Encoding; });\n/**\r\n * @memberOf Util\r\n * @class Encoding\r\n * @classdesc 文字コード変換 引用 {@link https://github.com/wealandwoe/ecl_array.js}\r\n */\r\nvar Encoding = {};\r\n(function() {\r\n//\r\n// Escape Codec Library: ecl.js (Ver.041208)\r\n//\r\n// Copyright (C) http://nurucom-archives.hp.infoseek.co.jp/digital/\r\n//\r\n\r\nvar GetEscapeCodeType=function(str){\r\n    if(/%u[0-9A-F]{4}/i.test(str))return \"Unicode\";\r\n    if(/%([0-9A-DF][0-9A-F]%[8A]0%|E0%80|[0-7][0-9A-F]|C[01])%[8A]0|%00|%[7F]F/i.test(str))return \"UTF16LE\";\r\n    if(/%E[0-9A-F]%[8A]0%[8A]0|%[CD][0-9A-F]%[8A]0/i.test(str))return \"UTF8\";\r\n    if(/%F[DE]/i.test(str))return /%8[0-9A-D]|%9[0-9A-F]|%A0/i.test(str)?\"UTF16LE\":\"EUCJP\";\r\n    if(/%1B/i.test(str))return /%[A-D][0-9A-F]/i.test(str)?\"JIS8\":\"JIS7\";\r\n    var S=str.substring(0,6143).replace(/%[0-9A-F]{2}|[^ ]| /ig,function(s){\r\n        return s.length<3?\"40\":s.substring(1)\r\n    }),c,C,i=0,T;\r\n    while(0<=(c=parseInt(S.substring(i,i+=2),16))&&i<4092)if(128<=c){\r\n        if((C=parseInt(S.substring(i,i+2),16))<128)i+=2;\r\n        else if(194<=c&&c<240&&C<192){\r\n            if(c<224){T=\"UTF8\";i+=2;continue}\r\n            if(2==parseInt(S.charAt(i+2),16)>>2){T=\"UTF8\";i+=4;continue}\r\n        }\r\n        if(142==c&&161<=C&&C<224){if(!T)T=\"EUCJP\";if(\"EUCJP\"==T)continue}\r\n        if(c<161)return \"SJIS\";\r\n        if(c<224&&!T)\r\n            if((164==c&&C<244||165==c&&C<247)&&161<=C)i+=2;\r\n            else T=224<=C?\"EUCJP\":\"SJIS\";\r\n        else T=\"EUCJP\"\r\n    }\r\n    return T?T:\"EUCJP\"\r\n};\r\nvar JISX0208=Function(\r\n'var a=\"zKV33~jZ4zN=~ji36XazM93y!{~k2y!o~k0ZlW6zN?3Wz3W?{EKzK[33[`y|;-~j^YOTz$!~kNy|L1$353~jV3zKk3~k-4P4zK_2+~jY4y!xYHR~jlz$_~jk4z$e3X5He<0y!wy|X3[:~l|VU[F3VZ056Hy!nz/m1XD61+1XY1E1=1y|bzKiz!H034zKj~mEz#c5ZA3-3X$1~mBz$$3~lyz#,4YN5~mEz#{ZKZ3V%7Y}!J3X-YEX_J(3~mAz =V;kE0/y|F3y!}~m>z/U~mI~j_2+~mA~jp2;~m@~k32;~m>V}2u~mEX#2x~mBy+x2242(~mBy,;2242(~may->2&XkG2;~mIy-_2&NXd2;~mGz,{4<6:.:B*B:XC4>6:.>B*BBXSA+A:X]E&E<~r#z+625z s2+zN=`HXI@YMXIAXZYUM8X4K/:Q!Z&33 3YWX[~mB`{zKt4z (zV/z 3zRw2%Wd39]S11z$PAXH5Xb;ZQWU1ZgWP%3~o@{Dgl#gd}T){Uo{y5_d{e@}C(} WU9|cB{w}bzvV|)[} H|zT}d||0~{]Q|(l{|x{iv{dw}(5}[Z|kuZ }cq{{y|ij}.I{idbof%cu^d}Rj^y|-M{ESYGYfYsZslS`?ZdYO__gLYRZ&fvb4oKfhSf^d<Yeasc1f&a=hnYG{QY{D`Bsa|u,}Dl|_Q{C%xK|Aq}C>|c#ryW=}eY{L+`)][YF_Ub^h4}[X|?r|u_ex}TL@YR]j{SrXgo*|Gv|rK}B#mu{R1}hs|dP{C7|^Qt3|@P{YVV |8&}#D}ef{e/{Rl|>Hni}R1{Z#{D[}CQlQ||E}[s{SG_+i8eplY[=[|ec[$YXn#`hcm}YR|{Ci(_[ql|?8p3]-}^t{wy}4la&pc|3e{Rp{LqiJ],] `kc(]@chYnrM`O^,ZLYhZB]ywyfGY~aex!_Qww{a!|)*lHrM{N+n&YYj~Z b c#e_[hZSon|rOt`}hBXa^i{lh|<0||r{KJ{kni)|x,|0auY{D!^Sce{w;|@S|cA}Xn{C1h${E]Z-XgZ*XPbp]^_qbH^e[`YM|a||+=]!Lc}]vdBc=j-YSZD]YmyYLYKZ9Z>Xcczc2{Yh}9Fc#Z.l{}(D{G{{mRhC|L3b#|xK[Bepj#ut`H[,{E9Yr}1b{[e]{ZFk7[ZYbZ0XL]}Ye[(`d}c!|*y`Dg=b;gR]Hm=hJho}R-[n}9;{N![7k_{UbmN]rf#pTe[x8}!Qcs_rs[m`|>N}^V})7{^r|/E}),}HH{OYe2{Skx)e<_.cj.cjoMhc^d}0uYZd!^J_@g,[[[?{i@][|3S}Yl3|!1|eZ|5IYw|1D}e7|Cv{OHbnx-`wvb[6[4} =g+k:{C:}ed{S]|2M]-}WZ|/q{LF|dYu^}Gs^c{Z=}h>|/i|{W]:|ip{N:|zt|S<{DH[p_tvD{N<[8Axo{X4a.^o^X>Yfa59`#ZBYgY~_t^9`jZHZn`>G[oajZ;X,i)Z.^~YJe ZiZF^{][[#Zt^|]Fjx]&_5dddW]P0C[-]}]d|y {C_jUql] |OpaA[Z{lp|rz}:Mu#]_Yf6{Ep?f5`$[6^D][^u[$[6^.Z8]]ePc2U/=]K^_+^M{q*|9tYuZ,s(dS{i=|bNbB{uG}0jZOa:[-]dYtu3]:]<{DJ_SZIqr_`l=Yt`gkTnXb3d@kiq0a`Z{|!B|}e}Ww{Sp,^Z|0>_Z}36|]A|-t}lt{R6pi|v8hPu#{C>YOZHYmg/Z4nicK[}hF_Bg|YRZ7c|crkzYZY}_iXcZ.|)U|L5{R~qi^Uga@Y[xb}&qdbd6h5|Btw[}c<{Ds53[Y7]?Z<|e0{L[ZK]mXKZ#Z2^tavf0`PE[OSOaP`4gi`qjdYMgys/?[nc,}EEb,eL]g[n{E_b/vcvgb.{kcwi`~v%|0:|iK{Jh_vf5lb}KL|(oi=LrzhhY_^@`zgf[~g)[J_0fk_V{T)}I_{D&_/d9W/|MU[)f$xW}?$xr4<{Lb{y4}&u{XJ|cm{Iu{jQ}CMkD{CX|7A}G~{kt)nB|d5|<-}WJ}@||d@|Iy}Ts|iL|/^|no|0;}L6{Pm]7}$zf:|r2}?C_k{R(}-w|`G{Gy[g]bVje=_0|PT{^Y^yjtT[[[l!Ye_`ZN]@[n_)j3nEgMa]YtYpZy].d-Y_cjb~Y~[nc~sCi3|zg}B0}do{O^{|$`_|D{}U&|0+{J3|8*]iayx{a{xJ_9|,c{Ee]QXlYb]$[%YMc*]w[aafe]aVYi[fZEii[xq2YQZHg]Y~h#|Y:thre^@^|_F^CbTbG_1^qf7{L-`VFx Zr|@EZ;gkZ@slgko`[e}T:{Cu^pddZ_`yav^Ea+[#ZBbSbO`elQfLui}.F|txYcbQ`XehcGe~fc^RlV{D_0ZAej[l&jShxG[ipB_=u:eU}3e8[=j|{D(}dO{Do[BYUZ0/]AYE]ALYhZcYlYP/^-^{Yt_1_-;YT`P4BZG=IOZ&]H[e]YYd[9^F[1YdZxZ?Z{Z<]Ba2[5Yb[0Z4l?]d_;_)a?YGEYiYv`_XmZs4ZjY^Zb]6gqGaX^9Y}dXZr[g|]Y}K aFZp^k^F]M`^{O1Ys]ZCgCv4|E>}8eb7}l`{L5[Z_faQ|c2}Fj}hw^#|Ng|B||w2|Sh{v+[G}aB|MY}A{|8o}X~{E8paZ:]i^Njq]new)`-Z>haounWhN}c#{DfZ|fK]KqGZ=:u|fqoqcv}2ssm}.r{]{nIfV{JW)[K|,Z{Uxc|]l_KdCb%]cfobya3`p}G^|LZiSC]U|(X|kBlVg[kNo({O:g:|-N|qT}9?{MBiL}Sq{`P|3a|u.{Uaq:{_o|^S}jX{Fob0`;|#y_@[V[K|cw[<_ }KU|0F}d3|et{Q7{LuZttsmf^kYZ`Af`}$x}U`|Ww}d]| >}K,r&|XI|*e{C/a-bmr1fId4[;b>tQ_:]hk{b-pMge]gfpo.|(w[jgV{EC1Z,YhaY^q,_G[c_g[J0YX]`[h^hYK^_Yib,` {i6vf@YM^hdOKZZn(jgZ>bzSDc^Z%[[o9[2=/YHZ(_/Gu_`*|8z{DUZxYt^vuvZjhi^lc&gUd4|<UiA`z]$b/Z?l}YI^jaHxe|;F}l${sQ}5g}hA|e4}?o{ih}Uz{C)jPe4]H^J[Eg[|AMZMlc}:,{iz}#*|gc{Iq|/:|zK{l&}#u|myd{{M&v~nV};L|(g|I]ogddb0xsd7^V})$uQ{HzazsgxtsO^l}F>ZB]r|{7{j@cU^{{CbiYoHlng]f+nQ[bkTn/}<-d9q {KXadZYo+n|l[|lc}V2{[a{S4Zam~Za^`{HH{xx_SvF|ak=c^[v^7_rYT`ld@]:_ub%[$[m](Shu}G2{E.ZU_L_R{tz`vj(f?^}hswz}GdZ}{S:h`aD|?W|`dgG|if{a8|J1{N,}-Ao3{H#{mfsP|[ bzn+}_Q{MT{u4kHcj_q`eZj[8o0jy{p7}C|[}l){MuYY{|Ff!Ykn3{rT|m,^R|,R}$~Ykgx{P!]>iXh6[l[/}Jgcg{JYZ.^qYfYIZl[gZ#Xj[Pc7YyZD^+Yt;4;`e8YyZVbQ7YzZxXja.7SYl[s]2^/Ha$[6ZGYrb%XiYdf2]H]kZkZ*ZQ[ZYS^HZXcCc%Z|[(bVZ]]:OJQ_DZCg<[,]%Zaa [g{C00HY[c%[ChyZ,Z_`PbXa+eh`^&jPi0a[ggvhlekL]w{Yp^v}[e{~;k%a&k^|nR_z_Qng}[E}*Wq:{k^{FJZpXRhmh3^p>de^=_7`|ZbaAZtdhZ?n4ZL]u`9ZNc3g%[6b=e.ZVfC[ZZ^^^hD{E(9c(kyZ=bb|Sq{k`|vmr>izlH[u|e`}49}Y%}FT{[z{Rk}Bz{TCc/lMiAqkf(m$hDc;qooi[}^o:c^|Qm}a_{mrZ(pA`,}<2sY| adf_%|}`}Y5U;}/4|D>|$X{jw{C<|F.hK|*A{MRZ8Zsm?imZm_?brYWZrYx`yVZc3a@f?aK^ojEd {bN}/3ZH]/$YZhm^&j 9|(S|b]mF}UI{q&aM]LcrZ5^.|[j`T_V_Gak}9J[ ZCZD|^h{N9{~&[6Zd{}B}2O|cv]K}3s}Uy|l,fihW{EG`j_QOp~Z$F^zexS`dcISfhZBXP|.vn|_HYQ|)9|cr]<`&Z6]m_(ZhPcSg>`Z]5`~1`0Xcb4k1{O!bz|CN_T{LR|a/gFcD|j<{Z._[f)mPc:1`WtIaT1cgYkZOaVZOYFrEe[}T$}Ch}mk{K-^@]fH{Hdi`c*Z&|Kt{if[C{Q;{xYB`dYIX:ZB[}]*[{{p9|4GYRh2ao{DS|V+[zd$`F[ZXKadb*A] Ys]Maif~a/Z2bmclb8{Jro_rz|x9cHojbZ{GzZx_)]:{wAayeDlx}<=`g{H1{l#}9i|)=|lP{Qq}.({La|!Y{i2EZfp=c*}Cc{EDvVB|;g}2t{W4av^Bn=]ri,|y?|3+}T*ckZ*{Ffr5e%|sB{lx^0]eZb]9[SgAjS_D|uHZx]dive[c.YPkcq/}db{EQh&hQ|eg}G!ljil|BO]X{Qr_GkGl~YiYWu=c3eb}29v3|D|}4i||.{Mv})V{SP1{FX}CZW6{cm|vO{pS|e#}A~|1i}81|Mw}es|5[}3w{C`h9aL]o{}p[G`>i%a1Z@`Ln2bD[$_h`}ZOjhdTrH{[j_:k~kv[Sdu]CtL}41{I |[[{]Zp$]XjxjHt_eThoa#h>sSt8|gK|TVi[Y{t=}Bs|b7Zpr%{gt|Yo{CS[/{iteva|cf^hgn}($_c^wmb^Wm+|55jrbF|{9^ q6{C&c+ZKdJkq_xOYqZYSYXYl`8]-cxZAq/b%b*_Vsa[/Ybjac/OaGZ4fza|a)gY{P?| I|Y |,pi1n7}9bm9ad|=d{aV|2@[(}B`d&|Uz}B}{`q|/H|!JkM{FU|CB|.{}Az}#P|lk}K{|2rk7{^8^?`/|k>|Ka{Sq}Gz}io{DxZh[yK_#}9<{TRdgc]`~Z>JYmYJ]|`!ZKZ]gUcx|^E[rZCd`f9oQ[NcD_$ZlZ;Zr}mX|=!|$6ZPZYtIo%fj}CpcN|B,{VDw~gb}@hZg`Q{LcmA[(bo`<|@$|o1|Ss}9Z_}tC|G`{F/|9nd}i=}V-{L8aaeST]daRbujh^xlpq8|}zs4bj[S`J|]?G{P#{rD{]I`OlH{Hm]VYuSYUbRc*6[j`8]pZ[bt_/^Jc*[<Z?YE|Xb|?_Z^Vcas]h{t9|Uwd)_(=0^6Zb{Nc} E[qZAeX[a]P^|_J>e8`W^j_Y}R{{Jp__]Ee#e:iWb9q_wKbujrbR}CY`,{mJ}gz{Q^{t~N|? gSga`V_||:#mi}3t|/I`X{N*|ct|2g{km}gi|{={jC}F;|E}{ZZjYf*frmu}8Tdroi{T[|+~}HG{cJ}DM{Lp{Ctd&}$hi3|FZ| m}Kr|38}^c|m_|Tr{Qv|36}?Up>|;S{DV{k_as}BK{P}}9p|t`jR{sAm4{D=b4pWa[}Xi{EjwEkI}3S|E?u=X0{jf} S|NM|JC{qo^3cm]-|JUx/{Cj{s>{Crt[UXuv|D~|j|d{YXZR}Aq}0r}(_{pJfi_z}0b|-vi)Z mFe,{f4|q`b{}^Z{HM{rbeHZ|^x_o|XM|L%|uFXm}@C_{{Hhp%a7|0p[Xp+^K}9U{bP}: tT}B|}+$|b2|[^|~h{FAby[`{}xgygrt~h1[li`c4vz|,7p~b(|mviN}^pg[{N/|g3|^0c,gE|f%|7N{q[|tc|TKA{LU}I@|AZp(}G-sz{F |qZ{}F|f-}RGn6{Z]_5})B}UJ{FFb2]4ZI@v=k,]t_Dg5Bj]Z-]L]vrpdvdGlk|gF}G]|IW}Y0[G| /bo|Te^,_B}#n^^{QHYI[?hxg{[`]D^IYRYTb&kJ[cri[g_9]Ud~^_]<p@_e_XdNm-^/|5)|h_{J;{kacVopf!q;asqd}n)|.m|bf{QW|U)}b+{tL|w``N|to{t ZO|T]jF}CB|0Q{e5Zw|k |We}5:{HO{tPwf_uajjBfX}-V_C_{{r~gg|Ude;s+}KNXH}! `K}eW{Upwbk%ogaW}9EYN}YY|&v|SL{C3[5s.]Y]I]u{M6{pYZ`^,`ZbCYR[1mNg>rsk0Ym[jrE]RYiZTr*YJ{Ge|%-lf|y(`=[t}E6{k!|3)}Zk} ][G{E~cF{u3U.rJ|a9p#o#ZE|?|{sYc#vv{E=|LC}cu{N8`/`3`9rt[4|He{cq|iSYxY`}V |(Q|t4{C?]k_Vlvk)BZ^r<{CL}#h}R+[<|i=}X|{KAo]|W<`K{NW|Zx}#;|fe{IMr<|K~tJ_x}AyLZ?{GvbLnRgN}X&{H7|x~}Jm{]-| GpNu0}.ok>|c4{PYisrDZ|fwh9|hfo@{H~XSbO]Odv]%`N]b1Y]]|eIZ}_-ZA]aj,>eFn+j[aQ_+]h[J_m_g]%_wf.`%k1e#Z?{CvYu_B^|gk`Xfh^M3`afGZ-Z|[m{L}|k3cp[it ^>YUi~d>{T*}YJ{Q5{Jxa$hg|%4`}|LAgvb }G}{P=|<;Ux{_skR{cV|-*|s-{Mp|XP|$G|_J}c6cM{_=_D|*9^$ec{V;|4S{qO|w_|.7}d0|/D}e}|0G{Dq]Kdp{}dfDi>}B%{Gd|nl}lf{C-{y}|ANZr}#={T~|-(}c&{pI|ft{lsVP}){|@u}!W|bcmB{d?|iW|:dxj{PSkO|Hl]Li:}VYk@|2={fnWt{M3`cZ6|)}|Xj}BYa?vo{e4|L7|B7{L7|1W|lvYO}W8nJ|$Vih|{T{d*_1|:-n2dblk``fT{Ky|-%}m!|Xy|-a{Pz}[l{kFjz|iH}9N{WE{x,|jz}R {P|{D)c=nX|Kq|si}Ge{sh|[X{RF{t`|jsr*fYf,rK|/9}$}}Nf{y!1|<Std}4Wez{W${Fd_/^O[ooqaw_z[L`Nbv[;l7V[ii3_PeM}.h^viqYjZ*j1}+3{bt{DR[;UG}3Og,rS{JO{qw{d<_zbAh<R[1_r`iZTbv^^a}c{iEgQZ<exZFg.^Rb+`Uj{a+{z<[~r!]`[[|rZYR|?F|qppp]L|-d|}K}YZUM|=Y|ktm*}F]{D;g{uI|7kg^}%?Z%ca{N[_<q4xC]i|PqZC]n}.bDrnh0Wq{tr|OMn6tM|!6|T`{O`|>!]ji+]_bTeU}Tq|ds}n|{Gm{z,f)}&s{DPYJ`%{CGd5v4tvb*hUh~bf]z`jajiFqAii]bfy^U{Or|m+{I)cS|.9k:e3`^|xN}@Dnlis`B|Qo{`W|>||kA}Y}{ERYuYx`%[exd`]|OyiHtb}HofUYbFo![5|+]gD{NIZR|Go}.T{rh^4]S|C9_}xO^i`vfQ}C)bK{TL}cQ|79iu}9a];sj{P.o!f[Y]pM``Jda^Wc9ZarteBZClxtM{LW}l9|a.mU}KX}4@{I+f1}37|8u}9c|v${xGlz}jP{Dd1}e:}31}%3X$|22i<v+r@~mf{sN{C67G97855F4YL5}8f{DT|xy{sO{DXB334@55J1)4.G9A#JDYtXTYM4, YQD9;XbXm9SX]IB^4UN=Xn<5(;(F3YW@XkH-X_VM[DYM:5XP!T&Y`6|,^{IS-*D.H>:LXjYQ0I3XhAF:9:(==.F*3F1189K/7163D,:@|e2{LS36D4hq{Lw/84443@4.933:0307::6D7}&l{Mx657;89;,K5678H&93D(H<&<>0B90X^I;}Ag1{P%3A+>><975}[S{PZE453?4|T2{Q+5187;>447:81{C=hL6{Me^:=7ii{R=.=F<81;48?|h8}Uh{SE|,VxL{ST,7?9Y_5Xk3A#:$%YSYdXeKXOD8+TXh7(@>(YdXYHXl9J6X_5IXaL0N?3YK7Xh!1?XgYz9YEXhXaYPXhC3X`-YLY_XfVf[EGXZ5L8BXL9YHX]SYTXjLXdJ: YcXbQXg1PX]Yx4|Jr{Ys4.8YU+XIY`0N,<H%-H;:0@,74/:8546I=9177154870UC]d<C3HXl7ALYzXFXWP<<?E!88E5@03YYXJ?YJ@6YxX-YdXhYG|9o{`iXjY_>YVXe>AYFX[/(I@0841?):-B=14337:8=|14{c&93788|di{cW-0>0<097/A;N{FqYpugAFT%X/Yo3Yn,#=XlCYHYNX[Xk3YN:YRT4?)-YH%A5XlYF3C1=NWyY}>:74-C673<69545v {iT85YED=64=.F4..9878/D4378?48B3:7:7/1VX[f4{D,{l<5E75{dAbRB-8-@+;DBF/$ZfW8S<4YhXA.(5@*11YV8./S95C/0R-A4AXQYI7?68167B95HA1*<M3?1/@;/=54XbYP36}lc{qzSS38:19?,/39193574/66878Yw1X-87E6=;964X`T734:>86>1/=0;(I-1::7ALYGXhF+Xk[@W%TYbX7)KXdYEXi,H-XhYMRXfYK?XgXj.9HX_SX]YL1XmYJ>Y}WwIXiI-3-GXcYyXUYJ$X`Vs[7;XnYEZ;XF! 3;%8;PXX(N3Y[)Xi1YE&/ :;74YQ6X`33C;-(>Xm0(TYF/!YGXg8 9L5P01YPXO-5%C|qd{{/K/E6,=0144:361:955;6443@?B7*7:F89&F35YaX-CYf,XiFYRXE_e{}sF 0*7XRYPYfXa5YXXY8Xf8Y~XmA[9VjYj*#YMXIYOXk,HHX40YxYMXU8OXe;YFXLYuPXP?EB[QV0CXfY{:9XV[FWE0D6X^YVP*$4%OXiYQ(|xp|%c3{}V`1>Y`XH00:8/M6XhQ1:;3414|TE|&o@1*=81G8<3}6<|(f6>>>5-5:8;093B^3U*+*^*UT30XgYU&7*O1953)5@E78--F7YF*B&0:%P68W9Zn5974J9::3}Vk|-,C)=)1AJ4+<3YGXfY[XQXmT1M-XcYTYZXCYZXEYXXMYN,17>XIG*SaS|/eYJXbI?XdNZ+WRYP<F:R PXf;0Xg`$|1GX9YdXjLYxWX!ZIXGYaXNYm6X9YMX?9EXmZ&XZ#XQ>YeXRXfAY[4 ;0X!Zz0XdN$XhYL XIY^XGNXUYS/1YFXhYk.TXn4DXjB{jg|4DEX]:XcZMW=A.+QYL<LKXc[vV$+&PX*Z3XMYIXUQ:ZvW< YSXFZ,XBYeXMM)?Xa XiZ4/EXcP3%}&-|6~:1(-+YT$@XIYRBC<}&,|7aJ6}bp|8)K1|Xg|8C}[T|8Q.89;-964I38361<=/;883651467<7:>?1:.}le|:Z=39;1Y^)?:J=?XfLXbXi=Q0YVYOXaXiLXmJXO5?.SFXiCYW}-;|=u&D-X`N0X^,YzYRXO(QX_YW9`I|>hZ:N&X)DQXP@YH#XmNXi$YWX^=!G6YbYdX>XjY|XlX^XdYkX>YnXUXPYF)FXT[EVTMYmYJXmYSXmNXi#GXmT3X8HOX[ZiXN]IU2>8YdX1YbX<YfWuZ8XSXcZU%0;1XnXkZ_WTG,XZYX5YSX Yp 05G?XcYW(IXg6K/XlYP4XnI @XnO1W4Zp-9C@%QDYX+OYeX9>--YSXkD.YR%Q/Yo YUX].Xi<HYEZ2WdCE6YMXa7F)=,D>-@9/8@5=?7164;35387?N<618=6>7D+C50<6B03J0{Hj|N9$D,9I-,.KB3}m |NzE0::/81YqXjMXl7YG; [.W=Z0X4XQY]:MXiR,XgM?9$9>:?E;YE77VS[Y564760391?14941:0=:8B:;/1DXjFA-564=0B3XlH1+D85:0Q!B#:-6&N/:9<-R3/7Xn<*3J4.H:+334B.=>30H.;3833/76464665755:/83H6633:=;.>5645}&E|Y)?1/YG-,93&N3AE@5 <L1-G/8A0D858/30>8<549=@B8] V0[uVQYlXeD(P#ID&7T&7;Xi0;7T-$YE)E=1:E1GR):--0YI7=E<}n9|aT6783A>D7&4YG7=391W;Zx<5+>F#J39}o/|cc;6=A050EQXg8A1-}D-|d^5548083563695D?-.YOXd37I$@LYLWeYlX<Yd+YR A$;3-4YQ-9XmA0!9/XLY_YT(=5XdDI>YJ5XP1ZAW{9>X_6R(XhYO65&J%DA)C-!B:97#A9;@?F;&;(9=11/=657/H,<8}bz|j^5446>.L+&Y^8Xb6?(CYOXb*YF(8X`FYR(XPYVXmPQ%&DD(XmZXW??YOXZXfCYJ79,O)XnYF7K0!QXmXi4IYFRXS,6<%-:YO(+:-3Q!1E1:W,Zo}Am|n~;3580534*?3Zc4=9334361693:30C<6/717:<1/;>59&:4}6!|rS36=1?75<8}[B|s809983579I.A.>84758=108564741H*9E{L{|u%YQ<%6XfH.YUXe4YL@,>N}Tv|ve*G0X)Z;/)3@A74(4P&A1X:YVH97;,754*A66:1 D739E3553545558E4?-?K17/770843XAYf838A7K%N!YW4.$T19Z`WJ*0XdYJXTYOXNZ 1XaN1A+I&Xi.Xk3Z3GB&5%WhZ1+5#Y[X<4YMXhQYoQXVXbYQ8XSYUX4YXBXWDMG0WxZA[8V+Z8X;D],Va$%YeX?FXfX[XeYf<X:Z[WsYz8X_Y]%XmQ(!7BXIZFX]&YE3F$(1XgYgYE& +[+W!<YMYFXc;+PXCYI9YrWxGXY9DY[!GXiI7::)OC;*$.>N*HA@{C|}&k=:<TB83X`3YL+G4XiK]i}(fYK<=5$.FYE%4*5*H*6XkCYL=*6Xi6!Yi1KXR4YHXbC8Xj,B9ZbWx/XbYON#5B}Ue}+QKXnF1&YV5XmYQ0!*3IXBYb71?1B75XmF;0B976;H/RXU:YZX;BG-NXj;XjI>A#D3B636N;,*%<D:0;YRXY973H5)-4FXOYf0:0;/7759774;7;:/855:543L43<?6=E,.A4:C=L)%4YV!1(YE/4YF+ F3%;S;&JC:%/?YEXJ4GXf/YS-EXEYW,9;E}X$}547EXiK=51-?71C%?57;5>463553Zg90;6447?<>4:9.7538XgN{|!}9K/E&3-:D+YE1)YE/3;37/:05}n<}:UX8Yj4Yt864@JYK..G=.(A Q3%6K>3(P3#AYE$-6H/456*C=.XHY[#S.<780191;057C)=6HXj?955B:K1 E>-B/9,;5.!L?:0>/.@//:;7833YZ56<4:YE=/:7Z_WGC%3I6>XkC*&NA16X=Yz2$X:Y^&J48<99k8}CyB-61<18K946YO4{|N}E)YIB9K0L>4=46<1K0+R;6-=1883:478;4,S+3YJX`GJXh.Yp+Xm6MXcYpX(>7Yo,/:X=Z;Xi0YTYHXjYmXiXj;*;I-8S6N#XgY}.3XfYGO3C/$XjL$*NYX,1 6;YH&<XkK9C#I74.>}Hd`A748X[T450[n75<4439:18A107>|ET}Rf<1;14876/Yb983E<5.YNXd4149>,S=/4E/<306443G/06}0&}UkYSXFYF=44=-5095=88;63844,9E6644{PL}WA8:>)7+>763>>0/B3A545CCnT}Xm|dv}Xq1L/YNXk/H8;;.R63351YY747@15YE4J8;46;.38.>4A369.=-83,;Ye3?:3@YE.4-+N353;/;@(X[YYD>@/05-I*@.:551741Yf5>6A443<3535;.58/86=D4753442$635D1>0359NQ @73:3:>><Xn?;43C14 ?Y|X611YG1&<+,4<*,YLXl<1/AIXjF*N89A4Z576K1XbJ5YF.ZOWN.YGXO/YQ01:4G38Xl1;KI0YFXB=R<7;D/,/4>;$I,YGXm94@O35Yz66695385.>:6A#5}W7n^4336:4157597434433<3|XA}m`>=D>:4A.337370?-6Q96{`E|4A}C`|Qs{Mk|J+~r>|o,wHv>Vw}!c{H!|Gb|*Ca5}J||,U{t+{CN[!M65YXOY_*B,Y[Z9XaX[QYJYLXPYuZ%XcZ8LY[SYPYKZM<LMYG9OYqSQYM~[e{UJXmQYyZM_)>YjN1~[f3{aXFY|Yk:48YdH^NZ0|T){jVFYTZNFY^YTYN~[h{nPYMYn3I]`EYUYsYIZEYJ7Yw)YnXPQYH+Z.ZAZY]^Z1Y`YSZFZyGYHXLYG 8Yd#4~[i|+)YH9D?Y^F~Y7|-eYxZ^WHYdYfZQ~[j|3>~[k|3oYmYqY^XYYO=Z*4[]Z/OYLXhZ1YLZIXgYIHYEYK,<Y`YEXIGZI[3YOYcB4SZ!YHZ*&Y{Xi3~[l|JSY`Zz?Z,~[m|O=Yi>??XnYWXmYS617YVYIHZ(Z4[~L4/=~[n|Yu{P)|];YOHHZ}~[o33|a>~[r|aE]DH~[s|e$Zz~[t|kZFY~XhYXZB[`Y}~[u|{SZ&OYkYQYuZ2Zf8D~[v}% ~[w3},Q[X]+YGYeYPIS~[y}4aZ!YN^!6PZ*~[z}?E~[{3}CnZ=~[}}EdDZz/9A3(3S<,YR8.D=*XgYPYcXN3Z5 4)~[~}JW=$Yu.XX~] }KDX`PXdZ4XfYpTJLY[F5]X~[2Yp}U+DZJ::<446[m@~]#3}]1~]%}^LZwZQ5Z`/OT<Yh^ -~]&}jx[ ~m<z!%2+~ly4VY-~o>}p62yz!%2+Xf2+~ly4VY-zQ`z (=] 2z~o2\",C={\" \":0,\"!\":1},c=34,i=2,p,s=\"\",u=String.fromCharCode,t=u(12539),m=[];while(++c<127)C[u(c)]=c^39&&c^92?i++:0;i=0;while(0<=(c=C[a.charAt(i++)]))if(16==c)if((c=C[a.charAt(i++)])<87){if(86==c)c=1879;while(c--){/*s+=u(*/++p/*)*/;m.push(p)}}else{/*s+=s.substr(8272,360);*/m=m.concat(m.slice(8272,8632))}else if(c<86){/*s+=u(*/p+=c<51?c-16:(c-55)*92+C[a.charAt(i++)]/*)*/;m.push(p)}else if((c=((c-86)*92+C[a.charAt(i++)])*92+C[a.charAt(i++)])<49152){/*s+=u(*/p=c<40960?c:c|57344/*)*/;m.push(p)}else{c&=511;while(c--){/*s+=t*/;m.push(12539)}p=12539}return {\"array\":m}')();\r\n\r\n// var JCT8836=(JCT11280=JISX0208.s).substring(0,8836);\r\n\r\n/**\r\n * U2CP,CP2U Unicode番号とJIS番号の対応テーブル\r\n * Unicode番号はスカラ値、JIS番号は区点位置(1面、1～119区、1～94点)を1+7+7bitの15bit整数にしたものを用いる。\r\n * \r\n * JCT11280はWindows-31Jのテーブルで、重複登録された漢字がある。 重複登録された漢字の区点位置を求める場合はWindows\r\n * APIの仕様に従い (1)JIS X 0208-1990の登録文字である場合は、これに統一\r\n * (2)「NEC特殊文字」「IBM拡張文字」が重複する場合は、「NEC特殊文字」に統一\r\n * (3)「NEC選定IBM拡張文字」「IBM拡張文字」が重複する場合は、「IBM拡張文字」に統一 のルールでコードポイントに変換する。\r\n * 言い換えると,1～88区までは先に現れたコードポイントを優先し、89～92区のNEC選定IBM拡張文字は利用せず\r\n * 代わりに115～119区に現れるIBM拡張文字のコードポイントを利用する\r\n * \r\n * @see http://ja.wikipedia.org/wiki/Microsoft%E3%82%B3%E3%83%BC%E3%83%89%E3%83%9A%E3%83%BC%E3%82%B8932#Windows-31J_.E3.81.AB.E9.87.8D.E8.A4.87.E7.99.BB.E9.8C.B2.E3.81.95.E3.82.8C.E3.81.9F.E3.82.B3.E3.83.BC.E3.83.89\r\n */\r\nvar U2CP={},CP2U={},P1=1<<14;\r\n(function(array) {\r\n    var sc,cp,i,il=array.length;\r\n    for(i=0;i<il;i++) {\r\n        sc = array[i];\r\n        if(sc===12539&&i>5){continue;}\r\n        cp = P1|(i/94|0)<<7|i%94;\r\n        CP2U[cp] = sc;\r\n        if((i<8272||10715<i) && U2CP[sc]===undefined) {U2CP[sc] = cp;}\r\n    }\r\n})(JISX0208.array);\r\n\r\nvar charset={Unicode:{},SJIS:{},EUCJP:{},JIS7:{},JIS8:{},UTF7:{},UTF8:{},UTF16LE:{},UTF16BE:{},MUTF7:{}},\r\n        enc={Text:{},Unicode:{},URI:{},Base64:{}};\r\n\r\n/**\r\n * 文字列を16bit整数の配列に変換する\r\n */\r\nenc.Text.parse = function(str){\r\n    var a=[],i,il=str.length;\r\n    for(i=0;i<il;i++) {\r\n        a.push(str.charCodeAt(i));\r\n    }\r\n    return a;\r\n};\r\n/**\r\n * 16bit整数の配列を文字列に変換する\r\n */\r\nenc.Text.stringify = function(array) {\r\n    var s=\"\",i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        s+=String.fromCharCode(array[i]);\r\n    }\r\n    return s;\r\n};\r\n/**\r\n * 文字列を24bit(0..0x10FFFF)整数の配列に変換する\r\n */\r\ncharset.Unicode.parse = function(str){\r\n    var a=[],i,il=str.length,c;\r\n    for(i=0;i<il;i++) {\r\n        // scalar UTF-16\r\n        // 000uuuuuxxxxxxyyyyyyyyyy 110110wwwwxxxxxx 110111yyyyyyyyyy wwww =\r\n        // uuuuu - 1\r\n        55295<(c=str.charCodeAt(i))&&c<56320&&(c=((c&1023)+64<<10)+(str.charCodeAt(++i)&1023));\r\n        a.push(c);\r\n    }\r\n    return a;\r\n};\r\n/**\r\n * 24bit整数の配列を文字列に変換する\r\n */\r\ncharset.Unicode.stringify = function(array){\r\n    var s=\"\",i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        s+=(c=array[i])>65535?String.fromCharCode((c>>>10)-64|55296,(c&1023|56320)):String.fromCharCode(c);\r\n    }\r\n    return s;\r\n};\r\ncharset.Unicode.fromU=charset.Unicode.toU=function(a){return a;}\r\n// http://charset.7jp.net/sjis.html\r\n// http://ja.wikipedia.org/wiki/Microsoft%E3%82%B3%E3%83%BC%E3%83%89%E3%83%9A%E3%83%BC%E3%82%B8932\r\n/**\r\n * UTF-16の配列からSJISの8bit配列に変換する\r\n * \r\n * @param {Array}\r\n *            array Unicodeの24it配列\r\n * @return {Array} SJISの8bit配列\r\n */\r\ncharset.SJIS.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,s,m;\r\n    for(i=0;i<il;i++) {\r\n        c=array[i];\r\n        c<128 ? a.push(c) : \r\n            65376<c&&c<65440 ? a.push(c-65216) : \r\n/*\r\n * (c=JCT11280.indexOf((s=String.fromCharCode(c))))<0 ? a.push(129,69) :\r\n * a.push( (m=((c<8272?c:(c=JCT11280.lastIndexOf(s)))-(c%=188))/188)<31 ?\r\n * m+129 : m+193, //mは(区-1)/2 c+=c<63?64:65 )\r\n */\r\n                (c=U2CP[c]||-1)<0||c>31499 ? a.push(129,69) : a.push(\r\n                    (m=(c>>>7&127),c=(c&127)+(m&1)*94,m=m>>>1)<31 ? m+129 : m+193,\r\n                    c+=c<63?64:65\r\n                )\r\n\r\n    }\r\n    return a;\r\n};\r\n/**\r\n * SJISの8bit配列をUnicodeの配列に変換する\r\n * \r\n * @param {Array}\r\n *            array SJISの8bit配列\r\n * @return {Array} Unicodeの24bit配列\r\n */\r\ncharset.SJIS.toU = function(array) {\r\n    var a=[],i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        (c<128||160<c&&c<224) \r\n            ? a.push(160<c?c+65216:c) // ASCII+ｶﾅ\r\n// : a.push(\r\n// JCT11280.charAt((c<160?c-129:c-193)*188+(c=array[++i],c<127?c-64:c-65)).charCodeAt(0)\r\n// )\r\n            : a.push( CP2U[P1|(c<160?c-129:c-193)<<8|(c=array[++i],c<127?c-64:c<159?c-65:c-31)] )\r\n    }\r\n    return a;\r\n};\r\n// http://www.unixuser.org/~euske/doc/kanjicode/\r\n// JIS区点位置からSJISに変換\r\ncharset.SJIS.fromJ = function(array) {\r\n    var a=[],i,il=array.length,c,m;\r\n    for(i=0;i<il;i++) {\r\n        c=array[i];\r\n        c<224 ? a.push(c)\r\n            : c>31499 ? a.push(129,69)\r\n                : a.push(\r\n                    (m=(c>>>7&127),c=(c&127)+(m&1)*94,m=m>>>1)<31 ? m+129 : m+193,\r\n                    c+=c<63?64:65\r\n                )\r\n    }\r\n    return a;\r\n};\r\ncharset.SJIS.toJ = function(array) {\r\n    var a=[],i,il=array.length,c,k;\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        (c<128||160<c&&c<224) ? a.push(c) // ASCII+ｶﾅ\r\n            : a.push( P1|(c<160?c-129:c-193)<<8|(c=array[++i],c<127?c-64:c<159?c-65:c-31) )\r\n    }\r\n    return a;\r\n};\r\n// http://ja.wikipedia.org/wiki/EUC-JP, http://charset.7jp.net/euc.html\r\ncharset.EUCJP.fromU = function(array) {\r\n    var a=[],i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<128 ? a.push(c) : \r\n            65376<c&&c<65440 ? a.push(142,c-65216) : \r\n/*\r\n * (c=JCT8836.indexOf(String.fromCharCode(c)))<0 ? a.push(161,166) : (\r\n * a.push((c-(c%=94))/94+161, c+161)\r\n */\r\n                (c=U2CP[c]||-1)<0||c>31499 ? a.push(161,166) : (\r\n                    a.push((c>>>7&127)+161, (c&127)+161)\r\n                )\r\n    }\r\n    return a;\r\n};\r\ncharset.EUCJP.toU = function(array) {\r\n    var a=[],i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        (c<161)\r\n            ? a.push(c<128 ? c : array[++i]+65216) // ASCII+ｶﾅ\r\n// : a.push(JCT8836.charAt((c-161)*94 + array[++i]-161).charCodeAt(0))\r\n                : a.push(CP2U[P1|(c-161)<<7|array[++i]-161])\r\n    }\r\n    return a;\r\n};\r\ncharset.EUCJP.fromJ = function(array) {\r\n    var a=[],i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<224 ? a.push(c<128?c:c+65216)\r\n            : c>31499 ? a.push(161,166)\r\n                : a.push((c>>>7&127)+161, (c&127)+161)\r\n    }\r\n    return a;\r\n};\r\ncharset.EUCJP.toJ = function(array) {\r\n    var a=[],i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        (c<161) ? a.push(c<128 ? c : array[++i]) // ASCII+ｶﾅ\r\n            : a.push( P1|(c-161)<<7|array[++i]-161 )\r\n    }\r\n    return a;\r\n};\r\n// http://charset.7jp.net/jis.html,\r\n// http://yasu.asuka.net/translations/RFC1468.html\r\ncharset.JIS7.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0]; // \"\\e(B\":ASCIIの開始,\"\\e(I\":半角カタカナの開始,\"\\e$B\":漢字の開始\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<128 ? ((e!=es[0] && (e=es[0],a.push(27,40,66))),a.push(c))\r\n            : 65376<c&&c<65440 ? ((e!=es[1] && (e=es[1],a.push(27,40,73))),a.push(c-65344))\r\n                : (e!=es[2] && (e=es[2],a.push(27,36,66)),\r\n// (c=JCT8836.indexOf(String.fromCharCode(c)))<0 ? a.push(33,38) :\r\n// a.push((c-(c%=94))/94+33,c+33))\r\n                        (c=U2CP[c]||-1)<0||c>31499 ? a.push(33,38) : a.push((c>>>7&127)+33,(c&127)+33))\r\n    }\r\n    e!==es[0] && a.push(27,40,66); // ASCIIで終わっている必要がある\r\n    return a;\r\n};\r\ncharset.JIS7.toU = function(array) {\r\n// \"\\e(B\":ASCIIの開始,\"\\e(I\":半角カタカナの開始,\"\\e$B\":漢字の開始, \"\\e(J\":ローマ字セット(≒ASCII)開始,\r\n// \"\\e$@\":漢字の開始(旧)\r\n// 0x1b2842(27,40,66), 0x1b2849(27,40,73), 0x1b2442(27,36,66),\r\n// 0x1b284a(27,40,74), 0x1b2440(27,36,64)\r\n// [27,40,66]or[27,40,74]ならASCII、[27,40,73]なら半角カナ、[27,36,66]or[27,36,64]なら漢字としてデコードする\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0];\r\n    for(i=0;i<il;i++) {\r\n        array[i]===27 && (array[++i]===36?(e=es[2],i+=2):(e=(array[++i]===73?es[1]:es[0]),i++));\r\n        (i<il)&&(c=array[i]) && ( \r\n// e===es[2] ? a.push(JCT8836.charAt((c-33)*94+array[++i]-33).charCodeAt(0))\r\n                e===es[2] ? a.push(CP2U[P1|c-33<<7|array[++i]-33])\r\n                : e===es[1] ? a.push(c+65344)\r\n                    : a.push(c<128 ? c : c+65216)\r\n        );\r\n    }\r\n    return a;\r\n};\r\ncharset.JIS7.fromJ = function(array) {\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0];\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<128 ? ((e!=es[0] && (e=es[0],a.push(27,40,66))),a.push(c))\r\n            : 160<c&&c<224 ? ((e!=es[1] && (e=es[1],a.push(27,40,73))),a.push(c))\r\n                : (e!=es[2] && (e=es[2],a.push(27,36,66)),\r\n                    c<P1||c>31499 ? a.push(33,38) : a.push((c>>>7&127)+33,(array[++i]&127)+33))\r\n    }\r\n    e!==es[0] && a.push(27,40,66); // ASCIIで終わっている必要がある\r\n    return a;\r\n};\r\ncharset.JIS7.toJ = function(array) {\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0];\r\n    for(i=0;i<il;i++) {\r\n        array[i]===27 && (array[++i]===36?(e=es[2],i+=2):(e=(array[++i]===73?es[1]:es[0]),i++));\r\n        (i<il)&&(c=array[i]) && ( \r\n            e===es[2] ? a.push(P1|c-33<<7|array[++i]-33)\r\n                : e===es[1] ? a.push(c+128) : a.push(c)\r\n        );\r\n    }\r\n    return a;\r\n};\r\ncharset.JIS = charset.JIS7;\r\n// JIS7と違い半角カナは ASCIIシーケンス[\\e(B]のA1-DFに入る\r\ncharset.JIS8.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0];\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<128||65376<c&&c<65440 ? ((e!=es[0] && (e=es[0],a.push(27,40,66))),a.push(c<128?c:c-65216))\r\n            : (e!==es[2] && (e=es[2],a.push(27,36,66)),\r\n// (c=JCT8836.indexOf(String.fromCharCode(c)))<0 ? a.push(33,38) :\r\n// a.push((c-(c%=94))/94+33,c+33))\r\n                    (c=U2CP[c]||-1)<0||c>31499 ? a.push(33,38) : a.push((c>>>7&127)+33,(c&127)+33))\r\n    }\r\n    e!==es[0] && a.push(27,40,66);\r\n    return a;\r\n};\r\n// 半角カナシーケンスも念のため考慮する\r\ncharset.JIS8.toU = function(array) {\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0];\r\n    for(i=0;i<il;i++) {\r\n        array[i]===27&&(array[++i]===36?(e=es[2],i+=2):(e=(array[++i]===73?es[1]:es[0]),i++));\r\n        (i<il)&&(c=array[i]) && (\r\n// e===es[2] ? a.push(JCT8836.charAt((c-33)*94+array[++i]-33).charCodeAt(0))\r\n                e===es[2] ? a.push(CP2U[P1|c-33<<7|array[++i]-33])\r\n                : e===es[1] ? a.push(c+65344)\r\n                    : a.push(c<128 ? c : c+65216)\r\n        );\r\n    }\r\n    return a;\r\n};\r\ncharset.JIS8.fromJ = function(array) {\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0];\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<128||160<c&&c<224 ? ((e!=es[0] && (e=es[0],a.push(27,40,66))),a.push(c))\r\n            : (e!==es[2] && (e=es[2],a.push(27,36,66)),\r\n                c<P1||c>31499 ? a.push(33,38) : a.push((c>>>7&127)+33,(array[++i]&127)+33))\r\n    }\r\n    e!==es[0] && a.push(27,40,66);\r\n    return a;\r\n};\r\ncharset.JIS8.toJ = charset.JIS7.toJ;\r\n// http://ja.wikipedia.org/wiki/UTF-7\r\n// http://suika.fam.cx/~wakaba/wiki/sw/n/UTF-7\r\n// 62のアルファベットと9の記号 ['(),-./:?] はそのまま表記する。\r\n// [\\t\\n\\r !\"#$%&*;<=>@[]^_`{|}]は表記してもいいし符号化してもいい(fromUでは符号化する)\r\ncharset.UTF7.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,tmp=[];\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        38<c&&c<59&&c!=42||c===63||64<c&&c<91||96<c&&c<123 ? (a.push(c),c===43&&a.push(45)) : (a.push(43),tmp.push(c))\r\n        if (tmp.length>0) {\r\n            while((c=array[i+1]) && !(38<c&&c<59&&c!=42||c===63||64<c&&c<91||96<c&&c<123)) {tmp.push(c);i++;}\r\n            a = a.concat(enc.Base64.fromU(tmp,charset.UTF16BE));\r\n            a.push(45);\r\n            tmp=[];\r\n        }\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF7.toU = function(array) {\r\n    var a=[],i,il=array.length,c,tmp=[];\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        8<c&&c<11||c===13||31<c&&c<126&&c!==43&&c!==92\r\n            ? a.push(c) // (?![^+\\\\~])[ !-}]\r\n            : c===43 // \"+\"\r\n                ? (c=array[++i])===45 // \"-\"\r\n                    ? a.push(c)   // \"+-\" => \"+\"\r\n                    : tmp.push(c) // Base64\r\n                : a.push(63); // 不正な文字は?に\r\n        if (tmp.length>0) {\r\n            while((c=array[i+1]) && (c===43||46<c&&c<58||64<c&&c<91||96<c&&c<123)) {tmp.push(c);i++;}\r\n            array[i+1]===45 && i++; // 直後がBase64以外の文字なら-を省略可能(直後が-だったら-はスキップしそれ以外だったら次に読む)\r\n            a = a.concat(enc.Base64.toU(tmp,charset.UTF16BE));\r\n            tmp=[];\r\n        }\r\n    }\r\n    return a;\r\n};\r\n// Modified UTF-7 の実装 http://tools.ietf.org/rfc/rfc3501.txt\r\n/*\r\n * 5.1.3. Mailbox International Naming Convention By convention, international\r\n * mailbox names in IMAP4rev1 are specified using a modified version of the\r\n * UTF-7 encoding described in [UTF-7]. Modified UTF-7 may also be usable in\r\n * servers that implement an earlier version of this protocol. In modified\r\n * UTF-7, printable US-ASCII characters, except for \"&\", represent themselves;\r\n * that is, characters with octet values 0x20-0x25 and 0x27-0x7e. The character\r\n * \"&\" (0x26) is represented by the two-octet sequence \"&-\". All other\r\n * characters (octet values 0x00-0x1f and 0x7f-0xff) are represented in modified\r\n * BASE64, with a further modification from [UTF-7] that \",\" is used instead of\r\n * \"/\". Modified BASE64 MUST NOT be used to represent any printing US-ASCII\r\n * character which can represent itself. \"&\" is used to shift to modified BASE64\r\n * and \"-\" to shift back to US-ASCII. There is no implicit shift from BASE64 to\r\n * US-ASCII, and null shifts (\"-&\" while in BASE64; note that \"&-\" while in\r\n * US-ASCII means \"&\") are not permitted. However, all names start in US-ASCII,\r\n * and MUST end in US-ASCII; that is, a name that ends with a non-ASCII\r\n * ISO-10646 character MUST end with a \"-\").\r\n */\r\ncharset.MUTF7.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,tmp=[];\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        31<c&&c<127 ? (a.push(c),c===38&&a.push(45)) : (a.push(38),tmp.push(c))\r\n        if (tmp.length>0) {\r\n            while((c=array[i+1]) && (c<32||126<c)) {tmp.push(c);i++;}\r\n            tmp = enc.Base64.fromU(tmp,charset.UTF16BE);\r\n            for(j=0;j<tmp.length;j++){tmp[j]===47&&(tmp[j]=44)}; // \"/\" =>\r\n                                                                    // \",\"\r\n            a = a.concat(tmp);\r\n            a.push(45);\r\n            tmp=[];\r\n        }\r\n    }\r\n    return a;\r\n};\r\ncharset.MUTF7.toU = function(array) {\r\n    var a=[],i,il=array.length,c,tmp=[];\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        31<c&&c<127&&c!==38\r\n            ? a.push(c) // &以外\r\n            : c===38 // \"&\"\r\n                ? (c=array[++i])===45 // \"-\"\r\n                    ? a.push(38)   // \"&-\" => \"&\"\r\n                    : tmp.push(c) // Base64\r\n                : a.push(65533); // 不正な文字は\\ufffdに\r\n        if (tmp.length>0) {\r\n            while((c=array[i+1]) && (42<c&&c<45||47<c&&c<58||64<c&&c<91||96<c&&c<123)) {tmp.push(c===44?47:c);i++;}\r\n            array[i+1]===45 && i++;\r\n            a = a.concat(enc.Base64.toU(tmp,charset.UTF16BE));\r\n            tmp=[];\r\n        }\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF8.fromU = function(array) {\r\n    var a=[],i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<128 ? a.push(c)\r\n            : c<2048 ? a.push(c>>>6|192,c&63|128)\r\n                : c<65536 ? a.push(c>>>12|224,c>>>6&63|128,c&63|128)\r\n                    : a.push(c>>>18|240,c>>>12&63|128,c>>>6&63|128,c&63|128)\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF8.toU = function(array) {\r\n    var a=[],i=0,il=array.length,c;\r\n    array[0]===239&&array[1]===187&&array[2]===191&&(i=3);// BOM\r\n    for(;i<il;i++) a.push(\r\n        (c=array[i])<128 ? c\r\n            : c<224 ? (c&31)<<6|array[++i]&63\r\n                : c<240 ? ((c&15)<<6|array[++i]&63)<<6|array[++i]&63\r\n                    : (((c&7)<<6|array[++i]&63)<<6|array[++i]&63)<<6|array[++i]&63\r\n    );\r\n    return a;\r\n};\r\ncharset.UTF16LE.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,m;\r\n    for(i=0;i<il;i++) {\r\n        // scalar UTF-16\r\n        // 000uuuuuxxxxxxyyyyyyyyyy 110110wwwwxxxxxx 110111yyyyyyyyyy wwww =\r\n        // uuuuu - 1\r\n        (c=array[i])>65535&&(m=(c>>>10)-64|55296,a.push(m&255,m>>>8),c=(c&1023|56320));\r\n        a.push(c&255,c>>>8);\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF16LE.toU = function(array) {\r\n    var a=[],i=0,il=array.length,c;\r\n    array[0]===255&&array[1]===254&&(i=2);\r\n    for(;i<il;i++) {\r\n        c=array[i]|array[++i]<<8;\r\n        55295<c&&c<56320&&(c=((c&1023)+64<<10)+((array[++i]|array[++i]<<8)&1023));\r\n        a.push(c);\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF16BE.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,m;\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])>65535&&(m=(c>>>10)-64|55296,a.push(m>>>8,m&255),c=(c&1023|56320));\r\n        a.push(c>>>8,c&255);\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF16BE.toU = function(array) {\r\n    var a=[],i=0,il=array.length,c;\r\n    array[0]===254&&array[1]===255&&(i=2);\r\n    for(;i<il;i++) {\r\n        c=array[i]<<8|array[++i];\r\n        55295<c&&c<56320&&(c=((c&1023)+64<<10)+((array[++i]<<8|array[++i])&1023));\r\n        a.push(c);\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF16 = charset.UTF16BE;\r\n/**\r\n * convert_array 他の文字コード配列に変換する\r\n * \r\n * @memberof Util.Encoding\r\n * @param {Array}\r\n *            array 変換前配列\r\n * @param {String|Object}\r\n *            to 変換先の文字コード('SJIS','UTF8',Encoding.charset.SJIS,など)\r\n * \r\n * @param {String|Object}\r\n *            from 変換元の文字コード('SJIS','UTF8',Encoding.charset.SJIS,など)<BR>\r\n *            \"SJIS\",\"EUCJP\",\"JIS7\",\"JIS8\",\"Unicode\",\"UTF7\",\"UTF8\",\"UTF16LE\",\"UTF16BE\",\"MUTF7\"\r\n * @return {Array} 変換後配列\r\n */\r\ncharset.convert_array = function(array, to, from) {\r\n    from=from||charset.Unicode;\r\n    (!from.hasOwnProperty(\"toU\")) && (from=charset[from]);\r\n    (!to.hasOwnProperty(\"fromU\")) && (to=charset[to]);\r\n    if (to==from) {return array;}\r\n    if(from.hasOwnProperty(\"toJ\") && to.hasOwnProperty(\"fromJ\")) return to.fromJ(from.toJ(array));\r\n    return to.fromU(from.toU(array));\r\n}\r\n/**\r\n * convert 他の文字コードに変換する\r\n * \r\n * @memberof Util.Encoding\r\n * @param {String}\r\n *            str 変換前文字列\r\n * @param {String|Object}\r\n *            to 変換先の文字コード('SJIS','UTF8',Encoding.charset.SJIS,など)\r\n * @param {String|Object}\r\n *            from 変換元の文字コード('SJIS','UTF8',Encoding.charset.SJIS,など)<BR>\r\n *            \"SJIS\",\"EUCJP\",\"JIS7\",\"JIS8\",\"Unicode\",\"UTF7\",\"UTF8\",\"UTF16LE\",\"UTF16BE\",\"MUTF7\"\r\n * \r\n * @return {String} 変換後文字列\r\n */\r\ncharset.convert = function(str, to, from) {\r\n    var array,parser;\r\n    from=from||charset.Unicode;\r\n    (!from.hasOwnProperty(\"toU\"))&&(from=charset[from]);\r\n    (!to.hasOwnProperty(\"fromU\"))&&(to=charset[to]);\r\n    if (to==from) {return str;}\r\n    parser = from===charset.Unicode ? from : enc.Text;\r\n    array = parser.parse(str);\r\n    return charset.Unicode.stringify(charset.convert_array(array, to, from));\r\n};\r\n/**\r\n * Unicode配列をBase64符号化する\r\n * \r\n * @memberof Util.Encoding\r\n * @param {Array}\r\n *            array 24bit配列\r\n * @param {String|Object}\r\n *            to 変換する文字コード(default:UTF8)\r\n * @return {Array} Base64符号化された6bit配列\r\n */\r\nenc.Base64.fromU = function(array, to) {\r\n    (!(to=to||'UTF8').hasOwnProperty(\"fromU\"))&&(to=charset[to]);\r\n    return enc.Base64.fromB(to.fromU(array));\r\n};\r\n/**\r\n * Base64符号化された6bit配列をUnicode配列にする\r\n * \r\n * @memberof Util.Encoding\r\n * @param {Array}\r\n *            array Base64符号化された6bit配列\r\n * @param {String|Object}\r\n *            from 変換する文字コード(default:UTF8)\r\n * @return {Array} 24bit配列\r\n */\r\nenc.Base64.toU = function(array, from) {\r\n    (!(from=from||'UTF8').hasOwnProperty(\"toU\"))&&(from=charset[from]);\r\n    return from.toU(enc.Base64.toB(array));\r\n};\r\n/**\r\n * 8bit配列をBase64符号化する\r\n * \r\n * @memberof Util.Encoding\r\n * @param {Array}\r\n *            8bit配列\r\n * @return {Array} Base64符号化された6bit配列\r\n */\r\nenc.Base64.fromB = function(array) {\r\n    var a=[],i=0,il=array.length,\r\n            b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",B=[],c;\r\n    for(i=0;i<64;i++) B.push(b.charCodeAt(i));\r\n    for(i=0;i<il;i++) a.push(B[(c=array[i])>>>2],B[(c&3)<<4|(c=array[++i])>>>4],B[(c&15)<<2|(c=array[++i])>>>6],B[63&c]);\r\n    (i=il%3)!==0&&(a.pop(),i===1&&a.pop());\r\n    return a;\r\n};\r\n/**\r\n * Base64符号化された6bit配列を8bit配列にする\r\n * \r\n * @memberof Util.Encoding\r\n * @param {Array}\r\n *            Base64符号化された6bit配列\r\n * @return {Array} 8bit配列\r\n */\r\nenc.Base64.toB = function(array) {\r\n    var i=0,a=[],il=array.length,B={},b,c;\r\n    while(i<64)B[\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charCodeAt(i)]=i++;\r\n    for(i=0;i<il;i++) a.push((c=B[array[i]])<<2|(c=B[array[++i]])>>>4,(c&15)<<4|(c=B[array[++i]])>>>2,(c&3)<<6|B[array[++i]]);\r\n    (i=il%4)!==0&&(a.pop(),i<3&&a.pop());\r\n    return a;\r\n};\r\nenc.Base64.parse = function(str) {\r\n    str=str.replace(/=+$/,'');\r\n    return enc.Base64.toB(enc.Text.parse(str));\r\n};\r\nenc.Base64.stringify = function(array) {\r\n    return enc.Text.stringify(enc.Base64.fromB(array));\r\n};\r\n/**\r\n * 文字列をBase64エンコードする この関数はpaddingの=を追加する\r\n * \r\n * @memberof Util.Encoding\r\n * @param {String}\r\n *            str 変換する文字列\r\n * @param {String|Object}\r\n *            cs1 strの文字セット default:Unicode\r\n * @param {String|Object}\r\n *            cs2 cs1がUnicodeだった場合の変換先文字セット default:UTF8\r\n * @return {String} Base64符号化された文字列\r\n * \r\n * @example // JS文字列をUTF8としてBase64符号化 Encoding.encodeBase64(\"文字列\"); //=>\r\n *          \"5paH5a2X5YiX===\" Encoding.encodeBase64(\"文字列\", \"Unicode\", \"UTF8\"); //\r\n *          上記と同じ // SJIS文字列をエンコード(引数は省略不可)\r\n *          Encoding.encodeBase64(Encoding.convert(\"文字列\", \"SJIS\"), \"SJIS\"); //=>\r\n *          \"lbaOmpfx===\"\r\n * \r\n */\r\nenc.Base64.encode = function(str, cs1, cs2) {\r\n    var array,parser,b;\r\n    (!(cs1=cs1||'Unicode').hasOwnProperty(\"parse\"))&&(cs1=charset[cs1]);\r\n    (!(cs2=cs2||'UTF8').hasOwnProperty(\"fromU\"))&&(cs2=charset[cs2]);\r\n    parser = cs1===charset.Unicode ? cs1 : enc.Text;\r\n    array = parser.parse(str);\r\n    b=enc.Base64.stringify(cs1===charset.Unicode?cs2.fromU(array):array);\r\n    b+=\"===\".substring(0,4-b.length%4);\r\n    return b;\r\n};\r\n/**\r\n * Base64文字列をデコードする この関数はpaddingの=を削除する\r\n * \r\n * @memberof Util.Encoding\r\n * @param {String}\r\n *            str Base64文字列\r\n * @param {String|Object}\r\n *            from 元の文字セット指定すればJS文字列に変換する default:UTF8\r\n * @return {String} デコードされた文字列\r\n * \r\n * @example // Base64符号化されたUTF8文字列をJS文字列に\r\n *          Encoding.decodeBase64(\"5paH5a2X5YiX===\"); //=> \"文字列\"\r\n *          Encoding.decodeBase64(\"5paH5a2X5YiX===\", \"UTF8\"); //=> \"文字列\" //\r\n *          エンコードされたSJIS文字列 Encoding.decodeBase64(\"lbaOmpfx===\", \"\"); //=>\r\n *          \"\\x95\\xb6\\x8e\\x9a\\x97\\xf1\" Encoding.decodeBase64(\"lbaOmpfx===\",\r\n *          \"SJIS\"); //=> \"文字列\"\r\n * \r\n */\r\nenc.Base64.decode = function(str, from) {\r\n    str=str.replace(/=+$/,'');\r\n    var array = enc.Base64.parse(str)\r\n    if (from===\"\") {\r\n        return enc.Text.stringify(array);\r\n    }\r\n    (!(from=from||'UTF8').hasOwnProperty(\"toU\"))&&(from=charset[from]);\r\n    return charset.Unicode.stringify(from.toU(array));\r\n};\r\n/**\r\n * enc.URI.escape RFC3986に準じて [A-Za-z0-9_.~-] 以外を%エスケープする\r\n * RFC2396準拠のencodeURIComponent()と違い [!*'()] もエスケープする\r\n * arrayは8bitを想定しているのでUnicode(24bit)配列を渡すと正しい結果にならない\r\n * \r\n * @param {Array}\r\n *            array 8bit配列\r\n * @param {Boolean}\r\n *            asRFC2396 [!*'()]をエスケープしない (default:false)\r\n * @return {String} encoded エスケープされた文字列\r\n * \r\n * @see https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\r\n *      encodeURIComponent は、次を除く全ての文字をエスケープします。: アルファベット、数字、- _ . ! ~ * ' ( )\r\n *      ... より厳格に RFC 3986に従う場合には、「!」・「'」・「(」・「)」・「*」の各文字が予約されています\r\n * @see http://www.ipa.go.jp/security/fy21/reports/tech1-tg/b_09.html なお、上記の\r\n *      \"!\", \"'\", \"(\", \")\", \"*\" が sub-delims の文字であるが、これらは RFC 2396 では unreserved\r\n *      に属していた。\r\n */\r\nenc.URI.escape = function(array, asRFC2396) {\r\n    var s=\"\",i,il=array.length,c;\r\n    if (asRFC2396) {\r\n            for(i=0;i<il;i++) s+=(c=array[i])<58&&c>38||64<c&&c<91||96<c&&c<123&&c!=43&&c!=44&&c!=47||c===33||c===95||c===126?String.fromCharCode(c):(c<16?\"%0\":\"%\")+c.toString(16).toUpperCase();\r\n    } else {\r\n        for(i=0;i<il;i++) s+=(c=array[i])<58&&c>47||64<c&&c<91||96<c&&c<123||c===45||c===46||c===95||c===126?String.fromCharCode(c):(c<16?\"%0\":\"%\")+c.toString(16).toUpperCase();\r\n    }\r\n    return s;\r\n};\r\nenc.URI.unescape = function(str) {\r\n    var a=[],i,il=str.length,c;\r\n    for(i=0;i<il;i++)a.push((c=str.charCodeAt(i))===37?parseInt(str.substring(++i,++i+1),16):c===43?20:c);\r\n    return a;\r\n};\r\n/**\r\n * encodeURIComponent 互換の関数\r\n * \r\n * @param {String}\r\n *            str JS文字列\r\n * @param {String|Object}\r\n *            変換先文字コード(default:'UTF8')\r\n * @return {String} encoded\r\n */\r\nenc.URI.encodeURIComponent = function(str, to) {\r\n    (!(to||\"UTF8\").hasOwnProperty(\"fromU\"))&&(to=charset[to]);\r\n    return enc.URI.escape(to.fromU(charset.Unicode.parse(str)));\r\n};\r\nenc.URI.decodeURIComponent = function(str, from) {\r\n    (!(from||\"UTF8\").hasOwnProperty(\"toU\"))&&(from=charset[from]);\r\n    return charset.Unicode.stringify(from.toU(enc.URI.unescape(str)));\r\n};\r\n/**\r\n * enc.Unicode.escape Unicode(24bit整数)配列を%エスケープする(0xff以上は%uXXXXになる)\r\n * [*+\\-\\.\\/@_0-9A-Za-z] 以外はエスケープされる\r\n * \r\n * @param {Array}\r\n *            u24array 24bit整数の配列(String#charCodeAt() で取得した整数など)\r\n * @return {String} escaped %エスケープされた文字列\r\n */\r\nenc.Unicode.escape = function(u24array) {\r\n    var s=\"\",i,il=u24array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        c=u24array[i];\r\n        s += 41<c&&c<58&&c!=44||63<c&&c<91||94<c&&c<123&&c!=96?String.fromCharCode(c):(c<16?\"%0\":c<256?\"%\":c<4096?\"%u0\":\"%u\")+c.toString(16).toUpperCase();\r\n    }\r\n    return s;\r\n};\r\n/**\r\n * enc.Unicode.unescape %エスケープされた文字列をUnicode(24bit整数)配列にする\r\n * \r\n * @return {String} escaped %エスケープされた文字列\r\n * @param {Array}\r\n *            u24array 24bit整数の配列\r\n */\r\nenc.Unicode.unescape = function(str) {\r\n    var a=[],i,il=str.length,c;\r\n    for(i=0;i<il;i++){\r\n        a.push(\r\n            (c=str.charCodeAt(i))===37 // %\r\n            ? (c=str.charCodeAt(++i))===117 // %u\r\n                ? parseInt(str.charAt(++i)+str.charAt(++i)+str.charAt(++i)+str.charAt(++i)+((c=str.charAt(i+1))!==\"%\"?(++i,c):''),16)\r\n                : parseInt(str.charAt(i)+str.charAt(++i),16)\r\n            : c\r\n        );\r\n    }\r\n    return a;\r\n};\r\n/**\r\n * enc.TextEncoder class Encoding StandardのTextEncoderのように振る舞うクラス\r\n * \r\n * @see https://encoding.spec.whatwg.org/\r\n * @see https://developer.mozilla.org/ja/docs/Web/API/TextEncoder\r\n */\r\nenc.TextEncoder = function(encoding) {\r\n    var en, map = {'UTF8':[], 'UTF16LE':['UTF16'], 'UTF16BE':[], 'SJIS':['SHIFTJIS','WINDOWS31J','XSJIS'], 'EUCJP':['XEUCJP'], 'JIS7':['iso2022jp']}, m={}, x, i;\r\n    if (!encoding) {encoding = 'UTF-8';}\r\n    for(x in map) {\r\n        m[x] = x;\r\n        for(i=0; i<map[x].length; i++) {m[map[x][i]] = x;}\r\n    }\r\n    en = m[encoding.toUpperCase().replace(/[^A-Z0-9]/g,'')];\r\n    if (!en) {throw new TypeError(encoding+\" is not supported encoding\");}\r\n    this.encoding = encoding;\r\n    this.encode = function(text) {\r\n        return new Uint8Array(charset[en].fromU(enc.Text.parse(text)));\r\n    };\r\n};\r\n/**\r\n * enc.TextDecoder class Encoding StandardのTextDecoderのように振る舞うクラス\r\n * \r\n * @see https://encoding.spec.whatwg.org/\r\n * @see https://developer.mozilla.org/ja/docs/Web/API/TextEncoder\r\n */\r\nenc.TextDecoder = function(encoding) {\r\n    var en, map = {'UTF8':[], 'UTF16LE':['UTF16'], 'UTF16BE':[], 'SJIS':['SHIFTJIS','WINDOWS31J','XSJIS'], 'EUCJP':['XEUCJP'], 'JIS7':['iso2022jp']}, m={}, x, i;\r\n    if (!encoding) {encoding = 'UTF-8';}\r\n    for(x in map) {\r\n        m[x] = x;\r\n        for(i=0; i<map[x].length; i++) {m[map[x][i]] = x;}\r\n    }\r\n    en = m[encoding.toUpperCase().replace(/[^A-Z0-9]/g,'')];\r\n    if (!en) {throw new TypeError(encoding+\" is not supported encoding\");}\r\n    this.encoding = encoding;\r\n    this.decode = function(u8array) {\r\n        return enc.Text.stringify(charset[en].toU(u8array));\r\n    };\r\n};\r\n/**\r\n * 配列から文字コードを推測する ecl.jsのGetEscapeCodeType(str)に丸投げしている\r\n */\r\ncharset.guess_array = function(array) {\r\n    var i,il=array.length,c=array[0],cs=null,p,a,m,u7,mu7,pm,am,b64,mb64;\r\n    // BOM 0xEFBBBF:UTF8, 0xFEFF:UTF16BE, 0xFFFE:UTF16LE\r\n    cs=c===239&&array[1]===187&&array[2]===191?\"UTF8\":c===255&&array[1]===254?\"UTF16LE\":c===254&&array[1]===255?\"UTF16BE\":null;\r\n    if(cs!=null) return cs;\r\n    // Unicode or ASCII(maybe UTF7,MUTF7) or ...?\r\n    cs=\"ASCII\",p=a=m=-1,u7=mu7=true,pm=am=b64=mb64=0;\r\n    for(i=0;i<il;i++){\r\n        c=array[i];\r\n        if(255<c){cs=\"Unicode\";break;}\r\n        if(c<32&&c!==9&&c!==10&&c!==13||126<c){cs=null;break;} // 未定\r\n        if (!u7&&!mu7) continue; // UTF-7でもModified UTF-7でもないならこの先を省略\r\n        c===126&&(u7=false); // UTF-7は~を符号化するがModifiedUTF-7は~をそのまま印字する\r\n        8<c&&c<11||c===13 && (mu7=false); // Modified UTF-7は\\t\\n\\rを符号化する\r\n        // \"+-\" or \"\\+[A-Za-z0-9\\+\\/]+-\" があればUTF7 \"&\" ならMUTF7\r\n        if (c===45) { // [+&]- の出現数をカウント\r\n            p>=0&&u7 ? (i===p+1&&(pm++),(p=-1)) : a>=0&&mu7 && (i===a+1&&(am++),(a=-1));\r\n            p = a = -1;\r\n        } else {\r\n            if (u7&&p>=0) { // Base64 [A-Za-z0-9+/] かどうか\r\n                (u7 = (c===43||46<c&&c<58||64<c&&c<91||96<c&&c<123)) ? b64++ : (p=-1);\r\n            }\r\n            if (mu7&&a>=0) { // Modified Base64 [A-Za-z0-9+,] かどうか\r\n                (mu7 = (42<c&&c<45||47<c&&c<58||64<c&&c<91||96<c&&c<123)) ? mb64++ : (a=-1);\r\n            }\r\n        }\r\n        c===43&&p<0 ? (p=i) : c===38&&a<0 ? (a=i) : c===45 && (m=i);\r\n    }\r\n    if (cs===\"ASCII\") {\r\n        cs = u7&&(b64>0||pm>0) ? \"UTF7\" : mu7&&(mb64>0||am>0) ? \"MUTF7\" : \"ASCII\";\r\n    }\r\n    // TODO: GetEscapeCodeTypeの代替処理が未実装\r\n    return cs?cs:GetEscapeCodeType(enc.URI.escape(array));\r\n};\r\ncharset.guess = function(str) {\r\n    return charset.guess_array(enc.Text.parse(str));\r\n};\r\nvar names=[\"SJIS\",\"EUCJP\",\"JIS7\",\"JIS8\",\"Unicode\",\"UTF7\",\"UTF8\",\"UTF16LE\",\"UTF16BE\",\"MUTF7\"],i,il=names.length;\r\nEncoding.charset=charset;\r\nfor(i=0;i<il;i++) {\r\n    if (names[i]==='Unicode') {\r\n        Encoding[\"escapeUnicode\"] = function(str){return enc.Unicode.escape(charset.Unicode.parse(str));};\r\n        Encoding[\"unescapeUnicode\"] = function(str){return charset.Unicode.stringify(enc.Unicode.unescape(str));};\r\n    } else {\r\n        Encoding[\"escape\"+names[i]] = (function(fnc,cs){return function(str){return fnc(str,cs);};})(enc.URI.encodeURIComponent, charset[names[i]]);\r\n        Encoding[\"unescape\"+names[i]] = (function(fnc,cs){return function(str){return fnc(str,cs);};})(enc.URI.decodeURIComponent, charset[names[i]]);\r\n        Encoding.charset[names[i]].parse = (function(fnc){return function(str){return fnc(enc.Text.parse(str));};})(charset[names[i]].toU);\r\n        Encoding.charset[names[i]].stringify = (function(fnc){return function(array){return enc.Text.stringify(fnc(array));};})(charset[names[i]].fromU);\r\n    }\r\n}\r\nEncoding.convert = charset.convert;\r\nEncoding.convert_array = charset.convert_array;\r\nEncoding.enc=enc;\r\nEncoding.escape = Encoding.escapeUnicode;\r\nEncoding.unescape = Encoding.unescapeUnicode;\r\nEncoding.encodeURIComponent = enc.URI.encodeURIComponent;\r\nEncoding.decodeURIComponent = enc.URI.decodeURIComponent;\r\nEncoding.encodeBase64 = enc.Base64.encode;\r\nEncoding.decodeBase64 = enc.Base64.decode;\r\nEncoding.TextEncoder = enc.TextEncoder;\r\nEncoding.TextDecoder = enc.TextDecoder;\r\n// Encoding.getEscapeCodeType = GetEscapeCodeType;\r\n// Encoding.JCT11280 = JCT11280;\r\n// Encoding.JCT8836 = JCT8836;\r\n\r\nEncoding.JISX0208={\"U2CP\":U2CP, \"CP2U\":CP2U};\r\n\r\n})();\n\n/***/ }),\n/* 36 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class SubWindow\r\n * @classdesc SubWindow サブウィンドウ\r\n *            <p>\r\n *            サブウィンドウを操作する\r\n * \r\n * @param {String}\r\n *            [name=\"HJN_subwindow\"] サブウィンドウの名前（ウィンドウをユニークに指定する名前）\r\n * \r\n * @example // TopHogeBottom と表示するサブウィンドウを表示し、閉じる<br>\r\n *          var sub = new SubWindow(\"SUB_NAME\");\r\n *          sub.openHtml(\"hoge\").appendHtml(\"Bottom\").prependHtml(\"Top\");\r\n *          sub.close();\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #95\r\n    /** @constructor */\r\n    function SubWindow(name){ \r\n        if(!(this instanceof SubWindow)) return new SubWindow(name);\r\n\r\n        this._name = name || \"HJN_subwindow\";\r\n        SubWindow._map[name] = {};\r\n    }\r\n\r\n    // private\r\n    // クラス変数\r\n    SubWindow._map = {};\r\n    // メソッド\r\n    \r\n    // public\r\n    /**\r\n     * サブウィンドウを表示する(HTML指定）<br>\r\n     * Element.createDialog と同一引数\r\n     * \r\n     * @memberOf Util.SubWindow\r\n     * @param {String}\r\n     *            [iHtml=\"no message\"] サブウィンドウのbodyに設定する文字列\r\n     * @param {DOM}\r\n     *            [element=window] サブウィンドウの位置とサイズを指定する際の基準となるウィンドウ\r\n     * @param {String}\r\n     *            [id=\"HJN_subwindow\"] サブウィンドウのid名、同一名称のダイアログを閉じて作成する\r\n     * @param {Number}\r\n     *            [w=40] ウィンドウに対するサブウィンドウの幅の比率％\r\n     * @param {Number}\r\n     *            [h=40] ウィンドウに対するサブウィンドウの高さの比率％\r\n     * @param {Object}\r\n     *            [style={bgColor: \"rgba(255, 255, 255, 0.8)\"}] ダイアログ背景のCSSスタイル\r\n     */\r\n    SubWindow.createSubWindow = function(iHtml, win, id, w, h, style){\r\n        iHtml = iHtml || \"no message\";\r\n        win = win || window;\r\n        style = style || {};\r\n        id = id || \"HJN_subwindow\";\r\n        w = w || 40; // 幅40%\r\n        h = h || 40; // 高さ40%\r\n\r\n        // サブウィンドウ表示オプションを編集する\r\n        var width  = Math.round(win.innerWidth  * ( w / 100 ));\r\n        var height = Math.round(win.innerHeight * ( h / 100 ));\r\n        var top    = Math.round(win.screenTop  + (win.innerHeight / 2) - (height / 2));\r\n        var left   = Math.round(win.screenLeft + (win.innerWidth / 2) - (width  / 2));\r\n        var opt = \"width=\" + width + \", height=\" + height \r\n                + \", top=\" + top + \", left=\" + left\r\n                + \", menubar=no, toolbar=no, location=no\"\r\n                + \", status=yes, resizable=yes, scrollbars=yes\";\r\n\r\n        // サブウィンドウを作成する\r\n        var sub = new SubWindow(id);\r\n        // サブウィンドウにHTMLを表示する（別ウィンドウ処理なのでスケジュールが反転しないよう非同期）\r\n        HJN.Util.setZeroTimeout( function(){\r\n            // HTMLを表示する\r\n            sub.openHtml(iHtml, opt);\r\n\r\n            // デフォルトスタイルを設定する\r\n            var body = SubWindow._map[id].document.body;\r\n            var styleD = {bgColor: \"rgba(255, 0, 255, 0.8)\"};\r\n            for (var property in styleD) body.style[property] = styleD[property];\r\n            // 指定スタイルを設定する\r\n            for (var property in style) body.style[property] = style[property];\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * サブウィンドウを表示する(URI指定）\r\n     * \r\n     * @memberOf Util.SubWindow\r\n     * @param {String}\r\n     *            [uri=\"about:blank\"] サブウィンドウに表示するURI\r\n     * @param {String}\r\n     *            [opt=\"width=600, height=450 ,menubar=no, toolbar=no,\r\n     *            location=no, status=yes, resizable=yes, scrollbars=yes\"]\r\n     *            サブウィンドウ生成時に指定するオプション\r\n     * @return {Object} Window サブウィンドウ\r\n     */\r\n    SubWindow.prototype.openUri = function(uri, opt) {\r\n        uri = uri || \"about:blank\";\r\n        opt = opt || \"width=600, height=450 \"\r\n            + \",menubar=no, toolbar=no, location=no, status=yes, resizable=yes, scrollbars=yes\";\r\n        // サブウィンドウが既に開いている時、閉じる\r\n        var sub = SubWindow._map[this._name]; // サブウィンドウへの参照\r\n        if (sub && (typeof sub.close === \"function\") && !sub.closed){\r\n                sub.close();\r\n        }\r\n        // サブウィンドウを開く\r\n        SubWindow._map[this._name] = sub = window.open(uri, this._name, opt);\r\n        // サブウィンドウを最前面にする\r\n        sub.blur();\r\n        window.focus();\r\n        window.blur();\r\n        sub.focus();\r\n        // サブウィンドウを返却する\r\n        return sub;\r\n    };\r\n    /**\r\n     * サブウィンドウを表示する(HTML指定）\r\n     * \r\n     * @memberOf Util.SubWindow\r\n     * @param {String}\r\n     *            [body=\"\"] サブウィンドウに表示するHTML\r\n     * @param {String}\r\n     *            [opt=\"width=600, height=450 ,menubar=no, toolbar=no,\r\n     *            location=no, status=yes, resizable=yes, scrollbars=yes\"]\r\n     *            サブウィンドウ生成時に指定するオプション\r\n     * @return {Object} this 自オブジェクト\r\n     */\r\n    SubWindow.prototype.openHtml = function(body, opt) {\r\n        body = body || \"\";\r\n        opt = opt || \"width=600, height=450 \"\r\n            + \",menubar=no, toolbar=no, location=no, status=yes, resizable=yes, scrollbars=yes\";\r\n        // サブウィンドウを開く\r\n        var sub = this.openUri(\"about:blank\" ,opt);\r\n        // サブウィンドウのHTML bodyを設定する\r\n        sub.document.body.innerHTML = body;\r\n        // 自オブジェクトを返却する\r\n        return this;\r\n    };\r\n    /**\r\n     * サブウィンドウを閉じる\r\n     * \r\n     * @memberOf Util.SubWindow\r\n     */\r\n    SubWindow.prototype.close = function() {\r\n        var sub = SubWindow._map[this._name]; // サブウィンドウへの参照\r\n        // サブウィンドウを閉じる\r\n        sub.close();\r\n    };\r\n    /**\r\n     * サブウィンドウのHTML body の末尾にHTMLを追記する\r\n     * \r\n     * @memberOf Util.SubWindow\r\n     * @param {String}\r\n     *            [html=\"\"] 追記するHTML文字列\r\n     * @return {Object} this 自オブジェクト\r\n     */\r\n    SubWindow.prototype.append = function(html) {\r\n        html = html || \"\";\r\n        var sub = SubWindow._map[this._name]; // サブウィンドウへの参照\r\n        // サブウィンドウのHTML bodyに追記する\r\n        sub.document.body.innerHTML += html;\r\n        // サブウィンドウを返却する\r\n        return win;\r\n    };\r\n    /**\r\n     * サブウィンドウのHTML body の先頭にHTMLを追記する\r\n     * \r\n     * @memberOf Util.SubWindow\r\n     * @param {String}\r\n     *            [html=\"\"] 追記するHTML文字列\r\n     * @return {Object} this 自オブジェクト\r\n     */\r\n    SubWindow.prototype.prepend = function(html) {\r\n        html = html || \"\";\r\n        var sub = SubWindow._map[this._name]; // サブウィンドウへの参照\r\n        // サブウィンドウのHTML bodyに追記する\r\n        sub.document.body.innerHTML = html + sub.document.body.innerHTML;\r\n        // サブウィンドウを返却する\r\n        return win;\r\n    };\r\n    \r\n    /* new */\r\n    return SubWindow;\r\n}());\n\n/***/ }),\n/* 37 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class Menu\r\n * @classdesc Menu メニュー\r\n *            <p>\r\n *            メニューを操作する\r\n * @param {String}\r\n *            menuId メニューのID（メニュー要素をユニークに指定するID）\r\n * @param {String}\r\n *            [menuLabel=\"\"] メニューのラベル\r\n * @param {String}\r\n *            funcName メニュー要素選択時に発行する関数名\r\n * \r\n * @example // TopHogeBottom と表示するサブウィンドウを表示し、閉じる<br>\r\n *          var menu1 = new Util.Menu( \"Usage of TAT log diver\", divMenuId +\r\n *          \"_HelpUsage\", \"HJN.init.Usage\"); menu1.mekeAsDialog(\r\n *          \"HJN.dialogUsage\", 50 , 40);\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #95\r\n    /** @constructor */\r\n    function Menu(menuId, menuLabel, funcName){ \r\n        if(!(this instanceof Menu)) return new Menu(id, label, funcName);\r\n\r\n        this.menuId = menuId;\r\n        this.menuLabel = menuLabel;\r\n        this.funcName = funcName;\r\n    }\r\n\r\n    // private\r\n    // クラス変数\r\n    \r\n    // メソッド\r\n    \r\n    // public\r\n    /**\r\n     * アコーディオンラベル用タグを取得する\r\n     * \r\n     * @memberOf Util.Menu\r\n     * @param {Object}\r\n     *            that ラベル押下時のアコーディオン開閉ラジオボタン連動用の接頭語\r\n     * @param {String}\r\n     *            id ラベル押下時のアコーディオン開閉ラジオボタン連動用の接尾語（ユニークな英数字）\r\n     * @param {String}\r\n     *            labelText ラベル表示文字列\r\n     * @param {Boolean}\r\n     *            [isChecked=閉じた状態て初期表示] trueを指定したとき展開して初期表示\r\n     * @return {String} html アコーディオンラベル用HTMLテキスト\r\n     */\r\n    Menu.getAccordionTag = function(that, id, labelText, isChecked) { // #31\r\n        var isAccordion = true, // true:アコーディオン型 false:折りたたみ型 #21\r\n        typeStr = isAccordion ? ' type=\"checkbox\" name=\"accordion\" '\r\n                : ' type=\"radio\" name=\"accordion\" ', //\r\n        checkedStr = ' checked=\"checked\" ';\r\n\r\n        return ''\r\n                + '<input id=\"ac-' + that.chartIdName + id + '\"' // \r\n                + typeStr + (isChecked ? checkedStr : '') + '\">' // \r\n                + '<label for=\"ac-' + that.chartIdName + id + '\">' //\r\n                + labelText + '</label>';\r\n    };\r\n\r\n    /**\r\n     * File Open用タグを取得する\r\n     * \r\n     * @example\r\n     * <ol>\r\n     * <a><label>Child Menu<input type=\"file\" id=\"xxx\" multiple/></label></a>\r\n     * </ol>\r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            [preLabel=\"\"] ラベルの先頭文字列\r\n     * @return {String} html メニュー要素の表示用HTMLテキスト\r\n     */\r\n    Menu.prototype.getFileOpenTag = function(preLabel) {\r\n        preLabel = preLabel || \"\";\r\n\r\n        return ''\r\n                + '<ol><a><label class=\"hjnButton4Input\">' + this.menuLabel // #51\r\n                + '<input type=\"file\" id=\"' + this.menuId + '\"  multiple />'\r\n                + '</label></a></ol>';\r\n    };\r\n    \r\n    /**\r\n     * ダウンロード処理に対応する\r\n     * \r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            [fileName=\"HJN_download\"] ダウンロードファイル名\r\n     * @return {Object} this\r\n     */\r\n    Menu.prototype.makeDownloadable = function(fileName) {\r\n        this[\"fileName\"] = fileName || \"HJN_download\";\r\n\r\n        return this;\r\n    };\r\n    /**\r\n     * ダウンロード用アンカータグを取得する\r\n     * \r\n     * @example\r\n     * <li><a id=\"xxx\" href=\"#\">Child Menu</a><li/>\r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            [preLabel=\"\"] ラベルの先頭文字列\r\n     * @return {String} html メニュー要素の表示用HTMLテキスト\r\n     */\r\n    Menu.prototype.getATag = function(preLabel) {\r\n        preLabel = preLabel || \"\";\r\n\r\n        return '' + '<li><a id=\"' + this.menuId + '\" '\r\n                + 'class=\"hjnButton4Input\" href=\"#\" ' // #51\r\n                + 'download=\"' + this.fileName + '\" ' //\r\n                + 'onclick=\"' + this.funcName + '(' + \"'\" + this.menuId + \"', '\"\r\n                + this.fileName + \"'\" + ')\" ' + '>' + preLabel + this.menuLabel\r\n                + '</a></li>';\r\n    };\r\n\r\n    /**\r\n     * グローバルメソッド呼出用アンカータグを取得する\r\n     * \r\n     * @example\r\n     * <li><a id=\"xxx\" href=\"#\" onclick=\"funcName()\">Child Menu</a></li>\r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            [preLabel=\"\"] ラベルの先頭文字列\r\n     * @return {String} html メニュー要素の表示用HTMLテキスト\r\n     */\r\n    Menu.prototype.getFuncTag = function(preLabel) { // #34\r\n        preLabel = preLabel || \"\";\r\n        \r\n        return ''\r\n                + '<li><a id=\"' + this.menuId + ' \"'\r\n                + 'class=\"hjnButton4Input\" href=\"#\" ' // #51\r\n                + 'onclick=\"' + this.funcName + '()\">' //\r\n                + preLabel + this.menuLabel + '</a></li>';\r\n    };\r\n    \r\n    \r\n    /**\r\n     * ポップアップダイアログ処理に対応する\r\n     * \r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            dialogId ダイアログのID（同一IDのダイアログは上書きされる）\r\n     * @param {Number}\r\n     *            [w=40] ダイアログの幅\r\n     * @param {Number}\r\n     *            [h=40] ダイアログの高さ\r\n     * @return {Object} this\r\n     */\r\n    Menu.prototype.makePopupable = function(dialogId, w, h) {\r\n        this[\"dialogId\"] = dialogId;\r\n        this[\"w\"] = w || 40;\r\n        this[\"h\"] = h || 40;\r\n\r\n        return this;\r\n    };\r\n    /**\r\n     * ダイアログ用タグを取得する\r\n     * \r\n     * @example\r\n     * <ol>\r\n     * <a id=\"xxx\" class=\"hjnButton4Input\"\r\n     * onclick=\"HJN.init.ShowDialog(FUNC_NAME(), 'DIALOG_ID', w , h)\">\r\n     * <label>Child Menu</label></a>\r\n     * </ol>\r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            [preLabel=\"\"] ラベルの先頭文字列\r\n     * @return {String} html メニュー要素の表示用HTMLテキスト\r\n     */\r\n    Menu.prototype.getDialogTag = function(preLabel) {\r\n        preLabel = preLabel || \"\";\r\n\r\n        return ''\r\n            + '<ol><a id=\"' + this.menuId + '\" '\r\n            + 'class=\"hjnButton4Input\" ' // #51\r\n            + ' onclick=\"HJN.Util.Element.createDialog(' // #95\r\n                + this.funcName + \"()\"+ \", \" // #84\r\n                + \"false, \" \r\n                + \"'\" + this.dialogId + \"',\"\r\n                + this.w + \",\"\r\n                + this.h +\")\" \r\n            + '\"' + '>' // #79\r\n            + '<label>' + preLabel + this.menuLabel + '</label></a></ol>';\r\n    };\r\n    /**\r\n     * サブウィンドウ用タグを取得する\r\n     * \r\n     * @example\r\n     * <ol>\r\n     * <a id=\"xxx\" class=\"hjnButton4Input\"\r\n     * onclick=\"HJN.init.ShowDialog(FUNC_NAME(), 'DIALOG_ID', w , h)\">\r\n     * <label>Child Menu</label></a>\r\n     * </ol>\r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            [preLabel=\"\"] ラベルの先頭文字列\r\n     * @return {String} html メニュー要素の表示用HTMLテキスト\r\n     */\r\n    Menu.prototype.getSubWindowTag = function(preLabel) { // #95\r\n        preLabel = preLabel || \"\";\r\n\r\n        return ''\r\n        + '<ol><a id=\"' + this.menuId + '\" '\r\n        + 'class=\"hjnButton4Input\" ' // #51\r\n        + ' onclick=\"HJN.Util.SubWindow.createSubWindow(' // #95\r\n            + this.funcName + \"()\"+ \", \" // #84\r\n            + \"false, \" \r\n            + \"'\" + this.dialogId + \"',\"\r\n            + this.w + \",\"\r\n            + this.h +\")\" \r\n        + '\"' + '>' // #79\r\n        + '<label>' + preLabel + this.menuLabel + '</label></a></ol>';\r\n    };\r\n\r\n\r\n    /* new */\r\n    return Menu;\r\n}());\n\n/***/ }),\n/* 38 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__ = __webpack_require__(2);\n\r\n\r\n\r\n/**\r\n * @memberof TimeSeries\r\n * @class FileParser\r\n * @classdesc ファイルをパースして読み込む\r\n *            <p>\r\n *            パース条件指定画面生成つき\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() {\r\n    /** @static */\r\n\r\n    /** constructor */\r\n    function FileParser(){\r\n        if(!(this instanceof FileParser)) return new FileParser();\r\n    }\r\n    \r\n    /** @private */\r\n\r\n    // public\r\n    /**\r\n     * ファイルが新たに指定された時、eTatOriginalを再構築するか否（データを追加する）か\r\n     * \r\n     * @memberof TimeSeries.FileParser\r\n     * @return {boolean} 再構築モードするときtrue、データを追加するときfalse\r\n     */\r\n    FileParser.prototype.isNewETAT = function() { // #23\r\n        return __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].File.getConfig(\"NEWFILE\") === \"NEWDATA\"; // #76\r\n    }\r\n    \r\n    /**\r\n     * 「ファイルから次の1レコードを取得するutil」 を取得する\r\n     * \r\n     * @memberof TimeSeries.FileParser\r\n     */\r\n    FileParser.prototype.createGetterOfLine = function(file) {\r\n\r\n        /**\r\n         * @memberof TimeSeries.FileParser\r\n         * @class GetterOfLine\r\n         * @classdesc ファイルから１レコード取得する\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持する改行コードを用いて、ファイルから１レコードを取得する\r\n         * \r\n         * @example try{ var getterOfLine = FileParser.createGetterOfLine(file),\r\n         *          fileInfo;<br>\r\n         *          for(var i = 0; i < n; i++) { <br>\r\n         *          line = getterOfLine.next(); fileInfo += line.str + \"<BR>\"; }<br>\r\n         *          }catch (e) {<br>\r\n         *          console.error(\"改行コードの無いファイルは扱えません]%o\",e); }\r\n         */\r\n        function GetterOfLine(file, maxLength){ /* constructor */\r\n            if(!(this instanceof GetterOfLine)) return new GetterOfLine(file, maxLength);\r\n\r\n            this.file = file;\r\n            this.buf = new Uint8Array(file);\r\n            this.maxLength = maxLength || this.buf.length,\r\n            this.confLF = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].File.getConfig(\"LF\");  // 改行コードor固定レコード長\r\n                                                                // #76\r\n            this.from = 0;\r\n            this.to = 0;\r\n            this.len = 0;\r\n            this.line = {file: this.file, pos: 0, array: null, str: \"\", isEoF: false };\r\n        }\r\n        // public\r\n        /**\r\n         * 次の1レコードを取得する\r\n         * \r\n         * @memberof TimeSeries.FileParser.GetterOfLine\r\n         * @name next\r\n         */\r\n        if (__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].File.getValueByKey(\"LF\") === \"LF_FIX\"){ // 固定長のとき #76\r\n            GetterOfLine.prototype.next = function () { // 次の1レコードを取得する\r\n                if(this.from >= this.maxLength ){   // ファイル末尾のとき\r\n                    this.line = {file: this.file, pos: this.maxLength, array: null, str: \"\", isEoF: true };\r\n                } else {\r\n                    this.len = Math.min(this.maxLength - this.from, this.confLF);\r\n                    var array = new Uint8Array(this.file, this.from, this.len);\r\n                    this.line = {\r\n                            file: this.file,\r\n                            pos: this.from,\r\n                            array: array,\r\n                            str: String.fromCharCode.apply(null, array),\r\n                            isEoF: false };\r\n                }\r\n                this.from += this.confLF;   // 次の行を指しておく\r\n                return this.line;\r\n            };\r\n        } else { // 可変長のとき\r\n            GetterOfLine.prototype.next = function () { // 次の1レコードを取得する\r\n                if(this.from >= this.maxLength ){   // ファイル末尾のとき\r\n                    this.line = {file: this.file, pos: this.maxLength, array: null, str: \"\", isEoF: true };\r\n                } else {\r\n                    this.to = this.buf.indexOf(this.confLF, this.from);\r\n                    if(this.to < 0) this.to = this.maxLength;   // 最終レコード（EOFで改行コードなし）のとき\r\n                    this.len = Math.min(this.to - this.from, 1024);\r\n                    var array = new Uint8Array(this.file, this.from, this.len);\r\n                    this.line = {\r\n                            file: this.file,\r\n                            pos: this.from,\r\n                            array: array,\r\n                            str: String.fromCharCode.apply(null, array),\r\n                            isEoF: false };\r\n                }\r\n                this.from = this.to + 2;    // 次の行を指しておく\r\n                return this.line;\r\n            };\r\n        }\r\n        return new GetterOfLine(file);\r\n    };\r\n    \r\n    \r\n    /**\r\n     * eTatのフィルター\r\n     * \r\n     * @memberof TimeSeries\r\n     */\r\n    FileParser.prototype.createFilter = function() { // #34\r\n       /**\r\n         * @memberof TimeSeries.FileParser\r\n         * @class Filter\r\n         * @classdesc FileParserのフィルター\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持するフィルタ条件を用いるフィルターを取得する\r\n         */\r\n        function Filter(){ /* constructor */\r\n            if(!(this instanceof Filter)) return new Filter();\r\n            var c = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"].Filter; // #76\r\n            \r\n            this.confF_TIME_FROM = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"S2D\"](c.getConfig(\"F_TIME_FROM\"));    // 時刻(X)の最小値フィルター\r\n            this.confF_TIME_TO   = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"S2D\"](c.getConfig(\"F_TIME_TO\"));      // 時刻(X)の最大値フィルター\r\n            this.confF_TIME = (isNaN(this.confF_TIME_FROM) && isNaN(this.confF_TIME_TO))\r\n                            ? false : true; // 時刻(x）フィルター指定の有無\r\n            \r\n            this.confF_TAT_FROM = c.getConfig(\"F_TAT_FROM\") || 0; // 時間(Y)の最小値フィルター\r\n            this.confF_TAT_TO   = c.getConfig(\"F_TAT_TO\") || Number.MAX_VALUE; // 時間(Y)の最大値フィルター\r\n            this.confF_TAT = (this.confF_TAT_FROM === 0 && this.confF_TAT_TO === Number.MAX_VALUE)\r\n                            ? false : true; // 時間(ｙ）フィルター指定の有無\r\n\r\n            this.confF_TEXT = c.getConfig(\"F_TEXT\") || null; // テキストフィルタの条件（使用しない、Include,Exclude\r\n            if (this.confF_TEXT === \"F_TEXT_INCLUDE\") {\r\n                this.confF_TEXT = true;\r\n            } else if (this.confF_TEXT === \"F_TEXT_EXCLUDE\") {\r\n                this.confF_TEXT = false;\r\n            } else { // \"F_TEXT_NON\"\r\n                this.confF_TEXT = null;\r\n            }\r\n            \r\n            this.confF_TEXT_LEN = c.getConfig(\"F_TEXT_LEN\") || null;    // フィルタテキストのバイト長\r\n            this.confF_TEXT_POS = c.getConfig(\"F_TEXT_POS\") || 0;       // フィルタテキストの先頭バイト位置\r\n            this.confF_TEXT_COL = (c.getConfig(\"F_TEXT_COL\") || 3) - 1; // フィルタテキストのカラム位置（先頭：０）\r\n            this.confF_TEXT_REG = new RegExp(c.getConfig(\"F_TEXT_REG\") || \".*\");    // フィルタテキストの正規表現\r\n            \r\n            this.confF_IS = (this.confF_TIME === true \r\n                            || this.confF_TAT === true || this.confF_TEXT != null)\r\n                          ? true : false; // フィルタ指定の有無\r\n            \r\n            c = new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"](\"File\"); // #76\r\n            this.confF_SEP = c.getConfig(\"SEP\").charCodeAt(0);\r\n        }\r\n        \r\n        // class method\r\n        // private\r\n        /**\r\n         * フィルター条件で判定する\r\n         * \r\n         * @memberof TimeSeries.Filter\r\n         */\r\n        Filter.prototype._isIn = function (e) {\r\n            // フィルタ指定が無いときフィルタしない（初期表示時に無駄な処理をしない）\r\n            if (this.confF_IS === false) return true;\r\n            // 時刻（ｘ）フィルタの判定 （conf指定なしのとき NaNとの比較となりfalseとなる）\r\n            if (e.x < this.confF_TIME_FROM || this.confF_TIME_TO < e.x ) {\r\n                return false;\r\n            }\r\n            // 時間（ｙ）フィルタの判定\r\n            if (e.y < this.confF_TAT_FROM || this.confF_TAT_TO < e.y){\r\n                return false;\r\n            }\r\n            // テキストフィルタの判定\r\n            if (this.confF_TEXT === null) {\r\n                return true; // フィルタ指定なし\r\n            }\r\n            var text = \"\";\r\n            if (e.pos === undefined) { // テキスト読み込みでないとき（自動生成データのとき）\r\n                // レコードを取得する #62\r\n                text = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__[\"HJN\"].chart.fileParser.getRecordAsText(e); // #61\r\n                // 指定正規表現に合致するか判定し、Include/Exclude指定に応じてリターンする\r\n                return this.confF_TEXT === this.confF_TEXT_REG.test(text);\r\n            } else { // ファイル読み込みのとき\r\n                // レコードを取得する\r\n                var arr = new Uint8Array(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__[\"HJN\"].filesArrayBuffer[e.fileIdx+1], e.pos, e.len);\r\n                // CSVレコードの指定カラムを取得する(arr)\r\n                var colPos = 0;\r\n                for (var i = 0; i < this.confF_TEXT_COL; i++) {\r\n                    colPos = arr.indexOf(this.confF_SEP,colPos + 1);\r\n                }\r\n                if (colPos === -1){\r\n                    // 指定数のカラムが無い場合、Includeは処理対象外、Excludeは処理対象\r\n                    return !this.confF_TEXT;\r\n                }\r\n                var col = arr.slice(colPos, arr.length);\r\n                // 判定用文字列を取得する\r\n                text = col.slice(this.confF_TEXT_POS, this.confF_TEXT_POS + this.confF_TEXT_LEN);\r\n                // 指定正規表現に合致するか判定し、Include/Exclude指定に応じてリターンする\r\n                return this.confF_TEXT === this.confF_TEXT_REG.test(String.fromCharCode.apply(null, text));\r\n            }\r\n            return true;\r\n        };\r\n        \r\n        // public\r\n        /**\r\n         * eTatをフィルターする\r\n         * \r\n         * @memberof TimeSeries.Filter\r\n         * @param {eTat}\r\n         *            eTat フィルター処理対象のeTat\r\n         * @return {eTat} eTat フィルターされたeTat\r\n         * \r\n         */\r\n        Filter.prototype.filter = function (eTat) {\r\n            if (!eTat) return [];\r\n            return eTat.filter(this._isIn, this);\r\n        };\r\n\r\n        return new Filter();\r\n    };\r\n\r\n\r\n    /**\r\n     * 「１レコードからx:時刻（数値：ミリ秒）,y:Tat(数値：秒)を取得するutil」を取得する\r\n     * \r\n     * @memberof TimeSeries.Filter\r\n     */\r\n    FileParser.prototype.createGetterOfXY = function() {\r\n\r\n        /**\r\n         * @memberof TimeSeries.FileParser\r\n         * @class GetterOfXY\r\n         * @classdesc １レコードをパースし、XとYをレコード取得する\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持するレコードフォーマット情報を用いて、ファイルの指定レコードからＸ(data)とＹ(value)を取得する\r\n         */\r\n        function GetterOfXY(){ /* constructor */\r\n            if(!(this instanceof GetterOfXY)) return new GetterOfXY();\r\n\r\n            var c = new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"](\"File\"); // #76\r\n            this.confSEP = c.getConfig(\"SEP\");   // セパレータ\r\n            \r\n            this.confTIME_COL = c.getConfig(\"TIME_COL\") - 1 || 0;    // 時刻(X)のカラム位置\r\n            this.confTIME_POS = (c.getConfig(\"TIME_POS\") || 1) - 1;  // 時刻(X)の先頭バイト位置\r\n            this.confTIME_LEN = (c.getConfig(\"TIME_LEN\") || 0);      // 時刻(X)のバイト長\r\n            this.confTIME_FORM = c.getConfig(\"TIME_FORM\");           // 時刻(X)の文字フォーマット指定\r\n            this.confTIME_YMD = (c.getConfig(\"TIME_YMD\") || '\"YYYY/MM/DD hh.mm.ss.000\"'); // #42\r\n                                                                    // 時刻(X)のYMDフォーマット\r\n                                                                    // #92\r\n            this.paseDateConf = {  // YYYY/MM/DD hh:mm:dd.ss.000 #41\r\n                YYYY: this.confTIME_YMD.indexOf(\"YYYY\"),\r\n                MM: this.confTIME_YMD.indexOf(\"MM\"),\r\n                DD: this.confTIME_YMD.indexOf(\"DD\"),\r\n                hh: this.confTIME_YMD.indexOf(\"hh\"),\r\n                mm: this.confTIME_YMD.indexOf(\"mm\"),\r\n                ss: this.confTIME_YMD.indexOf(\"ss\"),\r\n                p000: this.confTIME_YMD.indexOf(\"0\"), // #92\r\n            };\r\n            this.isYMD = (this.confTIME_FORM === \"TIME_FORM_YMD\");\r\n            // 時刻(X)の数値単位(1or1000,YMDのとき1)\r\n            this.confTIME_UNIT = this.isYMD? 1 : (c.getConfig(\"TIME_UNIT\") || 1);\r\n            \r\n            \r\n            this.confTAT_COL = c.getConfig(\"TAT_COL\") - 1 || 1;      // 時間(Y)のカラム位置\r\n            this.confTAT_POS = (c.getConfig(\"TAT_POS\") || 1) - 1;    // 時間(Y)の先頭バイト位置\r\n            this.confTAT_LEN = (c.getConfig(\"TAT_LEN\") || 0);        // 時間(Y)のバイト長\r\n            this.confTAT_FORM = c.getConfig(\"TAT_FORM\");             // 時間(Y)のフォーマット指定\r\n            this.confTAT_UNIT = c.getConfig(\"TAT_UNIT\") || 1;        // 時間(Y)の数値単位(1/1000)\r\n            this.confENDIAN =  c.getConfig(\"ENDIAN\");    // リトルエンディアンはtrue、ビッグエンディアンはfalse\r\n            this.isLittle = (function(){\r\n                // long用に4バイト取得する\r\n                var buf = new ArrayBuffer(4);               \r\n                // true:bufに、リトルエンディアン指定で1を書き込む\r\n                new DataView(buf).setUint32(0, 1, true);\r\n                // プラットフォームのエンディアンを使用するUint32Arrayと比較する\r\n                return (new Uint32Array(buf)[0] === 1);     \r\n            }());\r\n            \r\n            this.dateAndValue = {date: 0, value: 0, isError: false };\r\n        }\r\n        \r\n        // class method\r\n        /**\r\n         * 数値(秒)、時間（時分秒)をパースして数値（秒*unit）を取得する<br>\r\n         * 数値でない場合 NaN を返却する<br>\r\n         * /[0-9,:\\. ]+/ に合致する文字列のみを処理する 例： argY: \"-1:1:1.2\" unit:1000 ->\r\n         * -3661200 ms = -(1*60*60 + 1*60 + 1.2)*1000\r\n         * \r\n         * @memberof TimeSeries.FileParser.GetterOfXY\r\n         */\r\n        GetterOfXY.parseNumber = function (){ // argY, unit,\r\n            var argY = arguments[0],\r\n                unit = arguments[1];\r\n            if(!argY) {console.log(\"data Y parse error\"); return 0; }\r\n            // 数値を含まないとき NaN を返却する\r\n            var nums =  argY.match(/[0-9,:\\. ]+/); // #92\r\n            if (!nums) return NaN; // #93\r\n            // 時分秒(hh:mm:ss.000)を秒にする\r\n            var str = nums[0];\r\n            var ds = (str.indexOf(\":\") < 0) ? [str] : str.split(\":\"),   // #40\r\n                pm = (0 <= ds[0]) ? 1 : -1,\r\n                sec = 0.0;\r\n            for(var i = 0; i < ds.length; i++){\r\n                sec += pm * Math.abs(ds[i]) * Math.pow(60, ds.length - i - 1);\r\n            }\r\n            // 単位補正する（ミリ秒指定の場合 unit = 1000）\r\n            return sec * (unit || 1);\r\n        };\r\n\r\n        /**\r\n         * Long(4バイトバイナリ）数字をパースして数値（ミリ秒）を取得する\r\n         * \r\n         * @private\r\n         */\r\n        GetterOfXY.prototype._parseLong = function (arr){\r\n            if (4 <= arr.length ) { // Long(4byte)以上のときunsigned longとして処理する\r\n                // bufの先頭4byteを、指定バイトオーダ(endian)で、符号無32bit intとして参照\r\n                return (new DataView(arr.buffer, 0 , 4)).getUint32(0, this.confENDIAN);\r\n            } else {\r\n                // Long(4バイト）より短いとき、Byte単位に処理する\r\n                if (this.confENDIAN) { // little endianのとき\r\n                    return arr.reduceRight(function(a, b){ return a*256 + b; });\r\n                } else {               // big endianのとき\r\n                    return arr.reduce(function(a, b){ return a*256 + b; });\r\n                }\r\n            }\r\n        };\r\n\r\n        // public\r\n        /**\r\n         * レコードからXとYを取得する\r\n         * \r\n         * @memberof TimeSeries.FileParser.GetterOfXY\r\n         */\r\n        GetterOfXY.prototype.parse = function (line) {\r\n            // セパレータでカラム分割する\r\n            var posMax = Math.max(this.confTIME_COL, this.confTAT_COL),\r\n                sep = this.confSEP.charCodeAt(0),   // 区切り文字のUint値\r\n                pos = 0,\r\n                nextPos = line.array.indexOf(sep),  // 行末（次の区切り文字位置）\r\n                x = 0,\r\n                y = -1;\r\n            for (var i = 0; i <= posMax; i++) {\r\n                if (i === this.confTIME_COL){\r\n                    // パース対象フィールドを切り出す\r\n                    var posX =  pos + this.confTIME_POS;\r\n                    var arrX = (0 < this.confTIME_LEN) \r\n                             ? line.array.slice(posX, posX + this.confTIME_LEN)\r\n                             : line.array.slice(posX, nextPos);\r\n                    var strX = \"\";\r\n                    // フィールドをパースする\r\n                    if (this.isYMD){    // 年月日時分秒の文字列のとき\r\n                        strX = String.fromCharCode.apply(null,arrX);\r\n                        x = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"S2D\"](strX, this.paseDateConf);\r\n                    } else if (this.confTIME_FORM === \"TIME_FORM_TEXT\"){    // テキスト数字のUNIX経過時間のとき\r\n                        strX = String.fromCharCode.apply(null,arrX);\r\n                        x = GetterOfXY.parseNumber(strX);\r\n                    } else{ // this.confTIME_FORM === \"TIME_FORM_LONG\"\r\n                            // longのUNIX経過時間のとき\r\n                        x = this._parseLong(arrX);\r\n                    }\r\n                    // 単位を補正する\r\n                    x *= this.confTIME_UNIT;\r\n                }\r\n                if (i === this.confTAT_COL){\r\n                    // パース対象フィールドを切り出す\r\n                    var posY =  pos + this.confTAT_POS;\r\n                    var arrY = (0 < this.confTAT_LEN) \r\n                             ? line.array.slice(posY, posY + this.confTAT_LEN)\r\n                             : line.array.slice(posY, nextPos);\r\n                    // フィールドをパースする\r\n                    if (this.confTAT_FORM === \"TAT_FORM_TEXT\"){\r\n                        // テキスト数字によるUNIX経過時間のとき\r\n                        var strY = String.fromCharCode.apply(null,arrY);\r\n                        y = GetterOfXY.parseNumber(strY);\r\n                    } else{\r\n                        // TAT_FORM_TEXT === \"TAT_FORM_LONG\" 数値によるUNIX経過時間のとき\r\n                        y = this._parseLong(arrY);\r\n                    }\r\n                    // 単位を補正する\r\n                    y *= this.confTAT_UNIT;\r\n                }\r\n                pos = nextPos + 1;\r\n                nextPos = line.array.indexOf(sep, pos);\r\n                if (nextPos < 0) nextPos = line.array.length;\r\n            }\r\n            \r\n            if(0 < x && 0 <= y){ // 正常時\r\n                return {x: x, y: y, isError: false };\r\n            } else {            // エラー時、（ NaN の場合を含む）\r\n                return {x: x, y: y, isError: true };\r\n            }\r\n        };\r\n        \r\n        return new GetterOfXY();\r\n    };\r\n    \r\n    /**\r\n     * eTatの指定行の編集元レコードを、テキストフォーマットに変換して取得する\r\n     * \r\n     * @memberof TimeSeries.FileParser\r\n     * @param {Object}\r\n     *            e eTat[n]：eTatの指定行\r\n     * @return {String} eTatの指定行の表示用テキスト\r\n     */\r\n    FileParser.prototype.getRecordAsText = function (e) { // #62 ADD\r\n        if (!e) return \"\";\r\n        var text = \"\";\r\n        if (typeof e.pos === \"undefined\") { // 生成データのとき\r\n            // 生成データをCSVのログデータとして編集する #61\r\n            text = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](e.x, \"yyyy/MM/dd hh:mm:ss.000\", true) // #92\r\n                    + \", \" + e.y + \", \" + e.message; // #53\r\n            // 状態遷移履歴を追加する #62\r\n            if (e.history){\r\n                e.history.forEach(function(h){\r\n                    var timeStr = \"\";\r\n                    if (typeof(h.time) === \"number\") {\r\n                        timeStr = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](h.time, \"mm:ss.000\", true) + \" seq:\" // #92\r\n                    }\r\n                    text += \" [\" + h.sequenceIdx + \":\" + h.status + \"]\" // #61\r\n                        + timeStr + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](h.sequenceTime, \"mm:ss.000\", true); // #92\r\n                }, this);\r\n            }\r\n        } else { // ファイル読込のとき\r\n            // ファイルの該当行を Uint8Arrayに登録する\r\n            var buff = new Uint8Array(e.len + 2);\r\n            var file = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__[\"HJN\"].filesArrayBuffer[e.fileIdx]; // #23\r\n            buff.set(new Uint8Array(file, e.pos,\r\n                    Math.min(e.len + 2, file.byteLength - e.pos)));\r\n            // ログデータを編集する\r\n            text = String.fromCharCode.apply(null, buff);\r\n        }\r\n        return text;\r\n        \r\n    };\r\n \r\n    // new\r\n    return FileParser;\r\n}());\n\n/***/ }),\n/* 39 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = MenuConfigFile;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__ = __webpack_require__(1);\n\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class MenuConfigFile\r\n * @classdesc FileParser用メニューHTML定義\r\n * \r\n */\r\nfunction MenuConfigFile() {}  // #76\r\n  \r\n\r\nMenuConfigFile.config = function () {\r\n    // File Format Config設定画面定義 #51\r\n    var prefix = \"File\";\r\n    var c = new  __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"](prefix);\r\n    c // #53\r\n        .name(\"NEWFILE\").label(null,\"Open file as \") // #23\r\n            .radio(\"NEWDATA\", null, \"newly\", true)\r\n            .radio(\"ADDDATA\", null, \"append\").n()\r\n//        .startTag(\"select\")\r\n//            .option(\"NEWDATA\", null, \"newly\", true)\r\n//            .option(\"ADDDATA\", null, \"append\")\r\n//        .endTag().n()\r\n        .label(null,\"<B>----- File format definition --------</B>\").n()\r\n        .name(\"CHAR\").label(null, \"<B>[Charset]</B>\") // #82\r\n//          .n()        \r\n//            .radio(c.def(\"CHAR_SJIS\", \"SJIS\"), null, \"Shift-JIS\", true)\r\n//            .radio(c.def(\"CHAR_EUCJP\", \"EUCJP\"), null, \"EUC-JP\")\r\n//            .radio(c.def(\"CHAR_UTF8\", \"UTF8\"), null, \"UTF-8\")\r\n//            .radio(c.def(\"CHAR_UNICODE\", \"Unicode\"), null, \"Unicode\")\r\n//        .n(\"<br>\")\r\n        .startTag(\"select\")\r\n            .option(c.def(\"CHAR_SJIS\", \"SJIS\"), null, \"Shift-JIS\", true)\r\n            .option(c.def(\"CHAR_EUCJP\", \"EUCJP\"), null, \"EUC-JP\")\r\n            .option(c.def(\"CHAR_UTF8\", \"UTF8\"), null, \"UTF-8\")\r\n            .option(c.def(\"CHAR_UNICODE\", \"Unicode\"), null, \"Unicode\")\r\n        .endTag().n()\r\n        .name(\"LF\").label(null, \"<B>[Line feed code]</B>\").n()\r\n            .radio(c.v(\"LF_FIX\"), null, \"Fixed Length\")\r\n                .number(\"LF_FIX.v\",  null, \"byte\",\"80\",'style=\"width:60px;\"').n()\r\n            .radio(c.def(\"LF_WIN\",  13), null, \"Windows:CR(13)+LF(10)\", true).n()\r\n            .radio(c.def(\"LF_UNIX\", 10), null, \"Unix/Linux:LF(10)\").n()\r\n            .radio(c.def(\"LF_ZOS\",  15), null, \"zOS:NEL(15)\").n()\r\n            .radio(c.def(\"LF_MAC\",  13), null, \"Mac:CR(13)\").n()\r\n            .radio(c.v(\"LF_ELSE\"), null, \"other charcode\")\r\n                .number(\"LF_ELSE.v\", \"(\", \")\", \"10\", 'style=\"width:40px;\"').n()\r\n        .n(\"<br>\")\r\n        .name(\"SEP\").label(null,\"<B>[CSV delimiter]</B>\")\r\n        .startTag(\"select\")\r\n            .option(c.def(\"SEP_COMMA\", ','), null, \"comma\")\r\n            .option(c.def(\"SEP_TAB\", '\\t'),   null,\"tab\", true)\r\n            .option(c.v(\"SEP_ELSE\"), null, \"other :\")\r\n        .endTag()\r\n//            .radio(c.def(\"SEP_COMMA\", ','), null, \"comma\")\r\n//            .radio(c.def(\"SEP_TAB\", '\\t'),   null,\"tab\", true)\r\n//            .radio(c.v(\"SEP_ELSE\"), null, \"other\")\r\n                .text(\"SEP_ELSE.v\", '\"', '\"', ',', 'size=\"2\" placeholder=\",\"').n()\r\n        .n(\"<br>\")\r\n        .label(null,\"<B>----- Data format definition --------</B>\").n()\r\n        .name(\"DATATYPE\").label(null,\"\") // #89\r\n            .radio(\"DATATYPE_TATSTART\", null, \"TAT & START time\")\r\n            .radio(\"DATATYPE_TATEND\", null, \"TAT & END time\", true)\r\n            .radio(\"DATATYPE_START_END\", null, \"START & END time\").n()\r\n        .n(\"<br>\")\r\n        .name(\"TIME\").label(null, \"<B>[TIMESTAMP field]</B>\").n()\r\n        .number(\"TIME_COL\", \"\", \"th column of CSV\", \"1\", 'style=\"width:40px;\"').n()\r\n        // .name(\"TIME_POS\")\r\n        .number(\"TIME_POS\", \"& Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n        .number(\"TIME_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .name(\"TIME_FORM\").label(null,\"Format:\").n()\r\n            .radio(\"TIME_FORM_YMD\", \"text\", null, true)\r\n                .text(\"TIME_YMD\", null, null, '\"YYYY/MM/DD hh:mm:ss.000\"',\r\n                        'size=\"23\" placeholder=' + \"'\" +'\"YYYY/MM/DD hh:mm:ss.000\"'+ \"'\" ).n() // #92\r\n            .radio(\"TIME_FORM_TEXT\", \"(num)\", \"text\")\r\n            .radio(\"TIME_FORM_LONG\", null, \"long\").n()\r\n            .nDown()\r\n                .name(\"TIME_UNIT\").label(null, \"Units of numbers:\")\r\n                    .radio(c.def(\"TIME_UNIT_MS\", 1), null, \"msec\")\r\n                    .radio(c.def(\"TIME_UNIT_SEC\", 1000), null, \"sec\", true)\r\n            .nUp()\r\n        .n(\"<br>\")\r\n        .n(\"<br>\") // #89\r\n        .name(\"CSV_TAT_LABEL\").label(null,\"<B>[TAT or START/END judgment field]</B>\").n() // #89\r\n        .number(\"TAT_COL\", \"\", \"th column of CSV\", \"2\", 'style=\"width:40px;\"').n()\r\n        // .name(\"TAT_POS\")\r\n        .number(\"TAT_POS\", \"& Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n        .number(\"TAT_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .n(\"<br>\") // #89\r\n        .name(\"TAT_CONF\").label(null,\"<B>for TAT(turnaround time) condition</B>\").n() // #89\r\n        .name(\"TAT_UNIT\").label(null, \"Units of numbers:\")\r\n            .radio(c.def(\"TAT_UNIT_MS\", 1), null, \"msec\", true)\r\n            .radio(c.def(\"TAT_UNIT_SEC\", 1000), null, \"sec\").n()\r\n        .name(\"TAT_FORM\").label(null,\"Format: \")\r\n            .radio(\"TAT_FORM_TEXT\", null, \"text\", true)\r\n            .radio(\"TAT_FORM_LONG\", null, \"long\").n()\r\n            .nDown()\r\n                .name(\"ENDIAN\").label(null, \"for long Endian: \")\r\n                    .radio(c.def(\"ENDIAN_LIL\", true), null, \"little\", true)\r\n                    .radio(c.def(\"ENDIAN_BIG\", false), null, \"big\")\r\n            .nUp()\r\n        .n(\"<br>\")\r\n        // 開始 ／終了時刻指定 #89\r\n        .n(\"<br>\")\r\n        .name(\"CSV_SE_LABEL1\").label(null,\"<B>for START/END judgment condition</B>\").n() \r\n        .text(\"CSV_SE_S_REG\", 'START record: Matches /', '/', 'START', \r\n                'size=\"8\" placeholder=\"START\"').n()\r\n        .text(\"CSV_SE_E_REG\", 'END record: Matches /', '/', 'END',\r\n                'size=\"8\" placeholder=\"END\"').n()\r\n        .n(\"<br>\")\r\n        // 開始-終了ペアリングキー定 #89\r\n        .n(\"<br>\")\r\n        .name(\"CSV_SE_LABEL2\").label(null, \"<B>[START-END pairing KEY field]</B>\").n()\r\n        .number(\"CSV_SE_COL\", \"\", \"th column of CSV\", \"3\", 'style=\"width:40px;\"').n()\r\n        // .name(\"CSV_SE_POS\")\r\n            .number(\"CSV_SE_POS\", \"& Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n            .number(\"CSV_SE_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .name(\"CSV_SE_LABEL3\").label(null, \"& Position(Matches reg. exp.):\").n()\r\n        .nDown()\r\n            .text(\"CSV_SE_FROM_REG\", 'between /', '/', '',   'size=\"8\" placeholder=\"\"')\r\n            .text(\"CSV_SE_TO_REG\", 'and /', '/', '',   'size=\"8\" placeholder=\"\"').n()\r\n        .nUp()\r\n        .text(\"CSV_SE_MATCH_REG\", '& Adopt as KEY: Matches /', '/', '[0-9A-Z]+',\r\n                'size=\"8\" placeholder=\"[0-9A-Z]+\"').n()\r\n        .n(\"<br>\")\r\n    ;\r\n}\n\n/***/ }),\n/* 40 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualApp\r\n * @classdesc 仮想アプリケーション\r\n * \r\n * @param {String}\r\n *            [userName = \"dafault\"] ログに出力するユーザ名\r\n * @param {Array}\r\n *            [sequence = SQL３個のオン処理] 取引の処理シーケンスを格納した配列\r\n * @param {Number}\r\n *            [times = 2 回] 繰返し回数\r\n * @param {Number}\r\n *            [thinkTime = 300 ms] 繰返し時の次回処理開始までの平均時間(ミリ秒）\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #53\r\n    /** @constructor */\r\n    function VirtualApp(userName, model){\r\n        if(!(this instanceof VirtualApp)){\r\n            return new VirtualApp(userName, model);\r\n        }\r\n        this._userName = userName || \"default\"; // ログ出力テキスト\r\n        // 定数の設定\r\n        // イベントシーケンスを取得する\r\n        if (typeof(model) === \"undefined\") model = {}\r\n        model.baseModel = model.baseModel || {\"holds\": []};\r\n        this._sequence = model.sequence;\r\n        // イベントシーケンスの繰り返し回数\r\n        this._times = (typeof(model.times) !== \"undefined\") ? model.times : 1;\r\n        // イベントシーケンス終了時に再実行する場合の平均再開時間\r\n        this._thinkTime = Math.max(0,\r\n                (typeof(model.thinkTime) !== \"undefined\") ? model.thinkTime : 500);\r\n        // イベントシーケンス終了時に再実行する場合の最小再開時間\r\n        this._thinkTimeMin = Math.max(0,\r\n                (typeof(model.thinkTimeMin) !== \"undefined\") ? model.thinkTimeMin : 500);\r\n        // メッセージ（ログ末尾に付与する文字列）\r\n        this._baseMessage = model.message; // + \"\\n\"; // #88\r\n        this._message = \"\";\r\n        this._history = []; // #62\r\n\r\n        // 変数の設定\r\n        this._startTime = Number.MIN_SAFE_INTEGER; // イベントシーケンス開始時刻（UNIX時刻：ミリ秒）\r\n        this._sequenceTime = Number.MIN_SAFE_INTEGER; // シミュレータに登録したイベントの時刻（現在時刻）\r\n        this._sequenceIdx = 0;    // シミュレータに登録したイベントシーケンスの位置\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n\r\n    /**\r\n     * シミュレータのログを出力する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            logLv ログレベル（isLog <= logLvのときログ出力する）<br>\r\n     *            (0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)\r\n     * @param {boolean}\r\n     *            isLog ログ出力レベル\r\n     * @param {Number}\r\n     *            time 日時を表す数値（ミリ秒）\r\n     * @param {Object}\r\n     *            vApp 仮想アプリ\r\n     * @param {Object}\r\n     *            resource リソース\r\n     * @param {String}\r\n     *            text ログテキスト\r\n     * @param {String}\r\n     *            highText 強調表示テキスト\r\n     */\r\n    VirtualApp.prototype.logger = function(logLv, isLog, time, vApp, resource, text, highText) {\r\n        // 0:なしの時\r\n        if (!isLog) return;\r\n        var errCode = 0;\r\n        if (resource && (resource._holdHeap.size() !== resource._holdingQty)) {\r\n            // エラー時★\r\n            errCode = 1;\r\n            highText = highText ? highText + \"　unkown error!!\" : \"　unkown error!!\";\r\n        } else if (logLv > +isLog) {\r\n            return; \r\n        }\r\n\r\n        // エラーログ編集\r\n        var user = vApp ? \" \" + vApp._userName : \" \";\r\n        var resourceText = resource ? (\" [\" + resource._name + \" wait:\"\r\n                + resource._waitHeap.size() + \"hold:\"\r\n                + resource._holdHeap.size() + \"=\"\r\n                + resource._holdingQty + \" qty] \") : \" \";\r\n        text = text || \"\";\r\n        var logText = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](this.getTime(),\"hh:mm:ss.000\",true) \r\n                    + user +\"(\" + this._times + \"-\" + this._sequenceIdx + \")\"\r\n                    + resourceText \r\n                    + text;\r\n        highText = highText || \"\";\r\n\r\n        // エラー時の強制補正★\r\n        var modify = \"\";\r\n        if (errCode === 1) { // リソースヒープもしくはリソース量を強制補正する\r\n            var deleted = undefined;\r\n            if (resource._holdHeap.size() < resource._holdingQty) {\r\n                deleted = resource._holdHeap.del(this);\r\n            }\r\n            if (deleted){\r\n                modify = \"FORCE★: holdHeap.del(\" + deleted.userName + \")\";\r\n            } else {\r\n                modify = \"FORCE★: holdingQty modified\"\r\n                    resource._holdingQty = resource._holdHeap.size();\r\n            }\r\n        }\r\n\r\n        // エラーログ出力\r\n        if (highText || modify){\r\n            console.log(logText + \" %o\", highText + \" \" + modify);\r\n        } else {\r\n            console.log(logText);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取引を開始する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            startTime 開始時刻（UNIX時刻：ミリ秒）\r\n     * @return {Object}仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.start = function(startTime) {\r\n        this._times--; // イベントシーケンスの繰り返し回数を1減らす\r\n        this._sequenceIdx = 0;    // シミュレータに登録したイベントシーケンスの位置\r\n        this._startTime = startTime;      // イベントシーケンス開始時刻（UNIX時刻：ミリ秒）\r\n        this._sequenceTime = startTime;   // シミュレータに登録したイベントの時刻\r\n        this._message = this._baseMessage; // ログ末尾に出力する文字列の初期化\r\n        this._history = []; // ログ末尾に出力する状態遷移履歴情報の初期化 #62\r\n        this.addHistory(\"start\");\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * イベント時刻を返却する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualApp.prototype.getTime = function() {\r\n        return this._sequenceTime;\r\n    };\r\n\r\n    /**\r\n     * リソース使用量を返却する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            [resource| 指定なしのとき1.0を返却する] リソース\r\n     * @return {Number} リソース使用量\r\n     */\r\n    VirtualApp.prototype.getAmount = function(resource) {\r\n        return 1.0;\r\n    };\r\n\r\n    /**\r\n     * 次の状態に遷移する、シーケンス終了時TATログを出力する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualApp.prototype.next = function(system) {\r\n        this.logger(4, system._log, system.getTime(), this, undefined, 'NEXT', undefined);\r\n        var events = []; // 戻り値\r\n        var ret = {result: true, events: [this]};\r\n\r\n        if (this._sequenceIdx < this._sequence.length) { // イベントシーケンス処理途中のとき\r\n            var seq = this._sequence[this._sequenceIdx]; // 現在の処理シーケンス位置\r\n            // holdリソースを取得する\r\n            if (seq.hold && seq.hold !== \"\") {\r\n                // holdリソースが指定されているとき、指定リソースを確保する（確保できたとき[this]が戻り値）\r\n                ret = system.getResouce(seq.hold).hold(system, this); // #61\r\n                events = ret.events;\r\n            } else {\r\n                // holdリソースが指定されていないとき、無条件に自身をスケジュール対象に加える\r\n                events = [this];\r\n            }\r\n            // リソースを確保できたとき、該当シーケンスを完了させる\r\n            if (0 < events.length && (0 <= this._times) && ret.result) { // #61\r\n                // 完了した処理の処理時間を加える\r\n                var tatAdd = Math.ceil(__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Random\"]().exponential(seq.tat - seq.tatMin));\r\n                this.setSequenceTime(this._sequenceTime += seq.tatMin + tatAdd, seq.hold); // #61\r\n                // シーケンスのfreeで指定されているリソースの解放\r\n                if (seq.free) {\r\n                    for (var i = 0; i < seq.free.length; i++) {\r\n                        events = events.concat(system.getResouce(seq.free[i]).free(this));\r\n                    }\r\n                }\r\n                // 次の処理を参照する（ シミュレータに登録したイベントシーケンスの位置）\r\n                this._sequenceIdx++;\r\n            }\r\n            return events;\r\n        }\r\n\r\n        // イベントシーケンスを終えたときTATログを出力する(this._sequenceIdx >= this._sequence.length)\r\n        var vApp = this._finish(system, \"N_000\");\r\n        // シーケンスをstart状態に設定する\r\n        // this._sequenceTime = system.getTime(); はfinishで更新されるので不可\r\n        // this._startTime = this._sequenceTime; finishで設定する\r\n        // 繰返し処理を継続する場合、自アプリケーションを再スケジュールする\r\n        if (vApp) {\r\n            events.push(this);\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * Freeに伴い、次の状態に遷移する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            [time | 変更しない} イベント時刻（UNIX時刻：ミリ秒）\r\n     * @param {String}\r\n     *            status ログに追記する時刻設定理由文字列\r\n     * @return {Object} 仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.setSequenceTime = function(time, status) {\r\n        status = status || \"\"; \r\n        // 解放された時刻をイベント時刻に設定する\r\n        this._sequenceTime = time;\r\n        // ログに状態遷移履歴を追記する\r\n        return this.addHistory(status);\r\n    };\r\n\r\n    /**\r\n     * ログにステータス変更履歴を追記する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {String}\r\n     *            status ログに追記する状態遷移の理由文字列\r\n     * @param {Number}\r\n     *            time 状態遷移時刻（ミリ秒）\r\n     * @return {Object} 仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.addHistory = function(status, time) {\r\n// var timeStr = \"\";\r\n// if (typeof(time) === \"number\") {\r\n// timeStr = Util.D2S(time, \"mm:ss.000\", true) + \" seq:\"\r\n// }\r\n// this._message += \" [\" + this._sequenceIdx + \":\" + status + \"]\" // #61\r\n// + timeStr + Util.D2S(this._sequenceTime, \"mm:ss.000\", true);\r\n        // 状態遷移履歴（ログ出力用）を追加する\r\n        this._history.push({ // #62\r\n            sequenceIdx : this._sequenceIdx,\r\n            status : status,\r\n            time : time,\r\n            sequenceTime : this._sequenceTime\r\n        });\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * アベンド処理（holdしている可能性のあるリソースを解放し、イベントシーケンスを強制終了する）\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {Object}\r\n     *            holdedResource アベンドさせたVirtualResource\r\n     * @param {String}\r\n     *            [logID=\"E_600\"] ログID\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Boolean}\r\n     *            [isHolding=true] リソース(holdedResource)をholdしているか否か<br>\r\n     * @param {Number}\r\n     *            [abendTime=sytem.getTime()] abend時刻\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualApp.prototype.abend = function(system, holdedResource, \r\n                                    logID, logMesseage, isHolding, abendTime) {\r\n        logID = logID || \"E_600\";\r\n        abendTime = abendTime || system.getTime();\r\n        isHolding = (typeof(isHolding) === \"boolean\") ? isHolding : true; // #61\r\n        var events = []; // 戻り値\r\n        this.logger(3, system._log, this._sequenceTime, this, holdedResource, 'abend', undefined);\r\n        var seq = this._sequence[this._sequenceIdx];\r\n        // 現在のシーケンスでholdするリソースがあるとき、waitしている可能性があるため、waitから削除する\r\n        if (seq && seq.hold) { // #61\r\n            system._resources[seq.hold].release(this);\r\n        }\r\n        // holdingリソースを開放する\r\n        var holdings;\r\n        // シーケンスから、holdingリソース一覧を取得する #59\r\n        if (seq) holdings = seq.holding;\r\n        if (holdings) { // シーケンス上holdingリソースがあるとき(undefined対策） #61\r\n            for (var i = holdings.length - 1; 0 <= i; i--) { // #61\r\n                // holdedResourceは削除処理対象外（呼び出し元リソースは、呼び出し前に削除済なので）\r\n                if (holdings[i] !== holdedResource._name || isHolding){ // #61\r\n                    // holdingリソースを開放し、使用リソース減に伴って新たにスケジュールするvAppを取得 #59\r\n                    events = events.concat(system._resources[holdings[i]].free(this));\r\n                }\r\n            }\r\n        }\r\n        // イベントシーケンスを強制終了する\r\n        this.setSequenceTime(abendTime, logID); // #59\r\n        var vApp = this._finish(system, logID, logMesseage);\r\n        // 自vAppに継続処理があれば、自vAppをスケジュール対象に加える\r\n        if (vApp && (0 <= this._times)) { // #61\r\n            events = events.concat([vApp]);\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * イベント終了時処理（ログ出力と、繰り返し判定）\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {String}\r\n     *            [logID=\"N_000\"] ログID（ログメッセージの先頭文字）\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Number}\r\n     *            [forceTime] 強制終了時刻を指定する（ミシュレーション停止後のeTat強制出力用）\r\n     * @return {Object|undefined} 再スケジュールするときthis、再スケジュールしないときundefined\r\n     */\r\n    VirtualApp.prototype._finish = function(system, logID, logMesseage, forceTime) {\r\n        logID = logID || \"N__00\";\r\n        logMesseage = logMesseage || \"\";\r\n        var events = []; // 戻り値\r\n        var logText = logID + \" \" + this._userName + \" \" + logMesseage + \" \" + this._message;\r\n        var now = this._sequenceTime;\r\n\r\n        // 強制終了時（シミュレーション終了時刻到来時）、自APのシミュレーションを強制終了する\r\n        if (typeof(forceTime) === \"number\") {\r\n            // 起動済処理はTATログを出力する #59\r\n            if (this._startTime <= forceTime) { \r\n                // TATログを出力する\r\n                system.eTat.push( { x: forceTime, \r\n                                    y: Math.round(forceTime - this._startTime),\r\n                                    sTatIdx: 0,\r\n                                    message: logText,\r\n                                    history: this._history} ); // #62\r\n                this.logger(2, system._log, forceTime, this, undefined, 'finish() FORCE\"', logText);\r\n            }\r\n            this._sequenceIdx = this._sequence.length; // #61 処理完了状態にする\r\n            this._startTime = this._sequenceTime; // #61 念のため設定\r\n            return undefined;\r\n        }\r\n\r\n        // 起動済処理はTATログを出力する #59\r\n        if (this._startTime <= now ) { // || this._sequenceIdx ===\r\n                                        // this._sequence.length) {\r\n            system.eTat.push( { x: now,\r\n                                y: Math.round(now - this._startTime),\r\n                                sTatIdx: 0,\r\n                                message: logText,\r\n                                history: this._history} ); // #62\r\n            this.logger(2, system._log, now, this, undefined, 'finish() \"', logText);\r\n        } else  {\r\n            this.logger(0, system._log, now, this, undefined,\r\n                    'finish() Unexpected error★ _startTime > _sequenceTime:'\r\n                    + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"D2S\"](this._startTime, \"hh:mm:ss.000\", true)\r\n                            + \" \" + this._startTime + \" > \" + now\r\n                            + \" Idx:\" + this._sequenceIdx \r\n                    , logText);\r\n        }\r\n        this._message = this._baseMessage; // ログ末尾に追加するメッセージの初期化\r\n \r\n        // 継続判定\r\n        if (0 < this._times) { // イベントシーケンスを繰り返すとき\r\n            // イベント時刻にThink time（指数分布）を加える\r\n            var nextTime = this.getTime() + this._thinkTimeMin;\r\n            if (this._thinkTimeMin < this._thinkTime) {\r\n                nextTime += Math.ceil(Math.abs( // #61\r\n                        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Random\"]().exponential(this._thinkTime - this._thinkTimeMin)));\r\n            }\r\n            // 処理の先頭に戻る\r\n            return this.start(nextTime);\r\n        }\r\n        // イベントシーケンスを継続しない時(this._times < 0)\r\n        this._times--;       // イベントシーケンスの繰り返し回数を1減らす\r\n        this._sequenceIdx = this._sequence.length; // #61 処理完了状態にする\r\n        this._startTime = this._sequenceTime; // #61\r\n        return undefined;\r\n    };\r\n\r\n    /* new */\r\n    return VirtualApp;\r\n}());\n\n/***/ }),\n/* 41 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualResource\r\n * @classdesc 仮想リソース\r\n * \r\n * @param {Object}\r\n *            system 仮想システム（シミュレーション中の現在時刻取得等に用いる）\r\n * @param {String}\r\n *            [name = \"unlimited\"] リソース名（\"unlimited\"はリソース解放待ちを管理しない）\r\n * @param {Number}\r\n *            [holdCapacity = 1.0] 保有リソース総量（数）\r\n * @param {Number}\r\n *            [timeout = 10秒] 処理のタイムアウト時間（未使用）\r\n * @param {Number}\r\n *            [waitCapacity = Number.MAX_SAFE_INTEGER]\r\n *            リソース取得待ちキューの深さ（数）、キュー溢れ時は即時エラー終了しリソース処理しない\r\n * @param {Number}\r\n *            [queueWait = 10秒] 最大キュー滞留時間（リソース取得待ちタイムアウト時間）\r\n * @param {Boolean}\r\n *            [log=false] 詳細ログ出力有無\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #53\r\n    /** @constructor */\r\n    function VirtualResource(system, name,\r\n                        holdCapacity, timeout, waitCapacity, queueWait, log){\r\n        if(!(this instanceof VirtualResource)){\r\n            return new VirtualResource(system, name,\r\n                        holdCapacity, timeout, waitCapacity, queueWait, log);\r\n        }\r\n        this._system = system;\r\n        this._name = name || \"unlimited\";\r\n        this._log = log ? +log : 0; // #59\r\n\r\n        // 処理待ち管理用\r\n        this._waitTimeout = (typeof(queueWait) !== \"undefined\")\r\n                                ? queueWait : 10000;   // キュー滞留時間上限\r\n        this._waitCapacity  = (typeof(waitCapacity) !== \"undefined\")\r\n                                ? waitCapacity : Number.MAX_SAFE_INTEGER; // キューの深さ\r\n        this._waitHeap = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Heap\"](    // リソース解放待ちキュー（登録時間順）\r\n                function(obj){ return obj.getTime(); });\r\n        \r\n        // リソース管理用\r\n        this._holdTimeout  = (typeof(timeout)  !== \"undefined\") \r\n                                ? timeout : 10000;   // 処理のタイムアウト時間\r\n        this._holdCapacity = (typeof(holdCapacity) !== \"undefined\")\r\n                                ? holdCapacity : 1.0;   // 保有リソース量（数）\r\n        this._holdingQty = 0;   // 使用リソース量\r\n        this._holdHeap = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Heap\"]( // 処理のタイムアウト管理用ヒープ{obj:,val:} #59\r\n                 function(node){ return node.val; }, // valはタイムアウト時刻\r\n                 function(node){ return node.obj; }); // objはvApp\r\n        \r\n        // イベントスケジュール制御用\r\n        this._sequenceTime = 0;   // シミュレータに登録したイベントの時刻（タイムアウトチェック用）\r\n        this._isScheduled = false; // シミュレータにタイムアウトチェックイベントをスケジュールしたか\r\n        if (0 < this._waitTimeout && 0 < this._holdTimeout){ // スケジュール間隔 #61\r\n            this._interval = Math.min(this._waitTimeout, this._holdTimeout);\r\n        } else if (0 < this._waitTimeout) {\r\n            this._interval = this._waitTimeout;\r\n        } else if (0 < this._holdTimeout) {\r\n            this._interval = this._holdTimeout;\r\n        } else {\r\n            this._interval = 0;\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * リソースチェックイベント（タイムアウトチェック）を開始する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Number}\r\n     *            startTime 開始時刻（UNIX時刻：ミリ秒）\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Object} イベント(this)\r\n     */\r\n    VirtualResource.prototype.start = function(startTime, system) { // #59\r\n        this._sequenceTime = startTime + this._interval; // シミュレータに登録するイベントの時刻\r\n        system.setEvent(this);    // シミュレータにタイムアウトチェックイベントをスケジュールする\r\n        this._isScheduled = true; // 「シミュレータにタイムアウトチェックイベントをスケジュールしたかフラグ」をON\r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * イベント時刻を返却する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualResource.prototype.getTime = function() {\r\n        return this._sequenceTime;\r\n    };\r\n    \r\n    /**\r\n     * タイムアウトチェック用仮想イベント\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualResource.prototype.next = function(system) {\r\n        var events = []; // 戻り値\r\n        var now = this.getTime();\r\n        // リソース解放待ち時間がタイムアウトしたappをタイムアウトさせる\r\n        var queuedTime = Number.MIN_SAFE_INTEGER; \r\n        while (0 < this._waitHeap.size() && this._waitTimeout <= now - queuedTime) {\r\n            queuedTime = this._waitHeap.top().getTime();\r\n            if (this._waitTimeout <= now - queuedTime) { // キューイング取引がタイムアウトしているとき\r\n                // リソース解放待ちHeapからfreeするappを取り出す\r\n                var app = this._waitHeap.pop();\r\n                // appをアベンドさせる(holdリソース解放なし）\r\n                var apps = app.abend(system, this, \"E_QTO\", this._name + \" queue timeout\",\r\n                        false, queuedTime + this._waitTimeout); // appにfree時刻をセットする\r\n                // appsをスケジュールイベント登録対象に加える\r\n                if (apps.length){\r\n                    events = events.concat(apps);\r\n                }\r\n            }\r\n        }\r\n        // リソース使用時間がタイムアウトしたappをタイムアウトさせる #59\r\n        var holdTimeoutTime = Number.MIN_SAFE_INTEGER;\r\n        while (0 < this._holdHeap.size() && holdTimeoutTime <= now) {\r\n            var top = this._holdHeap.top();\r\n            holdTimeoutTime = top.val;\r\n            if (holdTimeoutTime <= now) { // 処理中取引がタイムアウトしているとき #61\r\n                var app = top.obj;\r\n                // appがスケジュールされている場合削除する（スケジューラに登録されていない場合何も起きない）\r\n                system.removeEvent(app);\r\n                // appの使用時間がタイムアウトしたリソースを解放する（注：abendで解放させると永久ループする）\r\n                events = events.concat(this.free(app));                \r\n                // appをタイムアウト時刻にアベンドさせる(holdリソース解放を伴う）\r\n                events = events.concat(app.abend(system, this,\"E_HTO\", \r\n                            this._name + \" hold timeout\", false, holdTimeoutTime));\r\n            }\r\n        }\r\n        // 次回タイムアウトチェック時刻を設定する\r\n        if ((0 < this._waitHeap.size()) || (0 < this._holdHeap.size())) {\r\n            // タイムアウトの設定があるとき、 #61\r\n            // リソース解放待ちvAppがあるとき、(タイムアウトしていない)最古vAppのタイムアウト時刻\r\n            // リソース解放待ちvAppがないとき、現在からタイムアウト時刻後 にスケジュールする\r\n            var nextWaitTimeout = Number.MAX_SAFE_INTEGER;\r\n            if (0 < this._waitTimeout) {\r\n                if ( 0 < this._waitHeap.size() \r\n                        && now <= this._waitTimeout + this._waitHeap.top().getTime()) {\r\n                    nextWaitTimeout = this._waitHeap.top().getTime() + this._waitTimeout; \r\n                } else {\r\n                    nextWaitTimeout = now + this._waitTimeout;\r\n                }\r\n            }            \r\n            var nextHoldTimeout = Number.MAX_SAFE_INTEGER;\r\n            if (0 < this._holdTimeout) {\r\n                if(0 < this._holdHeap.size()) {\r\n                    nextHoldTimeout = this._holdHeap.top().val;\r\n                } else {\r\n                    nextHoldTimeout = now + this._holdTimeout;\r\n                }\r\n            }\r\n            this._sequenceTime = Math.min(nextWaitTimeout, nextHoldTimeout);\r\n            if (this._sequenceTime < Number.MAX_SAFE_INTEGER) {\r\n                events.push(this); // タイムアウトチェックイベントをケジュールイベント登録対象に加える\r\n            } else {\r\n                this._isScheduled = false;\r\n            }\r\n        } else { \r\n            // 以外のとき、シミュレータにタイムアウトチェックイベントを再スケジュールしない\r\n            this._isScheduled = false;\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * リソースを取得する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {Object}\r\n     *            vApp リソースにhold要求する仮想AP\r\n     * @return {Objcet} 処理結果{result:boolean, events:Array}<br>\r\n     *         {boolean} result :\r\n     *         true:正常（リソース取得、取得待ち、取得不要）、false:エラー（リソース枯渇E_QOF)）<br>\r\n     *         {Array} :events リソース取得後、スケジューラに登録するイベントの配列<br>\r\n     *         [vApp]： リソースを取得できたとき、もしくはリソース枯渇時でvApp再処理の場合、スケジュール対象の vApp\r\n     *         が登録された配列[vApp]を返却<br>\r\n     *         []： リソース待ちに登録されたとき、既にリソースが管理するスケジューラに登録さているので、空の配列[]を返却<br>\r\n     *         もしくはリソース枯渇時で繰返し完了時、再スケジュールしないので[]を返却\r\n     */\r\n    VirtualResource.prototype.hold = function(system, vApp) {\r\n        var ret = { result : true,\r\n                    events : [vApp] }; // 戻り値 #61\r\n        if (this._name === \"unlimited\") return ret; // [vApp] リソース解放待ちを管理しないとき\r\n        vApp.logger(4, this._log, vApp._sequenceTime, vApp, this, 'HOLD' , undefined);\r\n        // タイムアウトチェックイベントがスケジュールされていないとき、スケジュールする\r\n        if (!this._isScheduled && (0 < this._interval)) {\r\n            this.start(system.getTime(), system);\r\n        }\r\n        // リソースを取得できるとき、使用リソース量（数）を増やし、実行中処理管理ヒープに登録し、スケジュール対象とする\r\n        var amount = vApp.getAmount(this); // 消費リソース量(デフォルト1.0）\r\n        if (amount <= (this._holdCapacity - this._holdingQty)) {\r\n            // 使用リソースを増やす\r\n            this._holdingQty += amount;\r\n            // タイムアウト管理対象リソースのとき、vAppをタイムアウト管理対象に加える #59\r\n            if (0 < this._holdTimeout) {\r\n                this._holdHeap.push({obj: vApp, val: system.getTime() + this._holdTimeout});\r\n            }\r\n            vApp.logger(3, this._log, system.getTime(), vApp, this, 'hold' , undefined);\r\n            return ret; // [vApp]\r\n        }\r\n\r\n        // リソース解放待ちキューに空きがあるとき、vAppをリソース解放待ちに 登録する（スケジュールしない）\r\n        if ((this._waitHeap.size() < this._waitCapacity) && (0 < this._waitTimeout)){\r\n            // リソース解放待ちタイムアウト管理対象に加える\r\n            this._waitHeap.push(vApp);\r\n            vApp.addHistory(\"wait:\" + this._name, system.getTime()); // #61\r\n            vApp.logger(3, this._log, system.getTime(), vApp, this, 'wait' , undefined);\r\n            return { result: true, events: [] };\r\n        }\r\n        \r\n        // リソース解放待ちキューが溢れていた時、リソースを取得できずにアベンド（リソース解放なし、自AP継続の場合[vApp]をリターン） #61\r\n        var apps = vApp.abend(system, this, \"E_QOF\",\r\n                    \"[\" + this._name + \"] over flow\", false);\r\n        vApp.logger(3, this._log, system.getTime(), vApp, this, 'over' , undefined);\r\n        return { result: false, events: apps }; // #61\r\n    };\r\n\r\n    /**\r\n     * 引数vAppが使用していたリソースを解放する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            vApp リソースにfree要求する仮想AP\r\n     * @param {Boolean}\r\n     *            [isHolding=true] 該当vAppが自リソースをholdしているか否か<br>\r\n     *            false指定時、指定vAppはリソースをholdしていない前提で、hold vApp一覧からの削除処理を行わない\r\n     * @return {Array} スケジューラに登録するイベントの配列([vApp] | [])\r\n     */\r\n    VirtualResource.prototype.free = function(vApp, isHolding) { // #59\r\n        vApp.logger(4, this._log, this._system.getTime(), vApp, this, 'FREE' , undefined);\r\n        isHolding = (typeof(isHolding) === \"boolean\") ? isHolding : true;\r\n        if (this._name === \"unlimited\") return []; // リソース解放待ちを管理しないとき\r\n        var vApps = []; // 戻り値\r\n        // 自リソースを使用している可能性があるとき、使用リソースを解放する\r\n        // 解放したvAppが使用していたリソース量(デフォルト1.0）を、使用リソース量（数）から減らす #59\r\n        if (isHolding === true) { // #61\r\n            this._holdingQty -= vApp.getAmount(this);\r\n            // タイムアウト管理対象リソースのとき、vAppをタイムアウト管理対象から削除する #61\r\n            if (0 < this._holdTimeout) { // #61\r\n                var app = this._holdHeap.del(vApp);\r\n            }\r\n            vApp.addHistory(\"free:\" + this._name, this._system.getTime());\r\n            vApp.logger(3, this._log, this._system.getTime(), vApp, this, 'del' , undefined);\r\n        }\r\n        // リソース解放待ちキューから、空きリソースで処理できるようになったvAppを取り出しスケジュールする #61\r\n        var marginQty = this._holdCapacity - this._holdingQty;\r\n        var addQty = this._waitHeap.top()\r\n                    ? this._waitHeap.top().getAmount(this) // 次のリソース解放待ちキューの使用量\r\n                    : Number.MAX_SAFE_INTEGER;\r\n        for (var i = this._waitHeap.size() && addQty <= marginQty; 0 < i; i--) {\r\n            // リソース解放待ちキューからfreeするappを取り出す\r\n            var app = this._waitHeap.pop();\r\n            // appにfree時刻をセットし、スケジュールイベント登録対象に加える\r\n            // (注：リソース取得はスケジュール後、E_HTOに伴う他のリソースの時刻は将来）\r\n            app.setSequenceTime(this._system.getTime(), \"release:\" + this._name);\r\n            vApps.push(app);\r\n            // 次のappのリソース量を加える\r\n            addQty += this._waitHeap.top() \r\n                    ? this._waitHeap.top().getAmount(this) // 次のリソース解放待ちキューの使用量\r\n                    : Number.MAX_SAFE_INTEGER;\r\n        }\r\n        return vApps;\r\n    };\r\n\r\n\r\n    /**\r\n     * 引数vAppをリソース開放待ちキューからリリースする\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            vApp リリースする仮想AP\r\n     * @return {Object | undefined} リリースした仮想AP\r\n     */\r\n    VirtualResource.prototype.release = function(vApp) { // #61\r\n        var app = this._waitHeap.del(vApp);\r\n        if (app) vApp.addHistory(\"release\", this._system.getTime());\r\n        return app;\r\n    }\r\n\r\n    \r\n    \r\n    /**\r\n     * イベント終了時処理（リソースが管理しているvAppをfinishさせる（強制終了させ処理中vAppはTATログ出力する）\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {String}\r\n     *            [logID=\"N_000\"] ログID（ログメッセージの先頭文字）\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Number}\r\n     *            forceTime 強制終了時刻を指定する（ミシュレーション停止後のeTat強制出力用）\r\n     * @return {null}\r\n     */\r\n    VirtualResource.prototype._finish = function(system, logID,\r\n                                        logMesseage, forceTime) { // #59\r\n        // シミュレーション終了後処理（処理中のvAppを強制終了する）\r\n        logID = logID || \"N_EoS\";\r\n        logMesseage = logMesseage || \"\";\r\n        while(0 < this._waitHeap.size()){\r\n            event = this._waitHeap.pop();\r\n            if (event._finish) {\r\n                event._finish(system, logID,\r\n                        \"[\" + this._name + \"] \" + logMesseage , forceTime);\r\n            }\r\n        }\r\n    }\r\n\r\n    /* new */\r\n    return VirtualResource;\r\n}());\n\n/***/ }),\n/* 42 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * @memberOf Simulator\r\n * @class virtualSystemByJson\r\n * @classdesc 仮想システム生成ツール(virtualSystemByJson)\r\n *            <p>\r\n *            Util管理用クラス（スタティックメソッドのみ）のためコンストラクタは使用しない\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #53\r\n    /** @constructor */\r\n    function virtualSystemByJson(){\r\n        if(!(this instanceof virtualSystemByJson)){\r\n            return new virtualSystemByJson();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n\r\n    // static\r\n    /**\r\n     * 初期表示用サンプルデータ(ETAT)を自動生成する\r\n     * \r\n     * @memberof Simulator.VirtualSystemByJson\r\n     * @param {String}\r\n     *            [jsonText] シミュレーション条件JSONテキスト\r\n     * @return {ETAT} 終了時刻のTAT（応答時間）時系列データ [{x:終了時刻(UNIX時刻の経過時間(秒)),\r\n     *         y:レスポンス(秒)}]\r\n     */\r\n    // CreateSampleTatLog\r\n    virtualSystemByJson.Execute = function(jsonText){ // #53\r\n        var vSys = {};\r\n        // parse\r\n        var json = JSON.parse(jsonText)\r\n        // virtual system と resources の設定\r\n        var log = (json.log !== undefined) ? json.log : false; // #59\r\n        var start = (json.start !== undefined) \r\n                    ? __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"S2D\"](json.start) : new Date(1970,1,2);\r\n        var end = start + __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"S2N\"](json.end, \"24*h\");\r\n        var resources = json.resources;\r\n        for (var i = 0; i < resources.length; i++) {\r\n            resources[i].timeout = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"S2N\"](resources[i].timeout, \"10*sec\");\r\n            resources[i].qWait = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"S2N\"](resources[i].qWait, \"10*sec\");\r\n        }\r\n        vSys = Object(__WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__[\"a\" /* default */])(start, end, json.resources, log);\r\n        // model の取得\r\n        var models = json.models;\r\n        for (var i = 0; i < models.length; i++) {\r\n            var model = models[i];\r\n            var name = Object.keys(model)[0]; // モデルの名称\r\n            var m = model[name]; // モデル\r\n            var baseModel = m.baseModel; // baseModel\r\n            for (var j = 0; j < m.sequence.length; j++) {\r\n                // 時間指定文字列を、ミリ秒数値に変換する（例：\"3*sec\"->3000)\r\n                m.sequence[j].tatMin = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"S2N\"](m.sequence[j].tatMin);\r\n                m.sequence[j].tat = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"S2N\"](m.sequence[j].tat);\r\n            }\r\n            // sequenceに、baseModelを展開し、未開放リソースの開放処理を登録する\r\n            models[name] = __WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__[\"a\" /* default */].getModel(\r\n                        baseModel.holds, \r\n                        __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"S2N\"](baseModel.tatMin), __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"S2N\"](baseModel.tat),\r\n                        m.sequence, \r\n                        (typeof(m.times) === \"number\") ? m.times : 1, // #61\r\n                        __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"S2N\"](m.thinkTimeMin), __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"S2N\"](m.thinkTime)); \r\n        }\r\n        // client の設定\r\n        var clients = json.clients;\r\n        for (var i = 0; i < clients.length; i++) {\r\n            var c = clients[i];\r\n            var cStart = start + __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"S2N\"](c.start, 0);\r\n            var cEnd   = start + __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"S2N\"](c.end, 24*60*60*1000);\r\n            vSys.setClients(c.user, c.message, c.num, cStart, cEnd, models[c.model]);\r\n        }\r\n        if (1 < log) console.log(vSys); // #59\r\n        return vSys.execute();\r\n    }\r\n\r\n    /**\r\n     * シミュレーション条件JSONテキストを作成する\r\n     * \r\n     * @memberof Simulator.VirtualSystemByJson\r\n     * @param {Number}\r\n     *            [n = 0] シナリオ番号\r\n     * @return {String} シミュレーション条件JSONテキスト\r\n     */\r\n    // CreateSampleTatLogJson\r\n    virtualSystemByJson.GetJsonConfig = function(n){ // #53\r\n        n = (typeof(n) !== \"undefined\") ? n : 0;\r\n        var jsonText = \"\";\r\n        if (n === 0) {\r\n            jsonText =  '{\\n'\r\n                + '\"log\" : 1,\\n'\r\n                + '\"start\" : \"2017/01/02 00:00:00.000\",\\n'\r\n                + '\"end\"   : \"17.0*h\",\\n'\r\n                + '\"resources\" : [\\n'\r\n                + '  {\"type\" :\"WEB\", \"thread\":1024,\"timeout\":\"300*sec\", \"q\":1280, \"qWait\":0},\\n'\r\n                + '  {\"type\" :\"AP\",  \"thread\":20,  \"timeout\":\"300*sec\", \"q\":1280, \"qWait\":0},\\n'\r\n                + '  {\"type\" :\"DB\",  \"thread\":10,  \"timeout\": \"10*sec\", \"q\":10,  \"qWait\":\"10*sec\"}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"models\" : [\\n' // 取引モデル一覧\r\n                + '  { \"ON-1\" : {\\n' // オンライン取引1\r\n                + '    \"times\": 60, \"thinkTimeMin\":\"3*sec\", \"thinkTime\": \"10*sec\",\\n'\r\n                + '    \"baseModel\":  {\"holds\": [\"WEB\",\"AP\",\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":30, \"tat\":50, \"note\":\"select A\"},\\n'\r\n                + '      {\"tatMin\":50, \"tat\":50, \"note\":\"updateB\", \"hold\":\"TBL_B\"},\\n'\r\n                + '      {\"tatMin\":80, \"tat\":100,\"note\":\"updateC\", \"hold\":\"TBL_C\"}\\n'\r\n                + '    ]}},\\n'\r\n                + ' { \"ON-2\" : {\\n' // オンライン取引2\r\n                + '    \"times\": 60, \"thinkTimeMin\":\"500*ms\", \"thinkTime\": \"1*sec\",\\n'\r\n                + '    \"baseModel\":  {\"holds\": [\"WEB\",\"AP\",\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":\"100*ms\", \"tat\":\"500*ms\", \"hold\":\"\"}\\n'\r\n                + '    ]}},\\n'\r\n                + ' { \"BATCH-1\" : {\\n' // バッチ取引3\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":\"2*sec\",\"tat\":\"5*sec\",\"note\":\"updateB\",\"hold\":\"TBL_B\"}\\n'\r\n                + '    ]}}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"clients\" : [\\n' // ユーザ作成条件\r\n                + '  {\"num\":100,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"ON-1\",  \"user\" :\"userU\", \"message\":\"select A update B,C\"},\\n'\r\n                + '  {\"num\": 20,\"start\":\"16.5*h\", \"end\":\"16.6*h\", \"model\":\"ON-1\",  \"user\" :\"userT\", \"message\":\"select A update B,C 【増】\"},\\n'\r\n                + '  {\"num\":100,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"ON-2\",  \"user\" :\"userS\", \"message\":\"排他なし(WEBのみ)\"},\\n'\r\n                + '  {\"num\": 20,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"BATCH-1\",\"user\":\"userB\", \"message\":\"バッチ処理 update B＊＊＊＊＊\"}\\n'\r\n                + ']\\n'\r\n                + '}\\n';\r\n        } else if (n === 1) {\r\n            // test用\r\n            jsonText =  '{\\n'\r\n                + '\"//\" : \"log（任意、デフォルト3）:詳細ログ出力指定(0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)\",\\n'\r\n                + '\"//\" : \"start/end:シミュレーション開始時刻/終了時刻\",\\n'\r\n                + '\"log\" : 1,\\n'\r\n                + '\"start\" : \"1970/01/02 00:00:00.000\",\\n'\r\n                + '\"end\"   : \"30.0*sec\",\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"resources:sequenceのhold/freeで指定するリソース名の定義\",\\n'\r\n                + '\"//\" : \"type:リソース名、thread:最大同時hold数、timeout：holdタイムアウト時間\",\\n'\r\n                + '\"//\" : \"　　　　　　　　　　　q:最大hold待ち数、qWait:最大hold待ち時間\",\\n'\r\n                + '\"resources\" : [\\n'\r\n                + '  {\"type\" :\"DB\",  \"thread\":2,  \"timeout\": \"5*sec\", \"q\":1,  \"qWait\":\"2*sec\"}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"models:clientsで指定するモデル名(model)の定義、以下modelsで指定できる項目\",\\n'\r\n                + '\"//\" : \"baseModel:複数リソースのsequenceをまとめて宣言できる、sequenceに展開した後処理される、任意指定\",\\n'\r\n                + '\"//\" : \"sequence:指定された順にリソースを取得する、配列内に複数指定可、sequenceも複数指定可\",\\n'\r\n                + '\"//\" : \"hold：リソース名、holds(baseModelのみ指定可）：リソース一覧、各々にtat/tatMinが適用される\",\\n'\r\n                + '\"//\" : \"tat/tatMin：リソースの取得に要する平均/最小時間、tatMinのデフォルトはtat\",\\n'\r\n                + '\"//\" : \"　　　　　　★注：tatはリソースの使用時間ではない、リソース使用時間を指定す場合はfreeで指定\",\\n'\r\n                + '\"//\" : \"数値はミリ秒単位、*ms,*sec,*min,*h,*day 指定可\",\\n'\r\n                + '\"//\" : \"times：繰返し回数\",\\n'\r\n                + '\"//\" : \"thinkTime/thinkTimeMin：繰返し時の間隔の平均/最小時間、thinkTimeMinのデフォルトはthinkTime\",\\n'\r\n                + '\"//\" : \"free：[リソース名の配列]、指定リソースを開放する、free指定の無いリソースはシーケンスの最後にfreeされる\",\\n'\r\n                + '\"models\" : [\\n' // 取引モデル一覧\r\n                + ' { \"TEST-AB\" : {\\n' // テスト取引\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"2*ms\"},\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_A\", \"tatMin\":\"1*sec\", \"tat\":\"1*sec\"}],\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_B\", \"tatMin\":\"3*sec\", \"tat\":\"3*sec\"}],\\n'\r\n                + '    \"times\": 2, \"thinkTimeMin\":\"1*sec\", \"thinkTime\": \"1*sec\"}},\\n'\r\n                + ' { \"TEST-BA\" : {\\n' // テスト取引\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"2*ms\"},\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_B\", \"tatMin\":\"1*sec\", \"tat\":\"1*sec\"}],\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_A\", \"tatMin\":\"3*sec\", \"tat\":\"3*sec\"}],\\n'\r\n                + '    \"times\": 2, \"thinkTimeMin\":\"1*sec\", \"thinkTime\": \"1*sec\"}}\\n'\r\n                + '    ],\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"clients：仮想アプリケーションの起動クライアントの定義\",\\n'\r\n                + '\"//\" : \"num:作成クライアント数、start～endの間で、ランダム（指数分布）に指定回数起動する\",\\n'\r\n                + '\"//\" : \"start/end:仮想クライアント作成/終了時刻、先頭で宣言したstartからの相対時刻\",\\n'\r\n                + '\"//\" : \"model:modelsで宣言したモデル名\",\\n'\r\n                + '\"//\" : \"user:user+通番 のユーザ名で仮想クライアントが作成される\",\\n'\r\n                + '\"clients\" : [\\n' // ユーザ作成条件\r\n                + '  {\"num\": 1,\"start\":\"0*sec\", \"end\":\"0*sec\", \"model\":\"TEST-AB\",\"user\" :\"testAB1\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"1*sec\", \"end\":\"1*sec\", \"model\":\"TEST-AB\",\"user\" :\"testAB2\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"3*sec\", \"end\":\"3*sec\", \"model\":\"TEST-BA\",\"user\" :\"testBA3\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"4*sec\", \"end\":\"4*sec\", \"model\":\"TEST-BA\",\"user\" :\"testBA4\"}\\n'\r\n                + ' ]\\n'\r\n                + '}\\n';\r\n        }\r\n\r\n        return jsonText; \r\n    }\r\n\r\n    /* new */\r\n    return virtualSystemByJson;\r\n}());\n\n/***/ }),\n/* 43 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = MenuConfig;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Init_js__ = __webpack_require__(3);\n\r\n\r\n\r\n/**\r\n * @memberOf Simulator\r\n * @class MenuConfig\r\n * @classdesc シミュレータ用メニューHTML定義\r\n * \r\n */\r\nfunction MenuConfig() {} // #74\r\n\r\nMenuConfig.config = function() {\r\n    // Simulator Config用関数定義(radio用） #53\r\n    var func_S_SIMU_000 = function(){ Object(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Init_js__[\"CreateSampleTatLogAndChartShow\"])(0); };\r\n    var func_S_SIMU_001 = function(){ Object(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Init_js__[\"CreateSampleTatLogAndChartShow\"])(1); };\r\n    // Simulator Config設定画面定義 #53\r\n    var prefix = \"Simulator\";\r\n    var c = new  __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"](prefix);\r\n        c    // #53\r\n         .n(\"<br>\")\r\n         .label(null,\" If you change the scenario below,\").n()\r\n         .label(null,\"JSON is initialized and re-simulated.\").n()\r\n         .n(\"<br>\")\r\n         .name(\"S_SIMU\")\r\n             .radio(\"S_SIMU_000\", null, \r\n                       \"1 hour with table(B) lock.<br>\"\r\n                     + \"- online[100-500ms 2-5tps]<br>\" \r\n                     + \"- batch[2-5sec evry3min]\",\r\n                     true ,null, func_S_SIMU_000).n()\r\n             .radio(\"S_SIMU_001\", null, \"for test\", \r\n                     false ,null, func_S_SIMU_001).n()\r\n     ;\r\n}\n\n/***/ }),\n/* 44 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = MenuConfigFilter;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__ = __webpack_require__(1);\n\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class MenuConfigFilter\r\n * @classdesc FileParser用メニューHTML定義\r\n * \r\n */\r\nfunction MenuConfigFilter() {} // #76\r\n\r\nMenuConfigFilter.config = function () {\r\n    var prefix = \"Filter\";\r\n    var c = new  __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"](prefix);\r\n    // Filter Config用関数定義(radio用） #51\r\n    var func_F_SYNC_UPPER = function(){ __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__[\"default\"].DrawCallback(HJN.chart.graph); };\r\n    var func_F_SYNC_DETAIL = function(){ __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Graph_js__[\"default\"].DrawCallback(HJN.chartD.graph); };\r\n    // Filter Config設定画面定義 #51\r\n    c // #53\r\n        .name(\"F_SYNC\").label(null,\"Sync\") // #50\r\n            .radio(\"F_SYNC_UPPER\", null, \"Upper\", false ,null, func_F_SYNC_UPPER) // #51\r\n            .radio(\"F_SYNC_DETAIL\", null, \"Detail\", false, null, func_F_SYNC_DETAIL)\r\n            .radio(\"F_ASYNC\", null, \"Async\", true).n()\r\n        .label(null,\"<B>----- Data filter condition--------</B>\").n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TIME\").label(null, \"<B>[Date filter]</B>\").n()\r\n            .label(null,\"Include if end time is between\").n()\r\n                .text(\"F_TIME_FROM\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.000\"') // #92\r\n                .label(null,\"and\").n()\r\n                .text(\"F_TIME_TO\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.000\"').n() // #92\r\n            .n(\"<br>\")\r\n            .name(\"F_TAT\").label(null,\"<B>[Turnaround time(TAT) filter]</B>\").n()\r\n            .label(null,\"Include if TAT is between\").n()\r\n                .number(\"F_TAT_FROM\", null, null, \"0\", 'style=\"width:80px;\"')\r\n                .number(\"F_TAT_TO\", \"and\", null, null, 'style=\"width:80px;\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TEXT\").label(null,\"<B>[Text filter]</B>\").n()\r\n                .radio(\"F_TEXT_NON\", null, \"Don't use.\", true)\r\n                .radio(\"F_TEXT_INCLUDE\", null, \"Include \")\r\n                .radio(\"F_TEXT_EXCLUDE\", null, \"Exclude \").n()\r\n                .number(\"F_TEXT_LEN\", \"if \", \" bytes\", null, 'style=\"width:40px;\"')\r\n                .number(\"F_TEXT_POS\", \"from the \", \"th byte\", \"1\", 'style=\"width:40px;\"').n()\r\n                .number(\"F_TEXT_COL\", \"from head of the\", \"th column of CSV\", \"3\", 'style=\"width:40px;\"').n()\r\n                .text(\"F_TEXT_REG\", \"match the regular expression\", null, null, 'size=\"7\" placeholder=\".*\"').n()\r\n            .n(\"<br>\")\r\n    ;\r\n}\r\n\r\nMenuConfigFilter.reset = function () {\r\n    // メニュー画面フィルタ条件に、初期値を設定する\r\n    var c = new __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"Config\"](\"Filter\");\r\n    c.setText(\"F_TIME_FROM\", null);\r\n    c.setText(\"F_TIME_FROM\", null);\r\n    c.setText(\"F_TIME_TO\", null);\r\n    c.setText(\"F_TAT_FROM\", 0);\r\n    c.setText(\"F_TAT_TO\", null);\r\n    c.setSelector(\"F_TEXT_NON\");\r\n    c.setText(\"F_TEXT_LEN\", null);\r\n    c.setText(\"F_TEXT_POS\", 1);\r\n    c.setText(\"F_TEXT_COL\", 3);\r\n    c.setText(\"F_TEXT_REG\", null);\r\n}\r\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./tatLogDiver\": 6,\n\t\"./tatLogDiver-Copyright\": 8,\n\t\"./tatLogDiver-Copyright.js\": 8,\n\t\"./tatLogDiver-Graph\": 1,\n\t\"./tatLogDiver-Graph.js\": 1,\n\t\"./tatLogDiver-HJN\": 2,\n\t\"./tatLogDiver-HJN.js\": 2,\n\t\"./tatLogDiver-Init\": 3,\n\t\"./tatLogDiver-Init.js\": 3,\n\t\"./tatLogDiver-Menu\": 7,\n\t\"./tatLogDiver-Menu.js\": 7,\n\t\"./tatLogDiver-MenuConfigDetailGraph\": 10,\n\t\"./tatLogDiver-MenuConfigDetailGraph.js\": 10,\n\t\"./tatLogDiver-Plot\": 9,\n\t\"./tatLogDiver-Plot.js\": 9,\n\t\"./tatLogDiver-Usage.html\": 46,\n\t\"./tatLogDiver.css\": 13,\n\t\"./tatLogDiver.js\": 6\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 45;\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n<meta charset=\\\"UTF-8\\\">\\r\\n<title>Insert title here</title>\\r\\n</head>\\r\\n<body>\\r\\n<p>Ver. b19.06.30, Last update: 2019/06/30, (c)2017-2019 hirosejn </p>\\r\\n<h1 id=\\\"index\\\">Index</h1>\\r\\n<p><a href=\\\"#environment\\\"><strong>Environment　動作環境</strong></a></p>\\r\\n<p><a href=\\\"#items\\\"><strong>Items　画面の構成要素</strong></a></p>\\r\\n<p><a href=\\\"#graph\\\"><strong>Graph　グラフの操作方法</strong></a></p>\\r\\n<p><a href=\\\"#menu\\\"><strong>Menu　メニューの操作方法</strong></a></p>\\r\\n<ol>\\r\\n<li><a href=\\\"#menu-file\\\">&gt; File</a></li>\\r\\n<li><a href=\\\"#menu-filter\\\">&gt; Filter</a></li>\\r\\n<li><a href=\\\"#menu-simulator\\\">&gt; Simulator</a></li>\\r\\n<li><a href=\\\"#menu-view\\\">&gt; View</a></li>\\r\\n<li><a href=\\\"#menu-download\\\">&gt; Download</a></li>\\r\\n<li><a href=\\\"#menu-bottomdetailgraph\\\">&gt; Bottom detail graph</a></li>\\r\\n<li><a href=\\\"#menu-help\\\">&gt; Help</a></li>\\r\\n</ol>\\r\\n<p><a href=\\\"#simulator\\\"><strong>Simulator　シミュレーションシナリオの仕様</strong></a></p>\\r\\n<ol>\\r\\n<li><a href=\\\"#simulator-01\\\">Simulator-01　サンプル01(1 hour with table block.)の仕様</a></li>\\r\\n<li><a href=\\\"#simulator-99\\\">Simulator-99　サンプル99(for test)の仕様</a></li>\\r\\n</ol>\\r\\n<hr>\\r\\n<h2 id=\\\"environment\\\">Environment</h2>\\r\\n<h2 id=\\\"動作環境-↑\\\">動作環境　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n\\t<li><p>Chrome：Ver74以降にて動作検証（推奨）</p></li>\\r\\n\\t<li><p>Edge：基本動作検証済</p></li>\\r\\n\\t<li><p>ie8 ：基本動作検証済、注：Chroneに比べ5倍程度遅い。</p></li>\\r\\n</ul>\\r\\n<hr>\\r\\n<h2 id=\\\"items\\\">Items</h2>\\r\\n<h2 id=\\\"画面の構成要素-↑\\\">画面の構成要素　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n\\t<li><strong>右メニュー</strong>\\r\\n\\t\\t<br>：機能をアコーディオンメニュー形式で表示</li>\\r\\n\\t<li><strong>右上メッセージエリア</strong>\\r\\n\\t\\t<br>：ファイル読込処理結果等のメッセージを表示（ダイアログの操作で移動／リサイズ可）</li>\\r\\n\\t<li><strong>上段全体グラフ</strong>\\r\\n\\t\\t<br>：指定ファイルを、フィルター条件でフィルターしたデータを表示</li>\\r\\n\\t<li><strong>下段詳細グラフ</strong>\\r\\n\\t\\t<br>：上段表示データのうち「下段詳細グラフ表示条件」による指定期間のデータを表示</li>\\r\\n\\t<li><strong>下段データ表示エリア</strong>\\r\\n\\t\\t<br>：下段詳細グラフで、マウスオーバにより選択されたプロットに該当する、ファイルのレコードを表示。（ダイアログの操作で移動／リサイズ可）</li>\\r\\n\\t<li><strong>ダイアログ</strong>：\\r\\n\\t\\t<br>【閉じる】：ダイアログ右上のバツボタン。\\r\\n\\t\\t<br>【移動】：上部にマウスオーバすると表示されるグレーのバーをドラッグする。\\r\\n\\t\\t<br>【リサイズ】：四隅四辺にマウスオーバし、マウスがリサイズアイコンになった状態からドラッグする。</li>\\r\\n</ul>\\r\\n<hr>\\r\\n<h2 id=\\\"graph\\\">Graph</h2>\\r\\n<h2 id=\\\"グラフの操作方法-↑\\\">グラフの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n\\t<li><p><strong>マウスオーバー</strong> ：X軸の最も近い時刻のプロットが選択され強調表示される。</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p>　下段グラフの場合は、選択プロットの時刻に同時処理(CONC)している処理の開始時刻―終了時刻を結ぶ線が表示される（同時処理が視認し易く表示されるので、容易に排他解放待ちの有無を特定できる）。下部データ表示エリアに、選択プロットの元ファイルのレコードが表示される（排他処理を容易に特定できる）。</p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n\\t<li><p><strong>マウスクリック／タッチ</strong> ：選択されたプロットを基準に、下段詳細グラフが更新され、「下段詳細グラフ表示条件」アイコンが追加される。</p></li>\\r\\n\\t<li><p><strong>マウスドラッグ（横／縦）</strong> ：指定範囲を横幅／縦幅としてグラフを拡大表示する。</p></li>\\r\\n\\t<li><p><strong>マウスダブルクリック</strong> ：マウスドラッグによるグラフの拡大表示をリセットする。（左上の「reset zoom」ボタンも同一機能）</p></li>\\r\\n</ul>\\r\\n<hr>\\r\\n<h2 id=\\\"menu\\\">Menu</h2>\\r\\n<h2 id=\\\"メニューの操作方法-↑\\\">メニューの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n\\t<li><strong>メッセージ表示エリア</strong> ：処理結果メッセージを表示する。マウスによる移動（エリア上部選択）／リサイズに対応。</li>\\r\\n\\t<li><strong>Place on/side</strong> ボタン：メニューをグラフに「重ねる／重ねない」を切り替える。</li>\\r\\n\\t<li><strong>reset zoom</strong> ボタン：グラフの描画サイズを初期化する。（Androidでグラフのダブルクリックができないため設置）</li>\\r\\n\\t<li><strong>バツ／ハンバーガー</strong> ボタン：メニューの「表示／非表示」を切り替える</li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-file\\\">Menu-File</h3>\\r\\n<h2 id=\\\"メニュー／fileの操作方法-↑\\\">メニュー／Fileの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<h4>ボタン</h4>\\r\\n<ul>\\r\\n\\t<li><p><strong>Open csv data file</strong> ボタン：CSVファイルを選択。ファイルを選択するとグラフを表示する。</p></li>\\r\\n</ul>\\r\\n<h4>指定項目</h4>\\r\\n<ul>\\r\\n\\t<li><p><strong>Open file as</strong> ：データ読込モード指定</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p> <strong>◎newly</strong> ：新規に読み込む（既存データを破棄） <strong>○append</strong> ：既存データに指定ファイルの内容を追加する</p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n</ul>\\r\\n<h4>----- File format definition --------</h4>\\r\\n<ul>\\r\\n\\t<li><p><strong>[Line feed code]</strong> ：CSVファイルの改行コードを指定</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>○固定長 &quot;80&quot;byte</strong> ／ <strong>◎Windows:CR(13)+CF(10)</strong>\\r\\n\\t\\t\\t ／ <strong>○UNIX/Linux:LF(10)</strong> ／ <strong>○zOS:NEL(15)</strong> ／ <strong>○Max:CR(13)</strong>\\r\\n\\t\\t\\t  ／ <strong>○other charcode (&quot; &quot;)</strong> 文字コード番地を10進で指定</p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n\\t<li><p><strong>[Charset]</strong> ：CSVファイルの文字コードを指定（レコードデータ表示時に指定文字コードからUnicodeに変換して表示）</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>○Shift-JIS</strong> ／<strong>○EUC-JP</strong> ／  <strong>◎UTF-8</strong> ／ <strong>○Unicode</strong></p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n\\t<li><p><strong>[CSV delimiter]</strong> ：CSVファイルのデリミタを指定</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>○comma</strong> ：カンマ区切り／ <strong>◎tab</strong> ：タブ区切り／ <strong>○other &quot;,&quot;</strong>  区切り文字を指定する</p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n</ul>\\r\\n<h4>----- Data format definition --------</h4>\\r\\n<ul>\\r\\n\\t<li><p><strong>　</strong>CSVのカラムが保有するデータ構成を指定</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>○TAT &amp; START time</strong> ／<strong>◎TAT &amp; END time</strong> ／  <strong>○START &amp; END time</strong></p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n\\t<li><p><strong>[Timestamp field]</strong> ：終了時刻のフィールドの位置とフォーマットを指定</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>&quot;1&quot;th column of CSV</strong>：CSVのカラム位置を指定（デフォルト1カラム目、固定長レコードの場合1を指定）</p>\\r\\n\\t\\t<p><strong>Position(byte): from &quot;1&quot; length &quot; &quot;</strong>\\r\\n\\t\\t\\t：レコード内の固定バイト位置指定　レコードのfromバイト目から、length指定バイト長</p>\\r\\n\\t\\t<p><strong>Format</strong> :時刻のフォーマット</p>\\r\\n\\t\\t<p><strong>◎text &quot;YYYY/MM/DD hh.mm.ss.000&quot;</strong>\\r\\n\\t\\t\\t ：指定カラムのYYYY MM DD hh mm ss 000の位置から値を取得（エクセルの表示フォーマット： YYYY/MM/DD hh:mm:ss.000 に相当）</p>\\r\\n\\t\\t<p>　／ <strong>◎(num)text</strong> ／ <strong>○long</strong>\\r\\n\\t\\t\\t ：text：ユリウス日0:00との時差数値　テキスト数値／long(4バイト)数値（別途エンディアン指定)</p>\\r\\n\\t\\t<p><strong>Units of numbers:</strong> <strong>○msec</strong> ／ <strong>◎sec</strong>\\r\\n\\t\\t\\t ：(num)textもしくはlong選択時に、数値の単位をmsec/secから選択</p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n</ul>\\r\\n<ul>\\r\\n\\t<li><p><strong>[TAT or START/END judgment field]</strong> ：処理時間(TAT)フィールド　もしくは、開始／終了レコード判定フィールド の位置とフォーマットを指定</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>&quot;2&quot;th column of CSV</strong>：CSVのカラム位置を指定（デフォルト2カラム目、固定長レコードの場合1を指定）</p>\\r\\n\\t\\t<p><strong>Position(byte): from &quot;1&quot; length &quot; &quot;</strong>：固定バイト位置指定　指定カラムのfromバイト目から、length指定バイト長</p>\\r\\n\\t</blockquote>\\r\\n\\t\\t<strong>for TAT(turnaround time) condition</strong> ：処理時間(TAT)フィールド　の条件\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>Units of numbers:</strong> <strong>○msec</strong> ／ <strong>◎sec</strong>\\r\\n\\t\\t\\t ：処理時間の単位　msec/secから選択</p>\\r\\n\\t\\t<p><strong>Format:◎(num)text</strong> ／ <strong>○long</strong>\\r\\n\\t\\t\\t ：処理時間のフォーマット　テキスト数値／long(4バイト)数値</p>\\r\\n\\t\\t<p><strong>for long Endian:  ◎little</strong> ／ <strong>○big</strong>\\r\\n\\t\\t\\t ：long指定時のエンディアンを選択　リトルエンディアン／ビッグエンディアン</p>\\r\\n\\t</blockquote>\\r\\n\\t<strong>for START/END judgment condition</strong> ：開始／終了レコード判定フィールド　の条件\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>START record: Matches:/\\\"START\\\"/</strong>：指定正規表現（デフォルト/START/）に合致するレコードを開始レコードとする</p>\\r\\n\\t\\t<p><strong>END record: Matches:/\\\"END\\\"/</strong>：指定正規表現(デフォルト/END/)に合致するレコードを終了レコードとする</p>\\r\\n\\t</blockquote>\\r\\n</ul>\\r\\n<ul>\\r\\n<li><p><strong>[START-END pairing KEY field]</strong>\\r\\n\\t\\t ：開始／終了レコードなど同一取引と判定するキーフィールドを指定</p>\\r\\n<blockquote>\\r\\n\\t<p><strong>&quot;3&quot;th column of CSV</strong>\\r\\n\\t\\t：CSVのカラム位置を指定（デフォルト2カラム目、固定長レコードの場合1を指定）</p>\\r\\n\\t<p><strong>Position(byte): from &quot;1&quot; length &quot; &quot;</strong>\\r\\n\\t\\t：固定バイト位置指定　指定カラムのfromバイト目から、length指定バイト長</p>\\r\\n\\t<p><strong>&amp;Position(Matches reg. exp.):</strong>\\r\\n\\t\\t：かつ、以下の正規表現に合致する文字列に間（空欄のときは先頭～末尾）、</p>\\r\\n\\t<p><strong>between /\\\" \\\"/ and /\\\" \\\"/</strong></p>\\r\\n\\t<p><strong>&amp;Adopt as KEY: Matches /\\\"[0-9A-Z]+\\\"/</strong>\\r\\n\\t\\t:かつ、指定の正規表現に合致する文字列</p>\\r\\n</blockquote>\\r\\n</ul>\\r\\n<h4>ボタン</h4>\\r\\n<ul>\\r\\n\\t<li><p><strong>save format (.json)</strong> ボタン\\r\\n\\t\\t：メニュー指定項目を、JSON形式のファイルでダウンロードする</p></li>\\r\\n\\t<li><p><strong>load format (.json)</strong> ボタン\\r\\n\\t\\t： JSON形式のファイルから、メニュー指定項目を読み込む</p></li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-filter\\\">Menu-Filter</h3>\\r\\n<h2 id=\\\"メニュー／filterの操作方法-↑\\\">メニュー／Filterの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n<li><p><strong>Sync ○Upper ○Detail ◎Async</strong> 指定：表示しているグラフの条件をフィルター条件に取り込む</p>\\r\\n<blockquote>\\r\\n<p>　Upperを選択したタイミングで上段グラフを取り込む／Detailを選択したタイミングで下段グラフ／Asyncを選択した際には何も変更しない</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>[Date filter]</strong> 指定機能</p>\\r\\n<blockquote>\\r\\n<p><strong>Include if end time is between &quot;YYYY/MM/DD hh.mm.ss.000&quot; and &quot;YYYY/MM/DD hh.mm.ss.000&quot;</strong> ：</p>\\r\\n<p>　指定期間のデータのみを上段グラフの表示対象とする。時刻を手入力する作業は時間がかかるので Sync Upper/Detail で現在描画している情報を取り込んでから修正する操作を想定</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>[Turnaround time(TAT) filter]</strong> 指定機能：</p>\\r\\n<blockquote>\\r\\n<p><strong>Include if TAT is between &quot;0①&quot; and &quot;数値②&quot;</strong> ：</p>\\r\\n<p>　処理時間(TAT)が①～②のデータのみを上段グラフの表示対象とする</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>[Text filter]</strong> 指定機能：</p>\\r\\n<blockquote>\\r\\n<p><strong>◎Don&#39;t use. ○Include ○Exclude</strong></p>\\r\\n<p> <strong>if &quot;数値①&quot; bytes from the &quot;1②&quot;th byte from head of the &quot;3③&quot;th column of CSV match the regular expression &quot;④&quot;</strong> ：</p>\\r\\n<p>　テキストフィルターを使わない／正規表現に合致するデータを処理対象とする／正規表現に合致しないデータを処理対象とする</p>\\r\\n<p>　CSVレコードの、③番目のカラムの、先頭②バイト目から、①バイトの文字列を、正規表現④に照らして評価</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-simulator\\\">Menu-Simulator</h3>\\r\\n<h2 id=\\\"メニュー／simulatorの操作方法-↑\\\">メニュー／Simulatorの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<p>TAT log diver を起動すると、サンプルシミュレーションシナリオ１を初期表示する。</p>\\r\\n<ul>\\r\\n<li><strong>Simulate</strong> ボタン：指定したシミュレーションシナリオを実行しグラフを表示する。</li>\\r\\n<li><strong>JSON Editor(Open/Close)</strong> ボタン：シミュレーションシナリオ編集画面を開く／編集画面が開いている場合は閉じる。</li>\\r\\n<li><strong>サンプルシナリオ選択機能</strong> ：サンプルシナリオを選択します。異なるシナリオを選択したタイミングでシミュレーション実行しグラフを再描画する。</li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-view\\\">Menu-View</h3>\\r\\n<h2 id=\\\"メニュー／viewの操作方法-↑\\\">メニュー／Viewの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<p>上4つのチェックボックス（一部機能）で、上段全体グラフ上の表示有無を指定</p>\\r\\n<p>下7つのチェックボックス（全機能）で、下段詳細グラフ上の表示有無を指定</p>\\r\\n<ul>\\r\\n<li><p><strong>多重度（詳細）</strong> ：青　左Y軸　上段なし／下段☒</p>\\r\\n<blockquote>\\r\\n<p>同時処理数（多重度）をヒストグラム形式で表示</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>多重度（区間最大）/sec</strong> ：水色　左Y軸　上段☒／下段☒</p>\\r\\n<blockquote>\\r\\n<p>1秒間の区間の多重度の最大値</p>\\r\\n<p>上段グラフ：透過プロットで表示。同一多重度が連続するとプロットが重なり濃く見える</p>\\r\\n<p>下段グラフ：ヒストグラム形式で表示。多重度（詳細）と重ねて表示すると秒間最大値との関係を把握できる</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>average tps / min (end) [line]</strong> ：緑　左Y軸　上段☒／下段☒</p>\\r\\n<blockquote>\\r\\n<p>1分間の平均tps。コンピュータの処理数は1分毎にとられることが多いため、突合しやすいように表示</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>response by start time [Y2軸:plot]</strong> ：黄　右Y軸　上段なし／下段☒</p>\\r\\n<blockquote>\\r\\n<p>X軸：処理開始時刻、Y軸(点の高さ)は処理時間</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>response by end time [Y2軸:plot]</strong> ：茶　右Y軸　上段なし／下段☒</p>\\r\\n<blockquote>\\r\\n<p>X軸：処理終了時刻、Y軸(点の高さ)は処理時間</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>max response / min (end) [Y2軸:line]</strong> ：赤　右Y軸　上段☒／下段☒</p>\\r\\n<blockquote>\\r\\n<p>1分間の最大レスポンス（処理終了時刻ベース）、ヒストグラム風折れ線で表示</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>average response / min (end) [Y2軸:line]</strong> ：ピンク　右Y軸　上段☒／下段☐</p>\\r\\n<blockquote>\\r\\n<p>1分間の平均レスポンス（処理終了時刻ベース）、ヒストグラム風折れ線で表示。コンピュータの処理数は1分毎にとられることが多いため、突合しやすいように表示機能を設けているがデフォルト非表示</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-download\\\">Menu-Download</h3>\\r\\n<h2 id=\\\"メニュー／downloadの操作方法-↑\\\">メニュー／Downloadの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n<li><strong>Upper graph image(.png)</strong> ボタン：上段グラフの図をpng形式で、初期ファイル名 graph.png でダウンロード。</li>\\r\\n<li><strong>Upper graph data(.csv)</strong> ボタン：上段グラフに表示しているデータを、CSV形式で（改行コード、デリミタはFileメニューの指定値を適用）初期ファイル名 graph.csv でダウンロード。</li>\\r\\n<li><strong>Upper graph log records(.csv)</strong> ボタン：上段グラフに表示しているデータの元データを、処理終了時刻順に、入力ファイルのレコードフォーマット（改行コード、デリミタ等も元ファイルのまま加工せずに適用）で、初期ファイル名 tatlog.csv でダウンロード。<blockquote>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><strong>Detail graph image(.png)</strong> ボタン：下段グラフに対して上段と同じ処理。</li>\\r\\n<li><strong>Detail graph data(.csv)</strong> ボタン：下段グラフに対して上段と同じ処理。</li>\\r\\n<li><strong>Detail graph log records(.csv)</strong> ボタン：下段グラフに対して上段と同じ処理。</li>\\r\\n<li><strong>Detail conc log records(.csv)</strong> ボタン：下段グラフに表示用に選択したCONC（同時処理数）時に処理しているデータを、処理終了時刻順に、入力ファイルのレコードフォーマットで、初期ファイル名 conclog.csv でダウンロード。（CONC指定時以外の場合はCONC最大値を基準）。</li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-bottomdetailgraph\\\">Menu-BottomDetailGraph</h3>\\r\\n<h2 id=\\\"メニュー／bottom-detail-graphの操作方法-↑\\\">メニュー／Bottom detail graphの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<p>下段詳細グラフの表示条件を指定する</p>\\r\\n<ul>\\r\\n<li><p><strong>Range: - &quot;1①&quot; + &quot;2②&quot; &quot;10sec③&quot;</strong> 指定機能：下段グラフの期間を指定する</p>\\r\\n<blockquote>\\r\\n<p>「下段詳細グラフ表示条件」の基準時刻を③単位で切り捨てた時刻を基準に、-①数値×③単位　～ +②数値×③単位　を下段グラフの表示データ抽出期間とする。③単位はsec/10sec/min/hour/6hour/day/year から選択</p>\\r\\n<p>指定値を変更する都度、指定値を「下段詳細グラフ表示条件」に反映し下段グラフを再描画する。なお、グラフ上の範囲指定による表示期間変更は描画のみで「下段詳細グラフ表示条件」には反映されない。</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>「下段詳細グラフ表示条件」</strong> アイコン ：下段グラフに表示する条件を選択する機能（初期表示：同時処理数が最大となるタイミングを１つ）</p>\\r\\n<blockquote>\\r\\n<p>上段／下段グラフの任意の点をクリックすると、「下段詳細グラフ表示条件」アイコン　が追加される。アイコンは基準時刻順に縦に並ぶ。</p>\\r\\n<p>下段グラフに表示している「下段詳細グラフ表示条件」アイコンは背景グレー。他のアイコンは背景白</p>\\r\\n<p>アイコンにマウスをのせると、アイコンの左側にマイナス「－」アイコンが表示され、「－」をクリックすると該当「下段詳細グラフ表示条件」アイコンが削除される。</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-help\\\">Menu-Help</h3>\\r\\n<h2 id=\\\"メニュー／helpの操作方法-↑\\\">メニュー／Helpの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n<li><strong>Usage of TAT log diver</strong> ボタン：&quot;TAT log diver&quot;の使用方法をサブウィンドウで表示</li>\\r\\n<li><strong>about TAT log diver</strong> ボタン：&quot;TAT log diver&quot;のコピーライト、関連ＵＲＬをダイアログで表示</li>\\r\\n</ul>\\r\\n<hr>\\r\\n<h2 id=\\\"simulator\\\">Simulator</h2>\\r\\n<h2 id=\\\"シミュレーションシナリオの仕様-↑\\\">シミュレーションシナリオの仕様　<a href=\\\"#\\\">↑</a></h2>\\r\\n<h3 id=\\\"simulator-01\\\">Simulator-01</h3>\\r\\n<h2 id=\\\"サンプル011-hour-with-table-blockの仕様-↑\\\">サンプル01(1 hour with table block.)の仕様　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n<li>概要</li>\\r\\n</ul>\\r\\n<p><strong>数秒のバッチが、通常0.5秒以下の更新系オンのレスポンス遅延を起こす。更新系集中時に滞留増により遅延長時間化</strong></p>\\r\\n<p>online[100-500ms 2-5tps]：レスポンス100～500ミリ秒のオンライン取引を２～５tpsで発行。16:30～16:36に更新系オン2割増</p>\\r\\n<p>batch[2-5sec evry3min]：処理時間２～５秒のオン中バッチ取引（DB更新あり）を３分毎に起動</p>\\r\\n<ul>\\r\\n<li>詳細</li>\\r\\n</ul>\\r\\n<p>{\\r\\n&quot;log&quot; : 1,</p>\\r\\n<blockquote>\\r\\n<p>エラーログのみ出力</p>\\r\\n<p>　log（任意、デフォルト3）:詳細ログ出力指定(0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)</p>\\r\\n</blockquote>\\r\\n<p>&quot;start&quot; : &quot;2017/01/02 00:00:00.000&quot;,\\r\\n&quot;end&quot;   : &quot;17.0*h&quot;,</p>\\r\\n<blockquote>\\r\\n<p>2017/01/02 00:00:00.000 を基準、最大17時間後までシミュレーション実行</p>\\r\\n<p>シミュレーション開始時刻/終了時刻&quot;,</p>\\r\\n</blockquote>\\r\\n<p>&quot;resources&quot; : [</p>\\r\\n<blockquote>\\r\\n<p>システム構成定義： &quot;type:リソース名、thread:最大同時hold数、timeout：holdタイムアウト時間&quot;、q:最大hold待ち数、qWait:最大hold待ち時間&quot;</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;type&quot; :&quot;WEB&quot;, &quot;thread&quot;:1024,&quot;timeout&quot;:&quot;300*sec&quot;, &quot;q&quot;:1280, &quot;qWait&quot;:0},</p>\\r\\n<blockquote>\\r\\n<p>WEBサーバ：1024スレッド、タイムアウトエラー：300秒、スレッド溢れ時：即時エラー</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;type&quot; :&quot;AP&quot;,  &quot;thread&quot;:20,  &quot;timeout&quot;:&quot;300*sec&quot;, &quot;q&quot;:1280, &quot;qWait&quot;:0},</p>\\r\\n<blockquote>\\r\\n<p>APサーバ：20スレッド、タイムアウトエラー：300秒、スレッド溢れ時：即時エラー</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;type&quot; :&quot;DB&quot;,  &quot;thread&quot;:10,  &quot;timeout&quot;: &quot;10<em>sec&quot;, &quot;q&quot;:10,  &quot;qWait&quot;:&quot;10</em>sec&quot;}</p>\\r\\n<blockquote>\\r\\n<p>DBサーバ：10スレッド、SQL処理タイムアウトエラー：10秒、コネクションプール：10個、コネクション取得待ち：10秒でエラー</p>\\r\\n</blockquote>\\r\\n<p>],</p>\\r\\n<p>&quot;models&quot; : [</p>\\r\\n<blockquote>\\r\\n<p> &quot;models:clientsで指定するモデル名(model)の定義、以下modelsで指定できる項目&quot;,</p>\\r\\n<p> &quot;baseModel:複数リソースのsequenceをまとめて宣言できる、sequenceに展開した後処理される、任意指定&quot;,</p>\\r\\n<p> &quot;sequence:指定された順にリソースを取得する、配列内に複数指定可、sequenceも複数指定可&quot;,</p>\\r\\n<p> &quot;hold：リソース名、holds(baseModelのみ指定可）：リソース一覧、各々にtat/tatMinが適用される&quot;,</p>\\r\\n<p> &quot;tat/tatMin：リソースの取得に要する平均/最小時間、tatMinのデフォルトはtat&quot;,</p>\\r\\n<p> &quot;　　　　　　★注：tatはリソースの使用時間ではない、リソース使用時間を指定す場合はfreeで指定&quot;,</p>\\r\\n<p> &quot;数値はミリ秒単位、<em>ms,</em>sec,<em>min,</em>h,*day 指定可&quot;,</p>\\r\\n<p> &quot;times：繰返し回数&quot;,</p>\\r\\n<p> &quot;thinkTime/thinkTimeMin：繰返し時の間隔の平均/最小時間、thinkTimeMinのデフォルトはthinkTime&quot;,</p>\\r\\n<p> &quot;free：[リソース名の配列]、指定リソースを開放する、free指定の無いリソースはシーケンスの最後にfreeされる&quot;,</p>\\r\\n</blockquote>\\r\\n<p>  { &quot;ON-1&quot; : {\\r\\n    &quot;times&quot;: 60, &quot;thinkTimeMin&quot;:&quot;3<em>sec&quot;, &quot;thinkTime&quot;: &quot;10</em>sec&quot;,\\r\\n    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;WEB&quot;,&quot;AP&quot;,&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;5</em>ms&quot;},\\r\\n    &quot;sequence&quot;: [\\r\\n      {&quot;tatMin&quot;:30, &quot;tat&quot;:50, &quot;note&quot;:&quot;select A&quot;},\\r\\n      {&quot;tatMin&quot;:50, &quot;tat&quot;:50, &quot;note&quot;:&quot;updateB&quot;, &quot;hold&quot;:&quot;TBL_B&quot;},\\r\\n      {&quot;tatMin&quot;:80, &quot;tat&quot;:100,&quot;note&quot;:&quot;updateC&quot;, &quot;hold&quot;:&quot;TBL_C&quot;}\\r\\n    ]}},</p>\\r\\n<blockquote>\\r\\n<p>オンライン取引１(ON-1)：１ユーザあたり3～10秒の取引を60回発行、Web-AP-DBの３層AP、各レイヤ呼出し時に2～5msの通信遅延あり、\\r\\n　処理内容 30～50ms 参照排他なしSQL　＞　50ms TBL_B排他SQL　＞ 80~100ms TBL_C排他SQL（更新処理を想定）</p>\\r\\n</blockquote>\\r\\n<p> { &quot;ON-2&quot; : {\\r\\n    &quot;times&quot;: 60, &quot;thinkTimeMin&quot;:&quot;500<em>ms&quot;, &quot;thinkTime&quot;: &quot;1</em>sec&quot;,\\r\\n    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;WEB&quot;,&quot;AP&quot;,&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;5</em>ms&quot;},\\r\\n    &quot;sequence&quot;: [\\r\\n      {&quot;tatMin&quot;:&quot;100<em>ms&quot;, &quot;tat&quot;:&quot;500</em>ms&quot;, &quot;hold&quot;:&quot;&quot;}\\r\\n    ]}},</p>\\r\\n<blockquote>\\r\\n<p>オンライン取引２(ON-2)：１ユーザあたり500ミリ秒~1秒の取引を60回発行、Web-AP-DBの３層AP、各レイヤ呼出し時に2～5msの通信遅延あり、\\r\\n　処理内容 100～500ms 排他なし（一覧参照処理を想定）</p>\\r\\n</blockquote>\\r\\n<p> { &quot;BATCH-1&quot; : {\\r\\n    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;5</em>ms&quot;},\\r\\n    &quot;sequence&quot;: [\\r\\n      {&quot;tatMin&quot;:&quot;2<em>sec&quot;,&quot;tat&quot;:&quot;5</em>sec&quot;,&quot;note&quot;:&quot;updateB&quot;,&quot;hold&quot;:&quot;TBL_B&quot;}\\r\\n    ]}}</p>\\r\\n<blockquote>\\r\\n<p>バッチ取引２(BATCH-1)：１ユーザあたり１ジョブ実行、DB更新のみ、各レイヤ呼出し時に2～5msの通信遅延あり、\\r\\n処理内容 2～5秒 TBL_Bを排他（長時間トランザクションのオン中バッチを想定）</p>\\r\\n</blockquote>\\r\\n<p>],</p>\\r\\n<p>&quot;clients&quot; : [</p>\\r\\n<blockquote>\\r\\n<p> &quot;clients：仮想アプリケーションの起動クライアントの定義&quot;,\\r\\n &quot;num:作成クライアント数、start～endの間で、ランダム（指数分布）に指定回数起動する&quot;,\\r\\n &quot;start/end:仮想クライアント作成/終了時刻、先頭で宣言したstartからの相対時刻&quot;,\\r\\n &quot;model:modelsで宣言したモデル名&quot;,\\r\\n &quot;user:user+通番 のユーザ名で仮想クライアントが作成される&quot;,</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;:100,&quot;start&quot;:&quot;16.0<em>h&quot;, &quot;end&quot;:&quot;17.0</em>h&quot;, &quot;model&quot;:&quot;ON-1&quot;,  &quot;user&quot; :&quot;userU&quot;, &quot;message&quot;:&quot;select A update B,C&quot;},</p>\\r\\n<blockquote>\\r\\n<p>16:00～17:00の 1時間に、userU00～userU99の100ユーザが、各々ON-1（更新系）を100回発行</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;: 20,&quot;start&quot;:&quot;16.5<em>h&quot;, &quot;end&quot;:&quot;16.6</em>h&quot;, &quot;model&quot;:&quot;ON-1&quot;,  &quot;user&quot; :&quot;userT&quot;, &quot;message&quot;:&quot;select A update B,C 【増】&quot;},</p>\\r\\n<blockquote>\\r\\n<p>16:30～16:36 の6分間に、userT00～userT19の20ユーザが、各々ON-1（更新系）を20回発行（一時的に更新オン取引200%増）</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;:100,&quot;start&quot;:&quot;16.0<em>h&quot;, &quot;end&quot;:&quot;17.0</em>h&quot;, &quot;model&quot;:&quot;ON-2&quot;,  &quot;user&quot; :&quot;userS&quot;, &quot;message&quot;:&quot;排他なし(WEBのみ)&quot;},</p>\\r\\n<blockquote>\\r\\n<p>16:00～17:00 の1時間に、userS00～userS99の100ユーザが、各々ON-2（参照系）を100回発行</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;: 20,&quot;start&quot;:&quot;16.0<em>h&quot;, &quot;end&quot;:&quot;17.0</em>h&quot;, &quot;model&quot;:&quot;BATCH-1&quot;,&quot;user&quot;:&quot;userB&quot;, &quot;message&quot;:&quot;バッチ処理 update B＊＊＊＊＊&quot;}</p>\\r\\n<blockquote>\\r\\n<p>16:00～17:00 に、userBが、BATCH-1（更新系）を20回発行</p>\\r\\n</blockquote>\\r\\n<p>]\\r\\n}</p>\\r\\n<blockquote>\\r\\n</blockquote>\\r\\n<h3 id=\\\"simulator-99\\\">Simulator-99</h3>\\r\\n<h2 id=\\\"サンプル99for-testの仕様-↑\\\">サンプル99(for test)の仕様　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n<li>概要</li>\\r\\n</ul>\\r\\n<p><strong>デッドロックが発生し、タイムアウトで解消</strong></p>\\r\\n<p>デグレードテスト用シナリオを兼ねる（描画バリエーションの網羅率の高い短いシナリオ）</p>\\r\\n<ul>\\r\\n<li>詳細</li>\\r\\n</ul>\\r\\n<p>{\\r\\n&quot;log&quot; : 1,\\r\\n&quot;start&quot; : &quot;1970/01/02 00:00:00.000&quot;,\\r\\n&quot;end&quot;   : &quot;30.0*sec&quot;,</p>\\r\\n<blockquote>\\r\\n<p>2017/01/02 00:00:00.000 を基準、最大30秒後までシミュレーション実行、エラーログのみ出力</p>\\r\\n</blockquote>\\r\\n<p>&quot;resources&quot; : [\\r\\n  {&quot;type&quot; :&quot;DB&quot;,  &quot;thread&quot;:2,  &quot;timeout&quot;: &quot;5<em>sec&quot;, &quot;q&quot;:1,  &quot;qWait&quot;:&quot;2</em>sec&quot;}\\r\\n],</p>\\r\\n<blockquote>\\r\\n<p>DBサーバ：2スレッド、DBトランザクションタイムアウトエラー：5秒、コネクションプール：1個、コネクション取得待ち：2秒でエラー</p>\\r\\n</blockquote>\\r\\n<p>&quot;models&quot; : [\\r\\n { &quot;TEST-AB&quot; : {\\r\\n    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;2</em>ms&quot;},\\r\\n    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_A&quot;, &quot;tatMin&quot;:&quot;1<em>sec&quot;, &quot;tat&quot;:&quot;1</em>sec&quot;}],\\r\\n    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_B&quot;, &quot;tatMin&quot;:&quot;3<em>sec&quot;, &quot;tat&quot;:&quot;3</em>sec&quot;}],\\r\\n    &quot;times&quot;: 2, &quot;thinkTimeMin&quot;:&quot;1<em>sec&quot;, &quot;thinkTime&quot;: &quot;1</em>sec&quot;}},</p>\\r\\n<blockquote>\\r\\n<p>バッチ取引AB(TEST-AB)：１ユーザあたり１秒毎に２回迄ジョブ起動、DB更新のみ、</p>\\r\\n<p>処理内容 3.007秒処理（開始 ＞ 1+2ms&gt;DB排他&gt;TBL_A排他 ＞ 1+2ms+３秒&gt;TBL_B排他 ＞ 1ms&gt;排他解放 ＞ 1ms終了）＋1秒＋3.008秒処理</p>\\r\\n</blockquote>\\r\\n<p> { &quot;TEST-BA&quot; : {\\r\\n    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;2</em>ms&quot;},\\r\\n    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_B&quot;, &quot;tatMin&quot;:&quot;1<em>sec&quot;, &quot;tat&quot;:&quot;1</em>sec&quot;}],\\r\\n    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_A&quot;, &quot;tatMin&quot;:&quot;3<em>sec&quot;, &quot;tat&quot;:&quot;3</em>sec&quot;}],\\r\\n    &quot;times&quot;: 2, &quot;thinkTimeMin&quot;:&quot;1<em>sec&quot;, &quot;thinkTime&quot;: &quot;1</em>sec&quot;}}\\r\\n    ],</p>\\r\\n<blockquote>\\r\\n<p>バッチ取引BA(TEST-BA)：１ユーザあたり１秒毎に２回迄ジョブ起動、DB更新のみ、</p>\\r\\n<p>処理内容 3.007秒処理（開始 ＞ 1+2ms&gt;DB排他&gt;TBL_B排他 ＞ 1+2ms+３秒&gt;TBL_A排他 ＞ 1ms&gt;排他解放 ＞ 1ms終了）＋1秒＋3.008秒処理</p>\\r\\n</blockquote>\\r\\n<p>&quot;clients&quot; : [</p>\\r\\n<blockquote>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;0<em>sec&quot;, &quot;end&quot;:&quot;0</em>sec&quot;, &quot;model&quot;:&quot;TEST-AB&quot;,&quot;user&quot; :&quot;testAB1&quot;},</p>\\r\\n<blockquote>\\r\\n<p>1回目：0.001秒に、ユーザtestAB10が、TEST-AB起動（排他待ちなし、3.007秒で正常終了:N_000)</p>\\r\\n<p>2回目：4.007秒に、ユーザtestAB10が、TEST-AB起動（DBコネクションキューオーバフロー、0.001秒で終了:E_QoF）</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;1<em>sec&quot;, &quot;end&quot;:&quot;1</em>sec&quot;, &quot;model&quot;:&quot;TEST-AB&quot;,&quot;user&quot; :&quot;testAB2&quot;},</p>\\r\\n<blockquote>\\r\\n<p>1回目：1.000秒に、ユーザtestAB20が、TEST-AB起動（デッドロック DBトランザクションタイムアウト5.000秒でエラー終了:E_HTO）</p>\\r\\n<p>2回目：7.000秒に、ユーザtestAB20が、TEST-AB起動（3.007秒で正常終了:N_000）</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;3<em>sec&quot;, &quot;end&quot;:&quot;3</em>sec&quot;, &quot;model&quot;:&quot;TEST-BA&quot;,&quot;user&quot; :&quot;testBA3&quot;},</p>\\r\\n<blockquote>\\r\\n<p>1回目：3.000秒に、ユーザtestBA30が、TEST-BA起動（testAB10のDB解放待ち0.007秒を加えた、3.014秒で正常終了:N_000）</p>\\r\\n<p>2回目：7.014秒に、ユーザtestBA30が、TEST-BA起動（5.005秒で正常終了:N_000）</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;4<em>sec&quot;, &quot;end&quot;:&quot;4</em>sec&quot;, &quot;model&quot;:&quot;TEST-BA&quot;,&quot;user&quot; :&quot;testBA4&quot;}</p>\\r\\n<blockquote>\\r\\n<p>1回目：4.001秒に、ユーザtestBA40が、TEST-BA起動（5.014秒で正常終了:N_000）</p>\\r\\n<p>2回目：3.000秒に、ユーザtestBA40が、TEST-BA起動（デッドロック DBトランザクションタイムアウト5.000秒でエラー終了:E_HTO）</p>\\r\\n</blockquote>\\r\\n<p> ]\\r\\n}</p>\\r\\n<blockquote>\\r\\n</blockquote>\\r\\n<p>　<a href=\\\"#\\\">go to top ↑</a></p>\\r\\n</body>\\r\\n</html>\\r\\n\\r\\n'; */\";\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// tatLogDiver.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 151da9a4dfd4cb9d8bde","import TouchPanel         from './util-TouchPanel.js';\r\nimport {DateToString, S2D, D2S, N2S, S2N} from './util-string.js';\r\nimport Random             from './util-Random.js';\r\nimport addEventListener   from './util-addEventListener.js';\r\nimport setZeroTimeout     from './util-setZeroTimeout.js';\r\nimport Logger             from './util-Logger.js';\r\nimport copyToClipboard    from './util-copyToClipboard.js';\r\nimport binarySearch       from './util-binarySearch.js';\r\nimport Heap               from './util-Heap.js';\r\nimport Element            from './util-Element.js';\r\nimport {Config}           from './config/config.js';\r\nimport {Encoding}         from './util-Encoding.js'; // #82\r\nimport SubWindow          from './util-SubWindow.js'; // #95\r\nimport Menu               from './util-Menu.js'; // #95\r\n\r\nexport {\r\n    TouchPanel,\r\n    S2D,\r\n    DateToString,\r\n    D2S,\r\n    N2S,\r\n    S2N,\r\n    Random,\r\n    addEventListener,\r\n    setZeroTimeout,\r\n    Logger,\r\n    copyToClipboard,\r\n    binarySearch,\r\n    Heap,\r\n    Element,\r\n    Config,\r\n    Encoding,  // #82\r\n    SubWindow, // #95\r\n    Menu       // #95\r\n};\r\n\r\n\r\n/** ie11 互換用 * */\r\nif(!Number.MAX_SAFE_INTEGER) Number.MAX_SAFE_INTEGER = 9007199254740991; // #59\r\nif(!Number.MIN_SAFE_INTEGER) Number.MIN_SAFE_INTEGER = -9007199254740991;\r\n\r\nif(!Uint8Array.prototype.indexOf){\r\n    Uint8Array.prototype.indexOf = function(target,index){\r\n        index = (index === undefined) ? 0 : index;  // #29\r\n        for(var i = index, last = index + 4096; i < last; i++){ // 暫定：1レコード4KBまでチェック\r\n            if(this[i] === target) return i;\r\n        }\r\n        return -1;\r\n    };\r\n}\r\nif (!Uint8Array.prototype.slice) {  // #29\r\n    Uint8Array.prototype.slice = function(begin, end) {\r\n        return this.subarray(begin, end);\r\n    };\r\n}\r\n// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\r\nif (!Array.prototype.findIndex) {\r\n    Array.prototype.findIndex = function(predicate) {\r\n      if (this === null) throw new TypeError('Array.prototype.findIndex called on null or undefined');\r\n      if (typeof predicate !== 'function') throw new TypeError('predicate must be a function');\r\n      var list = Object(this), length = list.length >>> 0, thisArg = arguments[1], value;\r\n      for (var i = 0; i < length; i++) {\r\n        value = list[i];\r\n        if (predicate.call(thisArg, value, i, list)) return i;\r\n      }\r\n      return -1;\r\n    };\r\n  }\r\n// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\nif (!Array.prototype.find) {\r\n    Array.prototype.find = function(predicate) {\r\n      if (this === null) throw new TypeError('Array.prototype.find called on null or undefined');\r\n      if (typeof predicate !== 'function')  throw new TypeError('predicate must be a function');\r\n      var list = Object(this), length = list.length >>> 0, thisArg = arguments[1], value;\r\n      for (var i = 0; i < length; i++) {\r\n        value = list[i];\r\n        if (predicate.call(thisArg, value, i, list))  return value;\r\n      }\r\n      return undefined;\r\n    };\r\n  }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util.js\n// module id = 0\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport * as Simulator from '../simulator/simulator.js';\r\nimport Menu from'./tatLogDiver-Menu.js';\r\nimport {CreateSampleTatLogAndChartShow} from'./tatLogDiver-Init.js';\r\nimport * as TimeSeries from '../timeSeries/timeSeries.js';\r\n\r\n\r\n/* ******1*********2*********3*********4*********5*********6*********7****** */\r\n\r\n/**\r\n * インスタンス内の定数を設定する。併せて性能対策として頻繁に使うDOM要素を取り込む\r\n * \r\n * @memberof tatLogDiver\r\n * @class Graph\r\n * @classdesc TAT(Turnaround time)ログ分析用グラフ\r\n * @param {string}\r\n *            chartIdName グラフを作成するHTML要素のID\r\n * @param {string}\r\n *            [globalName=\"HJN.chartD\"] グラフのID\r\n * @param {Object}\r\n *            [config] グラフの設定\r\n * @example HJN.chart = new HJN(chartName, \"HJN.chart\"); HJN.chart.init();\r\n *          HJN.chartD = new HJN(chartName + \"Detail\", \"HJN.chartD\");\r\n *          HJN.chartD.init();\r\n */\r\nexport default function Graph(chartIdName, globalName, config) {\r\n    /* メンバ変数 */\r\n    this.seriesSet = [];\r\n    this.chartIdName = chartIdName; // arg0 \"chart\",\"chartD\"\r\n    this.globalName = globalName || \"HJN.chartD\"; // arg1\r\n    if (!config) { // arg2\r\n        var isMain = (globalName === \"HJN.chart\") ? true : false;\r\n        config = {\r\n            SERIESES: [ \r\n                { n: HJN.Tat.CONC.N, process: !isMain, visiblity: !isMain, renderer: 'area' },\r\n                { n: HJN.Tat.CTPS.N, process: true,    visiblity: true,    renderer: isMain ? 'scatterplot' : 'bar' },\r\n                { n: HJN.Tat.ETPS.N, process: true,    visiblity: isMain,  renderer: 'line' },\r\n                { n: HJN.Tat.STAT.N, process: !isMain, visiblity: !isMain, renderer: 'scatterplot' },\r\n                { n: HJN.Tat.ETAT.N, process: !isMain, visiblity: !isMain, renderer: 'scatterplot' },\r\n                { n: HJN.Tat.EMPS.N, process: true,    visiblity: true,    renderer: 'line' }, \r\n                { n: HJN.Tat.EAPS.N, process: true,    visiblity: isMain,  renderer: 'line' } ],\r\n            height : 0.40,\r\n            isVisiblity : true\r\n        };\r\n    }\r\n\r\n    // File.Parserを設定する\r\n    this.fileParser = TimeSeries.FileParser(); // #24\r\n   \r\n    // グラフ定義領域の宣言\r\n    this.windowId = document.getElementById(\"hjn_chart\");\r\n    this.menuId = document.getElementById(\"hjnBoxBuger\");\r\n    this.menuPlaceOnId = document.getElementById(\"hjnBoxPlaceOn\");\r\n    this.chartId = document.getElementById(this.chartIdName);\r\n    this.dyData = [];\r\n    this.dySeries = {};\r\n\r\n    this.scale = [ null, null ];\r\n    this.graph = null;\r\n    this.cTpsUnit = TimeSeries.Tat.UNIT_CTPS[0]; // #75\r\n\r\n    // グラフの設定(処理対象データの設定のみ this.SERIESES[] に取り込む）\r\n    this.SERIESES = [];\r\n    this.labels = [ 'Date' ];\r\n    for (var i = 0, j = 0; i < config.SERIESES.length; i++) {\r\n        if (config.SERIESES[i].process === true) {\r\n            this.SERIESES[j] = {\r\n                key : '',\r\n                name : '',\r\n                visiblity : false,\r\n                renderer : '',\r\n                order : 0,\r\n                scale : 0,\r\n                color : ''\r\n            };\r\n            // 定数(HJN.Tat.seriesConfig)指定項目を設定する\r\n            for ( var attr in HJN.Tat.seriesConfig[i]) {\r\n                this.SERIESES[j][attr] = HJN.Tat.seriesConfig[i][attr];\r\n            }\r\n            // 引数(config)指定項目を設定する\r\n            this.SERIESES[j].visiblity = config.SERIESES[i].visiblity;\r\n            this.SERIESES[j].renderer = config.SERIESES[i].renderer;\r\n\r\n            var renderer = config.SERIESES[i].renderer;\r\n            if (renderer === 'scatterplot') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    drawPoints : true\r\n                };\r\n            } else if (renderer === 'line') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 2.0,\r\n                    connectSeparatedPoints : true,\r\n                    stepPlot : true\r\n                };\r\n            } else if (renderer === 'area') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    stepPlot : true,\r\n                    fillGraph : true\r\n                };\r\n            } else { // if (renderer === 'bar' ) {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    connectSeparatedPoints : true,\r\n                    stepPlot : true,\r\n                    fillGraph : true\r\n                };\r\n            }\r\n            this.dySeries[this.SERIESES[j].key].color = this.SERIESES[j].color;\r\n\r\n            if (this.SERIESES[j].scale === 1) {\r\n                this.dySeries[this.SERIESES[j].key].axis = 'y2';\r\n            }\r\n\r\n            this.labels.push(this.SERIESES[j].key);\r\n            j++;\r\n        }\r\n    }\r\n\r\n    this.height = config.height;\r\n    this.isVisiblity = config.isVisiblity;\r\n};\r\n\r\n/**\r\n * クラス定数\r\n */\r\n// Graph.prototype = {};\r\n\r\n/**\r\n * クラスメソッド：menuのFilterのｘｙ幅指定エリアにグラフのｘｙ幅を設定する<br>\r\n * dygraphのdrawCallbackに設定する関数<br>\r\n * menuのRadio(F_SYNC)選択時に呼び出す関数（このためにクラスメソッド）\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.DrawCallback = function (g, is_initial) { // #50 #51\r\n    // 初期表示時は、メニューを設定しない\r\n    if (is_initial)\r\n        return;\r\n    // Filterメニューで指定されている F_SYNC の状態を取得する\r\n    var syncMode = Util.Config.Filter.getValueByKey(\"F_SYNC\"); // #59\r\n    // \"F_SYNC_UPPER\"かつ上段グラフ もしくは、\"F_SYNC_DETAIL\"かつ下段グラフのとき処理する\r\n    if ((syncMode === \"F_SYNC_UPPER\" && g.HJN === HJN.chart)\r\n            || (syncMode === \"F_SYNC_DETAIL\" && g.HJN === HJN.chartD)) {\r\n        // ｘ軸の幅をFilterメニューフェールドに反映する\r\n        setText(\"Filter.F_TIME_FROM\", Util.D2S(g.xAxisRange()[0],\r\n                \"yyyy/MM/dd hh:mm:ss.000\", true)); // #92\r\n        setText(\"Filter.F_TIME_TO\", Util.D2S(g.xAxisRange()[1],\r\n                \"yyyy/MM/dd hh:mm:ss.000\", true)); // #92\r\n        // ｙ軸(右)の幅をFilterメニューフェールドに反映する\r\n        setText(\"Filter.F_TAT_FROM\", +(g.yAxisRange(1)[0].toPrecision(4)));\r\n        setText(\"Filter.F_TAT_TO\", +(g.yAxisRange(1)[1].toPrecision(4)));\r\n    }\r\n\r\n    function setText(id, val) {\r\n        document.getElementById(id).value = val;\r\n        document.getElementById(id).onchange();\r\n    }\r\n};\r\n\r\n/**\r\n * グラフを初期化する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.init = function () {\r\n    // メニューを作成する\r\n    Menu(this);\r\n    // 凡例を作成する\r\n    if (this.isVisiblity)\r\n        addLegend(this);\r\n    // 既にグラフがあるときは削除する\r\n    if (this.graph) {\r\n        this.graph.HJN = null; // （注：循環参照対策\r\n        this.graph.destroy();\r\n    }\r\n    // ウィンドウ枠に合わせて描画領域をリサイズするイベントを登録し、リサイズする\r\n    window.addEventListener(\"resize\", this.resize.bind(this));\r\n    // tablet回転時も、リサイズする #22\r\n    window.addEventListener(\"orientationchange\", this.resize.bind(this));\r\n    var resizes = document.getElementsByClassName(\"hjnResize\");\r\n    for (var i = 0; i < resizes.length; i++) {\r\n        resizes[i].addEventListener(\"change\", this.resize.bind(this)); // メニュ－の開閉\r\n        // #31\r\n    }\r\n\r\n    // legendを追加する（内部関数）\r\n    function addLegend(that) { // arg0 : this\r\n        var chartIdName = that.chartIdName;\r\n        var serieses = that.SERIESES;\r\n        var divLegend = document.getElementById(chartIdName + \"_legend\");\r\n        var formName = chartIdName + \"_LegendForm\";\r\n        var htmlText = '<form name=\"' + formName + '\">';\r\n        for (var i = 0; i < serieses.length; i++) {\r\n            var ckBox = serieses[i].visiblity ? 'checked=\"checked\"' : '';\r\n            htmlText += '<label class=\"legend\" style=\"background:'\r\n                        + serieses[i].color + ';\">' \r\n                    + '<input type=\"checkbox\" '\r\n                        + 'name=\"' + serieses[i].key + '\"' + 'onclick=\"'\r\n                        + that.globalName + '.onClickSetVisibility(' + i + ');\" '\r\n                        + ckBox + '>' \r\n                    + serieses[i].name \r\n                    + '</label><BR>';\r\n        }\r\n        htmlText += '</form>';\r\n        divLegend.innerHTML = htmlText;\r\n    }\r\n};\r\n\r\n/**\r\n * legendの表示指定をグラフに反映する(onclick呼出用）\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {index}\r\n *            i seriesSet配列の設定変更するグラフのインデックス\r\n */\r\nGraph.prototype.onClickSetVisibility = function (i) { //\r\n    var formName = this.chartIdName + \"_LegendForm\";\r\n    var ck = document[formName].elements[i].checked;\r\n    this.graph.setVisibility(i, ck);\r\n};\r\n\r\n/**\r\n * ウィンドウ枠に合わせて描画領域をリサイズする（dygraphは幅は自動、高さは指定）\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.resize = function () {\r\n    // 幅（メニューの状態に合わせて計算） #31\r\n    var dWidth = 0;\r\n    if (this.menuId.checked && !this.menuPlaceOnId.checked) {\r\n        dWidth = this.menuId.parentNode.clientWidth;\r\n    }\r\n    var width = window.innerWidth - dWidth;\r\n    this.windowId.style.width = width + \"px\";\r\n    // 高さ（ウィンドウサイズの比率(this.height)をかけて算出）\r\n    var height = Math.floor(window.innerHeight * this.height);\r\n    this.chartId.style.height = height + \"px\";\r\n\r\n    if (this.graph)\r\n        this.graph.resize(width, height);\r\n    return height;\r\n};\r\n\r\n/**\r\n * seriesSetを取り込む\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Obcjet}\r\n *            [tat] 応答時間(Turnaround time)の時系列データ管理クラス\r\n * @param {array}\r\n *            [seriesSet] tat内の応答時間の時系列データ管理配列\r\n */\r\nGraph.prototype.setSeriesSet = function (tat, seriesSet) { // #30\r\n    if(tat) {\r\n        this.seriesSet = tat.getSeriesSet();\r\n        this.cTpsUnit = tat.getCTpsUnit(); // #75\r\n    }\r\n    if(seriesSet){\r\n        this.seriesSet = seriesSet;\r\n    }\r\n    HJN.Tat.seriesConfig.forEach(function (e) {\r\n        this[e.key] = this.seriesSet[e.N];\r\n    }, this);\r\n};\r\n\r\n\r\n/**\r\n * データを変更し描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {seriesSet}\r\n *            seriesSet dygraph用時系列データ配列\r\n * @param {Integer}\r\n *            n 選択されたグラフのseriesSet配列位置\r\n */\r\nGraph.prototype.update = function (seriesSet, n) {\r\n    // 指定データがあるとき取り込む\r\n    if (seriesSet) this.setSeriesSet(undefined, seriesSet);\r\n    // dygraph用表示データを作成する\r\n    var xy = [[{x:0,y:0}],[{x:0,y:0}],[{x:0,y:0}],[{x:0,y:0}]], // グラフデータの一覧（グラフ１本が配列要素）\r\n        idx = [], // グラフデータの処理中配列位置を保有する配列\r\n        x = [], // グラフデータの処理中配列のｘ(時刻)の値を保有する配列\r\n        row = [], // dygraph１レコードワーク配列：（[x,y0,y1...]の配列）の一レコード分を保持する配列\r\n        minX = 0,\r\n        i = 0; // グラフ番号用ワーク\r\n    // 表示対象データがないとき空データのdygraphを表示する #72\r\n    if (this.seriesSet.length === 0) {\r\n        var cols = [0]; // 日時（ミリ秒）\r\n        for (i = 0; i < this.SERIESES.length; i++) cols[i+1] = null;\r\n        this.dyData = [cols];\r\n        if (this.graph) {\r\n            // 既にグラフがあるときはデータのみ変更する（注：ここでdestroy()すると下段のpointClickCallback時にエラー）\r\n            this.graph.updateOptions( {\r\n                file : this.dyData\r\n            } );\r\n            this.graph.resetZoom(); // #51\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    // xy[] に処理対象seriesを指定する\r\n    for (i = 0; i < this.SERIESES.length; i++) {\r\n        xy[i] = this.seriesSet[this.SERIESES[i].N];\r\n        idx[i] = 0;\r\n    }\r\n    // dygraph表示時間帯を設定する（上段グラフは全期間が処理対象）\r\n    var xRangeMin = Number.MIN_VALUE;\r\n    var xRangeMax = Number.MAX_VALUE;\r\n    var xRangeUnit = Util.Config.DetailGraph.getConfig(\"D_UNIT\"); // #61\r\n    if (HJN.chartD === this) { // 詳細（下段グラフ）のとき画面で指定された期間を設定する // ミリ秒\r\n        var detailRangePlus = Util.Config.DetailGraph.getConfig(\"D_RANGE_PLUS\"); // #27\r\n        var detailRangeMinus = Util.Config.DetailGraph.getConfig(\"D_RANGE_MINUS\");\r\n        var detailRangeUnit = Util.Config.DetailGraph.getConfig(\"D_UNIT\");\r\n        var detailDateTime = Util.Config.DetailGraph.getConfig(\"D_TIME\");\r\n        if ((n === HJN.Tat.ETPS.N || n === HJN.Tat.EMPS.N || n === HJN.Tat.EAPS.N)  // #57\r\n                && xRangeUnit < TimeSeries.Tat.CYCLE){ // #61\r\n            var dt = Math.floor(detailDateTime / TimeSeries.Tat.CYCLE) * TimeSeries.Tat.CYCLE;\r\n            xRangeMin = dt - detailRangeMinus * detailRangeUnit;\r\n            xRangeMax = dt + detailRangePlus * detailRangeUnit;\r\n        } else { // undefined, HJN.Tat.CTPS.N, HJN.Tat.CONC.N,\r\n                    // HJN.Tat.STAT.N, HJN.Tat.ETAT.N\r\n            var dt = Math.floor(detailDateTime / xRangeUnit) * xRangeUnit; // #61\r\n            xRangeMin = dt - detailRangeMinus * detailRangeUnit; // #48\r\n            xRangeMax = dt + detailRangePlus * detailRangeUnit; // #48\r\n        }\r\n    }\r\n\r\n    // dygraph用arrayを空にする\r\n    this.dyData = [];\r\n\r\n    // 指定範囲の先頭が秒単位の端数のとき、dygraph用arrayに、先頭ワークデータを登録する #3\r\n    var xVal = Math.floor(xRangeMin / 1000) * 1000;\r\n    if (Number.MIN_VALUE < xRangeMin && xRangeMin !== xVal) { // 範囲指定（＝下段）\r\n        var firstRow = [ xRangeMin ]; // 先頭はx（時刻）\r\n        xy.forEach(function (xyData, i) {\r\n            // 秒間最大値系のyは最大値or０を、他はnullを設定する\r\n            var yVal = null;\r\n            if (this.SERIESES[i].key === HJN.Tat.CTPS.key) {\r\n                // 始端時刻を含む秒の値（最大値）を、始端時刻にセットする\r\n                var j = Util.binarySearch(xVal, xyData, function (e) {\r\n                    return e.x;\r\n                });\r\n                yVal = (0 <= j) ? xyData[j].y : 0;\r\n            }\r\n            firstRow.push(yVal);\r\n        }, this);\r\n        this.dyData.push(firstRow);\r\n    }\r\n\r\n    // dygraph用arrayに表示データを登録する\r\n    while (xy.some(function (e, i) {\r\n        return (idx[i] < e.length);\r\n    })) {\r\n        // dygraph１レコードワーク配列 を空にする\r\n        row = [];\r\n        // dygraph１レコードワーク配列 の先頭に、次に追加するｘ（時刻＝各ｘｙ処理位置が持つｘの最小値）を設定する\r\n        xy.forEach(function (e, i) {\r\n            x[i] = (idx[i] < e.length) ? e[idx[i]].x : Number.MAX_VALUE;\r\n        });\r\n        minX = x[0]; // minX = Math.min.apply(null, x);\r\n        for (i = 1; i < x.length; i++) {\r\n            if (x[i] < minX)\r\n                minX = x[i];\r\n        }\r\n        row.push(minX); // ミリ秒\r\n        // dygraph１レコードワーク配列 の２番目以降に、各ｘｙのｘを設定する\r\n        xy.forEach(function (e, i) {\r\n            if (e.length <= idx[i]) {\r\n                row.push(null); // 末尾を過ぎたｘｙのyはnull\r\n            } else if (e[idx[i]].x === minX) {\r\n                // ｘｙのｘ(e[idx[i]].x)が、出力するｘ(minX)と同じとき、ｙを設定し、ｘｙの処理位置(idx[i])を次に進める\r\n                row.push(e[idx[i]].y);\r\n                idx[i]++;\r\n            } else {\r\n                row.push(null); // xと ｘｙのｘが異なる場合 null\r\n            }\r\n        });\r\n        // dygraph用arrayに、編集したdygraph１レコードワーク配列 を登録する\r\n        if (xRangeMin <= minX && minX <= xRangeMax) {\r\n            this.dyData.push(row);\r\n        }\r\n    }\r\n    // 指定範囲の先頭が秒単位の端数のとき、dygraph用arrayに、末尾ワークデータを登録する #3\r\n    if (xRangeMax < Number.MAX_VALUE && // 範囲指定（＝下段）\r\n    xRangeMax !== Math.floor(xRangeMax / 1000) * 1000) {\r\n        var lastRow = [ xRangeMax ]; // 先頭はx（時刻）\r\n        xy.forEach(function (e, i) { // 秒間最大値系のyは始端：最大値、終端：０を、他はnullを設定\r\n            lastRow.push((this.SERIESES[i].key === HJN.Tat.CTPS.key) ? 0 : null);\r\n        }, this);\r\n        this.dyData.push(lastRow);\r\n    }\r\n\r\n    Util.Logger.ShowLogText(\"[7:dygraph data created] \"\r\n            + this.dyData.length + \" rows\", \"calc\");\r\n\r\n    // グラフの設定\r\n    var visibility = [];\r\n    if (this.isVisiblity) {\r\n        // visiblity指定できるとき画面の表示指定を取り込む\r\n        var inputs = document[this.chartIdName + \"_LegendForm\"];\r\n        for (i = 0; i < this.SERIESES.length; i++) {\r\n            visibility.push(inputs[this.SERIESES[i].key].checked);\r\n        }\r\n    } else {\r\n        // visiblity指定できないとき、デフォルト設定を取り込む\r\n        for (i = 0; i < this.SERIESES.length; i++) {\r\n            visibility.push(this.SERIESES[i].visiblity);\r\n        }\r\n    }\r\n\r\n    // グラフの作成\r\n    if (this.graph) {\r\n        // 既にグラフがあるときはデータのみ変更する（注：ここでdestroy()すると下段のpointClickCallback時にエラー）\r\n        this.graph.updateOptions( {\r\n            file : this.dyData\r\n        } );\r\n        this.graph.resetZoom(); // #51\r\n    } else {\r\n        // グラフが無いときは新規作成する\r\n        this.graph = new Dygraph(this.chartId, this.dyData, {\r\n            height : this.resize(),\r\n            labels : this.labels,\r\n            title : this === HJN.chart ? '' : '', // タイトル\r\n            titleHeight : 10, // タイトルの高さ＆フォントサイズ（デフォルト18px)\r\n            legend : 'always', // 'follow', //\r\n            showLabelsOnHighlight : false, // 効果不明\r\n            // labelsDiv : document.getElementById(HJN.chartName + 'Labels'), //\r\n            // ラベル表示先の変更\r\n            labelsSeparateLines : false,\r\n            // legendFormatter: this.legendFormatter, // コメントアウトでlegendが非表示\r\n            axes : {  // 軸の設定\r\n                x : { // X軸の設定\r\n                    axisLabelFormatter : xAxisLabelFormatter, // ラベル表示文字列編集関数\r\n                    axisLabelWidth : 100        // X軸ラベルの表示幅（幅が不足すると文字が切れる）\r\n                },\r\n                y : { // Y2（左）軸の設定\r\n                    independentTicks : true,    // 目盛合わせ（falseはY2軸に合わせる）\r\n                    axisLabelWidth : 40,        // ラベル表示幅\r\n                    // axisLineColor : 'rgb(0,0,0)',// 軸の色\r\n                    // axisLabelFontSize : 14, // ラベルのフォントサイズ(デフォルト:14)\r\n                    logscale : false            // 対数軸\r\n                },\r\n                y2 : { // Y2（右）軸の設定\r\n                    axisLabelFormatter : yAxisLabelFormatter, // ラベル表示文字列編集関数\r\n                    independentTicks : true,    // 目盛合わせ（falseはY1軸に合わせる）\r\n                    axisLabelWidth : 65,        // ラベル表示幅\r\n                    drawGrid : true,            // 横罫線\r\n                    gridLinePattern : [ 1, 2 ], // 罫線形状（破線）\r\n                    logscale : false            // 対数軸\r\n                }\r\n            },\r\n            includeZero : true,\r\n            // axisLabelFontSize: 10,\r\n            axisLineColor : 'rgba(0, 0, 0, 0.2)',\r\n            gridLineColor : 'rgba(0, 0, 0, 0.2)',\r\n            strokeWidth : 2,\r\n            pointSize : 3,\r\n            ylabel: 'Number of transactions',\r\n            y2label : 'Sec', // this === HJN.chart ? '' : 'Sec',\r\n            // rollPeriod: 7,\r\n            // errorBars: true,\r\n            // showRangeSelector: true\r\n            // drawPointCallback: drawPointCallback,\r\n            drawHighlightPointCallback : drawHighlightPointCallback,\r\n            highlightCircleSize : 3,\r\n            highlightCallback : highlightCallback,\r\n            pointClickCallback : pointClickCallback,\r\n            annotationClickHandler : annotationClickHandler,\r\n            annotationDblClickHandler : annotationDblClickHandler,\r\n            // clickCallback: clickCallback,\r\n            drawCallback : Graph.DrawCallback, // #50 #51\r\n            highlightSeriesOpts : {\r\n            // strokeWidth: 3,\r\n            // strokeBorderWidth: 1,\r\n            // highlightCircleSize: 5\r\n            },\r\n            series : this.dySeries,\r\n            labelsKMB : true,\r\n            visibility : visibility,\r\n            interactionModel: { // #22\r\n                mousedown: Dygraph.defaultInteractionModel.mousedown,\r\n                willDestroyContextMyself: true,\r\n                // touchstart: function(){}, 空functionと未登録は同じ効果\r\n                // touchmove: function(){},\r\n                // touchend: function(){},\r\n                dblclick: Dygraph.defaultInteractionModel.dblclick\r\n            },\r\n            animatedZooms : true, // ズームするときのアニメーション有無（デフォルト:false）\r\n            connectSeparatedPoints : true\r\n        });\r\n        // dygraphイベント処理でHJJを取れるように（注：循環参照）\r\n        this.graph.HJN = this;\r\n        // スマフォ対応 #22\r\n        Util.TouchPanel.DispatchEventTouchToMouse(this.graph.canvas_);\r\n        Util.TouchPanel.DispatchEventTouchToMouse(this.graph.canvas_ctx_.canvas);\r\n    }\r\n    // zoom reset ボタン追加 #22\r\n    // this.addIcon_ZoomReset(); #78 グラフ毎から全体で一つに変更に伴いcall停止\r\n    Util.Logger.ShowLogText(\"[8:dygraph showen] \", \"calc\");\r\n\r\n    // 初期表示の不活性グラフの設定\r\n    function xAxisLabelFormatter(d, gran, opts) {\r\n        // return Dygraph.dateAxisLabelFormatter(new Date(d), gran, opts); #63\r\n        var isTop = (this.xAxisRange()[0] === d);\r\n        var format = \"\";\r\n        var diffTime = this.xAxisRange()[1] - this.xAxisRange()[0];\r\n        if (diffTime < 60000) { \r\n            format = isTop ? \"hh:mm:ss.000\" : \"ss.000\"; // #92\r\n        } else if (diffTime < 86400000) { // 1日未満\r\n            format = \"hh:mm:ss\";\r\n        } else if (diffTime < 31536000000) { // 365日未満\r\n            format = isTop ? \"yyyy/MM/dd\": \"MM/dd hh\";\r\n        } else { // 365日以上\r\n            format = \"yyyy/MM/dd\";\r\n        }\r\n        return Util.D2S(d,format,true);\r\n    }\r\n    function yAxisLabelFormatter(d, gran, opts) { // #63\r\n        var range = this.yAxisRanges()[1];\r\n        var format = \"\";\r\n        var diff = range[1] - range[0];\r\n        if (diff < 300000) { // 300秒未満\r\n            return \"\" + d / 1000;\r\n        } else if (diff < 86400000) { // 1日未満\r\n            return Util.D2S(d, \"hh:mm:ss\", true);\r\n        } else if (diff < 172800000) { // 2日未満\r\n            var hours = Math.ceil(d / 3600000) + \":\";\r\n            return hours + Util.D2S(d, \"mm:ss\", true);\r\n        } else { // 2日以上\r\n            var days = Math.ceil(d / 86400000) + \" days+\";\r\n            var time = Util.D2S(d, \" hh:mm:ss\", false);\r\n            return (d < 172800000) ? time : days; // 2日未満？\r\n        }\r\n    }\r\n\r\n    // 再描画する\r\n    this.showBalloon();\r\n    Util.Logger.ShowLogText(\"[9:balloon showen] \", \"calc\");\r\n\r\n    // updateメソッド内部関数宣言\r\n    // 点がハイライトになったときの描画処理（内部関数宣言） g:{dygraph} HJN.chartD.graph\r\n    function drawHighlightPointCallback(g, name, ctx, cx, cy, color, r, idx) {\r\n        // file dropのとき、新グラフデータに更新後に、旧グラフのidx値が引き渡されたとき 処理しない #12\r\n        if (!g.rawData_ || g.rawData_.length - 1 < idx)\r\n            return;\r\n        var x = g.rawData_[idx][HJN.Tat.CONC.N]; // 選択されている点(時刻)のCONCのxの値（無いときundefined)\r\n        var eTat = HJN.chart.eTat;\r\n        var sTat = HJN.chart.sTat;\r\n        var n = 0;\r\n\r\n        // ETAT,STATのときlogレコードを表示する #28\r\n        if ((name === HJN.Tat.STAT.key || name === HJN.Tat.ETAT.key)\r\n                && typeof x != 'undefined') { // #41\r\n            // eTatの配列位置をを求める\r\n            if (name === HJN.Tat.ETAT.key) {\r\n                // ETATのとき、終了時刻(x)からeTatの配列位置(n)を検索する\r\n                n = Util.binarySearch(x, eTat, \r\n                                    function (e) { return e.x; });\r\n            } else {\r\n                // STATのとき、開始時刻(x)からsTatの配列位置(sTatN)を検索し、sTatからeTatの配列位置を取得する\r\n                var sTatN = Util.binarySearch(x, sTat, \r\n                                    function (e) { return e.x; });\r\n                n = sTat[sTatN].eTatIdx;\r\n            }\r\n            // ログデータを表示し、線を引く\r\n            if (0 <= n) {\r\n                // ログデータを取得する\r\n                var e = eTat[n];\r\n                var logRow = this.HJN.fileParser.getRecordAsText(e);\r\n                // シミュレータ生成データでないとき、文字コード変換する #82\r\n                if (typeof e.pos != \"undefined\") { \r\n                    var charset = HJN.Config.File.getConfig(\"CHAR\");\r\n                    logRow = Util.Encoding.charset.convert(logRow, \"Unicode\", charset); \r\n                }\r\n                // ログデータを表示する #62\r\n                var iHtml = document.getElementById(\"lineViewer\");\r\n                iHtml.textContent = \"\"; // #82\r\n                iHtml.insertAdjacentHTML('afterBegin', logRow);\r\n                // 線を引く #30\r\n                drawTatLine(ctx, e.x, e.y, 2, color);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n\r\n        // CONCのとき同時処理の線を引く\r\n        if (name === HJN.Tat.CONC.key && typeof eTat.tatMap != 'undefined') { // #17\r\n            // #41\r\n            // 指定時刻に動いているeTatの一覧(trans)を取得する\r\n            var trans = eTat.tatMap.search(x, x, 1000); // #18\r\n            // 以前に選択した線を消す\r\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            // 同時処理の線を引く\r\n            if (0 <= i && 0 < trans.length) {\r\n                // TRANS分の線を引く\r\n                trans.forEach(function (e) {\r\n                    drawTatLine(ctx, e.x, e.y, 1, HJN.Tat.CONC.color);\r\n                });\r\n            }\r\n            ctx.stroke();\r\n        }\r\n\r\n        // 選択点の点と数値を表示する\r\n        var val = \"\";\r\n        var time = \"\";\r\n        if (0 <= idx) {\r\n            time = g.rawData_[idx][0]; // #60\r\n            val = name ? g.rawData_[idx][g.setIndexByName_[name]] : \"\";\r\n            // valが時間のとき、 時間表記に文字列編集する\r\n            if (name === HJN.Tat.STAT.key || name === HJN.Tat.ETAT.key \r\n                    || name === HJN.Tat.EMPS.key || name === HJN.Tat.EAPS.key) {\r\n                val = Util.D2S(val);\r\n            }\r\n        }\r\n        drawPoint(ctx, cx, cy, r, color, val, time);\r\n        // 縦線を引く\r\n        drawLine(ctx, [ {\r\n            x : cx,\r\n            y : 0\r\n        }, {\r\n            x : cx,\r\n            y : ctx.canvas.height\r\n        } ], 1, \"rgba(127,127,127,0.5)\", [ 1, 2 ]);\r\n\r\n        // drawHighlightPointCallback 内部関数宣言\r\n        // TAT線を表示する（内部関数）\r\n        function drawTatLine(ctx, x, y, heigth, color) {\r\n            // isXend指定の始点(false)／終点（true)に合わせて、線の座標を求める\r\n            var tXs = g.toDomXCoord(x - y), // ミリ秒\r\n            tXe = g.toDomXCoord(x), // ミリ秒\r\n            tY = g.toDomYCoord(y, 1); // 第二軸:1\r\n            drawLine(ctx, [ {\r\n                x : tXs,\r\n                y : tY\r\n            }, {\r\n                x : tXe,\r\n                y : tY\r\n            } ], heigth, color);\r\n            drawPoint(ctx, tXs, tY, r, HJN.Tat.STAT.color);\r\n            drawPoint(ctx, tXe, tY, r, HJN.Tat.ETAT.color);\r\n        }\r\n\r\n        // 線を表示する（内部関数）\r\n        function drawLine(ctx, plots, r, color, lineDashSegments) {\r\n            ctx.beginPath();\r\n            ctx.lineWidth = r;\r\n            ctx.lineCap = \"round\";\r\n            ctx.strokeStyle = color;\r\n            if (lineDashSegments)\r\n                ctx.setLineDash(lineDashSegments); // lineDashは[num]\r\n            ctx.moveTo(plots[0].x, plots[0].y);\r\n            plots.forEach(function (p) {\r\n                ctx.lineTo(p.x, p.y);\r\n            });\r\n            ctx.stroke();\r\n        }\r\n\r\n        // 点を表示する（内部関数）\r\n        function drawPoint(ctx, cx, cy, r, color, val, time) {\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = color;\r\n            ctx.fillStyle = color;\r\n            ctx.arc(cx, cy, r, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            var text = \"\";\r\n            if (val || time) {\r\n                if (typeof(val) === \"number\") {\r\n                    text += Math.round(val * 10) / 10;\r\n                } else if (typeof(val) === \"string\") { // #60\r\n                    text += val;\r\n                }\r\n                if (val && time) text += \" \";\r\n                if (time) text += \"[\" + Util.D2S(time, \"hh:mm:ss.000\", true) + \"]\"; // #60\r\n                                                                                    // #92\r\n                ctx.beginPath();\r\n                ctx.fillStyle = color.replace(/\\,[\\s\\.0-9]*\\)/,\",1)\"); // #60\r\n                ctx.textAlign = \"left\"; // \"rigth\" \"center\" #60\r\n                ctx.fillText(text, cx, cy - 12);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 点がハイライトになったときの処理（内部関数宣言）\r\n    function highlightCallback(e, x, pts, row, seriesName) {\r\n        // マウスクリック用に座標をHJN.hoverXYに退避する\r\n        HJN.hoverXY = {\r\n            x : x,\r\n            pts : pts,\r\n            row : row,\r\n            seriesName : seriesName\r\n        };\r\n    }\r\n\r\n    // 点をクリックしたときの処理(内部関数宣言）\r\n    function pointClickCallback(event, p) {\r\n        if (!p.annotation)\r\n            HJN.Plot.PointClickCallback(p);\r\n    }\r\n\r\n    // アノテーション（グラフ中の吹出し）をクリックしたときの処理(内部関数宣言）\r\n    function annotationClickHandler() { // annotation, p, dygraph, event\r\n        HJN.Plot.PointClickCallback(arguments[1]);\r\n    }\r\n\r\n    // アノテーション（グラフ中の吹出し）をダブルクリックしたときの処理(内部関数宣言）\r\n    function annotationDblClickHandler() { // annotation, p, dygraph, event\r\n        // 指定ポイントを削除する\r\n        HJN.Plot.PointDblClickCallback(arguments[1]);\r\n    }\r\n\r\n    // グラフをクリックしたときの処理(内部関数宣言）\r\n    // function clickCallback(e, x, pts) {}\r\n};\r\n\r\n/**\r\n * dygraphのBalloonを再描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.showBalloon = function () {\r\n    if (this.cTps.length === 0)\r\n        return; // ctpsが空の時何もしない\r\n\r\n    var ann = {\r\n        series : \"\",\r\n        xval : 0,\r\n        shortText : \"\",\r\n        text : \"\"\r\n    }, anns = [];\r\n    // 表示時間帯を求める\r\n    var ctps = this.cTps, minX = ctps[0].x, maxX = ctps[ctps.length - 1].x;\r\n    // アノテーションをdygparhに追加する\r\n    HJN.Plot.List.forEach(function (e) {\r\n        if (minX <= e.x && e.x <= maxX) {\r\n            ann = {\r\n                series : HJN.Tat.seriesConfig[e.n].key,\r\n                xval : e.x, // ミリ秒\r\n                shortText : e.y,\r\n                text : e.label\r\n            };\r\n            anns.push(ann);\r\n            // 詳細Plot＆詳細グラフデータが無いとき、詳細Plot内のTPS Plotを追加する #7\r\n            if (\"tpsPlot\" in e) { // 詳細plotのとき\r\n                if (this.SERIESES.findIndex(function (s) {\r\n                    return s.N === e.n;\r\n                }) < 0) { // 詳細グラフデータが無いとき\r\n                    ann = {\r\n                        series : HJN.Tat.seriesConfig[e.tpsPlot.n].key,\r\n                        xval : e.tpsPlot.x, // ミリ秒\r\n                        shortText : e.tpsPlot.y,\r\n                        text : e.tpsPlot.label\r\n                    };\r\n                    anns.push(ann);\r\n                }\r\n            }\r\n        }\r\n    }, this);\r\n    // dygraphの残描画処理が完了してからアノテーションをセットする\r\n    this.graph.ready(function () {\r\n        this.setAnnotations(anns);\r\n    });\r\n};\r\n\r\n/**\r\n * dygraphのlegendを編集する(dygraph オプション登録用関数）\r\n * {@link http://dygraphs.com/options.html#legendFormatter}\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {ETAT}\r\n *            data [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]\r\n * @return {string} dygraphのlegendに表示する文字（HTML)\r\n */\r\nGraph.prototype.legendFormatter = function (data) {\r\n    // legend: 'always'指定のとき、マウスがグラフ外にあると dataに値が設定されていなことを考慮\r\n    var html = (typeof data.x === \"undefined\") ? '' : Util.DateToString(\r\n            new Date(data.xHTML), \"yyyy/MM/dd hh:mm:ss.000\"); // #92\r\n    html = '<label class=\"datetime\">' + html + '</label>';\r\n    data.series\r\n            .forEach(function (series) {\r\n                if (!series.isVisible)\r\n                    return;\r\n                var val = (typeof series.yHTML === \"undefined\") ? \"\"\r\n                        : series.yHTML, text = '<label '\r\n                        + getStyle(series.label)\r\n                        + '\">'\r\n                        + \"&nbsp;\"\r\n                        + series.labelHTML\r\n                        + ':'\r\n                        + ('####' + val.replace(/\\.[0-9]*/, \"\")).slice(-4)\r\n                                .replace(/#/g, \"&nbsp;\") + '</label>';\r\n                html += series.isHighlighted ? '<b>' + text + '</b>' : text;\r\n                html += '&nbsp;';\r\n            });\r\n    return html;\r\n    // keyに設定された色指定するstyle文字列を取得する（legendFormatter内部関数宣言）\r\n    function getStyle(key) {\r\n        var i = HJN.Tat.seriesConfig.findIndex(function (e) {\r\n            return (e.key === key);\r\n        });\r\n        return 'style=\"background:' + HJN.Tat.seriesConfig[i].color + ';';\r\n    }\r\n};\r\n\r\n\r\n\r\n/**\r\n * メニュー機能：CSVデータファイルを開く\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {evt}\r\n *            evt ファイルオープンイペント\r\n */\r\nGraph.prototype.menuOpenCsv = function (evt) {\r\n    var file_list = evt.target.files;\r\n    // 指定されたファイルを処理する\r\n    HJN.init.FileReader(file_list);\r\n};\r\n\r\n/**\r\n * メニュー機能：画面設定をJSON形式のセーブファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuSaveConfig = function (menuId, fileName) {\r\n    // plotsをjsonに変換する\r\n    var save = {\r\n        \"HJN.Plot.List\" : HJN.Plot.List,\r\n        \"HJN.Config.File\" : HJN.Config.File.__config, // #76\r\n        \"HJN.Config.Filter\" : HJN.Config.Filter.__config\r\n    };\r\n    var json = JSON.stringify(save, null, 4);\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(this.menuBuffToBlob(json), menuId, fileName);\r\n};\r\n/**\r\n * メニュー機能：JSON形式の画面設定ファイルをロードし画面表示に反映する TODO\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ？\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名 ？\r\n */\r\nGraph.prototype.menuLoadConfig = function (evt) { // #10\r\n    // 指定されたファイルを開く\r\n    var files = evt.target.files;\r\n    for (var i = 0; i < files.length; i++) { // データを順番に取得する\r\n        try {\r\n            // ファイルを取得する\r\n            var file = files[i];\r\n            // ログ出力用にファイル名（サイズ）を編集する\r\n            if (10000 < file.size) {\r\n                var msg = \"Too large(>10KB) \" + file.name + \" [\" + file.size\r\n                        + \"byte]\";\r\n                Util.Logger.ShowText([ \"<mark>\" + msg + \"</mark>\" ]);\r\n                return;\r\n            }\r\n            // ファイルの読み込みに成功したら、その内容をドロップエリアに追記して表示する\r\n            var reader = new FileReader();\r\n            reader.onloadend = funcOnloadend.bind(this, files[i], i);\r\n            // ファイルにArrayBufferで参照を取得する（onloadendイベントを起こす）\r\n            reader.readAsArrayBuffer(files[i]);\r\n        } catch (e) {\r\n            // 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n            var msg = \"The \" + i + \"th dropped object is not a file\";\r\n            Util.Logger.ShowText([ \"<mark>\" + msg + \"</mark>\" ]);\r\n            console.error(\"[%o]%o\", msg, e);\r\n        }\r\n    }\r\n\r\n    // 内部関数：ファイルを読み込み後の処理（指定ファイルを読み込んだ後に呼び出される）\r\n    function funcOnloadend(file, i, evt) {\r\n        if (evt.target.readyState === FileReader.DONE) {\r\n            // ファイルからjsonを読み込む\r\n            var filesArrayBuffer = evt.target.result;\r\n            var buf = new Uint8Array(filesArrayBuffer);\r\n            var json = String.fromCharCode.apply(null, buf);\r\n            alert(json);\r\n            var jsonObj = JSON.parse(json);\r\n\r\n            // jsonからHJN.chartD.fileParserに登録されているConfig の定義を作成する\r\n            var conf = jsonObj[\"HJN.chart.fileParser\"];\r\n            HJN.chart.fileParser._config_File.__config = conf;\r\n            var confD = jsonObj[\"HJN.chartD.fileParser\"];\r\n            HJN.chartD.fileParser._config_File.__config = confD;\r\n\r\n            // jsonからHJN.Plot.Listを作成する\r\n            var tmpPlots = jsonObj[\"HJN.Plot.List\"];\r\n            var plots = [];\r\n            // フォーマットに合致する項目のみ抽出する\r\n            if (isSameType([], tmpPlots)) { // 最上位が配列\r\n                tmpPlots.forEach(function (e) { // 2層目がオブジェクト\r\n                    if (isSameType(0, e.x))\r\n                        plots.push(e);\r\n                });\r\n            }\r\n            if (0 < plots.length) {\r\n                HJN.Plot.List = plots;\r\n            }\r\n            HJN.Plot.Render();\r\n            // グラフ内の吹き出しを再表示する\r\n            HJN.Plot.ShowBalloon();\r\n\r\n            // 型判定\r\n            function isSameType(sample, obj) {\r\n                var clas0 = Object.prototype.toString.call(sample);\r\n                var clas1 = Object.prototype.toString.call(obj);\r\n                return clas0 === clas1;\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * メニュー機能：メニューで指定されたフィルタの条件で再描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuFilterApply = function () { // #34\r\n    if (HJN.files && HJN.files.length === 0) {\r\n        // 自動生成データのグラフを表示しているとき\r\n        HJN.init.ChartShow(HJN.chart.eTatOriginal)\r\n    } else {\r\n        // ファイル指定のグラフを表示しているとき\r\n        HJN.init.FileReader(HJN.files);\r\n    }\r\n};\r\n/**\r\n * メニュー機能：フィルタ条件を初期値にし、再描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuFilterReset = function () { // #34\r\n    TimeSeries.MenuConfigFilter.reset();\r\n};\r\n\r\n/**\r\n * メニュー機能：シミュレータ 指定JSONでシミュレートする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuSimulatorSimulate = function () { // #53\r\n    // グラフを再生成する\r\n    Util.Logger.ResetTimestamp(); // #79\r\n    var json = document.getElementById(\"SimulatorEditor\").value;\r\n    HJN.files = []; // #61\r\n    HJN.Plot.List = [];\r\n    CreateSampleTatLogAndChartShow(json);\r\n\r\n};\r\n/**\r\n * メニュー機能：シミュレータ JSON入力エリアを広げる\r\n * \r\n */\r\nGraph.prototype.menuSimulatorEditor = function () { // #53\r\n    var divSimulator = document.getElementById(\"Simulator\");\r\n    var divSimulatorEditor = document.getElementById(\"SimulatorEditor\");\r\n    if (divSimulator.style.height === \"100%\") { // #60\r\n        // 開いているとき、textareaの親を閉じる\r\n        divSimulator.style.visibility = \"hidden\"; // #79\r\n        divSimulator.style.height = \"0\";\r\n        divSimulator.style.width = \"190px\";\r\n    } else{ // 閉じているとき\r\n        // textareaを一度閉じる（textareaが大きいとき親が大きくなりスクロールが出るため）\r\n        divSimulatorEditor.style.height = \"0\";\r\n        // textareaの親を開く\r\n        divSimulator.style.height = \"100%\";\r\n        divSimulator.style.width = \"70%\";\r\n// divSimulatorEditor.style.height = (divSimulator.scrollHeight - 10) + \"px\";\r\n        divSimulatorEditor.style.height = divSimulator.clientHeight + \"px\";\r\n        divSimulator.style.visibility = \"visible\"; // #79\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * メニュー機能：canvas画像をファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadImg = function (menuId, fileName) {\r\n    var type = 'image/png';\r\n    // canvas から DataURL で画像を出力\r\n    var canvas = this.chartId.getElementsByTagName('canvas')[0], dataurl = canvas\r\n            .toDataURL(type);\r\n    // DataURL のデータ部分を抜き出し、Base64からバイナリに変換\r\n    var bin = atob(dataurl.split(',')[1]);\r\n    // Uint8Array ビューに 1 バイトずつ値を埋める\r\n    var buffer = new Uint8Array(bin.length);\r\n    for (var i = 0; i < bin.length; i++) {\r\n        buffer[i] = bin.charCodeAt(i);\r\n    }\r\n    // Uint8Array ビューのバッファーを抜き出し、それを元に Blob を作る\r\n    var blob = new Blob([ buffer.buffer ], {\r\n        type : type\r\n    });\r\n    // var url = window.URL.createObjectURL(blob);\r\n\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(blob, menuId, fileName);\r\n};\r\n\r\n/**\r\n * メニュー機能：グラフ全データをCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadCsv = function (menuId, fileName) {\r\n    var bom = new Uint8Array([ 0xEF, 0xBB, 0xBF ]), // Excel対応UTF8のBOMコード指定\r\n    csv = this.labels.join(','); // csvヘッダ行の作成\r\n    this.dyData.forEach(function (e) {\r\n        csv += \"\\r\\n\" + e.join(',');\r\n    }); // csvデータ展開\r\n    var blob = new Blob([ bom, csv ], {\r\n        \"type\" : \"text/csv\"\r\n    }); // blob変換\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(blob, menuId, fileName);\r\n};\r\n\r\n/**\r\n * メニュー機能：グラフ全データの編集元に該当するTATログの該当行をCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadLog = function (menuId, fileName) {\r\n    var eTat = this.eTat;\r\n    if (0 < eTat.length) { // 出力対象データがあるとき\r\n        if (typeof eTat[0].pos === \"undefined\") { // 生成データのとき\r\n            // 生成データをCSVに編集する #88\r\n            var delimiter = '';\r\n            var separator = delimiter + Util.Config.File.getConfig(\"SEP\") + delimiter; // #76\r\n            var eTatCsv = delimiter + '終了年月日 時分秒ミリ秒' \r\n                        + separator + '処理時間(ms)'\r\n                        + separator + 'シミューレート情報'\r\n                        + delimiter + '\\r\\n';\r\n            eTat.forEach(function (e) {\r\n                eTatCsv += delimiter + Util.D2S(e.x, 'yyyy/MM/dd hh:mm:ss.000') // #92\r\n                        + separator + e.y \r\n                        + separator + e.message \r\n                        + delimiter + '\\r\\n'; // #61\r\n            });\r\n            // ダウンロードする\r\n            this.menuDownloadBlob(this.menuBuffToBlob(eTatCsv), menuId,\r\n                    fileName);\r\n        } else { // ファイル読込のとき\r\n            // 出力データを元ファイルのpos順にソートする（改行コードのないファイル末尾レコートがある場合も最後に来るように） #45\r\n            eTat.sort(function (a, b) {\r\n                return a.pos - b.pos;\r\n            });\r\n            // 最大作業領域として元ファイルサイズの合計分のメモリを確保する #23\r\n            var maxSize = HJN.filesArrayBuffer.reduce(function (p, c) {\r\n                return p + c.byteLength + 2;\r\n            }, 0);\r\n            var buff = new Uint8Array(maxSize), offset = 0;\r\n            // ファイルの該当行を Uint8Arrayに登録する\r\n            eTat.forEach(function (e) {\r\n                buff.set(new Uint8Array(HJN.filesArrayBuffer[e.fileIdx], e.pos,\r\n                        Math.min(e.len + 2,\r\n                                HJN.filesArrayBuffer[e.fileIdx].byteLength\r\n                                        - e.pos)), offset);\r\n                offset += (e.len + 2);\r\n            });\r\n            // 未使用作業領域を削除する\r\n            var buff2 = new Uint8Array(buff.slice(0, offset));\r\n            // ダウンロードする\r\n            this.menuDownloadBlob(this.menuBuffToBlob(buff2), menuId, fileName);\r\n        }\r\n    } else { // 出力対象データがないとき\r\n        var str = \"No log in the time.\";\r\n        // ダウンロードする\r\n        this.menuDownloadBlob(this.menuBuffToBlob(str), menuId, fileName);\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー機能：plotsでconcが選択されているとき、同時処理に該当するTATログの該当行をCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadConc = function (menuId, fileName) {\r\n    var plot = HJN.Plot.List.find(function (e) {\r\n        return e.radio;\r\n    });\r\n    if (plot.n === HJN.Tat.CONC.N || plot.n === HJN.Tat.STAT.N || plot.n === HJN.Tat.ETAT.N) {\r\n        // CONC|STAT|ETATが選択されているとき\r\n        var trans = this.eTat.tatMap.search(plot.x); // #18\r\n        if (0 < trans.length) { // 出力テキストを編集する\r\n            if (typeof trans[0].pos === \"undefined\") {\r\n                // 初期表示データのとき、CSVを編集する\r\n                // 生成データをCSVに編集する #88\r\n                var delimiter = '';\r\n                var separator = delimiter + Util.Config.File.getConfig(\"SEP\") + delimiter; // #76\r\n                var csv = delimiter + '終了年月日 時分秒ミリ秒'\r\n                        + separator + '処理時間(ms)'\r\n                        + delimiter + '\\r\\n';\r\n                trans.forEach(function (e) {\r\n                    csv += delimiter + Util.D2S(e.x, \"yyyy/MM/dd hh:mm:ss.000\") // #92\r\n                        + separator + e.y\r\n                        + delimiter + '\\r\\n';\r\n                });\r\n                // ダウンロードする\r\n                this.menuDownloadBlob(this.menuBuffToBlob(csv), menuId,\r\n                        fileName);\r\n            } else {\r\n                // ファイル読み込みの時、対象レコードを表示する\r\n                // 出力データを元ファイルのpos順にソートする（改行コードのないファイル末尾レコートがある場合も最後に来るように） #45\r\n                trans.sort(function (a, b) {\r\n                    return a.pos - b.pos;\r\n                });\r\n                // 最大作業領域として元ファイルサイズの合計分のメモリを確保する #23\r\n                var maxSize = HJN.filesArrayBuffer.reduce(function (p, c) {\r\n                    return p + c.byteLength + 2;\r\n                }, 0);\r\n                var buff = new Uint8Array(maxSize), offset = 0;\r\n                // ファイルの該当行を Uint8Arrayに登録する\r\n                trans.forEach(function (e) {\r\n                    buff.set(new Uint8Array(HJN.filesArrayBuffer[e.fileIdx],\r\n                            e.pos, Math.min(e.len + 2,\r\n                                    HJN.filesArrayBuffer[e.fileIdx].byteLength\r\n                                            - e.pos)), offset);\r\n                    offset += (e.len + 2);\r\n                });\r\n                // 未使用作業領域を削除する\r\n                var buff2 = new Uint8Array(buff.slice(0, offset));\r\n                // ダウンロードする\r\n                this.menuDownloadBlob(this.menuBuffToBlob(buff2), menuId,\r\n                        fileName);\r\n            }\r\n        }\r\n\r\n    } else { // CONCが選択されていないとき\r\n        var msg = \"抽出対象データがありません。空データがダウンロードされます\\r\\n\"\r\n                + \"conc：多重度（詳細）の点を選択した状態で行ってください\";\r\n        alert(msg);\r\n        this.menuDownloadBlob(this.menuBuffToBlob(msg), menuId, fileName);\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー共通機能：BinaryString, UintXXArray, ArrayBuffer をBlobに変換する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Object}\r\n *            arrayBuffer 変換元\r\n * @return {Blob} 変換後\r\n */\r\nGraph.prototype.menuBuffToBlob = function (arrayBuffer) {\r\n    return new Blob([ arrayBuffer ], {\r\n        type : \"application/octet-stream\"\r\n    });\r\n};\r\n\r\n/**\r\n * メニュー共通機能：指定blobをファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Objcet}\r\n *            blob ダウンロードさせるblogデータ\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadBlob = function (blob, menuId, fileName) {\r\n    if (window.navigator.msSaveBlob) { // ie11以降のとき\r\n        window.navigator.msSaveBlob(blob, fileName);\r\n        // msSaveOrOpenBlobの場合はファイルを保存せずに開ける\r\n        window.navigator.msSaveOrOpenBlob(blob, fileName);\r\n    } else { // Chrome, FireFoxのとき\r\n        document.getElementById(menuId).href = window.URL.createObjectURL(blob);\r\n    }\r\n};\r\n\r\n/**\r\n * Zoomリセットアイコンを追加する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.addIcon_ZoomReset = function () {\r\n    var divChart = this.chartId; // document.getElementById(\"Icons\");\r\n    var idName = this.chartIdName + \"Zoom\";\r\n    var input = document.getElementById(idName);\r\n    if (input !== null) { // 既にある場合削除する\r\n        var div = input.parentElement;\r\n        div.parentElement.removeChild(div);\r\n    }\r\n\r\n    if (divChart) {\r\n        var div = document.createElement('div');\r\n        var htmlText = '<input id=\"' + idName + '\" type=\"buttom\" class=\"hjnBoxSwitch hjnResize\" '\r\n                                + 'onClick=\"HJN.' + this.chartIdName + '.graph.resetZoom()\">'\r\n                     + '<label for=\"' + idName + '\" class=\"hjnCtrlBox\"><span></span></label>';\r\n        div.innerHTML = htmlText;\r\n        divChart.insertBefore(div, divChart.firstChild);\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Graph.js\n// module id = 1\n// module chunks = 0","/* ******1*********2*********3*********4*********5*********6*********7****** */\r\nimport * as Util from '../util/util.js';\r\nimport Tat from '../timeSeries/timeSeries-Tat.js';\r\n\r\n/**\r\n * @namespace\r\n * @prop {function} init - 初期登録処理関連（Init で、イベントハンドラ呼出し関数を登録する先）\r\n * @prop {Objcet} Tat - timeSeries#Tat\r\n * @prop {Objcet} chart - 上段グラフ\r\n * @prop {Objcet} chartD - 下段詳細グラフ\r\n * @prop {String} chartName - グラフオブジェクトの名称\r\n * @prop {Array} files - データファイル一覧\r\n * @prop {Array} filesArrayBuffer - データ読込領域\r\n * @prop {Date} timer - 前回ログ出力時刻退避領域（処理時間計算用）\r\n */\r\nexport var HJN = {};\r\nwindow.HJN = HJN; // #67\r\n\r\n/**\r\n * @namespace\r\n */\r\nHJN.init = {}; // 初期登録処理関連\r\n\r\nHJN.Config = HJN.Config || Util.Config; // #76\r\nHJN.Tat = Tat;\r\n\r\nHJN.chart = HJN.chartD = null;\r\nHJN.chartName = \"chart\";\r\n\r\nHJN.files = [];\r\nHJN.filesArrayBuffer = [];\r\n\r\nHJN.timer = {};\r\nUtil.Config(\"DetailGraph\").setValueByKey(\"D_TIME\", +(new Date()));  // 下段表示時刻\r\n                                                                    // #27\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-HJN.js\n// module id = 2\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport * as TimeSeries from '../timeSeries/timeSeries.js';\r\nimport * as Simulator from '../simulator/simulator.js';\r\nimport {HJN} from './tatLogDiver-HJN.js';\r\nimport {Copyright} from \"./tatLogDiver-Copyright.js\";\r\nimport Graph from './tatLogDiver-Graph.js';\r\nimport Plot  from './tatLogDiver-Plot.js';\r\nimport MenuConfigDetailGraph from './tatLogDiver-MenuConfigDetailGraph.js';\r\n\r\n\r\n/* *****1*********2*********3*********4*********5*********6*********7******* */\r\n/**\r\n * HTMLから呼び出すAPI\r\n * \r\n * @memberof HJN\r\n * @class Init\r\n * @param {string}\r\n *            [chartName=HJN.chartName=\"chart\"] グラフを作成するHTMLタグ名\r\n * @return {ETAT} 終了時刻のTAT（応答時間）時系列データ\r\n * @example <!doctype html> <html> <head> <meta charset=\"UTF-8\"> <link\r\n *          type=\"text/css\" rel=\"stylesheet\" href=\"../libs/dygraph.css\"> <link\r\n *          type=\"text/css\" rel=\"stylesheet\" href=\"./tatLogDiver.css\"> </head>\r\n *          <body> <div id=\"hjn_chart\"></div> <script src=\"../libs/dygraph.js\"></script>\r\n *          <script src=\"../libs/extras/synchronizer.js\"></script> <script\r\n *          type=\"module\"> import {HJN_init_ChartRegist} from\r\n *          \"./tatLogDiver-Init.js\";\r\n *          window.addEventListener(\"DOMContentLoaded\",function(eve){\r\n *          Bundle(\"chart\"); // チャートを作成する }); </script> </body> </html>\r\n */\r\nexport default function Init(chartName){ // #70\r\n    // グローバル登録\r\n    HJN.Util = Util; // #95\r\n\t// 引数１ ：デフォルトHJN.chartName(\"chart\")\r\n\tHJN.chartName = chartName = chartName || HJN.chartName;\r\n\t// タイトルを設定する #57\r\n\tdocument.title = \"tat log diver \" + Copyright.Version;\r\n\t// htmlを作成する #52\r\n\tvar html_chart = document.getElementById(\"hjn_\" + chartName) || document.body;\r\n\thtml_chart.innerHTML = ''\r\n\t\t+ '<div id=\"' + chartName + '\"></div>'\r\n\t\t+ '<div id=\"' + chartName + 'D\"></div>'\r\n\t// CONCデータ表示領域 #78\r\n\t\t+ '<div class=\"lineViewer hjnDraggableBox hjnCode\" >' // #79\r\n\t\t+ '<div id=\"lineViewer\" readonly>logdata</div></div>';\r\n\t// 手前にメニュ－用htmlを作成する #52\r\n\tvar html_nav = document.createElement('nav');\r\n\thtml_nav.innerHTML = ''\r\n\t\t+ '<header>'\r\n\t\t// シミュレータ JSON Edit画面 領域 #53\r\n\t\t+ '<div id=\"Simulator\" class=\"hjnDraggableBox\" style=\"visibility:hidden\"></div>'\r\n\t\t// ハンバーガーメニュー 領域\r\n\t\t+ '<div class=\"hjnBurgerTray\">'\r\n\t\t\t// ステータスバー（ログ表示）領域\r\n\t\t+\t'<div class=\"statusbar hjnDraggableBox\">'\r\n\t\t+\t'<iframe id=\"fileInfo\" style=\"height:100%;\"></iframe></div>' // #79\r\n\t\t\t// ×ボタン\r\n\t\t+\t'<input id=\"hjnBoxBuger\" type=\"checkbox\" class=\"hjnBurger hjnResize\" checked=\"checked\" />'\r\n\t\t+\t '<label for=\"hjnBoxBuger\" class=\"hjnCtrlBox\"><span></span></label>'\r\n\t\t// グラフZoomリセットボタン #78\r\n\t\t+\t '<input id=\"chartZoom\" type=\"buttom\" class=\"hjnBoxSwitch hjnResize\" '\r\n\t\t+\t 'onClick=\"HJN.init.ResetStyle();\" />'\r\n\t\t+\t\t'<label for=\"chartZoom\" class=\"hjnCtrlBox\"><span></span></label>'\r\n\t\t\t// メニュー上部タイトル\r\n\t\t+\t'<div class=\"hjnBurgerTitle\">'\r\n\t\t\t\t// メニューオーバレイモード変更 ボタン\r\n\t\t+\t '<input id=\"hjnBoxPlaceOn\" type=\"checkbox\" class=\"hjnBoxSwitch hjnResize\" />'\r\n\t\t+\t\t'<label for=\"hjnBoxPlaceOn\" class=\"hjnCtrlBox\"><span></span></label>'\r\n\t\t\t\t// メニュー上部テキスト 領域\r\n\t\t+\t '<p>'\r\n\t\t\t\t\t// ツール名称＆JSDocリンク\r\n\t\t+\t\t'<a class=\"hjnLabel4Input\" href=\"../jsdoc/index.html\" '\r\n\t\t+\t\t\t\t 'target=”_hirosejnJSDoc3”>TAT log diver</a><BR>'\r\n\t\t+\t '</p>'\r\n\t\t+\t'</div>'\r\n\t\t// メニュー画面本体（左右開閉ラッパー）\r\n\t\t+\t'<div class=\"hjnBurgerWrap\">'\r\n\t\t\t// アコーディオンメニュー\r\n\t\t+\t '<div class=\"hjnAccordion\">'\r\n\t\t+\t\t'<div id=\"' + chartName + '_menu\"></div>'\r\n\t\t+\t\t'<div id=\"' + chartName + 'D_menu\"></div>'\r\n\t\t+\t '</div>'\r\n\t\t+\t'</div>'\r\n\t\t+ '</div>'\r\n\t\t+ '</header>';\r\n\thtml_chart.parentNode.insertBefore(html_nav, html_chart);\r\n\tHJN.init.ResetStyle(true); // #79\r\n\r\n\tvar dropFieldName = chartName;\t// ファイルドロップを受け付けるタグ名\r\n\tUtil.Logger.ShowLogTextInit(); // 処理時間計測の初期化\r\n\r\n\t// コンフィグプロパティを初期化する #74\r\n\t// HJN.Config = HJN.Config || Util.Config;\r\n\tTimeSeries.MenuConfigFile.config();\r\n\tTimeSeries.MenuConfigFilter.config();\r\n\tSimulator.MenuConfig.config();\r\n\tMenuConfigDetailGraph.config();\r\n\r\n\t// グラフのインスタンスを作成し初期化する\r\n\tHJN.chart = new Graph(chartName, \"HJN.chart\");\r\n\tHJN.chart.init();\r\n\tHJN.chartD = new Graph(chartName + \"D\", \"HJN.chartD\");\r\n\tHJN.chartD.init();\r\n\t// ドロップフィールドに、処理を登録する(注：dygraphはイベントリスナーを登録しないとクリック時にエラーが出る）\r\n\tInit.DropField(dropFieldName);\r\n\tInit.DropField(dropFieldName+ \"D\");\r\n\r\n\t// 初期表示データを自動生成する // #53\r\n\tUtil.Config.GetConfig(\"Simulator\").getFunctionByKey(\"S_SIMU\")(); // #53\r\n\r\n\t// イベントハンドラを登録する\r\n\tUtil.Element.enableDraggableClass();\r\n}\r\n\r\n/**\r\n * スタイルを初期設定する（Reset zoomボタンからも呼ばれる）\r\n * \r\n * @memberof HJN.init\r\n * @param {Boolean}\r\n *            [isInit=false] リセット時true：初期設定値も再設定する\r\n *            シミュレーション条件JSONテキスト、もしくはサンプルJSON番号\r\n * \r\n */\r\nHJN.init.ResetStyle = Init.ResetStyle = function(isInit){ // #79\r\n\t// 指定クラス名が設定された要素にスタイルを設定する\r\n\tvar elements = document.getElementsByClassName(\"lineViewer\");\r\n\tfor(var i = 0; i < elements.length; i++){\r\n\t\tUtil.Element.SetStyles(elements[i],\r\n\t\t\t\t{ bottom: 0, left: \"\", top: \"\", width: \"70%\", height: \"10vh\"});\r\n\t}\r\n\telements = document.getElementsByClassName(\"statusbar\");\r\n\tfor(var i = 0; i < elements.length; i++){\r\n\t\tUtil.Element.SetStyles(elements[i],\r\n\t\t\t\t{ left: \"10px\", top: 0, width: \"155px\", height: \"40px\"});\r\n\t}\r\n\tUtil.Element.SetStyles(document.getElementById(\"Simulator\"),\r\n\t\t\t\t{ left: 0, top: 0, width: \"190px\", height: 0});\r\n\t// 別途初期設定される値を再設定する\r\n\tif (!isInit) {\r\n\t\tHJN.chart.graph.resetZoom();\r\n\t\tHJN.chartD.graph.resetZoom();\r\n\t}\r\n}\r\n/**\r\n * データを自動生成し表示する\r\n * \r\n * @memberof HJN.init\r\n * @param {String|Number}\r\n *            [json = Simulator.virtualSystemByJson.GetJsonConfig(0)]\r\n *            シミュレーション条件JSONテキスト、もしくはサンプルJSON番号\r\n */\r\nexport function CreateSampleTatLogAndChartShow(json){ // #53\r\n\tvar jsonText;\r\n\tif (typeof(json) === \"number\") { // #53\r\n\t\tjsonText = Simulator.virtualSystemByJson.GetJsonConfig(json);\r\n\t} else{\r\n\t\tjsonText = json || Simulator.virtualSystemByJson.GetJsonConfig(0);\r\n\t}\r\n\t// JSON Editorを更新する\r\n\tdocument.getElementById(\"SimulatorEditor\").value = jsonText;\r\n\t// 初期表示データを自動生成する\r\n\tHJN.chart.eTatOriginal = Simulator.virtualSystemByJson.Execute(jsonText);\r\n\t// データを表示する\r\n\tInit.ChartShow(HJN.chart.eTatOriginal);\r\n}\r\n\r\n/**\r\n * 終了時刻とtatの配列をグラフ表示する（Menuイベントから呼び出される）\r\n * \r\n * @memberof HJN.init\r\n * @param {ETAT}\r\n *            HJN.chart.eTatOriginal 終了時刻とtatを含む配列\r\n */\r\nHJN.init.ChartShow = Init.ChartShow = function(eTatOriginal){\r\n\t// フィルタしたeTatを取得する #34\r\n\tvar eTat = HJN.chart.fileParser.createFilter().filter(eTatOriginal);\r\n\r\n\t// グラフを初期表示する\r\n\tHJN.Plot.List = []; // #53\r\n\t// 上段\r\n\tif (eTat.length === 0) eTat = [{x:0, y:0}]; // #72\r\n\tvar tat = new TimeSeries.Tat(eTat); // #75\r\n\tHJN.chart.setSeriesSet(tat);\r\n\tHJN.chart.update();\r\n\tshowLogForUpperGraph(\"Simulator\"); // #79\r\n\r\n\t// 下段(非同期）\r\n\tUtil.setZeroTimeout( function(){\r\n\t\tHJN.chartD.update(Init.ChartRegistDetail(HJN.chart.cTps));\r\n\t\tHJN.chart.showBalloon();\t// 上段のBalloonを描画する\r\n\t\tif (HJN.chartD.eTat){\r\n\t\t\tshowLogForLowerGraph(\"Simulator\"); // #79\r\n\t\t} else { // #72\r\n\t\t\tUtil.Logger.ShowLogText(\"<mark>表示データがありません</mark>\", \"msg\");\r\n\t\t}\r\n\t\t// 上下段のマウス操作同期設定 #49\r\n\t\tvar sync = Dygraph.synchronize(\r\n\t\t\t\t [ HJN.chart.graph, HJN.chartD.graph ],\r\n\t\t\t\t {selection: true, zoom: false});\r\n\t});\r\n}\r\nfunction showLogForUpperGraph(fileName){\r\n\t// 上段グラフの処理時間をログに出力\r\n\t// Util.Logger.ShowLogText(\"+ \", \"elaps\");\r\n}\r\nfunction showLogForLowerGraph(fileName){\r\n\t// 下段グラフの処理時間をログに出力\r\n\t// Util.Logger.ShowLogText(\"\", \"elaps\", true);\r\n\r\n\t// ファイル名、取込レコード数のログ編集\r\n\tvar text = \"<mark>\" + /* fileName + */ \" [\"\r\n\t\t\t+ (HJN.chart.eTat.length.toString() + \"\")\r\n\t\t\t\t.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') // 整数文字列のカンマ編集\r\n\t\t\t+ \"]行</mark> \";\r\n\t// 下段の表示レコード数をログに出力\r\n\tif (HJN.chartD.eTat){\r\n\t\ttext += \"下段[\"\r\n\t\t\t\t+ (HJN.chartD.eTat.length + \"\")\r\n\t\t\t\t\t.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') // 整数文字列のカンマ編集\r\n\t\t\t\t+ \"]行\";\r\n\t}else{\r\n\t\ttext = \"\" +\r\n\t\t\t\t\"表示データなし　要確認：Charset, delimiter, Line feed code\"\r\n\t}\r\n\t// ログ出力\r\n\tUtil.Logger.ShowLogText(text, \"msg\");\r\n}\r\n\r\n/**\r\n * HTMLタグに、CSVファイルのドロップを受付けイベントを登録する\r\n * \r\n * @memberof HJN.init\r\n * @param {string}\r\n *            dropFieldName ファイルのドロップイベントを受けるフィールド名\r\n */\r\nInit.DropField = function (dropFieldName) {\r\n\t// 第一引数で指定された名前の ID 属性のエレメントを取得する\r\n\tvar element = document.getElementById(dropFieldName);\r\n\r\n\t// ドラッグ操作中に実行されるイベント（マウスカーソルが要素内に滞在中）\r\n\telement.addEventListener(\"dragover\" , function (e){\r\n\t\te.preventDefault();\t// ドロップを許可し受け入れを表明\r\n\t});\r\n\r\n\t// ドロップ時に実行されるイベント\r\n\telement.addEventListener(\"drop\", function (e){\r\n\t\t\tvar data_transfer = e.dataTransfer;\t\t// DataTransfer オブジェクトを取得する\r\n\t\t\tif(!data_transfer.types) return;\t\t// ファイルのコンテンツタイプを取得できたことを確認する\r\n\t\t\tvar files = data_transfer.files;\t// ファイルのリストを取得する\r\n\t\t\tInit.FileReader(files);\r\n\t\t\te.preventDefault();\t\t// デフォルトのドロップ機能を無効化\r\n\t});\r\n};\r\n\r\n/**\r\n * 指定されたファイルを読込んで処理する\r\n * \r\n * @memberof HJN.init\r\n * @param {Object}\r\n *            files ファイルハンドラ\r\n */\r\nHJN.init.FileReader = Init.FileReader = function (files){  // #15\r\n\tfor(var i = 0; i < files.length; i++){\t// データを順番に取得する\r\n\t\ttry{\r\n\t\t\t// ファイルを取得する\r\n\t\t\tvar file = files[i];\r\n\t\t\t// ログ出力用にファイル名、ファイルサイズ、ファイル更新日時を編集する\r\n\t\t\tvar textArray = \"<mark><b>\" + file.name + \"</b></mark><BR>\"\r\n\t\t\t\t\t\t+ (file.size + \"\")\r\n\t\t\t\t\t\t\t.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') // 整数文字列のカンマ編集\r\n\t\t\t\t\t\t+ \"Kbyte<BR>\"\r\n\t\t\t\t\t\t+ file.lastModifiedDate.toLocaleString() + \"<BR>\";\r\n\t\t\t// ファイルの読み込みに成功したら、その内容をドロップエリアに追記して表示する\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.onloadend = funcOnloadend.bind(this, files[i], i);\r\n\t\t\t// ファイルにArrayBufferで参照を取得する（loadイベントを起こす）\r\n\t\t\treader.readAsArrayBuffer(files[i]);\r\n\t\t}catch(e){\r\n\t\t\t// 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n\t\t\tvar msg = \"The \" + i + \"th dropped object is not a file\";\r\n\t\t\tUtil.Logger.ShowText( [\"<mark>\"+msg+\"</mark>\"] );\r\n\t\t\tconsole.error(\"[%o]%o\",msg,e );\r\n\t\t}\r\n\t}\r\n\r\n\t// 内部関数：ファイルを読み込みｸﾞﾗﾌを表示する（指定ファイルを読み込んだ後に呼び出される） #23\r\n\tfunction funcOnloadend(file, i, evt) {\r\n\t\tif (evt.target.readyState === FileReader.DONE) { // DONE == 2\r\n\t\t\tvar filesIdx = HJN.files.length;\r\n\t\t\t// ファイルの先頭2行をログ表示する\r\n\t\t\tHJN.filesArrayBuffer[filesIdx] = evt.target.result;\r\n\t\t\tUtil.Logger.ResetTimestamp();\t\t\t  // 情報表示 : 初期化\r\n\t\t\tUtil.Logger.ShowLogText(textArray, \"msg\");  // 情報表示：ドロップファイル情報\r\n\t\t\t// 指定ファイルを読み込む\r\n\t\t\t// CSVファイルを上段用eTatに展開する[{x:, y:,pos:,len:},...] 全件展開する\r\n\t\t\tif (i === 0 && HJN.chart.fileParser.isNewETAT()){\r\n\t\t\t\t// 新規モードかつ、同時複数ファイル指定時の最初のファイルのとき、新たに作成する\r\n\t\t\t\tHJN.files = [file];\r\n\t\t\t\tHJN.chart.eTatOriginal = getTatLogArray(HJN.filesArrayBuffer, filesIdx);\r\n\t\t\t} else { // 2件目以降のファイルのとき、もしくは、追加モード\"ADDDATA\"のとき、追加する\r\n\t\t\t\tHJN.files.push(file);\r\n\t\t\t\tHJN.chart.eTatOriginal = HJN.chart.eTatOriginal.concat(\r\n\t\t\t\t\t\tgetTatLogArray(HJN.filesArrayBuffer, filesIdx));\r\n\t\t\t}\r\n\r\n\t\t\t// 全ファイルを読み込んだらグラフを描画する\r\n\t\t\tif (HJN.files[HJN.files.length - 1] === file){ // 指定ファイル群の最後のファイルを処理しているとき\r\n\t\t\t\t// フィルタしたeTatを取得する #34\r\n\t\t\t\tvar eTat = HJN.chart.fileParser.createFilter().filter(HJN.chart.eTatOriginal);\r\n\r\n\t\t\t\t// 上段グラフを描画する（ eTatから上段用 時系列分析データ(seriesSet)を展開する）\r\n\t\t\t\tif (eTat.length === 0) eTat = [{x:0, y:0}]; // #72\r\n\t\t\t\tvar tat = new TimeSeries.Tat(eTat); // #75\r\n\t\t\t\tHJN.chart.setSeriesSet(tat);\r\n\t\t\t\tHJN.chart.update();\r\n\t\t\t\tshowLogForUpperGraph(HJN.files[0].name); // #79\r\n\r\n\t\t\t\t// 下段用データの展開とグラフ描画（非同期処理）\r\n\t\t\t\tHJN.Plot.List = [];\r\n\t\t\t\tUtil.setZeroTimeout(function(){\r\n\t\t\t\t\tif (HJN.chart.cTps) {\r\n\t\t\t\t\t\t// 下段グラフを描画する（下段用 時系列分析データ(seriesSet)を展開する）\r\n\t\t\t\t\t\tHJN.chartD.update(Init.ChartRegistDetail(HJN.chart.cTps));\r\n\t\t\t\t\t\t// 上段のBalloonを描画する(上段update時にはplots登録されていないので、ここで処理）\r\n\t\t\t\t\t\tHJN.chart.showBalloon();\r\n\t\t\t\t\t\tshowLogForLowerGraph(HJN.files[0].name); // #79\r\n\t\t\t\t\t} else { // #72\r\n\t\t\t\t\t\tUtil.Logger.ShowLogText(\"<mark>表示データがありません</mark>\", \"msg\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 内部関数： 指定ファイルの先頭ｎ行を、改行文字<BR> のテキストに変換してリターンする\r\n\tfunction topLines(file, n) {\r\n\t\tvar fileInfo = \"\",\r\n\t\t\tline;\r\n\t\ttry{\t// 先頭からnレコード取得\r\n\t\t\tvar getterOfLine = HJN.chart.fileParser.createGetterOfLine(file);\r\n\t\t\tfor (var i = 0; i < n; i++) {\r\n\t\t\t\tline = getterOfLine.next();\r\n\t\t\t\tfileInfo += line.str + \"<BR>\";\r\n\t\t\t}\r\n\t\t}catch (e) {\r\n\t\t\talert(\"[Init.DropField 改行コードの無いファイルは扱えません]\");\r\n\t\t\tconsole.error(e);\r\n\t\t}\r\n\t\treturn fileInfo;\r\n\t}\r\n\r\n\t// 内部関数： CSVファイルを読み込み、TatLog用アレイ[{x:日時, y:値, pos:レコード開始位置,\r\n\t// len:レコード長},...]に展開する\r\n\tfunction getTatLogArray(files, idx) { // arg0:csvﾌｧｲﾙのファイルﾊﾟｽ\r\n\t\tUtil.Logger.ShowLogText(\"----- read file -----------------------------\",\"calc\");\r\n\t\tvar file = files[idx], // #23\r\n\t\t\teTat = [],\r\n\t\t\txy = {date: 0, value: 0, isError: false },\r\n\t\t\ti = 0,  // timelog用\r\n\t\t\tgetterOfLine = HJN.chart.fileParser.createGetterOfLine(file),\r\n\t\t\tgetterOfXY = HJN.chart.fileParser.createGetterOfXY(),\r\n\t\t\tisDataType_TatStart = (Util.Config.File.getConfig(\"DATATYPE\") == \"DATATYPE_TATSTART\"),\r\n\t\t\tisDataType_StartEnd = (Util.Config.File.getConfig(\"DATATYPE\") == \"DATATYPE_START_END\"), // #89\r\n\t\t\tline = getterOfLine.next(), // 先頭行の初期処理\r\n\t\t\tlineNum = 0,\r\n\t\t\terrorNum = 0,\r\n\t\t\tcharset = HJN.Config.File.getConfig(\"CHAR\");\r\n\t\twhile (!line.isEoF) {\t\t\t\t// 以降最終行まで処理する\r\n\t\t    lineNum++;\r\n\t\t\ttry {\r\n\t\t\t\tUtil.Logger.ByInterval(i++, line); // 一定時刻毎に進捗を出力する\r\n\t\t\t\txy = getterOfXY.parse(line);\r\n\t\t\t\tif(!xy.isError){\r\n\t\t\t\t\tif (isDataType_TatStart){ // #81 DATATYPE_TATSTART\r\n\t\t\t\t\t\teTat.push( {x: (xy.x + xy.y), y: xy.y, fileIdx: idx, // #93\r\n\t\t\t\t\t\t\tpos: line.pos, len: line.array.byteLength, sTatIdx: 0} );\r\n\t\t\t\t\t} else { // DATATYPE_TATEND\r\n\t\t\t\t\t\teTat.push( {x: xy.x, y: xy.y, fileIdx: idx, // #23\r\n\t\t\t\t\t\t\tpos: line.pos, len: line.array.byteLength, sTatIdx: 0} );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 先頭４行までパース結果をログ出力する\r\n\t\t\t\t\tif (lineNum < 5){\r\n\t\t\t\t\t    log(true, xy, line);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t    log(false, xy, line);\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\t/* 改行だけレコードをスキップ */\r\n\t\t\t    log(false, xy, line);\r\n\t            if (e) console.log(e); // #93\r\n\t\t\t}\r\n            line = getterOfLine.next(); // #24 #96\r\n\t\t}\r\n\t\t// エラーレコード数をログ出力する\r\n        if (!errorNum){\r\n            Util.Logger.ShowLogText(errorNum + \" times failed to parse as CSV.\", \"msg\");\r\n        }\r\n\t\tUtil.Logger.ShowLogText(\"[0:file readed & got eTat]---------------\",\"calc\");\r\n\t\treturn eTat;\r\n\r\n\t\t// ログ出力する（内部関数）\r\n\t\tfunction log(okng, xy, line){\r\n            if (okng){\r\n                // 正常ログの出力は、５行目まで\r\n                if (lineNum > 5) return;\r\n                else Util.Logger.ShowLogText(\"<br>OK:line \" + lineNum + \" <br>\"\r\n                        + \" [\" +  window.HJN.Util.D2S(xy.x, \"yyyy/MM/dd hh:mm:ss.000\")\r\n                        + \", \" + window.HJN.Util.N2S(xy.y) + \"]<br>\"\r\n                        + window.HJN.Util.Encoding.charset.convert(line.str, \"Unicode\", charset)\r\n                        , \"msg\");\r\n            } else {\r\n                errorNum++;\r\n                // エラーログの出力は、５回まで\r\n                if  (errorNum > 5) return;\r\n                else Util.Logger.ShowLogText(\"<br>NG:line \" + lineNum + \" <br>\" \r\n                        + window.HJN.Util.Encoding.charset.convert(line.str, \"Unicode\", charset)\r\n                        , \"msg\");\r\n            }\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * 詳細グラフ用機能： 表示対象期間のcTpsから、eTps範囲を取得し、詳細Seriesを生成する。併せてPlotsを登録する。\r\n * \r\n * @memberof HJN.init\r\n * @param {xMs}\r\n *            cTps 日時（ミリ秒単位）\r\n * @return {seriesSet} dygraph用時系列データ配列\r\n */\r\nInit.ChartRegistDetail = function(cTps){\r\n\t// CTPSの最大値となるplotを取得する\r\n\tvar maxY =Number.MIN_VALUE,\r\n\t\tmaxYIdx = -1;\r\n\tcTps.forEach(function(c, i){\r\n\t\tif (maxY < c.y){\r\n\t\t\tmaxY = c.y;\r\n\t\t\tmaxYIdx = i;\r\n\t\t}\r\n\t});\r\n\tif(0 <= maxYIdx){\t// #26\r\n\t\t// 秒単位より大きいとき、最大値を含む時刻(秒)に補正する #38\r\n\t\tvar x = cTps[maxYIdx].x;\r\n\t\tif(HJN.chart.cTpsUnit.unit >= 1000){\r\n\t\t\tvar cTpsIdx = HJN.chart.conc.findIndex(function(e,i){return e.y === cTps[maxYIdx].y;});\r\n\t\t\tx = HJN.chart.conc[cTpsIdx].x;\r\n\t\t}\r\n\t\t// slider rangeに、下段の表示時刻を設定する\r\n\t\tHJN.init.SetDetailDateTime(x);\r\n\t\t// eTpsの範囲を取得し、詳細用seriesSet(HJN.chartD.seriesSet）を設定する\r\n\t\tvar tat = new TimeSeries.Tat(HJN.init.GetSliderRangedEtat()); // #75\r\n\t\tHJN.chartD.setSeriesSet(tat);\r\n\t\t// plotsアイコン用 HJN.Plot.Listに、下段表示したplotを登録する\r\n\t\tHJN.Plot.Add(HJN.Tat.CTPS.N, cTps[maxYIdx].x, cTps[maxYIdx].y);\r\n\t}\r\n\tUtil.Logger.ShowLogText(\"[6:Plot added] \" + HJN.Plot.List.length + \" plots\",\"calc\");\r\n\r\n\treturn HJN.chartD.seriesSet;\r\n};\r\n/**\r\n * 詳細グラフ用機能： sliderRangeで指定された範囲のeTatを返却する（グラフの点クリックイベント時に呼び出される）\r\n * \r\n * @memberof HJN.init\r\n * @return {ETAT} 詳細グラフ用eTat\r\n */\r\nHJN.init.GetSliderRangedEtat = function() {\r\n\t// 指定時刻（ｄｔ ± range）を取得し、HJNグローバル変数に退避する #27\r\n\tvar rangeTagPlus  = Util.Config.DetailGraph.getConfig(\"D_RANGE_PLUS\");\r\n\tvar rangeTagMinus = Util.Config.DetailGraph.getConfig(\"D_RANGE_MINUS\");\r\n\tvar rangeTagUnit  = Util.Config.DetailGraph.getConfig(\"D_UNIT\"); // #48\r\n\tvar rangeCycle = HJN.chart.cTpsUnit.unit / 1000; // 変動する #38\r\n\r\n\trangeTagPlus = rangeTagPlus  ? +rangeTagPlus : 1 + rangeCycle;\t // 幅（秒）\r\n\trangeTagMinus = rangeTagMinus ? +rangeTagMinus : rangeCycle;\t // 幅（秒）\r\n\trangeTagUnit = rangeTagUnit  ? +rangeTagUnit : TimeSeries.Tat.CYCLE; // #48\r\n\r\n\tUtil.Config.DetailGraph.setValueByKey(\"D_RANGE_PLUS\",rangeTagPlus);\r\n\tUtil.Config.DetailGraph.setValueByKey(\"D_RANGE_MINUS\",rangeTagMinus);\r\n\tUtil.Config.DetailGraph.setValueByKey(\"D_UNIT\",rangeTagUnit);\r\n\r\n\tvar detailDateTime = Util.Config.DetailGraph.getValueByKey(\"D_TIME\");\r\n\tvar eTatDetail = (new TimeSeries.ETat(HJN.chart.eTat)).sliceByRangeUnit(detailDateTime,\r\n\t\t\t\trangeTagMinus, rangeTagPlus, rangeTagUnit); // #75\r\n\r\n\tUtil.Logger.ShowLogText(\"[0:HJN.init.GetSliderRangedEtat] \",\"calc\");\r\n\treturn eTatDetail;  // 詳細グラフ用eTatを返却する\r\n};\r\n/**\r\n * 詳細グラフ用機能： 指定日時を秒単位に丸めて、FORMのslider Rangeに設定する（Plotから呼び出される）\r\n * \r\n * @memberof HJN.init\r\n * @param {xMs}\r\n *            date 日時（ミリ秒単位）\r\n */\r\nHJN.init.SetDetailDateTime=function(date) {\r\n\tUtil.Config.DetailGraph.setValueByKey(\"D_TIME\",\r\n\t\t\tMath.floor(date / 1000) * 1000); // 秒単位に丸める #27\r\n};\r\n\r\n/**\r\n * 使い方HTMLを取得する（Menuイベントから呼び出される） #84\r\n * \r\n * @memberof HJN.init\r\n * @return {String} str 使い方HTML\r\n */\r\nHJN.init.Usage=function(){\r\n    var UsageHtmlFile = \"tatLogDiver-Usage.html\";\r\n    var UsageHtmlURL = \"./tatLogDiver/\" + UsageHtmlFile;\r\n    // requireメソッドの有無で、webpack環境下か判定する\r\n    if (typeof require === \"undefined\") {\r\n        // webpack でパッケージ化していないとき、ダイアログ内にhtmlへのパスを表示する\r\n        var url = \"https://github.com/hirosejn/HJN/wiki/Usage(JP)\";\r\n        var label = \"GitHub wiki : \" + url;\r\n        var html = 'Usage of TAT log diver'\r\n            + '<br>'\r\n            + 'webpack 未適用モード'\r\n            + '<br>'\r\n            + '<a class=\"hjnLabel4Input\" href=\"' + url + '\"'\r\n            + 'target=”_hirosejnUsage”>' + label +'</a><BR>'\r\n            + '<br>'\r\n            + '<a class=\"hjnLabel4Input\" href=\"' + UsageHtmlURL + '\"'\r\n            + 'target=”_hirosejnUsage”>' + UsageHtmlURL +'</a><BR>';\r\n        return html;\r\n    } else {\r\n        // webpack でパッケージ化するとき、ダイアログ内にhtmlを表示する\r\n        return require(\"./\" + UsageHtmlFile); // #94\r\n    }\r\n};\r\n\r\n/**\r\n * 著作権表記文字を取得する（Menuイベントから呼び出される）\r\n * \r\n * @memberof HJN.init\r\n * @return {String} str 著作権表記文字\r\n */\r\nHJN.init.Copyright=function(){\r\n\treturn Copyright.getAboutText();\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Init.js\n// module id = 3\n// module chunks = 0","import cssDygraph from '../../libs/dygraph.css';\r\nimport cssTatLogDiver from './tatLogDiver.css';\r\nimport Init from \"./tatLogDiver-Init.js\";\r\nimport {HJN} from \"./tatLogDiver-HJN.js\";\r\nimport Graph from \"./tatLogDiver-Graph.js\";\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\",function(eve){\r\n    Init(\"chart\");      // チャートを作成する\r\n});\r\n\r\nexport {\r\n    Init\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver.js\n// module id = 6\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport * as Simulator from '../simulator/simulator.js';\r\n\r\n/**\r\n * tatLogDiverのメニューを追加する\r\n * \r\n * @memberof tatLogDiver\r\n * @class Menu\r\n * @param {Object}\r\n *            that グラフへの参照\r\n */\r\nexport default function Menu(that) {\r\n    // メニュー用のエレメントを取得する\r\n    var divMenuId = that.chartIdName + \"_menu\";\r\n    var divMenu = document.getElementById(divMenuId);\r\n    // menu用divがないとき、chartの直前に追加する #13\r\n    if (!divMenu) {\r\n        var div = document.createElement('div');\r\n        div.id = divMenuId;\r\n        div.className = \"menuBar\";\r\n        divMenu = that.chartId.parentNode.insertBefore(div, that.chartId);\r\n    }\r\n    // メニューボタン定義を登録する\r\n    var g = that.globalName;\r\n    // 上下段共通ボタンの定義(Download Menu)\r\n    var menuDownloadImg = (new Util.Menu( // ATag\r\n                divMenuId + \"_DownloadImg\",\r\n                \"graph image(.png)\",\r\n                g + \".menuDownloadImg\"))\r\n            .makeDownloadable(\"graph.png\");\r\n    var menuDownloadCsv = (new Util.Menu( // ATag\r\n                divMenuId + \"_DownloadCsv\",\r\n                \"graph data(.csv)\",\r\n                g + \".menuDownloadLog\"))\r\n            .makeDownloadable(\"graph.csv\");\r\n    var menuDownloadLog = (new Util.Menu( // ATag\r\n                divMenuId + \"_DownloadLog\",\r\n                \"graph log records(.csv)\",\r\n                g + \".menuDownloadLog\"))\r\n            .makeDownloadable(\"tatlog.csv\");\r\n    var menuDownloadConc = (new Util.Menu( // ATag\r\n                divMenuId + \"_DownloadConc\",\r\n                \"conc log records(.csv)\",\r\n                g + \".menuDownloadConc\"))\r\n            .makeDownloadable(\"conclog.csv\");\r\n    \r\n    // メニューを追加する\r\n    var accordion = document.createElement('div'); // 要素の作成\r\n    var _id = 0;\r\n    if (HJN.chart.chartId === that.chartId) { // 上段グラフ用機能のメニュー追加\r\n        // File Menu\r\n        var menuOpenCsv = (new Util.Menu( // FileOpenTag\r\n                divMenuId + \"_OpenCsv \",\r\n                \"Open csv data file\",\r\n                g + \".menuOpenCsv\"));\r\n        var menuSaveConfig = (new Util.Menu( // ATag\r\n                divMenuId + \"_SaveCongig\",\r\n                \"save format (.json)\",\r\n                g + \".menuSaveConfig\"))\r\n            .makeDownloadable(\"hjnconfig.json\");\r\n        var menuLoadConfig = (new Util.Menu( // FileOpenTag\r\n                divMenuId + \"_LoadCongig\", // #10\r\n                \"load format (.json)\",\r\n                g + \".menuLoadConfig\"));\r\n        accordion.innerHTML = '<li class=\"hjnMenuLv1\">'\r\n                + Util.Menu.getAccordionTag(that, ++_id, \"File\", true)\r\n                + '<ul class=\"hjnMenuLv2\">'\r\n                + menuOpenCsv.getFileOpenTag()     // オープンボタン #24\r\n                + Util.Config.File.getHtml()       // 設定HTML #76\r\n                + menuSaveConfig.getATag()         // セーブボタン\r\n                + menuLoadConfig.getFileOpenTag()  // ロードボタン #10\r\n                + '</ul>' + '</li>';\r\n\r\n        // Filter Menu #34\r\n        var menuFilterApply = (new Util.Menu( // FuncTag\r\n                divMenuId + \"_FilterApply\",\r\n                \"Apply filter & reload\",\r\n                g + \".menuFilterApply\"));\r\n        var menuFilterReset = (new Util.Menu( // FuncTag\r\n                divMenuId + \"_FilterClear\",\r\n                \"Reset filter condition\",\r\n                g + \".menuFilterReset\"));\r\n\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Filter\">'\r\n                + Util.Menu.getAccordionTag(that, ++_id, \"Filter\")\r\n                + '<ul class=\"hjnMenuLv2\">'    // #24\r\n                + Util.Config.Filter.getHtml() // 設定HMTL #76\r\n                + menuFilterApply.getFuncTag() // フィルターボタン\r\n                + menuFilterReset.getFuncTag() // クリアボタン\r\n                + '</ul>' + '</li>';\r\n\r\n        // Simulator Menu #53\r\n        var menuSimulatorSimulate = (new Util.Menu( // FuncTag\r\n                divMenuId + \"_SimulatorSimulate\",\r\n                \"Simulate\",\r\n                g + \".menuSimulatorSimulate\"));\r\n        var menuSimulatorEditor = (new Util.Menu( // FuncTag\r\n                divMenuId + \"_SimulatorEditor\",\r\n                \"JSON Editor(Open/Close)\",\r\n                g + \".menuSimulatorEditor\"));\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Simulator\">'\r\n                + Util.Menu.getAccordionTag(that, ++_id, \"Simulator\")\r\n                + '<ul class=\"hjnMenuLv2\">'\r\n                + menuSimulatorSimulate.getFuncTag()   // シミュレート実行ボタン\r\n                + menuSimulatorEditor.getFuncTag()     // JSONエディタボタン\r\n                + Util.Config.Simulator.getHtml()      // 設定HTML #74\r\n                + '</ul>' + '</li>';\r\n        // シミュレーション条件JSON Editエリアを設定する\r\n        var divSimulator = document.getElementById(\"Simulator\");\r\n        var jsonEditor = document.createElement('div'); // 要素の作成\r\n        jsonEditor.innerHTML = '<textarea id=\"SimulatorEditor\" '\r\n                + 'style=\"width:100%;border:none;resize:none;background:rgba(255,255,255,0.5);height:100%;\">'\r\n        divSimulator.appendChild(jsonEditor);\r\n        var divSimulatorEditor = document.getElementById(\"SimulatorEditor\");\r\n        // divSimulatorEditor.readOnly = true; // #22\r\n        divSimulatorEditor.value = Simulator.virtualSystemByJson\r\n                .GetJsonConfig(); // デフォルトJSON\r\n\r\n        // View Menu\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_View\">'\r\n                + Util.Menu.getAccordionTag(that, ++_id, \"View\", true)\r\n                + '<ul class=\"hjnMenuLv2\">' //\r\n                + '<li><div id=\"' + that.chartIdName + '_legend\"></div></li>'\r\n                + '</ul>' + '</li>';\r\n\r\n        // Download Menu\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Download\">'\r\n                + Util.Menu.getAccordionTag(that, ++_id, \"Download\")\r\n                + '<ul class=\"hjnMenuLv2\">'\r\n                + menuDownloadImg.getATag(\"Upper \")   // 上段画像ダウンロードボタン\r\n                + menuDownloadCsv.getATag(\"Upper \")   // 上段グラフcsvダウンロードボタン\r\n                + menuDownloadLog.getATag(\"Upper \")   // 上段生データダウンロードボタン\r\n                + '</ul>' + '</li>';\r\n\r\n        \r\n        // メニュー登録\r\n        divMenu.appendChild(accordion);\r\n        // イベントリスナー登録\r\n        document.getElementById(menuOpenCsv.menuId).addEventListener( //\r\n                'change', that.menuOpenCsv.bind(that), false); // File Open用\r\n        document.getElementById(menuLoadConfig.menuId).addEventListener(\r\n                'change', that.menuLoadConfig.bind(that), false); // LoadConfig用\r\n\r\n    } else { // 下段用グラフ機能のメニュー追加\r\n        _id += 100;\r\n        // Download Menu\r\n        var chartDownloadUl = document.createElement('ul');\r\n        chartDownloadUl.className = \"hjnMenuLv2\";\r\n        chartDownloadUl.innerHTML = '' //\r\n                + menuDownloadImg.getATag(\"Detail \")   // 下段画像ダウンロードボタン\r\n                + menuDownloadCsv.getATag(\"Detail \")   // 下段グラフcsvダウンロードボタン\r\n                + menuDownloadLog.getATag(\"Detail \")   // 下段生データダウンロードボタン\r\n                + menuDownloadConc.getATag(\"Detail \"); // 下段conc csvダウンロードボタン\r\n        var chartDownload = document.getElementById(\"menu_Download\");\r\n        chartDownload.appendChild(chartDownloadUl);\r\n\r\n        // View Menu\r\n        var chartViewUl = document.createElement('ul');\r\n        chartViewUl.className = \"hjnMenuLv2\";\r\n        chartViewUl.innerHTML = '<li><div id=\"' + that.chartIdName\r\n                + '_legend\"></div></li>';\r\n        var chartView = document.getElementById(\"menu_View\");\r\n        chartView.appendChild(chartViewUl);\r\n\r\n        // \"Bottom detail graph\" Menu\r\n        accordion.innerHTML = ''\r\n                + '<li class=\"hjnMenuLv1\">'\r\n                +   Util.Menu.getAccordionTag(that, ++_id, \"Bottom detail graph\", true)\r\n                +   '<ul class=\"hjnMenuLv2\">'\r\n                +     '<ol><div id=\"detailTimeRange\">'\r\n                +     Util.Config.DetailGraph.getHtml()     // 設定HMTL #76\r\n                +     '</div></ol>' // #51\r\n                +   '<li><div id=\"chartPlots\"></div></li>' // Plot一覧用タグ\r\n                +   '</ul>'\r\n                + '</li>';\r\n\r\n        // Help Menu\r\n        var menuHelpUsage = (new Util.Menu( // DialogTag\r\n                divMenuId + \"_HelpUsage\", // #84\r\n                \"Usage of TAT log diver\",\r\n                \"HJN.init.Usage\"))\r\n            .makePopupable(\"HJN.dialogUsage\", 70, 60);\r\n        var menuHelpAbout = (new Util.Menu( // DialogTag\r\n                divMenuId + \"_HelpAbout\",\r\n                \"about TAT log diver\",\r\n                \"HJN.init.Copyright\"))\r\n            .makePopupable(\"HJN.dialogAbout\", 30, 50);\r\n\r\n        \r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\">'\r\n                + Util.Menu.getAccordionTag(that, ++_id, \"Help\")\r\n                + '<ul class=\"hjnMenuLv2\" style=\"width: 100%;\">' //\r\n                + menuHelpUsage.getSubWindowTag() // #84 #95\r\n                + menuHelpAbout.getDialogTag()\r\n                + '</ul>' + '</li>';\r\n\r\n        // メニュー登録\r\n        divMenu.appendChild(accordion);\r\n    }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Menu.js\n// module id = 7\n// module chunks = 0","/**\r\n * @memberOf tatLogDiver\r\n * @class Copyright\r\n * @classdesc コピーライト定義と表示用メソッド\r\n * @prop {String} name - 名称：\"TAT log diver\"\r\n * @prop {String} Version - バージョン\r\n * @prop {String} text - コピーライト表示文字列\r\n * @prop {String} url - GitHubリンク：\"https://github.com/hirosejn/\"\r\n */\r\n\r\nexport var Copyright = {\r\n    name : \"TAT log diver\",\r\n    Version : \"b19.06.30\",\r\n    text : \"&copy; 2017-\" + (new Date()).getFullYear() + \" Junichiroh Hirose\",\r\n    url : \"https://github.com/hirosejn/\",\r\n};\r\n\r\n\r\n/**\r\n * about tat Log Diver として表示する説明文をHTMLで取得する\r\n * \r\n * @memberof tatLogDiver.Copyright\r\n * @return {String}表示用HTML\r\n */\r\nCopyright.getAboutText = function(){\r\n    return Copyright.name + \" (\" + Copyright.Version + \")<br>\"\r\n        + Copyright.text + \" <br> \"\r\n        + Copyright.getGitHubHTML() + \" <br> \"\r\n        + Copyright.getJSDocHTML() + \" <br> \"\r\n        + Copyright.getHtmlHTML();  // #84\r\n}\r\n\r\n/**\r\n * GitHubリンク(HTML)を取得する\r\n * \r\n * @memberof tatLogDiver.Copyright\r\n * @param {String}\r\n *            [text=Copyright.url] HTMLの表示文字列\r\n * @return {String} GitHubリンク(HTML)文字列\r\n */\r\nCopyright.getGitHubHTML = function(text){\r\n    text = text || Copyright.url;\r\n    return '<a class=\"hjnLabel4Input\" href=\"' + Copyright.url+ '\"'\r\n        + ' target=”_hirosejnGit”>' + text + '</a>'\r\n}\r\n\r\n/**\r\n * JSDOCリンク(HTML)を取得する\r\n * \r\n * @memberof tatLogDiver.Copyright\r\n * @param {String}\r\n *            [name=\"JSDoc\"] HTMLの表示文字列\r\n * @return {String} JSDOCリンク(HTML)文字列\r\n */\r\nCopyright.getJSDocHTML = function(name){\r\n    name = name || \"JSDoc\";\r\n    return '<a class=\"hjnLabel4Input\" href=\"../jsdoc/index.html\"'\r\n        +  'target=”_hirosejnJSDoc3”>' + name +'</a><BR>'\r\n}\r\n\r\n/**\r\n * HTMLページのリンク(HTML)を取得する\r\n * \r\n * @memberof tatLogDiver.Copyright\r\n * @param {String}\r\n *            [name=\"HTML : \" + Copyright.url] HTMLの表示文字列\r\n * @return {String} HTMLページのリンク(HTML)文字列\r\n */\r\nCopyright.getHtmlHTML = function(name){ // #84\r\n    var url = \"https://hirosejn.github.io/HJN/\";\r\n    name = name || \"HTML : \" + url;\r\n    return '<a class=\"hjnLabel4Input\" href=\"' + url + '\"'\r\n        +  'target=”_hirosejnHTML”>' + name +'</a><BR>'\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Copyright.js\n// module id = 8\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport {HJN} from './tatLogDiver-HJN.js';\r\nimport * as TimeSeries from '../timeSeries/timeSeries.js';\r\n\r\n/**\r\n * グラフの点をクリックした際に決まる下段グラフの表示条件\r\n * \r\n * @memberof tatLogDiver\r\n * @class Plot\r\n */\r\nexport default function Plot(){};\r\nHJN.Plot = Plot;\r\n\r\n/**\r\n * Plotの一覧\r\n * \r\n * @type array.<String, Boolean, Boolean, index, xMs, Number, Number, Number>\r\n * @prop {String} label Plot一覧に表示する文字列\r\n * @prop {Boolean} ckBox チェックボックスの選択状態<br>\r\n *       （選択後すぐに削除されるのでtrueとなることはない）\r\n * @prop {Boolean} radio ラジオボタンの選択状態\r\n * @prop {index} n グラフ番号\r\n * @prop {xMs} x xの値\r\n * @prop {Number} y yの値\r\n * @prop {Number} rangeMinus 表示幅時間マイナス（秒）\r\n * @prop {Number} rangePlus 表示幅時間プラス（秒）\r\n * @prop {Number} rangeUnit 表示幅時間 単位（sec:1/min:60/hour:3600/day:86400)\r\n * \r\n */\r\nHJN.Plot.List = [];\r\n\r\n/**\r\n * point/baloonクリック時呼出し用関数<br>\r\n * 詳細グラフを描画し、Plotを更新する\r\n * \r\n * @param {Objcet}\r\n *            point dygraph の point\r\n */\r\nPlot.PointClickCallback = function(point) {\r\n    Util.Logger.ShowLogText(\"[0:PointClickCallback]start---------------\",\"calc\");\r\n    var n = HJN.Tat.seriesConfig.findIndex(function(e){ return e.key === point.name; }),// シリーズ番号\r\n        x = point.xval, // ミリ秒\r\n        y = point.yval; // 秒\r\n\r\n    // ETPS,EMPS,EAPSのとき、TATが幅に含まれるよう、幅(range)を拡大する #57\r\n    var rangeTagUnit = Util.Config.DetailGraph.getConfig(\"D_UNIT\"); \r\n    var rangeUnit  = rangeTagUnit  ? rangeTagUnit : TimeSeries.Tat.CYCLE;\r\n    if ((n === HJN.Tat.ETPS.N || n === HJN.Tat.EMPS.N || n === HJN.Tat.EAPS.N) \r\n            && rangeUnit < TimeSeries.Tat.CYCLE) {\r\n        rangeUnit = TimeSeries.Tat.CYCLE;\r\n        Util.Config.DetailGraph.setValueByKey(\"D_UNIT\", rangeUnit);\r\n\r\n        // selectリストの選択を、rangeUnitに合わせる #57\r\n        var options = Util.Config.DetailGraph.getKeyConfig(\"D_UNIT\"); // option一覧\r\n        var valueArray = Object.keys(options).sort(function(a,b){return a - b}); // optionの値の一覧(降順)\r\n        for (var i = 0; i < valueArray.length; i++) { // #27\r\n            if (rangeUnit <= +valueArray[i]) {\r\n               var optionKey = Util.Config.DetailGraph.getOptionKey(\"D_UNIT\", valueArray[i]);\r\n               Util.Config.DetailGraph.setText(\"D_UNIT\", optionKey)\r\n               break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // グラフの日時で、詳細グラフを再作成する\r\n    HJN.init.SetDetailDateTime(x);\r\n    var tat = new TimeSeries.Tat(HJN.init.GetSliderRangedEtat()); // #57\r\n    HJN.chartD.setSeriesSet(tat); // #75\r\n    \r\n    // 下段の残処理終了後、下段データを登録描画する\r\n    HJN.chartD.graph.ready(function(){ HJN.chartD.update(HJN.chartD.seriesSet, n); }); // #57\r\n    // Hover表示しているplotを、Plot.Listに登録し、plotsアイコンを再描画する\r\n    HJN.Plot.Add(n, x, y);\r\n    // Balloonを再描画する\r\n    HJN.Plot.ShowBalloon();\r\n};\r\n\r\n/**\r\n * point/baloonダブルクリック時呼出し用関数<br>\r\n * Plotを削除する\r\n * \r\n * @param {object}\r\n *            plot dygraphのpoint\r\n */\r\nPlot.PointDblClickCallback = function(point) {\r\n    // 指定plotを削除する\r\n    var n = HJN.Tat.seriesConfig.findIndex(function(e){ return e.key === point.name; }),\r\n        x = point.xval, // ミリ秒\r\n        i = HJN.Plot.List.findIndex(function(p){\r\n                return(p.n === n && p.x === x) ||   // 完全一致\r\n                        (\"tpsPlot\" in p &&          // 詳細一致\r\n                        p.tpsPlot.n === n && p.tpsPlot.x === x); });\r\n    if(0 <= i) HJN.Plot.List.splice(i, 1);\r\n    \r\n    Plot.Render();\r\n    // グラフ内の吹き出しを再表示する\r\n    Plot.ShowBalloon();\r\n};\r\n\r\n/**\r\n * クリック時のHoverからPlot.Listを設定する\r\n * \r\n * @param {index}\r\n *            n グラフのシリーズ番号\r\n * @param {xMs}\r\n *            x マウスクリック時のxの値（ミリ秒）\r\n * @param {Number}\r\n *            y マウスクリック時のyの値\r\n * @return {index} i plots内のplotの位置\r\n */\r\nPlot.Add=function(n, x, y) {\r\n    // 各plotを非選択状態とする\r\n    HJN.Plot.List.forEach(function(e){e.radio = false;});\r\n    // ラベルフォーマットの設定\r\n    var format = (n === HJN.Tat.ETPS.N || n === HJN.Tat.CTPS.N) ? \"hh:mm:ss\" : \"hh:mm:ss.000\", // #92\r\n        label = Util.D2S(x, format, true) + \" \" + // #61\r\n                HJN.Tat.seriesConfig[n].label.replace(\"%N\",Util.N2S(y));\r\n    // 幅(range)を取り込む（秒）\r\n    var rangePlusTag  =  document.getElementById(\"DetailRangePlus\"),\r\n        rangeMinusTag =  document.getElementById(\"DetailRangeMinus\"),\r\n        rangeUnitTag  =  document.getElementById(\"DetailRangeUnit\"), // #48\r\n        rangeUnit  = rangeUnitTag  ? +rangeUnitTag.value : TimeSeries.Tat.CYCLE, // #57\r\n        rangePlus  = rangePlusTag  ? +rangePlusTag.value  : 1,  // 幅\r\n        rangeMinus = rangeMinusTag ? +rangeMinusTag.value : 1;\r\n\r\n    // 既存Poltを検索する\r\n    var i = HJN.Plot.List.findIndex(function(p){\r\n                return(p.n === n && p.x === x) ||   // 完全一致\r\n                        (\"tpsPlot\" in p &&          // 詳細一致\r\n                        p.tpsPlot.n === n && p.tpsPlot.x === x); });\r\n    // Plotを設定する\r\n    var plot;\r\n    if(0 <= i){ // 既存Plotsにある時、選択状態とし、rangeを再設定する\r\n        plot = HJN.Plot.List[i];\r\n        plot.radio = true;\r\n        plot.rangePlus  = rangePlus; // 秒\r\n        plot.rangeMinus = rangeMinus;\r\n        plot.rangeUnit  = rangeUnit; // #48\r\n    }else{      // 既存に無いときPlotを追加する\r\n        // ETAT,STATのとき、TATが幅に含まれるよう、幅(range)を拡大する #30 #48 #57\r\n        if (n === HJN.Tat.ETAT.N){\r\n            rangeMinus = Math.max(rangeMinus, \r\n                    Math.floor(x / rangeUnit) - Math.floor((x - y) / rangeUnit)); // #48\r\n            Util.Config.DetailGraph.setText(\"D_RANGE_MINUS\", rangeMinus);\r\n        }else if (n === HJN.Tat.STAT.N){\r\n            rangePlus = Math.max(rangePlus,\r\n                    Math.floor((x + y) / rangeUnit)) - Math.floor(x / rangeUnit) ; // #48\r\n            Util.Config.DetailGraph.setText(\"D_RANGE_PLUS\", rangePlus);\r\n        }\r\n        // Plotを追加する\r\n        plot = {label: label, ckBox:false,\r\n                 radio:true, n: n, x: x, y: y, \r\n                 rangePlus: rangePlus, rangeMinus: rangeMinus, rangeUnit: rangeUnit };\r\n        if (n === HJN.Tat.CTPS.N){          // CTPSのとき秒内最大CONCとして登録する\r\n            adjustPlotToY(HJN.chartD.conc, x, x + HJN.chart.cTpsUnit.unit, y, \r\n                    HJN.Tat.CONC.N, plot, rangePlus, rangeMinus, rangeUnit);\r\n        }else if (n === HJN.Tat.EMPS.N){    // EMPSのとき秒内最大ETATとして登録する\r\n            adjustPlotToY(HJN.chartD.eTat, x, x + TimeSeries.Tat.CYCLE, y, \r\n                    HJN.Tat.ETAT.N, plot, rangePlus, rangeMinus, rangeUnit);\r\n        }else { // CTPS,EMPS以外の時、選択Plotを追加する\r\n            HJN.Plot.List.push(plot);\r\n        }\r\n        // Plotsを時刻順にソートする\r\n        HJN.Plot.List.sort(\r\n                function(a, b) { return a.x - b.x; });\r\n        i = HJN.Plot.List.findIndex(\r\n                function(p){ return(p.n === n && p.x === x); });\r\n    }\r\n    Plot.Render();\r\n    return i;   // plots内のplotの位置\r\n\r\n    \r\n    // 内部関数：プロット位置を、指定秒から詳細グラフの最大時刻に変更する #19\r\n    function adjustPlotToY(conc, x, toX, y, n, plot, rangePlus, rangeMinus, rangeUnit){\r\n        if (!conc) return;\r\n        var maxTime = 0,\r\n            concMax = 0,\r\n            i = Util.binarySearch(x, conc, function(e){ return e.x; });\r\n        for (; i < conc.length && conc[i].x < toX; i++){    // #26\r\n            if (concMax <= conc[i].y){\r\n                    maxTime = conc[i].x;\r\n                    concMax = conc[i].y;\r\n            }\r\n        }\r\n        if (concMax === y) { // 補正すべき時刻が求まったときCONC,ETATを追加する #23\r\n            x = maxTime;\r\n            format = \"hh:mm:ss.000\"; // #92\r\n            label = Util.D2S(x, format, true) + \" \" + // #61\r\n                    HJN.Tat.seriesConfig[n].label.replace(\"%N\",Util.N2S(y));\r\n            HJN.Plot.List.push( {label: label, ckBox:false,\r\n                 radio:true, n: n, x: x, y: y, \r\n                 rangePlus: rangePlus , rangeMinus: rangeMinus, rangeUnit: rangeUnit,\r\n                 tpsPlot: plot} );  // 詳細plotには、tpsのplot情報も保持する\r\n        } else { // 補正すべき時刻がない場合、元のPlotを追加する\r\n            HJN.Plot.List.push(plot);\r\n        }\r\n\r\n    }\r\n};\r\n\r\n/**\r\n * Plot.Listを再表示する\r\n */\r\nPlot.Render = function() {\r\n    var divCheckedPlots =  document.getElementById(HJN.chartName + \"Plots\");\r\n    // 既存のアイコンを削除する\r\n    while (divCheckedPlots.firstChild){\r\n        divCheckedPlots.removeChild(divCheckedPlots.firstChild);\r\n    }\r\n    // 登録されているplots分のアイコンを追加する\r\n    HJN.Plot.List.forEach( function(e, i){\r\n        var div = document.createElement('div'),        // 要素の作成\r\n            radio = e.radio ? 'checked=\"checked\"' : '', // radio選択指定\r\n            ckBox = e.ckBox ? 'checked=\"checked\"' : ''; // check boxのチェック指定\r\n        div.className = \"hjnPlot\";\r\n        div.innerHTML =\r\n            '<input type=\"checkbox\" value=\"' + e.x + '\" id=\"checkBox_' + i + '\" ' + ckBox +\r\n                    ' title=\"delete\" onclick=\"HJN.Plot.CheckBox(' + i + ')\">' +\r\n            '<label for=\"checkBox_' + i + '\"></label>' +\r\n            '<input type=\"radio\" name=\"CheckedPlot\" id=\"SaveTime_' + i + '\" ' + radio +\r\n                    ' onclick=\"HJN.Plot.CheckRadio(' + i + ')\">' +\r\n            '<label for=\"SaveTime_' + i + '\">' + e.label + '</label>';\r\n        divCheckedPlots.appendChild(div);\r\n    } );\r\n};\r\n/**\r\n * PlotのChekBox変更時呼出用関数<br>\r\n * 指定Plotを削除し、PlotsとBaloonを再描画する\r\n * \r\n * @param {index}\r\n *            i 削除対象plotの、plots内位置\r\n */\r\nPlot.CheckBox = function(i) {\r\n    HJN.Plot.List.splice(i,1);      // checkされたplotを削除する\r\n    Plot.Render();          // Plotsを再描画する\r\n    Plot.ShowBalloon();     // グラフのBalloonを再描画する\r\n};\r\n/**\r\n * PlotのRadioボタン変更時呼出用関数<br>\r\n * radio選択時に下段グラフを更新する\r\n * \r\n * @param {index}\r\n *            i 選択されたplotの、plots内位置\r\n */\r\nPlot.CheckRadio = function(i) {\r\n    // Plot.Listにradioの状態を反映する\r\n    HJN.Plot.List.forEach(function(e){ e.radio = false; });\r\n    var plot = HJN.Plot.List[i];\r\n    plot.radio = true;\r\n    // グラフの日時で、詳細グラフを再作成する\r\n    HJN.init.SetDetailDateTime(plot.x); // 中心時刻に設定する\r\n    Util.Config.DetailGraph.setText(\"D_RANGE_PLUS\", plot.rangePlus); // 幅を設定する\r\n                                                                        // #74\r\n    Util.Config.DetailGraph.setText(\"D_RANGE_MINUS\", plot.rangeMinus);\r\n    Util.Config.DetailGraph.setText(\"D_UNIT\", \r\n                Util.Config.DetailGraph.getOptionKey(\"D_UNIT\", plot.rangeUnit)); // #48\r\n    var n = plot.tpsPlot ? plot.tpsPlot.n : plot.n; // #61\r\n    var tat = new TimeSeries.Tat(HJN.init.GetSliderRangedEtat()); // #75\r\n    HJN.chartD.setSeriesSet(tat); // #57\r\n    // 下段データを登録描画する\r\n    HJN.chartD.update(HJN.chartD.seriesSet, n); // #57\r\n    // Balloonを再描画する\r\n    Plot.ShowBalloon();\r\n};\r\n/**\r\n * Balloonを再描画する\r\n */\r\nPlot.ShowBalloon =function(){\r\n    HJN.chart.showBalloon();\r\n    HJN.chartD.showBalloon();\r\n    // タッチデバイスでないとき、lineViewerに表示をクリップボードにコピーする #78\r\n    if (!Util.TouchPanel.isTouchableDevice()) { // #22\r\n        Util.copyToClipboard(\"lineViewer\"); // #61\r\n    }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Plot.js\n// module id = 9\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport Graph from '../tatLogDiver/tatLogDiver-Graph.js';\r\nimport * as TimeSeries from '../timeSeries/timeSeries.js';\r\n\r\n/**\r\n * @memberOf tatLogDiver\r\n * @class MenuConfigDetailGraph\r\n * @classdesc DetailGraph用メニューHTML定義\r\n * \r\n */\r\nexport default function MenuConfigDetailGraph() {} // #27\r\n\r\nMenuConfigDetailGraph.config = function () {\r\n    var prefix = \"DetailGraph\";\r\n    var c = new  Util.Config(prefix);\r\n    // Config設定画面定義\r\n    c \r\n        .name(\"D_RANGE\").label(null,\"Range:\")\r\n            .number(\"D_RANGE_MINUS\", \" - \", \"\", \"1\", 'style=\"width:40px;\"', func_D)\r\n            .number(\"D_RANGE_PLUS\"  , \" + \", \"\", \"2\", 'style=\"width:40px;\"', func_D)\r\n        .name(\"D_UNIT\").startTag(\"select\")\r\n            .option(c.def(\"D_UNIT_SEC\",         1000), null, \"sec\",   false, null, func_D) // #48\r\n            .option(c.def(\"D_UNIT_10SEC\",      10000), null, \"10sec\", true,  null, func_D)\r\n            .option(c.def(\"D_UNIT_MIN\",        60000), null, \"min\",   false, null, func_D)\r\n            .option(c.def(\"D_UNIT_HOUR\",     3600000), null, \"hour\",  false, null, func_D)\r\n            .option(c.def(\"D_UNIT_6HOUR\",   21600000), null, \"6hour\", false, null, func_D)\r\n            .option(c.def(\"D_UNIT_DAY\",     86400000), null, \"day\",   false, null, func_D)\r\n            .option(c.def(\"D_UNIT_YEAR\", 31536000000), null, \"year\",  false, null, func_D)\r\n        .endTag()\r\n    ;\r\n}\r\n\r\n// Config登録関数定義\r\nfunction func_D(){\r\n    clearTimeout(HJN.timer);\r\n    HJN.timer = setTimeout(function(){\r\n            Util.Logger.ShowLogTextInit(\"[-:HJN.init.setDetailRange]start---------------\",\"calc\");\r\n            // 表示中Plotsのrangeを更新する #30\r\n            var i = HJN.Plot.List.findIndex(function(e){ return (e.radio === true); });\r\n            var plot = HJN.Plot.List[i];\r\n            plot.rangePlus  = Util.Config.DetailGraph.getConfig(\"D_RANGE_PLUS\"); // #27\r\n            plot.rangeMinus = Util.Config.DetailGraph.getConfig(\"D_RANGE_MINUS\");\r\n            plot.rangeUnit = Util.Config.DetailGraph.getConfig(\"D_UNIT\"); // #48\r\n            plot.rangeUnit = plot.rangeUnit  ? plot.rangeUnit  : TimeSeries.Tat.CYCLE; // #57\r\n            Util.Config.DetailGraph.setValueByKey(\"D_UNIT\", plot.rangeUnit);\r\n\r\n            // 下段データを登録する\r\n            var tat = new TimeSeries.Tat(HJN.init.GetSliderRangedEtat()); // #75\r\n            HJN.chartD.setSeriesSet(tat);\r\n            // 下段グラフを描画する\r\n            Graph.prototype.update.call(HJN.chartD, HJN.chartD.seriesSet);\r\n        }, 750);    // 750ms 値の変更がなかった時に、処理を開始する\r\n };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-MenuConfigDetailGraph.js\n// module id = 10\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 11\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 12\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver.css\n// module id = 13\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport MappedETat from './timeSeries-MappedETat.js';\r\nimport ETat from './timeSeries-ETat.js';\r\nimport Cash from './timeSeries-Cash.js';\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class Tat\r\n * @classdesc Tat 応答時間(Turnaround time)の時系列データ管理クラス\r\n * @param {ETAT}\r\n *            [eTat] [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]<br>\r\n *            eTatが指定されているとき、this.seriesSet を設定する\r\n */\r\nexport default function Tat(eTat) {\r\n    \r\n    this.cTpsUnit = Tat.UNIT_CTPS[0];\r\n    this.seriesSet = [];\r\n\r\n    if (eTat){\r\n        this.createSeries(eTat);\r\n    }\r\n}\r\n\r\n/**\r\n * クラス定数\r\n */\r\nTat.UNIT_CTPS = [\r\n        { label: \"/sec\",   unit: 1000 },\r\n        { label: \"/min\",   unit: 60000 },\r\n        { label: \"/hour\",  unit: 3600000 },\r\n        { label: \"/day\",   unit: 86400000 }];\r\nTat.CYCLE = 60000;  // ミリ秒 #57\r\n\r\n// グラフ定数\r\nTat.CONC = {\r\n        key : 'conc',\r\n        name : '多重度（詳細）',\r\n        label : 'conc:%N',\r\n        N : 0,\r\n        scale : 0,\r\n        color : 'rgba(  0,  0,127, 0.3)',\r\n        tpsN : 1\r\n    }; // #7\r\nTat.CTPS = {\r\n        key : 'cTps',\r\n        name : '多重度（区間最大）',\r\n        label : 'conc(max):%N',\r\n        N : 1,\r\n        scale : 0,\r\n        color : 'rgba(  0,  0,127, 0.1)',\r\n        detailN : 0\r\n    };\r\nTat.ETPS = {\r\n        key : 'eTps',\r\n        name : 'average tps / min (end) [line]', // #57\r\n        label : 'end:%Ntps',\r\n        N : 2,\r\n        scale : 0,\r\n        color : 'rgba(  0, 127, 127, 0.3)'\r\n    };\r\nTat.STAT = {\r\n        key : 'sTat',\r\n        name : 'response by start time [Y2軸:plot]',\r\n        label : 'start:%Nms',\r\n        N : 3,\r\n        scale : 1,\r\n        color : 'rgba(127, 127, 0, 0.3)'\r\n    };\r\nTat.ETAT = {\r\n        key : 'eTat',\r\n        name : 'response by end time   [Y2軸:plot]',\r\n        label : 'end:%Nms',\r\n        N : 4,\r\n        scale : 1,\r\n        color : 'rgba(127,  0,  0, 0.3)'\r\n    };\r\nTat.EMPS = {\r\n        key : 'eMps',\r\n        name : 'max response / min (end) [Y2軸:line]', // #57\r\n        label : 'max:%Nms',\r\n        N : 5,\r\n        scale : 1,\r\n        color : 'rgba(127,   0,  64, 0.3)'\r\n    };\r\nTat.EAPS = {\r\n        key : 'eAps',\r\n        name : 'average response / min (end) [Y2軸:line]', // #57\r\n        label : 'ave:%Nms',\r\n        N : 6,\r\n        scale : 1,\r\n        color : 'rgba(127,   0,  64, 0.1)'\r\n    };\r\nTat.toSeriesArray = function(conc, cTps, eTps, sTat, eTat, eMps, eAps) {\r\n    return [ conc, cTps, eTps, sTat, eTat, eMps, eAps ];\r\n}\r\nTat.seriesConfig = Tat.toSeriesArray(\r\n        Tat.CONC, Tat.CTPS, Tat.ETPS, Tat.STAT, Tat.ETAT,\r\n        Tat.EMPS, Tat.EAPS);\r\n\r\n/**\r\n * 終了時刻のTAT時系列データ(eTat)から、描画用時系列データ配列を作成する\r\n * \r\n * @memberOf TimeSeries\r\n * @param {ETAT}\r\n *            eTat [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]\r\n * @return {seriesSet} dygraph用時系列データ配列\r\n */\r\nTat.prototype.createSeries = function (eTat) {\r\n    // 時系列データを初期化する\r\n    var conc = [], cTps = [], eTps = [], sTat = [], eMps = [], eAps = [];\r\n\r\n    // 集計対象データがないとき\r\n    if (eTat.length === 0)\r\n        return Tat.toSeriesArray(conc, cTps, eTps, sTat, eTat, eMps, eAps);\r\n\r\n    /** eTatをソートする * */\r\n    // 開始時刻でソートする #35\r\n    eTat.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    Util.Logger.ShowLogText(\"[1:eTat sorten ] \" + eTat.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** eTps(時間あたり処理件数),eMps,eAps(時間あたり最大/平均応答時間)時系列データを作成する * */\r\n    var dFrom = Math.floor(eTat[0].x / Tat.CYCLE) * Tat.CYCLE,\r\n        dTo = dFrom + Tat.CYCLE,\r\n        num = 0, // #39\r\n        maxTat = 0.0, // #19\r\n        aveTmp = 0.0;\r\n    eTat.forEach(function (e) {\r\n        if (e.x < dTo) {\r\n            num += 1;\r\n            if (maxTat < e.y) maxTat = e.y; // #19\r\n            aveTmp += e.y;\r\n        } else {\r\n            eTps.push({x : dFrom, y : num * 1000 / Tat.CYCLE}); // #57\r\n            eMps.push({x : dFrom, y : maxTat}); // #19\r\n            eAps.push({x : dFrom, y : aveTmp / num});\r\n            dFrom = Math.floor(e.x / Tat.CYCLE) * Tat.CYCLE;\r\n            dTo = dFrom + Tat.CYCLE;\r\n            num = 1;\r\n            maxTat = e.y; // #19 #39\r\n            aveTmp = e.y; // #39\r\n        }\r\n    }, this);\r\n    eTps.push({x : dFrom,             y : num * 1000 / Tat.CYCLE}); // #57\r\n    eTps.push({x : dFrom + Tat.CYCLE, y : num * 1000 / Tat.CYCLE}); // #57\r\n    eMps.push({x : dFrom,             y : maxTat}); // #19\r\n    eMps.push({x : dFrom + Tat.CYCLE, y : maxTat}); // #57\r\n    eAps.push({x : dFrom,             y : aveTmp / num});\r\n    eAps.push({x : dFrom + Tat.CYCLE, y : aveTmp / num}); // #57\r\n    \r\n    Util.Logger.ShowLogText(\"[3:eTps,eMps,eAps created] \" + eTps.length\r\n            + \" plots\", \"calc\");\r\n\r\n    /** sTat（開始時間）時系列データを作成する,同時に入力eTatを補正する * */\r\n    // eTatからsTatを登録する\r\n    eTat.forEach(function (e, i) {\r\n        // 処理時間=0 のとき、1マイクロ秒とみなす(有効桁0.2マイクロ秒に切上される）\r\n        if (e.y === 0) {\r\n            e.y = 0.001;\r\n            e.x += e.y;\r\n        } // ミリ秒\r\n        // sTatにeTatデータを登録する\r\n        sTat.push({\r\n            x : e.x - e.y,\r\n            y : e.y,\r\n            eTatIdx : i\r\n        });\r\n    });\r\n    // 開始時刻でソートする\r\n    sTat.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    // eTatにsTatの位置を設定する\r\n    sTat.forEach(function (s, i) {\r\n        eTat[s.eTatIdx].sTatIdx = i;\r\n    });\r\n    Util.Logger.ShowLogText(\"[2:sTat created] \" + sTat.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** CONC(多重度)時系列データを作成する * */\r\n    var concTmp = [];\r\n    // eTatから、多重度が変化した時刻の一覧を作成する\r\n    eTat.map(function (e, i) {\r\n        // 開始時刻にカウントアップ情報を追加する\r\n        concTmp.push({x : e.x - e.y, y : 1});\r\n        // 終了時刻をカウントダウン情報を追加する\r\n        concTmp.push({x : e.x, y : -1});\r\n    });\r\n    // concを変化した時刻（開始or終了）でソートする\r\n    concTmp.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    // concに同時取引数を設定する\r\n    var concNum = 0;\r\n    concTmp.forEach(function (c, i, a) {\r\n        // 重複削除用フラグを立てる #23\r\n        if (i > 0 && c.x === a[i - 1].x) {\r\n            a[i - 1].del = true;\r\n        }\r\n        // 同時取引数を集計する(前提：c.y に、開始なら1、終了なら(-1)が設定されている)\r\n        concNum += c.y;\r\n        c.y = concNum;\r\n    });\r\n    // concの同じ時刻の点を削除する #23\r\n    conc = concTmp.filter(function (c) {\r\n        return !c.del;\r\n    });\r\n    Util.Logger.ShowLogText(\"[4:conc created] \" + conc.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** cTPS秒間同時処理件数（concurrent transactions/sec）時系列データを作成する #18 * */\r\n    var XSec = floorTime(conc[0].x, Tat.CYCLE), // ミリ秒\r\n    YMax = conc[0].y, YNext = conc[0].y;\r\n    // concの先頭と末尾の時刻(x)の差よりPlot数を求め、Plot数が規定数(8000個)を超えたら、桁上げする #38\r\n    var cTpsMaxPlots = 8000, // 桁上げするPlot数\r\n    cTpsUnits = Tat.UNIT_CTPS, // #48\r\n    concTerm = conc[conc.length - 1].x - conc[0].x, // ミリ秒\r\n    cTpsIdx = 0;\r\n    while (cTpsIdx < cTpsUnits.length\r\n            && concTerm / cTpsUnits[cTpsIdx].unit > cTpsMaxPlots) {\r\n        cTpsIdx++;\r\n    }\r\n    cTpsIdx = (cTpsUnits.length > cTpsIdx) ? cTpsIdx : cTpsUnits.length - 1;\r\n    this.cTpsUnit = cTpsUnits[cTpsIdx];\r\n    // メニューのViewのcTPSのラベルに単位を追加する\r\n    var pos = (this === HJN.chart) ? 0 : 1;\r\n    document.getElementsByName(\"cTps\")[pos]\r\n                .parentNode.lastChild.data = HJN.Tat.CTPS.name + this.cTpsUnit.label;\r\n\r\n    // 規定時間単位の最大同時処理数cTPSを作成する\r\n    conc.forEach(function (c) {\r\n        if (floorTime(c.x, this.cTpsUnit.unit) === XSec) { // c.xは ミリ秒\r\n            YMax = Math.max(YMax, c.y);\r\n        } else {\r\n            cTps.push({x : XSec, y : Math.max(YMax, YNext)});\r\n            for (var t = XSec + this.cTpsUnit.unit;\r\n                    t < floorTime(c.x, this.cTpsUnit.unit);\r\n                    t += this.cTpsUnit.unit) { // c.xはミリ秒\r\n                        cTps.push({x : t, y : YNext});\r\n                if (YNext === 0) break;\r\n            }\r\n            XSec = floorTime(c.x, this.cTpsUnit.unit);\r\n            YMax = Math.max(YNext, c.y);\r\n        }\r\n        YNext = c.y;\r\n    }, this);\r\n    cTps.push({x : XSec, y : YMax});\r\n    cTps.push({x : XSec + this.cTpsUnit.unit, y : YNext});\r\n\r\n    // Util.Logger.ShowLogText(\"[5-1:cTps created] \" + cTps.length + \"\r\n    // plots\",\"calc\");\r\n\r\n    // cTpsのxからindexを引くMapを作成する #18\r\n    eTat = new ETat(eTat); // #75\r\n    Util.Logger.ShowLogText(\"[5:cTps created] \" + cTps.length + \" plots(\"\r\n            + +Math.floor(concTerm / 1000) + \"sec\" + cTpsUnits[cTpsIdx].label\r\n            + \")\", \"calc\");\r\n\r\n    // 集計結果をHJN.Graphに設定する 注）this.SERIESESと同じ順番にすること\r\n    this.seriesSet = Tat.toSeriesArray(conc, cTps, eTps, sTat, eTat, eMps, eAps);\r\n\r\n    return this;\r\n\r\n    \r\n    // 時刻を指定ミリ秒間隔で切り捨てる（内部関数）\r\n    function floorTime(t, cycle) {\r\n        return Math.floor(Math.floor(t / cycle) * cycle);\r\n    }\r\n};\r\n\r\n/**\r\n * cTpsの集計単位を取得する\r\n * \r\n * @memberOf TimeSeries\r\n * @return {object} 単位構造体 { label: \"/sec\", unit: 1000 }\r\n */\r\nTat.prototype.getCTpsUnit = function () {\r\n    return this.cTpsUnit;\r\n}\r\n\r\n/**\r\n * seriesSetを取得する\r\n * \r\n * @memberOf TimeSeries\r\n * @return {array} seriesSet\r\n */\r\nTat.prototype.getSeriesSet = function () {\r\n    return this.seriesSet;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-Tat.js\n// module id = 14\n// module chunks = 0","/**\r\n * @memberOf TimeSeries\r\n * @class MappedETat\r\n * @classdesc 期間指定eTat取得用Map\r\n *            <p>\r\n *            指定期間に動いているeTatの一覧を、高速に取得するマップ\r\n * @param {ETAT}\r\n *            eTat インデックスを追加するETAT\r\n * @example eTat.tatMap = new HJN_util.MappedETat(eTat); var trans =\r\n *          eTat.tatMap.search(x, x, 1000);\r\n */\r\nexport default (function() { // #18\r\n    /** @static */\r\n    MappedETat.prototype = {\r\n            _abscissa: [],\r\n            _conf :[{ms:      10, step:5, label:\"0_10ms_\"},\r\n                    {ms:      50, step:2, label:\"1_50ms_\"},\r\n                    {ms:     100, step:5, label:\"2_100ms_\"},\r\n                    {ms:     500, step:2, label:\"3_500ms_\"},\r\n                    {ms:    1000, step:5, label:\"4_1sec_\"},\r\n                    {ms:    5000, step:4, label:\"5_5sec_\"},\r\n                    {ms:   20000, step:3, label:\"6_20sec_\"},\r\n                    {ms:   60000, step:5, label:\"7_1min_\"},\r\n                    {ms:  300000, step:4, label:\"8_5min_\"},\r\n                    {ms: 1200000, step:3, label:\"9_20min_\"},\r\n                    {ms: 3600000, step:6, label:\"10_1h_\"},\r\n                    {ms:21600000, step:4, label:\"11_6h_\"},\r\n                    {ms:Number.MAX_VALUE, step:1, label:\"12_overDay_\"}] // 最後はstep:１\r\n        };\r\n    /** @constructor */\r\n    function MappedETat(eTat){\r\n        if(!(this instanceof MappedETat)) return new MappedETat(eTat);\r\n        // MappedArrayを作成する\r\n        this._tatMap = new MappedArray(eTat, this._getKey, true);\r\n    }\r\n\r\n    /** @private */\r\n    MappedETat.prototype._row = function(label, step) {return label + step;};\r\n\r\n    /** @private */\r\n    // MapKey取得関数\r\n    MappedETat.prototype._getKey = function(e, i) {        // MapedMap用Key配列関数\r\n        var start = e.x - e.y,      // x,yはミリ秒\r\n            end = e.x,\r\n            _conf = MappedETat.prototype._conf,\r\n            _row = MappedETat.prototype._row,\r\n            term = _conf[0].ms,\r\n            rowLv = 0;\r\n        if(Math.ceil(end / term) - 1 === Math.floor(start / term)){ // 最小BOX\r\n            return [_row(_conf[0].label, 0),\r\n                    (Math.ceil(e.x / _conf[0].ms) - 1) * _conf[0].ms];\r\n        }\r\n        for (i = 1; i < _conf.length; i++) {                // 最下位から上に評価\r\n            term = _conf[i].ms;\r\n            if(Math.floor(end / term) === Math.floor(start / term) \r\n                    || end - start < term){                      // 上位BOXを起点\r\n                term = _conf[i-1].ms;   // ひとつ下位のBOX期間（下から評価したので二段下となることは無い\r\n                rowLv = Math.floor(end / term) - Math.floor(start / term);\r\n                return [_row(_conf[i-1].label, rowLv),\r\n                        (Math.ceil(e.x / _conf[i-1].ms) - 1) * _conf[i-1].ms];\r\n            }\r\n        }\r\n        return \"error\";\r\n    };\r\n\r\n    // static メンバーの設定\r\n    // _confから_abscissa(横軸）を生成する\r\n    var c = MappedETat.prototype._conf,\r\n        e2 = c[c.length - 2],\r\n        \r\n        e  = c[c.length - 1];\r\n    MappedETat.prototype._abscissa.push(\r\n            {label: MappedETat.prototype._row(e.label, e.step), ms: e.ms ,i: 1,\r\n                step: e.step, from: e2.ms * e2.step, to: e.ms} );   // 末尾を先頭に追加\r\n    for (var j = c.length - 1; 0 <= j; j--){    // 降順に追加\r\n        e = c[j];\r\n        for (var i = e.step; 0 < i; i--){ // #39\r\n            MappedETat.prototype._abscissa.push(\r\n                    {label: MappedETat.prototype._row(e.label, i), ms: e.ms, i: i, \r\n                                step: e.step, from: e.ms * i, to: e.ms * (i + 1)} );\r\n        }\r\n    }\r\n    MappedETat.prototype._abscissa.push( \r\n            {label: MappedETat.prototype._row(c[0].label, 0), ms: c[0].ms, i: 0,\r\n                step: 0, from: 0, to: c[0].ms} );   // 先頭を末尾に追加\r\n\r\n    \r\n    // public\r\n    /**\r\n     * 指定期間に動いているeTatを検索する\r\n     * \r\n     * @memberOf Util.MappedETat\r\n     * @parm {Number} from 指定期間(from)\r\n     * @parm {Number} [to=from] 指定期間(to)\r\n     * @parm {Number} [cap] cap件数となったら抽出を終了する（指定なしの時：全件）\r\n     * @return {ETAT} eTatArr 指定期間内のeTat配列\r\n     */\r\n    MappedETat.prototype.search = function (from, to, cap) {\r\n        to = to || from;    // to省略時は時刻指定(from=to)\r\n        cap = cap || Number.MAX_VALUE; // 指定なしの時：全件\r\n        var map = this._tatMap._map,\r\n            eTat = this._tatMap._arr,\r\n            abscissa = this._abscissa,\r\n            eTatArr = [],\r\n            start = 0,\r\n            end = 0;\r\n        // 検索対象のBOX一覧を生成する\r\n        abscissa.forEach(function(e){   // 存在しうる横軸のうち（tatが長時間の方から）\r\n            if (map[e.label]){          // 横軸が存在するものについて\r\n                var boxNum = e.i + Math.ceil(to / e.ms) - Math.floor(from / e.ms), // #45\r\n                    key = Math.floor(from / e.ms) * e.ms;\r\n                // 存在しうるKey値を終了時間が早い方から集計する\r\n                for(var j = 0; j <= boxNum; j++){\r\n                    // Key値が存在するものみが集計対象\r\n                    if (map[e.label][key]){ \r\n                        // かつ、Keyが持っている要素(eTatへの参照:k)が集計対象\r\n                        map[e.label][key].forEach(function(k){\r\n                            // かつ、from-toの期間に動いている要素(eTatのindex)が集計対象\r\n                            start = eTat[k].x - eTat[k].y;\r\n                            end   = eTat[k].x;\r\n                            if((start <= to) && (from <= end)){\r\n                                // かつ、戻り値の配列要素数がcap未満の場合が集計対象\r\n                                if(eTatArr.length < cap){\r\n                                    // 集計対象条件に合致する要素を、戻り値の配列に追加する\r\n                                    eTatArr = eTatArr.concat(eTat[k]);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    key += e.ms;    // 次のKey値\r\n                }\r\n            }\r\n        }, this);\r\n        return eTatArr;\r\n    };\r\n    \r\n    // newの戻り値\r\n    return MappedETat;\r\n}());\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class MappedArray\r\n * @classdesc 配列位置逆引きマップ\r\n *            <p>\r\n *            配列に格納されているオブジェクトのx値で、配列位置を高速検索するマップ<br>\r\n *            指定関数の戻り値(x)をキーとするマップを作成する\r\n *            <p>\r\n *            参考 {@link http://qiita.com/alucky0707/items/10052866719ba5c5f5d7}\r\n * \r\n * @param {Array}\r\n *            arr インデクスをつける対象の配列\r\n * @param {String|function}\r\n *            [getKey=\"\"] MappedArrayのKey値の取得方法\r\n *            <p>\r\n *            String指定のとき（デフォルト\"\"を含む）、配列要素の値(valueOf)\r\n *            <p>\r\n *            注： 0,00,\"0\"は同値、1,01,\"1\"は同値 Stringのとき、 配列要素が持つ指定要素の値\r\n *            <p>\r\n *            functionのとき、配列要素に指定関数を適用した戻り値\r\n *            <p>\r\n *            関数の引数：(配列要素オブジェクト、配列のインデックス、作成中のMappedArrayへの参照）\r\n * @param {Boolean}\r\n *            [isMappedMap] getKeyが2段Map用の配列を返却する\r\n * @return {object} Index arrに対するインデックス（連想配列名で検索）\r\n * @example _tatMap = new HJN_util.MappedArray(eTat, this._getKey, true);\r\n */\r\nvar MappedArray = (function() {    // #18\r\n    /** @constructor */\r\n    function MappedArray(arr, getKey, isMappedMap){\r\n        if(!(this instanceof MappedArray)) return new MappedArray();\r\n        this._arr = arr;\r\n        // getKeyによりIndex作成関数を設定する\r\n        if(!getKey || getKey === \"\"){\r\n            // getKey指定がないとき、配列の値\r\n            this._getKey = function(e){ return e.valueOf(); };\r\n        }else if ((typeof(getKey) === \"string\") && (getKey !== \"\")){    // #29\r\n            // getKeyが文字列のとき、配列内オブジェクトのgetKey要素の値\r\n            this._getKey = function(e){ return e[getKey]; };\r\n        }else if (typeof(getKey) === \"function\" ){  // #29\r\n            // getKeyが関数のとき、配列内オブジェクトに関数を適用した戻り値\r\n            this._getKey = getKey;\r\n        }else{  // 以外のときエラーログを出力し、getKey指定なしと同様、配列の値\r\n            console.error(\"MappedArrayの第二引数エラー：[ %o ]を無視します \",getKey);\r\n            this._getKey = function(e){ return e.valueOf(); };\r\n        }\r\n        // MappedArrayを作成する\r\n        if(!isMappedMap){\r\n            this._createMappedArray();          \r\n        }else{\r\n            this._createMappedMappedArray();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    MappedArray.prototype._createMappedArray = function() {\r\n        var key = \"\"; \r\n        this._map = this._arr.reduce(function(m, a, i) {\r\n            key = this._getKey.call(a, a, i, m);\r\n            m[key] = (m[key] || []).concat(i);\r\n            return m;\r\n        }, {});\r\n    };\r\n    /** @private */\r\n    MappedArray.prototype._createMappedMappedArray = function() {\r\n        var keys = [],\r\n            key = \"\",\r\n            mKey = \"\",\r\n            _getKey = this._getKey;\r\n        this._map = this._arr.reduce(function(m, a, i) {\r\n            keys = _getKey.call(a, a, i, m);\r\n            key = keys[1] || \"error\";\r\n            mKey = keys[0] || \"error\";\r\n            if(m[mKey] === undefined) m[mKey] = {};\r\n            m[mKey][key] = (m[mKey][key] || []).concat(i);\r\n            return m;\r\n        }, {});\r\n    };\r\n\r\n    // public\r\n    /**\r\n     * 値の存在チェック\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.has = function (keyValue) {\r\n        return keyValue in this._map;\r\n    };\r\n    /**\r\n     * 該当位置を配列で返す\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.indexes = function (keyValue) {\r\n        return this._map[keyValue] || [];\r\n    };\r\n    /**\r\n     * 該当する要素を配列で返す\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.search = function (keyValue) {    \r\n        var arr = this._arr;\r\n        return this.indexes(keyValue).reduce(function(m, i) {\r\n            m.push(arr[i]);\r\n            return m;\r\n        }, []);\r\n    };\r\n    /**\r\n     * Array.prototype.indexOf() 同等\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.indexOf = function (keyValue) {\r\n        var idxArr = this._map[keyValue],\r\n            i = idxArr ? idxArr.length : -1;\r\n        return (0 < i) ? idxArr[0] : -1;\r\n    };\r\n    /**\r\n     * Array.prototype.lastIndexOf() 同等\r\n     * \r\n     * @memberOf TimeSeries.MappedArray\r\n     */\r\n    MappedArray.prototype.lastIndexOf = function (keyValue) {\r\n        var idxArr = this._map[keyValue],\r\n            i = idxArr ? idxArr.length : -1;\r\n        return (0 < i) ? idxArr[i-1] : -1;\r\n    };\r\n    \r\n    \r\n    return MappedArray;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-MappedETat.js\n// module id = 15\n// module chunks = 0","import MappedETat from './timeSeries-MappedETat.js';\r\nimport Cash from './timeSeries-Cash.js';\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class ETat\r\n * @extends Array\r\n * @classdesc eTat管理クラス、Arrayのメソッドを継承\r\n * @param {Array}\r\n *            [that] ETAT構造の配列\r\n */\r\nexport default function ETat(that) {\r\n    /** @private */\r\n    // cTpsのxからindexを引くMapを作成する #18\r\n    that.tatMap = new MappedETat(that);\r\n    // キャッシュを作成する\r\n    that.cash = Cash();\r\n\r\n    /**\r\n     * 指定期間のeTatを取得する<br>\r\n     * 性能対策としてキャッシュを持っている\r\n     * \r\n     * @memberof TimeSeries.ETat\r\n     * @param {Number}\r\n     *            [detailDateTime] 期間の基準時刻(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangeMinus] 抽出開始時刻を求める基準時刻から引く時間(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangePlus] 抽出終了時刻を求める基準時刻に足す時間(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangeUnit] 抽出開始終了時刻を丸める時間の単位(ミリ秒)\r\n     * @return {ETAT} 指定期間のETAT配列\r\n     */\r\n    that.sliceByRangeUnit = function (detailDateTime, detailRangeMinus, detailRangePlus, detailRangeUnit){\r\n        var rangeUnit = detailRangeUnit || TimeSeries.Tat.CYCLE;\r\n        var dt = Math.floor(detailDateTime / rangeUnit) * rangeUnit; // 中央時刻(ミリ秒)\r\n        var from = dt - detailRangeMinus * rangeUnit;  // #48\r\n        var to = dt + detailRangePlus  * rangeUnit;  // 幅（ミリ秒）\r\n        var eTatDetail = [{x: 0, y: 0.001, sTatIdx: 0}];    // tatMapが無い場合の返却値\r\n        if (this.tatMap){ // #18\r\n            // eTatDetailがレンジキャッシュにあるか確認する #30\r\n            eTatDetail = this.cash.getRangedCash(from, to);\r\n            if(eTatDetail === undefined){\r\n                // キャッシュヒットしないとき、eTatDetailを抽出し、キャッシュにセットする\r\n                eTatDetail = this.tatMap.search(from,to);\r\n                this.cash.setRangedCash(eTatDetail, from, to);\r\n            }\r\n        }\r\n        return eTatDetail;\r\n    }\r\n\r\n    return that\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-ETat.js\n// module id = 16\n// module chunks = 0","/**\r\n * @memberOf TimeSeries\r\n * @class Cash\r\n * @classdesc キャッシュ\r\n *            <p>\r\n *            キャッシュを保持させるオブジェクト\r\n * @param {Number}\r\n *            [size=10] キャッシュ最大件数（未対応機能、設定は無視される）\r\n */\r\nexport default (function() {\r\n    /** constructor */\r\n    function Cash(size){\r\n        size = size || 10;  // TODO 未使用\r\n        if(!(this instanceof Cash)) return new Cash(size);\r\n        // インスタンス変数\r\n        this._cash = {};    // キャッシュ {data:, count:, lastTime:}\r\n        this._ranges = [];  // RangedCash用 {key: ,from: , to:, }\r\n        this._size = size;  // キャッシュ最大件数\r\n    }\r\n    \r\n    /* method */\r\n    /**\r\n     * 第一引数のargumentsを配列に変換する<br>\r\n     * （注：引数が１つ以上あることを前提）\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            args 引数一覧（arguments）\r\n     * @return {Array} 引数の配列\r\n     */\r\n    Cash._arg2arr = function(args) {\r\n            return args.length === 1 ? [args[0]] : Array.apply(null, args);\r\n        };\r\n    /**\r\n     * cash判定Keyを取得する<br>\r\n     * （注：引数を'.'でつないだ文字列をkeyとするので、関数名長の上限を超える大きな配列は不可）\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            args 引数一覧（argumentsオブジェクト）\r\n     * @return {String} キャッシュキー用の文字列\r\n     */\r\n    Cash._getKey = function(args) {\r\n            var argsArr = this._arg2arr(args);\r\n            return argsArr.reduce(function(a,b){return a+'.'+b; });\r\n        };\r\n        \r\n    /* private */\r\n\r\n    /* public */\r\n    /**\r\n     * cashオブジェクトを、cashが無いときはundefinedを返却する<br>\r\n     * cashヒットした場合、cashの使用回数をカウントアップする\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            arguments 引数からキー文字列を定める\r\n     * @return {Number|undefined} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.getCash = function () {\r\n            if (arguments.length < 1) return undefined;\r\n            var args = Cash._arg2arr(arguments),\r\n                key = Cash._getKey(args);\r\n            if (key in this._cash){\r\n                var cash = this._cash[key];\r\n                cash.lastTime = new Date();\r\n                cash.count++;\r\n                return cash.data;\r\n            }else{\r\n                return undefined;\r\n            }\r\n        };\r\n    /**\r\n     * オブジェクトをcashする\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            cashVal キャッシュするオブジェクト\r\n     * @param {Object}\r\n     *            arguments 第二引数以降の、引数からキー文字列を定める\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.setCash = function () {\r\n            if (arguments.length < 2) return undefined;\r\n            var cashVal = arguments[0],\r\n                args = Cash._arg2arr(arguments).slice(1, arguments.length),\r\n                key = Cash._getKey(args);\r\n            this._cash[key] = {data: cashVal, count: 0, lastTime:new Date()};\r\n            return cashVal;\r\n        };\r\n\r\n    /**\r\n     * レンジキー(form,to)範囲内でキーマッチするcashを、cashが無いときはundefinedを返却する<br>\r\n     * キーは大小比較できる数値であることが前提\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            from 抽出するキャッシュキー最小値\r\n     * @param {Number}\r\n     *            to 抽出するキャッシュキーの最大値\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.getRangedCash = function (from, to) {\r\n            var range = this._ranges.find(function(e){\r\n                    return (e.from <= from && to <= e.to);\r\n                });\r\n            return (range !== undefined) ? this.getCash(range.from,range.to) : undefined;\r\n        };\r\n    /**\r\n     * レンジキー(from,to)指定でキャッシュする<br>\r\n     * キーは大小比較できること（通常、数値）、from-to期間内の既存のキャッシュは削除される\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            cashVal キャッシュするオブジェクト\r\n     * @param {Number}\r\n     *            from 抽出するキャッシュキー最小値\r\n     * @param {Number}\r\n     *            to 抽出するキャッシュキーの最大値\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.setRangedCash = function (cashVal, from, to) {\r\n            if (arguments.length < 3) return undefined;\r\n            // 登録キー範囲に包含される既存キャッシュを削除する\r\n            var count = 0;\r\n            this._ranges = this._ranges.filter(function(e){\r\n                    if (from <= e.from && e.to <= to){\r\n                        // 登録キャッシュ範囲内のキャッシュを削除する\r\n                        count += this._cash[e.key].count;   // 削除分のカウンタ合算\r\n                        delete this._cash[e.key];\r\n                        return false;\r\n                    }else{  // 登録キャッシュの範囲外の一覧を返却する\r\n                        return true;\r\n                    }\r\n                }, this);\r\n            // 引数をキャッシュに登録する\r\n            var key = Cash._getKey([from, to]);\r\n            this._ranges.push( {from: from, to: to, key: key} );\r\n            this.setCash(cashVal, from, to);\r\n            this._cash[key].count= count + 1;   // 再作成時はカウンタ合算値\r\n            return cashVal;\r\n        };\r\n\r\n    // newの戻り値\r\n    return Cash;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-Cash.js\n// module id = 17\n// module chunks = 0","import {VirtualResource} from './simulator.js';\r\nimport {VirtualApp} from './simulator.js';\r\nimport * as Util from '../util/util.js';\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualSystem\r\n * @classdesc 仮想システム\r\n *            <p>\r\n *            Web3層(Web-AP-DB)をシミュレートしたWebのTATログ生成する\r\n *            <p>\r\n *            Webサーバ<br>\r\n *            最大スレッド数： Apache 2.4 [MaxClients = 1024]<br>\r\n *            JBossトランザクションタイムアウト [default-timeout = 300 秒]<br>\r\n *            キュー長 ： Apache 2.4 ListenBackLog (511) + Linux\r\n *            tcp_max_syn_backlog(769=1024*0.75+1)、タイムアウトなし<br>\r\n *            APサーバ<br>\r\n *            最大スレッド数(maxThreads)<br>\r\n *            JBossトランザクションタイムアウト [default-timeout=300 秒]<br>\r\n *            DBサーバ 最大コネクション数(max_connections)\r\n * \r\n * @param {Number}\r\n *            [start = 1970/01/02 00:00:00)] シミュレート開始時刻（UNIX日付（ミリ秒））\r\n * @param {Number}\r\n *            [end = startの24時間後] シミュレート終了時刻（UNIX日付（ミリ秒））\r\n * @param {String}\r\n *            [resourcesJson] リソース指定JSONテキスト\r\n * @param {Boolean}\r\n *            [log=false] 詳細ログ出力有無\r\n * @example sim = simulator.VirtualSystem()\r\n */\r\nexport default (function() { // #53　\r\n    /** @constructor */\r\n    function VirtualSystem(start, end, resourcesJson, log){\r\n        if(!(this instanceof VirtualSystem)){\r\n            return new VirtualSystem(start, end, resourcesJson, log);\r\n        }\r\n        if (!resourcesJson) {\r\n            var jsonText =  '['\r\n                +   '{\"type\" :\"WEB\",\"thread\":1024,\"timeout\":300000, \"q\":1280, \"qWait\":0},'\r\n                +   '{\"type\" :\"AP\", \"thread\":20,  \"timeout\":300000, \"q\":1280, \"qWait\":0},'\r\n                +   '{\"type\" :\"DB\", \"thread\":2,   \"timeout\": 10000, \"q\":1000, \"qWait\":10000}'\r\n                + ']';\r\n            resourcesJson = JSON.parse(jsonText);\r\n        }\r\n        this.eTat = []; // シミュレートにより生成するTATログ出力先\r\n        var _resources = resourcesJson;\r\n        this._log = log ? log : false; // #53\r\n        this._start = +start || new Date(1970, 1, 2);   // シミュレート開始時刻\r\n        this._end = end || this._start + 24*60*60*1000; // シミュレート終了時刻（デフォルト：24時間後)\r\n        this._simulator = Util.Heap(                // イベント予約スケジュール（ヒープ）\r\n                function(obj){ return obj.getTime(); }, // プライオリティの判定\r\n                function(obj){ return obj; });  // 削除対象の判定 #61\r\n        this._now = 0; // シミュレーション時の現在時刻\r\n        // リソースを設定する\r\n        this._resources = {}\r\n        for (var i = 0; i < _resources.length; i++) {\r\n            var e = _resources[i];\r\n            e.log = e.log ? e.log : this._log; // #53\r\n            this._resources[e.type] = VirtualResource(this, // #61\r\n                    e.type, e.thread, e.timeout, e.q, e.qWait, e.log);\r\n        };\r\n        VirtualSystem.debug = this; // ★\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * 仮想クライアントをスケジューラに登録する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {String}\r\n     *            [userName = \"Default_\"] ログに出力するユーザ名\r\n     * @param {String}\r\n     *            [message = \"\"] ログの末尾に出力するデータ\r\n     * @param {Number}\r\n     *            [num = 3] 期間内に生成する仮想クライアントの数\r\n     * @param {Number}\r\n     *            [start = Util.S2D(\"1970/01/02 00:00:00\")]\r\n     *            仮想クライアント生成開始時刻（UNIX時刻の数値、ミリ秒）\r\n     * @param {Number}\r\n     *            [end = startの0.1秒後] 仮想アプリケーション強制終了時刻（UNIX時刻の数値、ミリ秒）\r\n     * @param {Object}\r\n     *            model 仮想クライアントが実行する取引モデル\r\n     */\r\n    VirtualSystem.prototype.setClients = function(userName, message, num, start, end, model) {\r\n        userName = userName || \"Default_\";\r\n        message = message || \"\";\r\n        num = (typeof(num) === \"number\") ? num : 1; // #61\r\n        start = +start || Util.S2D(\"1970/01/02 00:00:00\");\r\n        end = +end || start + 100;\r\n        // baseModelが指定されているとき、modelに展開する\r\n        if (model.baseModel){\r\n            model = VirtualSystem.getModel(\r\n                model.baseModel.holds, model.baseModel.tatMin, model.baseModel.tat,\r\n                model.sequence, model.times, model.thinkTimeMin, model.thinkTime);\r\n        }\r\n        // modelにmessageを設定する\r\n        if (typeof(model.message) === \"string\") {\r\n            model.message += message;\r\n        } else {\r\n            model.message = message;\r\n        }\r\n        // 仮想APを登録する\r\n        var checkStart = start;\r\n        var r = Util.Random((end - start) / num);\r\n        var t = start;\r\n        for (var i = 0; i < num; i++) {\r\n            // 仮想APを作成する\r\n            var vApp = VirtualApp(userName + i, model);\r\n            // 仮想APに開始時刻（指数分布）を設定し、登録する\r\n            t += Math.round(r.exponential());\r\n            this.setEvent(vApp.start(t));\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * イベントをスケジューラに登録する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Object}\r\n     *            event 仮想クライアントもしくは仮想リソースのイベント\r\n     */\r\n    VirtualSystem.prototype.setEvent = function(event) {\r\n        this._simulator.push(event);\r\n    }\r\n\r\n    /**\r\n     * スケジューラからイベントを削除する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Object}\r\n     *            event 仮想クライアントもしくは仮想リソースのイベント\r\n     */\r\n    VirtualSystem.prototype.removeEvent = function(event) {\r\n        this._simulator.del(event);\r\n    }\r\n\r\n    /**\r\n     * シミュレーションを実行する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @return {eTat} シミュレート実行結果のログ（this.eTat）\r\n     */\r\n    VirtualSystem.prototype.execute = function() {\r\n        var event, events;\r\n        // 処理対象がなくなるか、シミュレート終了時刻になるまでシミュレートする\r\n        while(0 < this._simulator.size() &&\r\n                this._simulator.top().getTime() <= this._end ) {\r\n            // 次にイベントを迎える仮想APを取り出し、「次の処理」をシミュレートする\r\n            event = this._simulator.pop();\r\n            this._now = event.getTime(); // #59\r\n            events = event.next(this);\r\n            // 「次の処理」のシミュレートに伴い発生したイベントを、スケジュールする\r\n            while (events.length) {\r\n                this._simulator.push(events.pop());\r\n            }\r\n        }\r\n        // シミュレーション終了後処理（処理中のvAppを強制終了する） #59\r\n        while(0 < this._simulator.size()){\r\n            event = this._simulator.pop();\r\n            if (event._finish) {\r\n                event._finish(this, \"N_EoS\", \"\", this._end);\r\n            }\r\n        }\r\n        // シミュレーション終了後処理（リソース開放待ちのvAppを強制終了する） #59\r\n        for (var key in this._resources){\r\n            this._resources[key]._finish(this, \"N_EoS\", \"\", this._end);\r\n        }\r\n        \r\n        return this.eTat;\r\n    };\r\n\r\n    /**\r\n     * リソースを取得する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {String}\r\n     *            [name = \"unlimited\"] 仮想リソース名\r\n     * @return {Object} 仮想リソース（登録されていないときは、新たにholdCapacity=1の仮想リソースを登録）\r\n     */\r\n    VirtualSystem.prototype.getResouce = function(name) {\r\n        if (typeof(this._resources[name]) === \"undefined\") {\r\n            this._resources[name] = VirtualResource(this, name);\r\n        }\r\n        return this._resources[name];\r\n    };\r\n\r\n    /**\r\n     * シミュレーション現在時刻（処理中のイベントの時刻）を返却する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualSystem.prototype.getTime = function() {\r\n        return this._now;\r\n    };\r\n\r\n\r\n    // Static Method\r\n    /**\r\n     * 取引モデルを取得する（ユーティリティ）\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Array}\r\n     *            [baseModel = []] 使用リソースの一覧[\"WEB\",\"AP\",\"DB\"]\r\n     * @param {Number}\r\n     *            [tat = 5] 使用リソースの平均取得時間＆平均開放時間\r\n     * @param {Number}\r\n     *            [tatMin = 2] 使用リソースの最小取得時間＆最小開放時間\r\n     * @param {Array}\r\n     *            [sequence = []] イベントシーケンス\r\n     * @param {Number}\r\n     *            [times = undefined] イベントシーケンスの繰り返し回数（未指定時:1)\r\n     * @param {Number}\r\n     *            [thinkTime= undefined] イベントシーケンス終了時に再実行する場合の平均再開時間（未指定時:500)\r\n     * @param {Number}\r\n     *            [thinkTimeMin = undefined]\r\n     *            イベントシーケンス終了時に再実行する場合の最小再開時間（未指定時:thinkTimeと同じ）\r\n     * @param {String}\r\n     *            [message = \"\"] 自動生成ログの末尾に追加する文字列\r\n     * @return {Object} 取引モデル\r\n     */\r\n    VirtualSystem.getModel = function(baseModel, tatMin, tat, sequence, times, thinkTimeMin, thinkTime, message) {\r\n        baseModel = baseModel || [];\r\n        tatMin = tatMin || 2;\r\n        tat = tat || 5;\r\n        message = message || \"\";\r\n        sequence = sequence || [\r\n                {tatMin:6,   tat:15,  note:\"Req\",     hold:\"DB\",    free:[]},\r\n                {tatMin:70,  tat:100, note:\"selectA\", hold:\"TBL_A\", free:[\"TBL_A\"]},\r\n                {tatMin:150, tat:200, note:\"updateB\", hold:\"TBL_B\", free:[]},\r\n                {tatMin:30,   tat:50,  note:\"Res\",     hold:\"\",      free:[\"TBL_B\",\"DB\"]}\r\n            ];\r\n        var model = {sequence :[], message : message}; // 戻り値\r\n        if (typeof(times) === \"number\") model.times = times;\r\n        if (typeof(thinkTimeMin) === \"number\") model.thinkTimeMin = thinkTimeMin;\r\n        if (typeof(thinkTime) === \"number\") model.thinkTime = thinkTime;\r\n        \r\n        // baseModelを返却用シーケンスに展開する\r\n        baseModel.forEach( function(e) {\r\n            model.sequence.push({hold:e, tatMin:tatMin, tat:tat, free:[]});\r\n        });\r\n        // 指定シーケンスを返却用シーケンスに追加する\r\n        model.sequence = model.sequence.concat(sequence);\r\n\r\n        // 返却用シーケンスに、holdingを追加するとともにシーケンス終了時未開放リソースを取得する\r\n        var resources = []; // #61\r\n        var holding = []; // #59\r\n        model.sequence.forEach( function(tran) { // #61\r\n            // tatMinがtatより大きいとき、tatをtatMin一定とする #59\r\n            if (tran.tat < tran.tatMin) tran.tat = tran.tatMin;\r\n            // 処理開始時にholdしているリソース一覧をholdingに登録する #59\r\n            tran.holding = [];\r\n            resources.forEach(function(r) {tran.holding.push(r)});\r\n            // 未開放リソース一覧を更新する\r\n            if (typeof(tran.hold) !== \"undefined\" && tran.hold !== \"\") {\r\n                resources.push(tran.hold);                \r\n            }\r\n            if (tran.free) {\r\n                tran.free.forEach( function(free){\r\n                    resources.some( function(r, i){\r\n                        if (r == free) {\r\n                            resources.splice(i,1);\r\n                            return true;\r\n                        }\r\n                    })    \r\n                })\r\n            }\r\n        }, this);\r\n        // シーケンス終了時未開放リソースが残っているとき、返却用シーケンスにリソース開放処理を追加する\r\n        if (0 < resources.length){\r\n            model.sequence = model.sequence.concat(\r\n                    [{hold: \"\", tatMin: tatMin * baseModel.length, tat: tat * baseModel.length,\r\n                        free: resources.reverse()}]);\r\n        }\r\n        return model;\r\n    };\r\n    \r\n    /* new */\r\n    return VirtualSystem;\r\n}());\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-VirtualSystem.js\n// module id = 18\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!./dygraph.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./dygraph.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./dygraph.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/dygraph.css\n// module id = 19\n// module chunks = 0","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * Default styles for the dygraphs charting library.\\n */\\n\\n.dygraph-legend {\\n  position: absolute;\\n  font-size: 14px;\\n  z-index: 10;\\n  width: 250px;  /* labelsDivWidth */\\n  /*\\n  dygraphs determines these based on the presence of chart labels.\\n  It might make more sense to create a wrapper div around the chart proper.\\n  top: 0px;\\n  right: 2px;\\n  */\\n  background: white;\\n  line-height: normal;\\n  text-align: left;\\n  overflow: hidden;\\n}\\n\\n/* styles for a solid line in the legend */\\n.dygraph-legend-line {\\n  display: inline-block;\\n  position: relative;\\n  bottom: .5ex;\\n  padding-left: 1em;\\n  height: 1px;\\n  border-bottom-width: 2px;\\n  border-bottom-style: solid;\\n  /* border-bottom-color is set based on the series color */\\n}\\n\\n/* styles for a dashed line in the legend, e.g. when strokePattern is set */\\n.dygraph-legend-dash {\\n  display: inline-block;\\n  position: relative;\\n  bottom: .5ex;\\n  height: 1px;\\n  border-bottom-width: 2px;\\n  border-bottom-style: solid;\\n  /* border-bottom-color is set based on the series color */\\n  /* margin-right is set based on the stroke pattern */\\n  /* padding-left is set based on the stroke pattern */\\n}\\n\\n.dygraph-roller {\\n  position: absolute;\\n  z-index: 10;\\n}\\n\\n/* This class is shared by all annotations, including those with icons */\\n.dygraph-annotation {\\n  position: absolute;\\n  z-index: 10;\\n  overflow: hidden;\\n}\\n\\n/* This class only applies to annotations without icons */\\n/* Old class name: .dygraphDefaultAnnotation */\\n.dygraph-default-annotation {\\n  border: 1px solid black;\\n  background-color: white;\\n  text-align: center;\\n}\\n\\n.dygraph-axis-label {\\n  /* position: absolute; */\\n  /* font-size: 14px; */\\n  z-index: 10;\\n  line-height: normal;\\n  overflow: hidden;\\n  color: black;  /* replaces old axisLabelColor option */\\n}\\n\\n.dygraph-axis-label-x {\\n}\\n\\n.dygraph-axis-label-y {\\n}\\n\\n.dygraph-axis-label-y2 {\\n}\\n\\n.dygraph-title {\\n  font-weight: bold;\\n  z-index: 10;\\n  text-align: center;\\n  /* font-size: based on titleHeight option */\\n}\\n\\n.dygraph-xlabel {\\n  text-align: center;\\n  /* font-size: based on xLabelHeight option */\\n}\\n\\n/* For y-axis label */\\n.dygraph-label-rotate-left {\\n  text-align: center;\\n  /* See http://caniuse.com/#feat=transforms2d */\\n  transform: rotate(90deg);\\n  -webkit-transform: rotate(90deg);\\n  -moz-transform: rotate(90deg);\\n  -o-transform: rotate(90deg);\\n  -ms-transform: rotate(90deg);\\n}\\n\\n/* For y2-axis label */\\n.dygraph-label-rotate-right {\\n  text-align: center;\\n  /* See http://caniuse.com/#feat=transforms2d */\\n  transform: rotate(-90deg);\\n  -webkit-transform: rotate(-90deg);\\n  -moz-transform: rotate(-90deg);\\n  -o-transform: rotate(-90deg);\\n  -ms-transform: rotate(-90deg);\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./libs/dygraph.css\n// module id = 20\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 21\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@CHARSET \\\"UTF-8\\\";\\r\\n/*   ****1**** ****2**** ****3**** ****4**** ****5**** ****6**** ****7***** */\\r\\n/* リセットCSS */\\r\\nhtml, body, h1, h2, h3, h4, ul, ol, dl, li, dt, dd, p, div, span, img, a, table, tr, th, td, selector{\\r\\n margin: 0; padding: 0; border: 0; font-weight: normal; font-size: 100%; vertical-align:baseline;\\r\\n -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }\\r\\narticle, header, footer, aside, figure, figcaption, nav, section { display:block; }\\r\\nbody { line-height: 1; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; }\\r\\nol, ul { list-style: none; list-style-type: none; }\\r\\n*:focus { outline: 0; }\\r\\n\\r\\n/* TAT log diver */\\r\\nbody\\t{ font-size: 12px; font-family: \\\"\\\\30E1\\\\30A4\\\\30EA\\\\30AA\\\",\\\"Meiriyo\\\",\\\"\\\\30D2\\\\30E9\\\\30AE\\\\30CE\\\\89D2\\\\30B4   ProN W3\\\",\\\"Hiragino Kaku Gothic ProN\\\",\\\"sans-serif\\\"; }\\r\\nnav \\t{ height: 36px; }\\r\\ninput\\t{ border-width: 1px; font-size: 12px; }\\r\\nselect  { background: #eee;}\\r\\n#Simulator {overflow: auto; resize: both; position: absolute; z-index: 100; background: rgba(255,255,255,0.5); }\\r\\n.statusbar\\t{ z-index: 99; visibility:visible; padding: 5px; background: #fff; }\\r\\n.statusbar > iframe { overflow: hidden; border: 0; width: 100%; }\\r\\n.lineViewer {margin: 10px 0px 2px; overflow: hidden; padding: 0px; border: 1px #cccccc dotted; }\\r\\n.hjnCode { font-family: \\\"monospace\\\",\\\"Consolas\\\", \\\"\\\\FF2D\\\\FF33\\\\30B4\\\\30B7\\\\30C3\\\\30AF\\\";}\\r\\n/* draggable box */\\r\\n.hjnDraggableBox {}\\r\\n.hjnDraggableItem:hover {background: rgba(128, 128, 128, 0.2); transition: all 0.2s; }\\r\\nfooter { position: fixed; bottom: 0%; text-align: right; font-size: smaller; }\\r\\n\\r\\n/* ハンバーガーメニュー */\\r\\n.hjnBurgerTray { position :fixed; display: inline-block; visibility: hidden; z-index: 96;\\r\\n\\ttop :0; right :0; width :305px; height:100%; padding :0 18px 0 0; background :#fff; }\\r\\n/* ハンバーガーボタン */\\r\\n.hjnCtrlBox { position: relative; float: right; cursor: pointer; z-index: 98;\\r\\n\\twidth: 40px; height: 40px; background-color: #fff; visibility: visible;\\r\\n\\tborder: 1px solid #ccc; box-shadow:\\t1px 1px 1px #ccc; border-radius: 4px; \\r\\n\\tline-height: 12px; box-sizing: border-box;\\ttransition: all 0.1s; }\\r\\n.hjnCtrlBox:hover { border: #ccc; }\\r\\n.hjnCtrlBox:active { border: 1px solid #999;  }\\r\\n.hjnBurger { display: none; }\\r\\n.hjnBurger + label span { top: 17px; height: 4px; border-radius: 2px;\\r\\n\\tposition: absolute; left: 6px; width: 69%; background-color: #888; }\\r\\n.hjnBurger + label span::before, .hjnBurger + label span::after { border-radius: 2px;\\r\\n\\tposition: absolute; width: 26px; height: 4px; background: #888;\\r\\n\\tdisplay: block; content: ''; transition: transform 0.1s; }\\r\\n.hjnBurger + label span::before { top: -8px; }\\r\\n.hjnBurger + label span::after { top: 8px; }\\r\\n.hjnBurger:checked + label span { background: transparent; }\\r\\n.hjnBurger:checked + label span::before { transform: translateY(8px) rotate(-45deg); }\\r\\n.hjnBurger:checked + label span::after { transform: translateY(-8px) rotate(45deg); }\\r\\n\\r\\n/* メニュー 全体 */\\r\\n.hjnBurgerTitle { /* ハンバーガーメニューオープン時の見出し */\\r\\n\\tposition: absolute; visibility: visible; color: #999; background:#fff; width: 100%;\\r\\n\\tpadding: 0 98px 0 15px; opacity: 0; z-index: 97; background-color: transparent;\\r\\n\\ttransform: translate3d(0, -15px, 0); transition: transform 0.1s, opacity 0.5s; }\\r\\n.hjnBurgerTitle p { word-wrap: break-word; line-height: 18px; width: 160px; }\\r\\n.hjnBurger:checked ~ .hjnBurgerTitle { transform: none;  opacity: 1; }\\r\\n.hjnBurgerWrap { position: absolute;  visibility: visible; width :100%; height :100%;\\r\\n\\tbackground: #fff; opacity: 0.9;\\ttop: 0; right: -100%; transition: right 0.1s;\\r\\n\\tpadding: 43px 0 0 0; overflow: scroll;}\\r\\n.hjnBurger:checked ~ .hjnBurgerWrap { right: 0; }\\r\\n/* Copyright表示 */\\r\\n.hjnBurgerTitle a {\\r\\n    color: #4d4e53; text-decoration: none; border-bottom: 1px dotted #afafaf; }\\r\\n/* モードボタン */\\r\\n.hjnBoxSwitch { display: none; }\\r\\n.hjnBoxSwitch + label span::before, .hjnBoxSwitch + label span::after\\r\\n\\t\\t{ display: inline-block; text-align:center; transition: all 0.1s; width: 100%}\\r\\n.hjnBoxSwitch + label span::before, .hjnBoxSwitch:checked + label span::after\\r\\n\\t\\t{ color: #ddd; }\\r\\n.hjnBoxSwitch + label span::after, .hjnBoxSwitch:checked + label span::before \\r\\n\\t\\t{ color: #888; font-weight: bold; }\\r\\n\\r\\n#hjnBoxPlaceOn + label span::before { content: \\\"Place on\\\"; }\\r\\n#hjnBoxPlaceOn + label span::after  { content: \\\"side\\\"; }\\r\\n#chartZoom + label span::before, #chartDZoom + label span::before  { content: \\\"reset zoom\\\"; }\\r\\n/* スイッチラベル */\\r\\n.hjnBoxOn { display: none; }\\r\\n.hjnBoxOn + label { text-align:center; color: #ddd; }\\r\\n.hjnBoxOn:checked + label { color: #888; font-weight: bold;}\\r\\n\\r\\n /* アコーデオンメニュー */\\r\\n.hjnAccordion { list-style-type: none; margin: 0; padding: 0; }\\r\\n.hjnMenuLv1 { position:rerative; margin: 0 0 0 10px; }\\r\\n.hjnMenuLv1 > input { display: none; }\\r\\n.hjnMenuLv1 > label::before { content: \\\"\\\"; transition: 0.1s; transform: rotate(-90deg);\\r\\n /* ▲ */border-style: solid; border-color: #aaa transparent transparent transparent; border-width: 10px 5px 0 5px;\\r\\n\\t\\tdisplay: inline-block; vertical-align: middle; margin: 10px 5px 10px 10px; }\\r\\n.hjnMenuLv1 > input:checked ~ label::before { transform: rotate(0deg); }\\r\\n\\r\\n.hjnMenuLv1 > label, .hjnMenuLv1 > a { display: block; cursor: pointer;\\r\\n\\t\\tborder-bottom: 1px solid #fff; background: #eee; transition: all 0.1s; }\\r\\n.hjnMenuLv1 > label:hover { background: rgba(0,0,0,0.2); }\\r\\n.hjnMenuLv1 > label:active { background: #999;  }\\r\\n.hjnMenuLv1 > input:checked ~ .hjnMenuLv2 { height: auto; padding: 10px; }\\r\\n\\r\\n/* 詳細メニューリスト   */\\r\\n.hjnMenuLv2 { transition: 0.1s; height: 0; overflow: hidden; padding: 0 10px; background: #ddd; }\\r\\n.hjnMenuLv2 ol { display: block; margin: 2px 0; }\\r\\n.hjnMenuLv2 label { height: 12px; }\\r\\n.hjnLabel4Input:hover,  .hjnButton4Input:hover { background: rgba(0,0,0,0.2); }\\r\\n.hjnLabel4Input:active, .hjnButton4Input:active { background: #999; }\\r\\n/* 詳細メニューリスト  ボタン */\\r\\n.hjnMenuLv2 .hjnButton4Input label, .hjnMenuLv2 label.hjnButton4Input, .hjnPlot \\r\\n\\t\\t{ display: block; padding: 8px 12px 8px 22px;}\\r\\n.hjnButton4Input { position: relative; display: block; overflow: hidden; transition: all 0.1s;\\r\\n\\t\\ttext-decoration: none; color: #000; border: outset #fff; border-radius: 14px; }\\r\\n.hjnButton4Input:active { border: inset #fff; }\\r\\n.hjnMenuLv2 li .hjnButton4Input { padding: 8px 12px 8px 22px; } /* Download用 */\\r\\n.hjnMenuLv2 .hjnButton4Input input[type=\\\"file\\\"] { display: none; } /* File Open用 */\\r\\n/* 詳細メニューリスト  文字 */\\r\\n.hjnMenuLv2 .hjnLabel4Input { display: inline-block; position: relative;\\r\\n\\t\\t border-radius: 14px; padding-left: 1em; cursor: pointer; transition: all 0.1s; }\\r\\n.hjnMenuLv2 input { height: 12px; text-align: right; border-radius: 5px; }\\r\\n.hjnMenuLv2 .hjnLabel4Input input[type=\\\"radio\\\"] { position: absolute;\\r\\n\\t\\t top: 0; bottom: 0; left: 0; margin: auto;  cursor: pointer; }\\r\\n.hjnMenuLv2 select.hjnLabel4Input  {padding-left: 0; }\\r\\n/* 詳細メニューリスト  Legend */\\r\\n.hjnMenuLv2 .legend {cursor: pointer; width:206px; height: auto;\\r\\n \\t\\tdisplay: inline-block; padding: 8px 12px 8px 22px; border-radius: 14px;}\\r\\n.hjnMenuLv2 .legend > input { display: inline; cursor: pointer; margin: auto -15px; }\\r\\n.hjnMenuLv1 > input:checked ~ .hjnMenuLv2 .legend > input { position: absolute; }\\r\\n.hjnMenuLv2 .legend:hover { font-style: oblique; } \\r\\n\\r\\n/* dygraph用設定 */\\r\\n.item.active{ background: rgba(0,0,0,0.2) !important; border: rgba(0,0,0,0.2) !important; }\\r\\n.column { display: inline-block; }\\r\\n.dygraph-annotation { color: rgba(0,0,0,0.8) !important;\\r\\n\\t\\tbackground-color: rgba(256,256,256,0.2) !important; width: 40px !important; }\\r\\n\\r\\n/* Bottom detail graph用設定 */\\r\\n#detailTimeRange { padding: 8px; }\\r\\n#chartPlots div { float: left; padding: 2px 0; top: 5vh; }\\r\\n.hjnPlot { margin: 2px 0; width:250px; }\\r\\n.hjnPlot > label { position:relative; margin: 2px 0px; background-color: #eee;\\r\\n\\t\\tpadding: 0px 5px; cursor: pointer; border-radius: 5px; }\\r\\n.hjnPlot > input[type=checkbox] { /* 削除アイコン */\\r\\n\\t\\tvisibility: hidden; z-index: 98; float: left; margin: -2px 0 0 0;\\r\\n\\t\\tbackground-color: #fff; box-shadow: 1px 1px 1px #ccc; height: 16px; width: 16px; }\\r\\n.hjnPlot > input[type=checkbox] + label{ /* 削除アイコンの横棒*/\\r\\n\\t\\tvisibility: hidden; z-index: 97; float: left; left: -13px; top: 2px;\\r\\n\\t\\tbackground: #aaa; height: 3px; width: 9px; padding: 0; border-radius: 2px; }\\r\\n.hjnPlot:hover > input[type=checkbox], .hjnPlot:hover > input[type=checkbox] + label\\r\\n\\t\\t{ visibility: visible; cursor: pointer; }\\r\\n.hjnPlot > input[type=radio] { display:none; }\\r\\n.hjnPlot > input[type=radio]:checked + label { background-color: #ccc; }\\r\\n.hjnPlot:hover { font-weight: bold; }\\r\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./src/tatLogDiver/tatLogDiver.css\n// module id = 22\n// module chunks = 0","import {Logger} from './util.js';\r\n\r\n/**\r\n * @memberOf Util\r\n * @class TouchPanel\r\n * @classdesc タッチパネル用ツール\r\n *            <p>\r\n *            参考 {@link https://code.i-harness.com/ja/q/4f2389}\r\n * \r\n * @param {Number}\r\n *            [average=0.5] 平均値\r\n * @example var r = HJN_util.TouchPanel(10), val = r.exponential();\r\n */\r\nexport default (function() { // #56\r\n    /** @constructor */\r\n    function TouchPanel(average){\r\n        if(!(this instanceof TouchPanel)) return new TouchPanel(average);\r\n        this._average = average || 0.5;\r\n    }\r\n    /** @private */\r\n\r\n    // public\r\n    /**\r\n     * タッチデバイスか判定する\r\n     * <p>\r\n     * クラスロード後、touchstart と mouosemove の初回のイベントがどちらが先に発生したかにより判定する 参考\r\n     * {@link https://lab.syncer.jp/Web/JavaScript/Snippet/44/}\r\n     * \r\n     * @memberof TouchPanel\r\n     * @return {String} 先に検出したイベントがマウス移動のとき false、以外のときtrue\r\n     * \r\n     */\r\n    TouchPanel.isTouchableDevice = function() {\r\n        Logger.ShowText([TouchPanel._deviceType]);\r\n        return  (TouchPanel._deviceType === \"MOUSE\") ? false : true; // #78\r\n    }\r\n\r\n    // タッチデバイスか判定する（クラス定数）\r\n    TouchPanel._deviceType = \"SHIMULATED_TOUCH\";\r\n    function detectDeviceType(event) {\r\n        TouchPanel._deviceType = event.changedTouches ? \"TOUCH\" : \"MOUSE\" ;\r\n        document.removeEventListener(\"touchstart\", detectDeviceType) ;\r\n        document.removeEventListener(\"mousemove\", detectDeviceType) ;\r\n    }\r\n    document.addEventListener(\"touchstart\", detectDeviceType) ;\r\n    document.addEventListener(\"mousemove\", detectDeviceType) ;\r\n\r\n    /**\r\n     * タッチパネル操作をマウス操作に転送する\r\n     * <p>\r\n     * 参考 {@link https://code.i-harness.com/ja/q/4f2389}\r\n     * \r\n     * @memberof Util.TouchPanel\r\n     * @param {Object}\r\n     *            element 対象dom要素\r\n     * @param {Boolean}\r\n     *            [isStopTouch=false] 元のタッチのデフォルトイベントを消すか（個別に登録されているリスナーには無関係）\r\n     * \r\n     * @example HJN_util.DispatchEventTouchToMouse();\r\n     */\r\n    TouchPanel.DispatchEventTouchToMouse = function(element, isStopTouch) { // #22\r\n        element.addEventListener(\"touchstart\", touchHandler, true);\r\n        element.addEventListener(\"touchmove\", touchHandler, true);\r\n        element.addEventListener(\"touchend\", touchHandler, true);\r\n        element.addEventListener(\"touchcancel\", touchHandler, true);\r\n        return;\r\n\r\n        function touchHandler(ev) {\r\n            var bIgnoreChilds = false;\r\n            if( !window.__TOUCH_TYPES ) {\r\n                window.__TOUCH_TYPES  = { touchstart:'mousedown', touchmove:'mousemove', touchend:'mouseup' };\r\n                window.__TOUCH_INPUTS = { INPUT: 1, TEXTAREA: 1, SELECT: 1, OPTION: 1,\r\n                                         'input':1,'textarea':1,'select':1,'option':1 };\r\n            }\r\n            var bSame = (ev.target == this);\r\n            if (bIgnoreChilds && !bSame) { return; }\r\n            // Get if object is already tested or input type\r\n            var b = (!bSame && ev.target.__ajqmeclk);\r\n            // allow multi-touch gestures to work\r\n            if (b === true || !ev.touches || ev.touches.length > 1 || !window.__TOUCH_TYPES[ev.type]) { return; }\r\n\r\n            var oEv = (!bSame && typeof b != 'boolean') ? ev.target.getAttribute('events') : false;\r\n            var b = (!bSame)\r\n                  ? (ev.target.__ajqmeclk = oEv\r\n                      ? (oEv['click'] || oEv['mousedown'] || oEv['mouseup'] || oEv['mousemove']) \r\n                      : false )\r\n                  :false;\r\n            // allow default clicks to work (and on inputs)\r\n            if (b || window.__TOUCH_INPUTS[ev.target.tagName]) { return; } \r\n\r\n            var touch = ev.changedTouches[0];\r\n            var tmpClientX = touch.clientX;\r\n            var tmpClientY = touch.clientY;\r\n            // クリックに変換するタップ誤差範囲\r\n            var CLICK_MARGIN = 20; // px\r\n            var CLICK_DELAY = 1000; // ms\r\n\r\n            // 前回touchstart時の座標と時刻が一定範囲内の時、dygraphがクリックと判定するよう補正する\r\n            if ((ev.type === \"touchstart\" || ev.type === \"touchend\") &&\r\n                    this.startTouch &&\r\n                    Math.abs(this.startTouch.x - touch.clientX) < CLICK_MARGIN && // タッチ補正幅(px)\r\n                    Math.abs(this.startTouch.y - touch.clientY) < CLICK_MARGIN &&\r\n                    +new Date() - this.startTouch.t < CLICK_DELAY) { // タッチ時間(ms)\r\n                // 位置補正\r\n                tmpClientX = this.startTouch.x;\r\n                tmpClientY = this.startTouch.y;\r\n            } else if (ev.type === \"touchstart\"){\r\n                // touchstart時の座標と時刻を退避する\r\n                this.startTouch = {x: touch.clientX, y: touch.clientY, t: +new Date()};\r\n            } else if (ev.type === \"touchend\") {  \r\n                // touchstart時の座標と時刻を初期化する\r\n                this.startTouch = {};\r\n            }\r\n            // マウスイベントを発生させる\r\n            var newEvent = document.createEvent(\"MouseEvent\");\r\n            newEvent.initMouseEvent(\r\n                window.__TOUCH_TYPES[ev.type],    // type\r\n                true,             // bubbles\r\n                true,             // cancelable\r\n                window,           // view\r\n                1,                // detail\r\n                touch.screenX,    // screenX スクリーンサイズ\r\n                touch.screenY,    // screenY\r\n                tmpClientX,       // clientX タッチ座標\r\n                tmpClientY,       // clientY\r\n                false,            // ctrlKey\r\n                false,            // altKey\r\n                false,            // shiftKey\r\n                false,            // metaKey\r\n                0,                // button\r\n                null              // relatedTarget\r\n              );\r\n            touch.target.dispatchEvent(newEvent);\r\n\r\n            // タッチイベントを止める #22\r\n            if(isStopTouch) {\r\n                ev.stopImmediatePropagation();\r\n                ev.stopPropagation();\r\n                ev.preventDefault();\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n\r\n    /* new */\r\n    return TouchPanel;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-TouchPanel.js\n// module id = 23\n// module chunks = 0","/**\r\n * 日時(Date)から、ローカル時刻に基づく、指定フォーマットの文字列を取得する\r\n * \r\n * @memberOf Util\r\n * @param {Date}\r\n *            dt Date型（内部実装はミリ秒単位）\r\n * @param {String}\r\n *            str フォーマット yyyy-MM-dd hh:mm:ss.000 （戻り値で上書きされる）\r\n * @return {String} str 編集後文字列\r\n */\r\nexport var DateToString = function() {\r\n    var dt = arguments[0],  // arg0\r\n        str = arguments[1]; // arg1\r\n    // if (typeof(dt) === \"number\") dt = new Date(dt);\r\n    str = str.replace(/yyyy/, dt.getFullYear() );\r\n    str = str.replace(/MM/, ('0' + (dt.getMonth() + 1) ).slice(-2) );\r\n    str = str.replace(/dd/, ('0' + dt.getDate()).slice(-2) );\r\n    str = str.replace(/hh/, ('0' + dt.getHours()).slice(-2) );\r\n    str = str.replace(/mm/, ('0' + dt.getMinutes()).slice(-2) );\r\n    str = str.replace(/ss/, ('0' + dt.getSeconds()).slice(-2) );\r\n    str = str.replace(/000/,('00' + dt.getMilliseconds()).slice(-3) ); // #92\r\n    // str = str.replace(/000/,('00' + Math.floor(dt % 1000)).slice(-3) ); #60\r\n    return str;\r\n};\r\n\r\n/**\r\n * 日時文字列を指定フォーマットでパースして数値(ミリ秒単位）を取得する\r\n * \r\n * @memberOf Util\r\n * @param {String}\r\n *            str\r\n * @param {Object|String}\r\n *            [conf={YYYY: 0, MM: 5, DD: 8, hh: 11, mm: 14, ss: 17, p000: 20}]\r\n *            Object指定のとき：年月日時分秒ミリ秒の先頭位置を示す構造体オブジェクト<br>\r\n *            String指定とき：フォーマットを示す文字列<br>\r\n *            デフォルト値は、\"YYYY/MM/DD hh:mm:ss.000\" 相当\r\n * @return {Number} timeNum 日時（１ミリ秒を１とする数値、エラーのときNumber.NaN）\r\n */\r\nexport var S2D = function(str, conf){ // #34\r\n    if(!str) return Number.NaN;\r\n\r\n    if(typeof(conf) === \"object\"){ // #92\r\n        // confが\"object\"のとき、指定された構造体オブジェクトの条件でパースする（最も高速な処理）\r\n        return parse(str, conf);\r\n    } else if (typeof(conf) === \"string\") {\r\n        // confが\"String\"のとき、指定された文字列フォーマットから構造体オブジェクトを作成し、パースする（準高速処理）\r\n        var config = {  // YYYY/MM/DD hh:mm:dd.ss.000 #41\r\n                YYYY: conf.indexOf(\"YYYY\"),\r\n                MM: conf.indexOf(\"MM\"),\r\n                DD: conf.indexOf(\"DD\"),\r\n                hh: conf.indexOf(\"hh\"),\r\n                mm: conf.indexOf(\"mm\"),\r\n                ss: conf.indexOf(\"ss\"),\r\n                p000: conf.indexOf(\"0\")}; // #92\r\n        return parse(str, config);\r\n    } else {\r\n        // confが指定されていないとき、デフォルト条件でパースする（汎用処理）\r\n        // デフォルトフォーマット：\"YYYY/MM/DD hh:mm:dd.ss.000\" #42\r\n        var config = {YYYY: 0, MM: 5, DD: 8, hh: 11, mm: 14, ss: 17, p000: 20};\r\n        return parse(str, config);\r\n    }\r\n\r\n    // 内部関数：構造体オブジェクトで指定された条件でパースする\r\n    function parse(str, conf){\r\n        var y   = (0 <= conf.YYYY) ? parseInt( str.substr( conf.YYYY, 4), 10) : 1970,\r\n                m   = (0 <= conf.MM)   ? parseInt( str.substr( conf.MM, 2), 10) - 1 : 0, // デフォルト1月\r\n                // 1970/1/1だと時差でマイナスになることがあるので日付のデフォルトは2日\r\n                d   = (0 <= conf.DD)   ? parseInt( str.substr( conf.DD, 2), 10) : 2,\r\n                h   = (0 <= conf.hh)   ? parseInt( str.substr( conf.hh, 2), 10) : 0,\r\n                min = (0 <= conf.mm)   ? parseInt( str.substr( conf.mm, 2), 10) : 0,\r\n                sec = (0 <= conf.ss)   ? parseInt( str.substr( conf.ss, 2), 10) : 0,\r\n                // ミリ秒以下を指定すると丸め誤差が生じるため、秒以下のミリ秒は個別に加算\r\n                p   = (0 <= conf.p000)  \r\n                    ? (\"0.\" + str.substr( conf.p000).match(/[0-9]*/)[0]) * 1000.0 \r\n                    : 0;\r\n        return +(new Date( y, m, d, h, min, sec )) + p;  // #14\r\n    }\r\n};\r\n\r\n/**\r\n * 日時(ミリ秒：Ｘ軸用）から、時差補正のない、指定フォーマットの文字列を取得する\r\n * \r\n * @memberOf Util\r\n * @param {Number|Date}\r\n *            ds 時刻をUNIX経過時間（ミリ秒）で表した数値、もしくはDate(日付）\r\n * @param {String}\r\n *            [str=自動] フォーマット yyyy-MM-dd hh:mm:ss.000 （戻り値で上書きされる）<br>\r\n *            自動のとき 日数+ hh:mm:ss.000 表示単位に至らない単位は表示しない、ミリ秒は分単位以下の時表示<br>\r\n *            例： 日数表示：\"1 02:03:04\",時表示\"02:03:04\" 分表示\"0:03:04.567\" 秒表示\"04.567\"\r\n * @param {Boolean}\r\n *            [isLocal=false] trueのとき時差補正をしない\r\n * @return {String} str 編集後文字列\r\n */\r\nexport var D2S = function(ds, str, isLocal){ // #60\r\n    var minus = \"\";\r\n    var ret = \"\";\r\n    if (ds < 0) {\r\n        minus = \"-\";\r\n        ds = -1 * ds;\r\n    }\r\n    var datetime = new Date(ds);\r\n    if (!isLocal) { // #60\r\n        datetime = new Date(+datetime + 60000 * datetime.getTimezoneOffset()); // 環境タイムゾーンの補正\r\n    }\r\n    if(str){ // フォーマット指定があるとき #93\r\n        ret = DateToString(datetime, str);\r\n    } else if (ds < 1000) { // 自動で1秒(1000)未満のとき\r\n        ret = DateToString(datetime, \"0.000\"); \r\n    } else if (ds < 60000) { // 自動で1分(1*60*1000)未満のとき\r\n        ret = DateToString(datetime, \"ss.000\").replace(/^0+/,\"\"); // #92\r\n    } else if (ds < 3600000) { // 自動で1分以上、1時間(1*60*60*1000)未満のとき\r\n        ret = \"0:\" + DateToString(datetime, \"mm:ss.000\").replace(/^0+/,\"\"); // #92\r\n    } else if (ds < 86400000) { // 自動で1時間以上、1日(1*24*60*60*1000)未満のとき\r\n        ret = DateToString(datetime, \"hh:mm:ss\").replace(/^0+/,\"\");\r\n    } else { // 自動で1日以上のとき\r\n        ret = Math.floor(ds / 86400000) + \" \";\r\n        ret += DateToString(datetime, \"hh:mm:ss\");\r\n    }\r\n    return minus + ret;\r\n};\r\n\r\n/**\r\n * 数値(Ｙ軸用）から、誤差のない表示用文字列を取得する<br>\r\n * （hover、legendなどでY軸の値を使うときに使用する）\r\n * \r\n * @memberOf Util\r\n * @param {Number|Date}\r\n *            y 時刻をUNIX経過時間（ミリ秒）で表した数値、もしくはDate(日付）\r\n * @return {String} str 編集後文字列\r\n *         {@linkhttps://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat}\r\n */\r\nexport var N2S = function(y){\r\n    return Intl.NumberFormat().format(y); // #96\r\n};\r\n\r\n/**\r\n * 文字列を数値に変換する\r\n * \r\n * @memberOf Util\r\n * @param {String|Number}\r\n *            [str = sub] 計算式（日時分秒ミリ秒(d,h,mim,sec,ms)の文字は、ミリ秒に変換する）\r\n * @param {String|Number}\r\n *            [sub] 第一引数が指定されていない(undefined)ときの代用\r\n * @return {Number} n eval(str||sub)で取得した数値\r\n * \r\n */\r\nexport var S2N = function(str, sub){ // #53\r\n    var s = (typeof(str) !== \"undefined\") ? str : sub;\r\n    var h = 3600000; // 1時間（ミリ秒）\r\n    var min = 60000; // 1分（ミリ秒）\r\n    var sec =  1000; // 1秒（ミリ秒）\r\n    var ms =      1; // 1ミリ秒\r\n\r\n    return eval(s);\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-string.js\n// module id = 24\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class Random\r\n * @classdesc Random 乱数取得\r\n *            <p>\r\n *            ある事象の単位時間あたりの発生回数がポアソン分布, その発生間隔が指数分布に従う<br>\r\n *            M/M/1モデルは、到着がポアソン過程となり、(したがって到着間隔は指数分布に従う)、サービス時間が指数分布に従う\r\n *            <p>\r\n *            参考 {@link http://www.ishikawa-lab.com/montecarlo/4shou.html}\r\n * \r\n * @param {Number}\r\n *            [average=0.5] 平均値\r\n * @example var r = HJN_util.Random(10), val = r.exponential();\r\n */\r\nexport default (function() { // #56\r\n    /** @constructor */\r\n    function Random(average){\r\n        if(!(this instanceof Random)) return new Random(average);\r\n        this._average = average || 0.5;\r\n    }\r\n\r\n    /** @private */\r\n\r\n    // public\r\n    /**\r\n     * 一様分布となる乱数を返却する\r\n     *\r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.uniform = function(average) {\r\n        average = average || this._average;\r\n        return  2.0 * average * Math.random();\r\n    };\r\n\r\n    /**\r\n     * 指数分布となる乱数を返却する(lambda = 1/average)\r\n     *\r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値=1/λ、分散=1/(λ^2)<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.exponential = function(average) {\r\n        average = average || this._average;\r\n        return (-1.0 * average) * Math.log(1.0 - Math.random());\r\n    };\r\n    \r\n    /**\r\n     * ポアソン分布となる乱数を返却する(lambda = average)\r\n     * \r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値=分散=λ<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.poisson = function(average) {\r\n        var lambda = average || this._average;\r\n        var xp = Math.random();\r\n        var k = 0;\r\n        while (xp >= Math.exp(-lambda)) {\r\n            xp = xp * Math.random();\r\n            k = k + 1;\r\n        }\r\n        return (k);\r\n    };\r\n    \r\n    /* new */\r\n    return Random;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-Random.js\n// module id = 25\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class addEventListener\r\n * \r\n * 1つのイベントターゲットにイベントリスナーを1つ登録する\r\n * \r\n * @param {dom}\r\n *            element DOM要素、document.getElementById(\"xx\");などで取得\r\n * @param {string}\r\n *            [type=\"click\"] イベントの種類\r\n *            {@link https://developer.mozilla.org/en-US/docs/Web/Events}\r\n * @param {function}\r\n *            func 実行する関数\r\n */\r\nexport default function(element, type, func) { // #74\r\n    type = type || \"click\";\r\n    if (element.addEventListener) {\r\n        element.addEventListener(type, func, false);\r\n    } else if (element.attachEvent) {\r\n        element.attachEvent(\"on\" + type, func); \r\n    } else {\r\n        console.log(\"unable addEventListner %o\", element);\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-addEventListener.js\n// module id = 26\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class setZeroTimeout\r\n * 非同期化\r\n * \r\n * @param {function}\r\n *            global 非同期化して実行する関数\r\n *            <p>\r\n *            参考 {@link https://jsfiddle.net/kou/j73tLum4/8/}\r\n *            {@link https://gist.github.com/mathiasbynens/579895}\r\n *            {@link http://dbaron.org/log/20100309-faster-timeouts}\r\n */\r\nexport default (function(global) {\r\n    var timeouts = [], \r\n        messageName = \"zero-timeout-message\";\r\n    function handleMessage(event) {\r\n        if (event.source === global && event.data === messageName) {\r\n            if (event.stopPropagation)  event.stopPropagation();\r\n            if (timeouts.length) timeouts.shift()();\r\n        }\r\n    }\r\n    if (global.postMessage) {\r\n        if (global.addEventListener) {\r\n            global.addEventListener(\"message\", handleMessage, true); \r\n        }else if (global.attachEvent) {\r\n            global.attachEvent(\"onmessage\", handleMessage); \r\n        }\r\n        return function (fn) { timeouts.push(fn); global.postMessage(messageName, \"*\"); };\r\n    } \r\n    else {\r\n        return function (fn) { setTimeout(fn, 0); }; \r\n    }\r\n}(window));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-setZeroTimeout.js\n// module id = 27\n// module chunks = 0","import {D2S} from './util.js';\r\n\r\n/**\r\n * @memberOf Util\r\n * @class Logger\r\n * @classdesc ロガー\r\n *            <p>\r\n *            モードに応じたログを出力する。画面ログ表示領域、コンソールログへの出力に対応\r\n * \r\n * @param {String}\r\n *            [mode=0] ログ出力モード\r\n */\r\nexport default (function() { // #27\r\n    /** @static */\r\n    Logger.prototype = {\r\n            _logText: [],\r\n            _timestamp : new Date(),\r\n            _logtime : new Date()\r\n        };\r\n    /** @constructor */\r\n    function Logger(mode){\r\n        if(!(this instanceof Logger)) return new Logger(mode);\r\n        this._mode = mode || 0;\r\n        // getKeyによりIndex作成関数を設定する\r\n    }\r\n    /**\r\n     * 一定時間（１分）経過後、最初に本メソッドが呼ばれたときのみログ出力する（ループ用）\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {Number}\r\n     *            i 参考番号<br>\r\n     *            経過時間内のループ回数などの表示に使用することを想定\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     */\r\n    Logger.ByInterval = function(i, text) {\r\n        var ts = new Date(),\r\n            freq = 60000;   // 1分毎\r\n        if (freq < ts - Logger._logtime){\r\n            var t = D2S(ts, \"hh:mm:ss.000\"); // #60 #92\r\n            console.log(t + \"[\" + i + \"]~~~~\" + text);\r\n            Logger._logtime = ts;\r\n        }\r\n    };\r\n    /**\r\n     * ログ出力： ログテキストおよびタイムスタンプを初期化する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     * @param {String}\r\n     *            [type] ログ区分（\"calc\"：計算用ログ、\"msg\"：メッセージのみ（タイムスタンプなし））\r\n     */\r\n    Logger.ShowLogTextInit=function(text, type) {\r\n        Logger._timestamp = new Date();\r\n        Logger._logText = [];\r\n        if(text) Logger.ShowLogText(text, type);\r\n    };\r\n    /**\r\n     * ログ出力： タイムスタンプを初期化する\r\n     * \r\n     * @memberof Util.Logger\r\n     */\r\n    Logger.ResetTimestamp=function() {\r\n        Logger._timestamp = new Date();\r\n    };\r\n    /**\r\n     * ログ出力： ログテキストをテキストアレイに追記し、表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     * @param {String}\r\n     *            [type] ログ区分（\"calc\"：計算用ログ、\"msg\"：メッセージのみ（タイムスタンプなし））\r\n     * @param {Boolean}\r\n     *            [isSameline=false] 直前のログと同一ラインにするか\r\n     */\r\n    Logger.ShowLogText=function(text, type, isSameline) {\r\n        if (type === \"calc\") return; // 集計時評価用ログ出力抑止\r\n        // \"msg\"指定のときは経過時間を取らずに、ログのみ出力する\r\n        if (type !== \"msg\"){\r\n            // 処理時間情報を追加する\r\n            var lastTimestamp = Logger._timestamp;\r\n            Logger._timestamp = new Date();\r\n            text = (Math.round( Logger._timestamp - lastTimestamp ) / 1000.0)\r\n                    + \"s \" + text;\r\n            // 数値のカンマ編集（小数部もカンマが入る）\r\n            text = text.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n        }\r\n        if (isSameline){\r\n            var last = Logger._logText.length - 1;\r\n            Logger._logText[last] += text;\r\n        } else {\r\n            Logger._logText.push(text);\r\n        }\r\n        Logger.ShowText(Logger._logText);\r\n        if(true) console.log(D2S(Logger._timestamp, \"hh:mm:ss.000     \") + text); // #60 #92\r\n    };\r\n    /**\r\n     * 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            textArray 出力するログ（配列１行がログ１件）\r\n     */\r\n    Logger.ShowText=function(textArray) {\r\n        var iHtmlBody = \"\";\r\n        for (var i = textArray.length - 1; 0 <= i; i--){\r\n            iHtmlBody += textArray[i] + \"<BR>\"; \r\n        }\r\n        Logger.ShowIHtmlBody('fileInfo',iHtmlBody);\r\n    };\r\n    /**\r\n     * 第一引数のID名のiframeに、第二引数のログ（HTML化）を表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            elementId iframeのID名\r\n     * @param {String}\r\n     *            iHtmlBody ログ（HTML化）\r\n     */\r\n    Logger.ShowIHtmlBody=function(elementId, iHtmlBody){\r\n        var body = document.createElement('body');\r\n        body.innerHTML = \"\"\r\n            + \"<style>body{font-size: x-small; margin: 0; }</style>\"\r\n            + \"<body id='iHtmlBody'>\" + iHtmlBody + \"</body>\";\r\n        var iframe = document.getElementById(elementId);\r\n        iframe.contentDocument.body = body;\r\n    };\r\n    \r\n    // newの戻り値\r\n    return Logger;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-Logger.js\n// module id = 28\n// module chunks = 0","/**\r\n * 指定されたelementIDのテキストをクリップボードにコピーする<br>\r\n * 一時的にdocument.bodyの下にコピー処理用要素を作成する<br>\r\n * スマフォ等で書き込み可能なtextareaにフォーカスが移らないよう一時的にreadonlyにする\r\n *\r\n * @memberof Util\r\n * @param {String}\r\n *            elementID textareaのID名\r\n */\r\nexport default function copyToClipboard(elementId) { // #61\r\n    // コピー元要素を取得する\r\n    var el = document.getElementById(elementId);\r\n    // ワーク領域を作成する\r\n    var input = document.createElement('textarea');\r\n    input.setAttribute('id', 'copyinput');\r\n    document.body.appendChild(input);\r\n    // クリップボードにコピーする\r\n    input.value = (el.innerText === \"\") ? el.value : el.innerText;\r\n    copy2Clipboard(input); // 内部関数\r\n    // ワーク領域を削除する\r\n    document.body.removeChild(input);\r\n}\r\n\r\n/*\r\n * textareaをクリップボードにコピーする<br>\r\n * iOSに対応したtextareaのselect機能 #78\r\n * {@link https://marmooo.blogspot.jp/2018/02/javascript.html}\r\n */\r\nfunction copy2Clipboard(el){\r\n    // handle iOS as a special case\r\n    if (navigator.userAgent.match(/ipad|ipod|iphone/i)) {\r\n        // save current contentEditable/readOnly status\r\n        var editable = el.contentEditable;\r\n        var readOnly = el.readOnly;\r\n        // convert to editable with readonly to stop iOS keyboard opening\r\n        el.contentEditable = true;\r\n        el.readOnly = true;\r\n        // create a selectable range\r\n        var range = document.createRange();\r\n        range.selectNodeContents(el);\r\n        // select the range\r\n        var selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        el.setSelectionRange(0, 999999);\r\n        // restore contentEditable/readOnly to original state\r\n        el.contentEditable = editable;\r\n        el.readOnly = readOnly;\r\n    }\r\n    else {\r\n        el.select();\r\n    }\r\n    // execute copy command\r\n    document.execCommand('copy');\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-copyToClipboard.js\n// module id = 29\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class binarySearch\r\n * @classdesc 配列二分木検索\r\n * \r\n * @param {Number}\r\n *            val 検索する値\r\n * @param {Array}\r\n *            arr 検索対象の配列\r\n * @param {Function}\r\n *            [func=function(val){return val.valueOf();}] 配列要素に対して、値を取得する関数\r\n * @param {Index}\r\n *            [low=0] 配列の検査範囲の下限\r\n * @param {Index}\r\n *            [high=arr.length-1] 配列の下限検査範囲の上限\r\n * @param {Boolean}\r\n *            [isEqual=false] 完全一致しないときのリターン値：trueのとき-1、falseのとき値との差が最も少ない位置\r\n * @example i=Util.binarySearch(x,arrXY,function(e){return e.x;});\r\n */\r\nexport default function (val, arr, func, low, high, isEqual) {\r\n    func = func || function(val){ return val.valueOf(); };\r\n    low = low || 0;\r\n    if (!arr) return -1;\r\n    high = high || arr.length - 1;\r\n    isEqual = isEqual || false;\r\n    var middle,\r\n        valMiddle;\r\n    while( low <= high ){\r\n        middle = Math.floor(low + high) / 2 | 0;\r\n        valMiddle = func(arr[middle]);\r\n        if(valMiddle === val) return middle;\r\n        else if(val < valMiddle) high = middle - 1;\r\n        else low = middle + 1;\r\n    }\r\n    // 値が完全一致する要素がなかった場合の戻り値を編集する\r\n    if (isEqual){\r\n        return -1;  // 完全一致指定のとき(-1)をリターンする\r\n    } else {        // 完全一致指定でないとき、値との差が最も少ない位置をリターンする #46\r\n        // low,middle,high を補正する\r\n        low = Math.min(Math.max(0, low), arr.length - 1);\r\n        high = Math.max(0, Math.min(high, arr.length - 1));\r\n        middle = Math.max(low, Math.min(middle, high));\r\n        if(high < low){\r\n            var tmp = high;\r\n            high= low;\r\n            low = tmp;\r\n        }\r\n        // low,middle,high のうち、値との差が最も少ない位置をリターンする\r\n        if(func(arr[middle]) < val){\r\n            if (val - func(arr[middle]) < func(arr[high]) - val) {\r\n                return middle;\r\n            } else {\r\n                return high;\r\n            }\r\n        }else{\r\n            if (func(arr[high]) <= val && val < func(arr[middle])){\r\n                return high;\r\n            } else if (val - func(arr[low]) < func(arr[middle]) - val){\r\n                return low;\r\n            } else {\r\n                return middle;\r\n            }\r\n        }\r\n        return -1;  // 指定範囲外\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-binarySearch.js\n// module id = 30\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class Heap\r\n * @classdesc Heap ヒープ(二分ヒープ)\r\n *            <p>\r\n *            最小値(最大値)を効率よく取り出すことができるデータ構造\r\n *            <p>\r\n *            参考 {@link http://d.hatena.ne.jp/otaks/20121220/1355993039}\r\n * \r\n * @param {Function}\r\n *            [func=function(obj){ return +obj; }]\r\n *            pushで登録するオブジェクトからヒープの大小比較判定値を取り出す関数\r\n * @param {Function}\r\n *            [delFunc=function(obj){ return obj; }] 削除対象ノードを特定する関数<br>\r\n *            「delの引数オブジェクト === delFunc(heapのノードのオブジェクト)」 で判定する\r\n * \r\n * @example h = HJN_util.Heap( function(obj){ return +obj; } );<br>\r\n *          h.push(\"12.34\") // データを登録する ;<br>\r\n *          h.push(0.12) // ;<br>\r\n *          h.pop() // => 0.12 最小値のオブジェクトを取り出す ;<br>\r\n *          h.pop() // => \"12.34\" ;<br>\r\n *          h.top() // =>undefined 最小値のオブジェクト ;<br>\r\n *          h.size() // =>0 登録オブジェクト数\r\n */\r\nexport default (function() { // #55\r\n    /** @constructor */\r\n    function Heap(func, delFunc){ \r\n        if(!(this instanceof Heap)) return new Heap(func, delFunc);\r\n\r\n        this._func = (typeof(func) === \"function\")\r\n                ? func\r\n                : function(node){\r\n                    if (typeof(node.val) === \"undefined\") { return node }\r\n                    else { return node.val}; \r\n                  };\r\n        this._delFunc = (typeof(delFunc) === \"function\")\r\n                ? delFunc\r\n                : function(node){\r\n                    if(typeof(node.obj) === \"undefined\"){ return node }\r\n                    else { return node.obj};\r\n                  };\r\n        this._heap = []; // Heap構造体（大小比較数値用）\r\n    }\r\n\r\n    //\r\n    /**\r\n     * upheap：root方向へheapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     */\r\n    Heap.prototype._upHeap = function(k) {\r\n        // 指定位置のオブジェクトとその値の控えを取る\r\n        var obj = this._heap[k];\r\n        var val = this._func(obj);\r\n        while( 0 < k ) {\r\n            // 親ノードの配列位置を求める\r\n            var p = Math.floor( (k - 1) / 2 );\r\n            // 逆転していなければ処理終了\r\n            if( this._func(this._heap[p]) <= val ) break;\r\n            // 親ノードと処理対象を入れ替える\r\n            this._heap[k] = this._heap[p];\r\n            this._heap[p] = obj;\r\n            k = p;\r\n        }\r\n    };\r\n    /**\r\n     * downheap：reaf方向へheapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     */\r\n    Heap.prototype._downHeap = function(k) {\r\n        // 指定位置のオブジェクトとその値を控えを取る\r\n        var obj = this._heap[k];\r\n        var val = this._func(obj);\r\n        var size = this._heap.length;\r\n        // 子ノードが無くなるまで繰り返す\r\n        while( k * 2 + 1 < size) {\r\n            var a = k * 2 + 1;  // 子ノード（左）\r\n            var b = a + 1;      // 子ノード（右）\r\n            // aが大小比較対象先となる小さい子ノードを指すようにする\r\n            if( b < size && this._func(this._heap[a]) > this._func(this._heap[b]) ) a = b;\r\n            // 逆転していなければ処理終了\r\n            if( val < this._func(this._heap[a]) ) break;\r\n            // 子ノード（比較対象）と処理対象を入れ替える\r\n            this._heap[k] = this._heap[a];\r\n            this._heap[a] = obj;\r\n            k = a;\r\n        }\r\n    };\r\n    /**\r\n     * _heapのk番目を削除し、_heapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     * @return {object|undefined} 削除したオブジェクト（削除対象が無いとき undefined）\r\n     */\r\n    Heap.prototype._del = function(k) {\r\n        if (this._heap.length <= k) return undefined; // ヒープ外を指定したとき\r\n\r\n        var ret = this._heap[k]; // 削除したオブジェクト\r\n        var obj = this._heap.pop(); // 末尾ノードを取り出す\r\n        var size = this._heap.length;\r\n        if (k === size) return ret; // 末尾ノードを削除したとき再構築不要\r\n\r\n        this._heap[k] = obj; // 末尾ノードを指定位置に移動する\r\n        if (size === 1) return ret; // ヒープが１個のとき、再構築不要\r\n\r\n        // upHeapの判定\r\n        var val = this._func(obj); // 末尾ノードにあったオブジェクトの値\r\n        var p = Math.floor( (k - 1) / 2 );\r\n        if (0 < k && val < this._func(this._heap[p])) {\r\n            // 親ノードより小さいときupheapする\r\n            this._upHeap(k);\r\n        } else {\r\n            var a = k * 2 + 1;  // 子ノード（左）\r\n            var b = a + 1;      // 子ノード（右）\r\n            if (a < size) { // 子ノードがあるとき（末端の枝葉でないとき）のみdownHeapする\r\n                // aに、子ノードの小さい方のノードを設定する\r\n                if( b < size && (this._func(this._heap[a]) > this._func(this._heap[b])) ) a = b;\r\n                // 自分より小さい子ノードがあるとき、downheapする\r\n                if( this._func(this._heap[a]) < val ) this._downHeap(k);\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    // public\r\n    /**\r\n     * データを追加する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @param {Object}\r\n     *            obj 登録オブジェクト\r\n     */\r\n    Heap.prototype.push = function(obj) {\r\n        // 末尾に追加し、upHeapする\r\n        this._heap.push(obj);\r\n        this._upHeap(this._heap.length - 1);\r\n        if (this._deletable) {\r\n            this._deleteMap = {};\r\n        }\r\n    };\r\n    /**\r\n     * 最小値のデータを取り出す\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Object|undefined} 最小値\r\n     */\r\n    Heap.prototype.pop = function() {\r\n        // 先頭ノードを戻り値用に退避する\r\n        var ret = this._heap[0];\r\n        // 末尾ノードを退避し削除する\r\n        var obj = this._heap.pop();\r\n        if(0 < this._heap.length){\r\n            // ヒープが空でないとき、末尾ノードを先頭に移動し、downHeapする\r\n            this._heap[0] = obj;\r\n            this._downHeap(0);\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * 指定データを削除する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @param {Object}\r\n     *            obj 削除対象と同一オブジェクト(=== で判定)\r\n     * @return {Object|undefined} 削除したオブジェクト（undefined：合致するオブジェクトが無いとき）\r\n     */\r\n    Heap.prototype.del = function(obj) { // #59\r\n        // 削除対象オブジェクトのHeap配列位置を取得する\r\n        var k = -1;\r\n        if (this._heap.some(find, this)){\r\n            // 合致するオブジェクトのノードを削除し、合致ノードをリターンする\r\n            return this._del(k);\r\n        }\r\n        // 合致するオブジェクトが無いとき\r\n        return undefined;\r\n        \r\n        function find(e, i) {\r\n            if(this._delFunc(e) === obj){\r\n                k = i;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * 最小値を返却する（登録データは変更しない）\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Object|undefined} 最小値\r\n     */\r\n    Heap.prototype.top = function() {\r\n        return this._heap[0];\r\n    };\r\n    /**\r\n     * ヒープのサイズを返却する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Number} ヒープサイズ（0以上）\r\n     */\r\n    Heap.prototype.size = function() {\r\n        return this._heap.length;\r\n    };\r\n    \r\n    /* new */\r\n    return Heap;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-Heap.js\n// module id = 31\n// module chunks = 0","import {Logger} from './util.js';\r\n\r\n/**\r\n * @memberOf Util\r\n * @class Element\r\n * @classdesc 追加する挙動の操作要素は、後に記述した挙動の要素が上位になる 参考\r\n *            {@link https://q-az.net/elements-drag-and-drop/}\r\n * @param {DOM}\r\n *            element ドラッグ機能を付与するDOM要素\r\n * @constructor\r\n */\r\nexport default function Element(element){\r\n    this._element = element;    // 挙動を追加する要素\r\n    this._wrapper = {};         // マウスイベントを取得するdivを追加する下地要素\r\n\r\n    // width,height :100%が有効となるようposition: absoluteを指定する\r\n    element.style.position = \"absolute\";\r\n    // ドラッグ＆ドロップ用divを作成する(下地のみクリック透過）\r\n    this._wrapper = document.createElement('div');\r\n    setStyles(this._wrapper, { background : \"rgba(192,192,192,0.1)\",\r\n        position : \"absolute\", width : \"100%\", height : \"100%\", top : \"0\", left : \"0\",\r\n        \"pointer-events\": \"none\"});\r\n    // ドラッグ＆ドロップ用divを登録する\r\n    this._element.appendChild(this._wrapper);\r\n}\r\n\r\n// グローバル（のような）変数\r\nvar pos = {};        // マウス押下時の位置情報の保管用\r\n\r\n/**\r\n * CSSクラス名\"hjnDraggableBox\"が付いた要素をドラッグ＆ドロップで移動できるようにする\r\n * \r\n * @memberOf Util.Element\r\n * @example .hjnDraggableBox {} .hjnDraggableItem:hover {cursor: move;\r\n *          background: rgba(128, 128, 128, 0.5); transition: all 0.2s; }\r\n * @example <div class=\"hjnDraggableBox\"></div>\r\n */\r\nElement.enableDraggableClass = function(){\r\n    var elements = document.getElementsByClassName(\"hjnDraggableBox\");  // 要素の取得\r\n    // マウスが要素内で押されたとき、又はタッチされたとき発火\r\n    for(var i = 0; i < elements.length; i++){\r\n        var element = new Element(elements[i]);\r\n        element     // 移動指定要素がリサイズ指定要素よりが下になるよう、移動を先に記述する\r\n            .makeMoveable()\r\n            .makeResizable();\r\n    }\r\n}\r\n\r\n/**\r\n * ダイアログを生成し表示する\r\n * \r\n * @memberOf Util.Element\r\n * @param {String}\r\n *            [iHtml=\"no message\"] ダイアログのinnerHTMLに設定する文字列\r\n * @param {DOM}\r\n *            [element=document.body] ダイアログの位置とサイズを指定する際の基準となる要素\r\n * @param {String}\r\n *            [id=\"HJN.dialog\"] ダイアログ要素のid名、同一名称のダイアログを閉じて作成する\r\n * @param {Number}\r\n *            [w=40] elementに対するダイアログの幅の比率％\r\n * @param {Number}\r\n *            [h=40] elementに対するダイアログの高さの比率％\r\n * @param {Object}\r\n *            [style={ width: w+\"%\", height: h+\"%\", left: 50-w/2+\"%\", top: 50-h/2+\"%\", position: \"absolute\", background: \"rgba(255, 255, 255, 0.8)\", border: \"medium solid #aaa\"}] \r\n *            ダイアログ背景のCSSスタイル\r\n */\r\nElement.createDialog = function(iHtml, element, id, w, h, style){\r\n    iHtml = iHtml || \"no message\";\r\n    element = element || document.body;\r\n    style = style || {};\r\n    id = id || \"HJN.dialog\";\r\n    w = w || 40; // 幅40%\r\n    h = h || 40; // 高さ40%\r\n    // 既存の同一idの要素を削除する\r\n    var div = document.getElementById(id);\r\n    if (div) { div.parentElement.removeChild(div);}\r\n    // ダイアログ要素を作成する\r\n    div = document.createElement('div');\r\n    div.id = id;\r\n    element.appendChild(div);\r\n    div.innerHTML =\"<iframe></iframe>\";\r\n    setStyles(div.children[0],\r\n            {width: \"100%\", height: \"100%\", border: 0, \"pointer-events\": \"auto\"});\r\n    var body = document.createElement('body');\r\n    var htmlText = \"<body>\" + iHtml + \"</body>\";\r\n    body.textContent = \"\"; // #82\r\n    body.insertAdjacentHTML('afterBegin', htmlText);\r\n    \r\n    div.children[0].contentDocument.body = body;\r\n    // スタイルを設定する（デフォルト：縦横40%（親サイズに連動）で中央に配置）\r\n    setStyles(div, style, \r\n            { width: w+\"%\", height: h+\"%\", left: 50-w/2+\"%\", top: 50-h/2+\"%\",\r\n              position: \"absolute\", \"z-index\" : \"80\",\r\n              background: \"rgba(255, 255, 255, 0.8)\", border: \"medium solid #aaa\"});\r\n    var draggable = new Element(div);\r\n    draggable        // 移動指定要素がリサイズ指定要素よりが下になるよう、×ボタン、移動、リサイズの順に記述する\r\n        .makeRemovable(id)\r\n        .makeMoveable()\r\n        .makeResizable();\r\n}\r\n\r\n/**\r\n * ×ボタンによる要素削除機能を付与する\r\n * \r\n * @memberOf Util.Element\r\n * @param {String}\r\n *            [id=\"\"] ×ボタン要素のid名（重複すると先に作成された×ボタンのダイアログが閉じられる）\r\n * @param {Object}\r\n *            [style={cursor: \"move\", top:\"0\", left:\"50%\", width:\"100%\",height:\"20px\"};]\r\n *            ×ボタン要素のCSSスタイル\r\n * @return this\r\n */\r\nElement.prototype.makeRemovable = function(id, style) {\r\n    // inputタグを追加する\r\n    // <input id=\"hjnDialog\" type=\"checkbox\" class=\"hjnBurger\" checked=\"checked\"\r\n    // onChange=\"...\"/>\r\n    var input = document.createElement(\"input\");\r\n    input.type = \"checkbox\";\r\n    input.id = (id || \"\") + \"_BATSU\"; // #86\r\n    input.classList.add(\"hjnBurger\");\r\n    input.checked = true;\r\n    input.onchange = function(){\r\n        var e = this.parentElement.parentElement;\r\n        e.parentElement.removeChild(e);\r\n    };\r\n    this._wrapper.appendChild(input);\r\n    // ×ボタンlabelタグを追加する\r\n    // <label for=\"hjnDialog\"><span></span></label>\r\n    var label = document.createElement(\"label\");\r\n    label.classList.add(\"hjnCtrlBox\");\r\n    label.htmlFor = input.id;\r\n    label.appendChild(document.createElement(\"span\"));\r\n    setStyles(label, style, { top:\"4px\", right: \"4px\", \r\n        position: \"absolute\", background: \"transparent\"});\r\n    this._wrapper.appendChild(label);\r\n    return this;\r\n}\r\n\r\n/**\r\n * ドラッグによる移動機能を付与する\r\n * \r\n * @memberOf Util.Element\r\n * @param {Object}\r\n *            [style={cursor: \"move\", top:\"0\", left:\"50%\", width:\"100%\", height:\"20px\"};] ドラッグ移動機能要素のCSSスタイル\r\n * @return this\r\n */\r\nElement.prototype.makeMoveable = function(style) {\r\n    // 制御用divを追加する\r\n    this.addHandleElement(elementMove, style, // 上：20px\r\n            {cursor: \"move\", top:\"0\",  left:\"50%\", width:\"100%\", height:\"20px\"},\r\n            \"inside\");\r\n    return this;\r\n}\r\n/**\r\n * ドラッグによる リサイズ機能を付与する\r\n * \r\n * @memberOf Util.Element\r\n * @param {object}\r\n *            [style] リサイズ機能要素のCSSスタイルを、デフォルトから変更する際に指定\r\n * \r\n * @return this\r\n */\r\nElement.prototype.makeResizable = function(style) {\r\n    // 制御用divを追加する\r\n    this.addHandleElement(elementUpper,  style,  // 上:Upper\r\n            {cursor: \"ns-resize\", top:\"0\",    left:\"50%\", width:\"100%\"});\r\n    this.addHandleElement(elementBottom, style,  // 下:Bottom\r\n            {cursor: \"ns-resize\", top:\"100%\", left:\"50%\", width:\"100%\"});\r\n    this.addHandleElement(elementLeft,   style,  // 左:Left\r\n            {cursor: \"ew-resize\", top:\"50%\",  left:\"0\",   height:\"100%\"});\r\n    this.addHandleElement(elementRight,  style,  // 右:Right\r\n            {cursor: \"ew-resize\", top:\"50%\",  left:\"100%\",height:\"100%\"});\r\n    this.addHandleElement(elementUpperLeft,  style,  // 左上:UpperLeft\r\n            {cursor: \"nwse-resize\", top:\"0\",    left:\"0\"});\r\n    this.addHandleElement(elementUpperRight, style,  // 右上:UpperRight\r\n            {cursor: \"nesw-resize\", top:\"0\",    left:\"100%\"});\r\n    this.addHandleElement(elementBottomLeft, style,  // 左下:BottomLeft\r\n            {cursor: \"nesw-resize\", top:\"100%\", left:\"0\"});\r\n    this.addHandleElement(elementBottomRight,style,  // 右下:BottomRight\r\n            {cursor: \"nwse-resize\", top:\"100%\", left:\"100%\"});\r\n   return this;\r\n}\r\n/**\r\n * マウスクリック用要素を追加\r\n * \r\n * @memberOf Util.Element\r\n * @param {Function}\r\n *            func マウス押下時に発火する処理\r\n * @param {object}\r\n *            [style] elementに設定するスタイル\r\n * @param {object}\r\n *            [styleD={top:\"0\", left:\"0\" width:\"5px\", height:\"5px\"}]\r\n *            elementに設定するデフォルトスタイル（styleに同じ属性がある場合styleが優先される）\r\n * @param {String}\r\n *            [transform=\"over\"] paddingに対する要素の位置\r\n *            \"onFrame\":線上、\"inside\":内側、その他：指定文字列をtransformスタイルに設定\r\n * @param {String}\r\n *            [className=\"hjnDraggableItem\"] マウスイベントを取得するdivに設定するCSSクラス名\r\n */\r\nElement.prototype.addHandleElement = function(func, style, styleD, transform, className) {\r\n    style = style || {};\r\n    styleD = styleD || {};\r\n    transform = transform || \"onFrame\";\r\n    for (var property in style) styleD[property] = style[property];\r\n\r\n    var div = document.createElement('div');\r\n    div.classList.add(className || \"hjnDraggableItem\");\r\n    // 要素がpaddingの内側になるtransform設定値を求める\r\n    // 例：上下左右中央の時\"translateY(-50%) translateX(-50%)\"\r\n    if (transform === \"onFrame\") {\r\n        transform = 'translateX(-50%) translateY(-50%)';\r\n    } else if (transform === \"inside\"){\r\n        transform = 'translateX(-' + (styleD.left || 0) + ') translateY(-' + (styleD.top || 0) + ')';\r\n    }\r\n    // スタイルを設定する（デフォルト：縦横10pxで左上{top:0,ledt:0}に配置）\r\n    setStyles(div, styleD, \r\n            { width : \"5px\", height : \"5px\", position : \"absolute\", transform : transform });\r\n    // 要素を追加する\r\n    this._wrapper.appendChild(div);\r\n    // 追加した要素に、マウス押下時の処理を登録する\r\n    div.addEventListener(\"mousedown\", func, false);\r\n    div.addEventListener(\"touchstart\", func, false);\r\n};\r\n\r\n\r\n// マウス押下後の発火関数定義（イベントリスナーに登録する関数を指定）\r\nfunction elementMove(e)       {dragStart(e, this, draggingMove,        dragEndMove       ); }\r\nfunction elementUpper(e)      {dragStart(e, this, draggingUpper,       dragEndUpper      ); }\r\nfunction elementBottom(e)     {dragStart(e, this, draggingBottom,      dragEndBottom     ); }\r\nfunction elementLeft(e)       {dragStart(e, this, draggingLeft,        dragEndLeft       ); }\r\nfunction elementRight(e)      {dragStart(e, this, draggingRight,       dragEndRight      ); }\r\nfunction elementUpperLeft(e)  {dragStart(e, this, draggingUpperLeft,   dragEndUpperLeft  ); }\r\nfunction elementUpperRight(e) {dragStart(e, this, draggingUpperRight,  dragEndUpperRight ); }\r\nfunction elementBottomLeft(e) {dragStart(e, this, draggingBottomLeft,  dragEndBottomLeft ); }\r\nfunction elementBottomRight(e){dragStart(e, this, draggingBottomRight, dragEndBottomRight); }\r\n// マウスドラッグ時の挙動定義（マウス移動距離に乗算する値を定義）\r\nfunction draggingMove(e)       {dragging(e, {posX: 1, posY: 1, width: 0, height: 0 }); }  // 移動\r\nfunction draggingUpper(e)      {dragging(e, {posX: 1, posY: 1, width: 0, height:-1 }); }  // 上リサイズ\r\nfunction draggingBottom(e)     {dragging(e, {posX: 0, posY: 0, width: 0, height: 1 }); }  // 下リサイズ\r\nfunction draggingLeft(e)       {dragging(e, {posX: 1, posY: 0, width:-1, height: 0 }); }  // 左リサイズ\r\nfunction draggingRight(e)      {dragging(e, {posX: 0, posY: 0, width: 1, height: 0 }); }  // 右リサイズ\r\nfunction draggingUpperLeft(e)  {dragging(e, {posX: 1, posY: 1, width:-1, height:-1 }); }  // 左上リサイズ\r\nfunction draggingUpperRight(e) {dragging(e, {posX: 0, posY: 1, width: 1, height:-1 }); }  // 右上リサイズ\r\nfunction draggingBottomLeft(e) {dragging(e, {posX: 1, posY: 0, width:-1, height: 1 }); }  // 左下リサイズ\r\nfunction draggingBottomRight(e){dragging(e, {posX: 0, posY: 0, width: 1, height: 1 }); }  // 右下リサイズ\r\n// マウス解放後の発火関数定義（イベントリスナーから解放する関数を指定）\r\nfunction dragEndMove(e)       {dragEnd(draggingMove,        dragEndMove       ); }\r\nfunction dragEndUpper(e)      {dragEnd(draggingUpper,       dragEndUpper      ); }\r\nfunction dragEndBottom(e)     {dragEnd(draggingBottom,      dragEndBottom     ); }\r\nfunction dragEndLeft(e)       {dragEnd(draggingLeft,        dragEndLeft       ); }\r\nfunction dragEndRight(e)      {dragEnd(draggingRight,       dragEndRight      ); }\r\nfunction dragEndUpperLeft(e)  {dragEnd(draggingUpperLeft,   dragEndUpperLeft  ); }\r\nfunction dragEndUpperRight(e) {dragEnd(draggingUpperRight,  dragEndUpperRight ); }\r\nfunction dragEndBottomLeft(e) {dragEnd(draggingBottomLeft,  dragEndBottomLeft ); }\r\nfunction dragEndBottomRight(e){dragEnd(draggingBottomRight, dragEndBottomRight); }\r\n\r\n/**\r\n * DOM要素にスタイル設定\r\n * \r\n * @memberOf Util.Element\r\n * @param {DOM}\r\n *            element CSSスタイルを設定するDOM要素\r\n * @param {object}\r\n *            [style] elementに設定するスタイル {top:\"50%\", left:\"50%\"}\r\n * @param {object}\r\n *            [styleD] elementに設定するデフォルトスタイル {top:\"50%\", left:\"50%\"}\r\n */\r\nElement.SetStyles = setStyles;\r\nfunction setStyles(element, style, styleD){\r\n    // ポインタ操作の透過が指定されていないとき有効化にする（ダイアログなど上位レイヤで透過となっていることがあるため）\r\n    styleD = styleD || {};\r\n    styleD[\"pointer-events\"] = styleD[\"pointer-events\"] || \"auto\";\r\n    // デフォルトスタイルを設定する\r\n    for (var property in styleD) element.style[property] = styleD[property];\r\n    // 指定スタイルを設定する\r\n    for (var property in style) element.style[property] = style[property];\r\n}\r\n\r\n/**\r\n * マウス押下したときに発火する関数から呼ばれる\r\n * \r\n * @private\r\n * @memberOf Util.Element\r\n * @param {Event}\r\n *            e 発火イベント\r\n * @param {DOM}\r\n *            element マウス押下を発火したDOM要素（CALL元のthis)\r\n * @param {function}\r\n *            dragging マウス移動イベントに登録する関数消去するイベントに登録されている関数\r\n * @param {function}\r\n *            dragEnd 消去するイベントに登録する関数\r\n */\r\nfunction dragStart(e, element, dragging, dragEnd) {\r\n    // タッチイベントとマウスのイベントの差異を吸収する\r\n    var event = (e.type === \"mousedown\") ? e : e.changedTouches[0];\r\n    pos.pageX = event.pageX; \r\n    pos.pageY = event.pageY;\r\n    // 親の親要素(hjnDraggableBox指定)内の相対座標を取得\r\n    var grandparent = element.parentNode.parentNode;\r\n    pos.offsetLeft = grandparent.offsetLeft;\r\n    pos.offsetTop = grandparent.offsetTop;\r\n    // margin補正値、縦横を取得\r\n    var style = document.defaultView.getComputedStyle(grandparent);\r\n    pos.marginLeft = parseInt(style.getPropertyValue(\"margin-left\")) || 0;\r\n    pos.marginTop = parseInt(style.getPropertyValue(\"margin-top\")) || 0;\r\n    pos.width = grandparent.clientWidth || 0;\r\n    pos.height = grandparent.clientHeight || 0;\r\n\r\n    // 処理範囲外のとき何もしない\r\n    // if (pos.y > 10) return;\r\n\r\n    // 全画面にマウスアップ用要素を被せる\r\n    var hjnDrag = document.getElementById(\"hjnDrag\");\r\n    if (!hjnDrag) {\r\n        hjnDrag = document.createElement('div');\r\n        hjnDrag.id = \"hjnDrag\";\r\n        element.parentElement.appendChild(hjnDrag);\r\n    }\r\n    setStyles(hjnDrag,  \r\n            { width  : window.innerWidth + \"px\",\r\n              height : window.innerHeight + \"px\",\r\n              position : \"fixed\", top : \"0\", left : \"0\",\r\n              });\r\n    // 親の親要素（hjnDraggableBox指定)に、CSSクラス\"drag\"を追加\r\n    grandparent.classList.add(\"drag\");\r\n    // addEventListenerの第三引数を判定\r\n    var isPassive = isSupportsPassive() ? {passive: false} : false;\r\n    // ムーブイベントにコールバック\r\n    document.body.addEventListener(\"mousemove\", dragging, isPassive);\r\n    document.body.addEventListener(\"touchmove\", dragging, isPassive);\r\n    // マウスボタンが離されたとき、またはカーソルが外れたときに発火するイベントを登録する\r\n    hjnDrag.addEventListener(\"mouseup\", dragEnd, isPassive);\r\n    hjnDrag.addEventListener(\"touchend\", dragEnd, isPassive);\r\n    document.body.addEventListener(\"mouseleave\", dragEnd, isPassive);\r\n    document.body.addEventListener(\"touchleave\", dragEnd, isPassive);\r\n}\r\n\r\n// addEventListenerの第三引数を判定するためにがpassive対応かどうか判定する\r\nfunction isSupportsPassive(){\r\n    var supportsPassive = false;\r\n    try {\r\n      var opt = {\r\n        get passive() {\r\n          supportsPassive = true;\r\n        }\r\n      },\r\n      handler = function() {};\r\n\r\n      window.addEventListener(\"checkpassive\", handler, opt);\r\n      window.removeEventListener(\"checkpassive\", handler, opt);\r\n    } catch (err) {}\r\n    return supportsPassive; \r\n}\r\n/**\r\n * 親の親要素をマウス押下後、マウスカーソルが動いたときに発火する関数から呼ばれる\r\n * \r\n * @private\r\n * @memberOf Util.Element\r\n * @param {Event}\r\n *            e 発火イベント\r\n * @param {Object}\r\n *            multiply 補正スタイル毎のマウスカーソル移動幅の掛け目<br>\r\n *            要素を移動する場合 {posX:1, posY:1, width:0, height:0}<br>\r\n *            左上リサイズの場合 {posX:1, posY:1, width:-1, height:-1}<br>\r\n *            右下リサイズの場合 {posX:0, posY:0, width:1, height:1}\r\n */\r\nfunction dragging(e, multiply) {\r\n    // タッチイベントとマウスのイベントの差異を吸収する\r\n    var event = (e.type === \"mousemove\") ? e : e.changedTouches[0];\r\n    // フリックしたときに画面を動かさないようにデフォルト動作を抑制する\r\n    e.preventDefault();\r\n    // マウスが動いた場所に要素を動かす（\"drag\"は同時に一つしか存在しない前提）\r\n    var drag = document.getElementsByClassName(\"drag\")[0];\r\n    if (drag) {\r\n        drag.style.left = pos.offsetLeft - pos.marginLeft \r\n            + multiply.posX * (event.pageX - pos.pageX) + \"px\";\r\n        drag.style.top  = pos.offsetTop  - pos.marginTop\r\n            + multiply.posY * (event.pageY - pos.pageY) + \"px\";\r\n        drag.style.width  = pos.width\r\n            + multiply.width  * (event.pageX - pos.pageX) + \"px\";\r\n        drag.style.height = pos.height\r\n            + multiply.height * (event.pageY - pos.pageY) + \"px\";\r\n    }\r\n}\r\n/**\r\n * マウスボタンが上がった場合、もしくは画面外にマウスが出た場合に発火する関数から呼ばれる\r\n * \r\n * @private\r\n * @memberOf Util.Element\r\n * @param {function}\r\n *            dragging 消去するイベントに登録されている関数\r\n * @param {function}\r\n *            dragEnd 消去するイベントに登録されている関数\r\n */\r\nfunction dragEnd(dragging, dragEnd) {\r\n    // イベントハンドラを消去する\r\n    document.body.removeEventListener(\"mousemove\", dragging, false);\r\n    document.body.removeEventListener(\"touchmove\", dragging, false);\r\n    document.body.removeEventListener(\"mouseleave\", dragEnd, false);\r\n    document.body.removeEventListener(\"touchleave\", dragEnd, false);\r\n    // クラス名 .drag を外す\r\n    var drag = document.getElementsByClassName(\"drag\")[0];\r\n    if (drag) drag.classList.remove(\"drag\");\r\n    // マウスアップ検知用要素を削除する\r\n    var hjnDrag = document.getElementById(\"hjnDrag\");\r\n    if (hjnDrag) { hjnDrag.parentElement.removeChild(hjnDrag);}\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-Element.js\n// module id = 32\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class Config\r\n * @classdesc 定数設定機能（設定HTML作成機能付き）\r\n *            <p>\r\n *            日時、TATフォーマット指定機能追加用に作成\r\n * \r\n * @param {String}\r\n *            [prefix=''] 定数の名前空間を一位に指定する文字列、指定しない場合グローバル\r\n * @param {String}\r\n *            [ol='ol'] インデント(.nDown() .nUp())に使うHTMLタグ\r\n * @param {String}\r\n *            [globalName='HJN'] Configを登録するグローバル変数(window)の変数名\r\n * @example this._config = HjnConfig(\"m\") // config設定画面定義\r\n *          .label(null,\"------\").n() // ラベルを表示し、改行\r\n *          .name(\"ENDIAN\").label(null,\"[endian(long field)]\") //key:ENDIAN\r\n *          .radio(def(\"ENDIAN_LIL\", true), null, \"little\", true) //表示ラベルと選択時設定値\r\n *          .radio(def(\"ENDIAN_BIG\", false), null, \"big\");\r\n */\r\nexport default (function() { // #24\r\n    /** @static */\r\n    Config.prototype.__config = {};   // config設定コンテナ\r\n    Config.prototype.__config._onFunctions = {}; // 関数登録用\r\n    Config.prototype.__config.__keyConfig = {};  // キー値登録用\r\n\r\n    /** @constructor */\r\n    function Config(prefix, ol, globalName){ \r\n        if(!(this instanceof Config)) return new Config(prefix, ol, globalName);\r\n\r\n        // グローバル変数(window)にHJN.Configを登録する #74\r\n        this._globalName = globalName || \"HJN\";\r\n        var globalConfig = window[this._globalName].Config;\r\n        globalConfig = globalConfig || Config;\r\n\r\n        this._prefix = prefix; // #76\r\n        this._pre = (prefix || '') + \".\"; // 各フィールド、要素の名称のプレフィックス(区切り文字\".\")\r\n        this._ols = ol ? '<' + ol + '>' : '<ol>';   // リストに使用する要素（初期値 ol )\r\n        this._ole = ol ? '</' + ol + '>' : '</ol>';\r\n        this._html = this._ols; // config設定画面のHtml\r\n        this._nameHtml = '';    // HTMLタグの name属性指定\r\n        this._name = '';        // radioのConfig.get用\r\n\r\n        if (globalConfig[prefix] === undefined){\r\n            globalConfig[prefix] = this;\r\n            return this;\r\n        } else {\r\n            return globalConfig[prefix]; \r\n        }\r\n    }\r\n\r\n    /**\r\n     * HTML要素の値が変更した時に、configに当該要素を登録する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.on = function(t) {\r\n        var funcId = t.id;\r\n        if (t.type === \"radio\") { // radioのとき、nameに対して、選択されたキー値（idからprefixを削除した値）を登録\r\n            this.prototype.__config[t.name] = t.id.substr(t.id.indexOf(\".\") + 1);\r\n        }else if (t.type === \"number\") {    // numberのとき、idに、value(入力値)を数値として登録\r\n            this.prototype.__config[t.id] = +t.value;\r\n        } else if (t.type === \"select-one\") {    // selectのとき、idに、valueの設定値を登録\r\n            this.prototype.__config[t.id] = t.value.substr(t.value.indexOf(\".\") + 1); // #96\r\n            funcId = t.value;\r\n        } else {                            // textのとき、idに、value(入力値)を登録\r\n            this.prototype.__config[t.id] = t.value;\r\n        }\r\n        // on呼出し関数が登録されているとき、登録関数を呼び出す #51\r\n        var func = Config.GetConfig().getFunctionById(funcId); // #59\r\n        if(typeof(func) === \"function\") func();\r\n    };\r\n\r\n    /**\r\n     * Configリポジトリ管理インスタンスを取得する\r\n     * \r\n     * @memberof Util.Config\r\n     * @example Config.GetConfig(\"File\") === Config(\"File\"); // true 既に登録されているとき\r\n     */\r\n    Config.GetConfig = function(prefix) { // #59\r\n        return new Config(prefix);\r\n    }\r\n    \r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * keyの値に指定されたvalue（なければkey値）を返却する\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    Config.prototype.getConfig = function(key) {\r\n        var cKey = this.getValueByKey(key);\r\n        var keyConfig = Config.prototype.__config.__keyConfig[this._pre + cKey];\r\n        if(!keyConfig || keyConfig.value === undefined){\r\n            return cKey;    // valueが定義されていないとき、keyの設定値を返却\r\n        }else{\r\n            return keyConfig.getConfig(); // keyの設定値のvalueが定義されているとき\r\n        }\r\n    };\r\n    /**\r\n     * configに登録されているid(=prefix+key)の設定値を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getObjctById = function(id) {\r\n        // return this.__config[id];\r\n        return Config.prototype.__config[id];\r\n    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の設定値を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getValueByKey = function(key) { \r\n        var val = Config.prototype.__config[this._pre + key];\r\n        // selectorでon未実行時に、選択項目の値を取り込む #96\r\n        if (!val) {\r\n            var e = document.getElementById(this._pre + key);\r\n            if (e && typeof e.selectedIndex === \"number\") {\r\n                var t = e[e.selectedIndex].value;\r\n                val = t.substr(t.indexOf(\".\") + 1);\r\n                Config.prototype.__config[this._pre + key] = val;\r\n            }\r\n        }\r\n        return val;\r\n    };\r\n    /**\r\n     * configにkey(prefix補填)に値を設定する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.setValueByKey = function(key, val) { \r\n        Config.prototype.__config[this._pre + key] = val;\r\n    };\r\n    /**\r\n     * configの指定Idに登録されている関数を取得する<br>\r\n     * \r\n     * @memberof Util.Config\r\n     * @example // Config.onでradioボタン選択時に関数を呼ぶ場合に使用 var func =\r\n     *          Config.GetConfig().getFunctionById(t.id);\r\n     */\r\n\r\n    Config.prototype.getFunctionById = function(id) { // #53\r\n        return Config.prototype.__config._onFunctions[id];\r\n    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の関数を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     * @example Util.Config.GetConfig(\"Simulator\").getFunctionByKey(\"S_SIMU\")();\r\n     */\r\n    Config.prototype.getFunctionByKey = function(key) { // #59\r\n        return Config.prototype.__config._onFunctions[this._pre + this.getValueByKey(key)];\r\n    };\r\n    /**\r\n     * 指定keyに登録されている関数を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getFunction = function(key) { // #76\r\n        return Config.prototype.__config._onFunctions[this._pre + key];\r\n    };\r\n    /**\r\n     * 指定keyに関数を登録する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.setFunction = function(key, func) { // #76\r\n        Config.prototype.__config._onFunctions[this._pre + key] = func;\r\n    };\r\n    \r\n\r\n    /**\r\n     * config設定用HTMLテキストを取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getHtml = function() { \r\n        return this._html + this._ole;\r\n    };\r\n    /**\r\n     * keyに値を設定する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.set = function(key, val) { \r\n        this.value[this._pre + key] = val;\r\n    };\r\n    \r\n    // config作成用 メソッド\r\n    /**\r\n     * 定義＆設定画面作成用機能： 改行\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.n = function (str) {\r\n        str = str || \"\";\r\n        this._html += this._ole + str + this._ols;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ネスト一つ下げ\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.nDown = function () {\r\n        this._html += this._ols;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ネスト一つ上げ\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.nUp = function () {\r\n        this._html += this._ole;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： nameを変更する（radio等の先頭で指定）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.name = function (str) {\r\n        this._nameHtml = str ? 'name=\"' + this._pre + str + '\" ' : '';\r\n        this._name = str;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラベル要素(prefix+keyで関連付けるformのid属性となる)\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.label = function (key, str, attribute) {\r\n        this._html += '<label ' +\r\n                        (key ? 'for=\"' + this._pre + key + '\" ': '') +\r\n                        (attribute || '') + '>' +\r\n                        (str || '') +\r\n                        '</label>\\n'; // #51\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラベル付された各種入力フォーム\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.labeledForm = function (key, type, typedAttribute,\r\n                                pLabel, sLabel, val, attribute, check, cssClass) {\r\n        var classStr = (cssClass) ? ' class=\"' + cssClass + '\"' : ''; // #51\r\n        // optionの時(select用）\r\n        if (type === \"option\"){\r\n            this._html += '<option value=\"' + this._pre + key + '\"' + (typedAttribute || '') + '>' +\r\n                    (pLabel ? pLabel : '') + (sLabel ? sLabel : '') + '</option>\\n'\r\n            return this;\r\n        }\r\n        // option以外の時\r\n        this._html += '<label' + classStr + '>' + // #51\r\n                    (pLabel ? pLabel : '') +\r\n                    '<input type=\"' +type + '\" ' +\r\n                        (typedAttribute || '') + \r\n                        this._nameHtml +\r\n                        'id=\"' + this._pre + key + '\" '+ // idがユニークになるようkeyにprefixを付与\r\n                        'onchange=\"' + this._globalName + '.Config.on(this);\" ' + // #74\r\n                        (val ? \"value='\" + val + \"' \" : \"\") +   // val は、キー値のまま\r\n                                                                // #92\r\n                        (attribute || '') + \r\n                        (check ? ' checked=\"checked;\"' : '') +\r\n                    '>' +\r\n                    (sLabel ? sLabel : '') +\r\n                    '</label>\\n'; // #51\r\n        // デフォルト指定があるとき configにデフォルト値を設定する\r\n        if (type === \"radio\" && check) {    // radioのとき、nameに対して、選択状態のkeyを登録\r\n            Config.prototype.__config[this._pre + this._name] = key;\r\n        } else if (type === \"number\") { // numberのとき、keyに対する、val(入力値)を数値として登録\r\n            Config.prototype.__config[this._pre + key] = +val;\r\n        } else {    // textのとき、keyに対する、val(入力値)を登録\r\n            Config.prototype.__config[this._pre + key] = val;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： テキストボックス要素で、文字列を設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.number = function (key, pLabel, sLabel, val, attribute, func) {\r\n        Config.prototype.labeledForm.call(this, key, \"number\", \"\", \r\n                                pLabel, sLabel, val, attribute);\r\n        if (func) this.setFunction(key, func); // #74\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： テキストボックス要素で、数値を設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.text = function (key, pLabel, sLabel, val, attribute) {\r\n        Config.prototype.labeledForm.call(this, key, \"text\", \"\", \r\n                                pLabel, sLabel, val, attribute);\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラジオボタン要素で、選択肢の一つを設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.radio = function (key, pLabel, sLabel, check, attribute, func) {\r\n        Config.prototype.labeledForm.call(this, key, \"radio\", (check ? 'checked=\"checked;\"' : ''),\r\n                                pLabel, sLabel, \"\", attribute, check, \"hjnLabel4Input\");\r\n        // 関数登録指定時、attributeを関数名として、指定関数を登録する #51\r\n        if (func) this.setFunction(key, func);\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： セレクトボックス要素で、選択肢の一つを設定\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.option = function (key, pLabel, sLabel, check, attribute, func) { // #74\r\n        Config.prototype.labeledForm.call(this, key, \"option\", (check ? ' selected' : ''),\r\n                                pLabel, sLabel, \"\", attribute, check, \"hjnLabel4Input\");\r\n        // 関数登録指定時、attributeを関数名として、指定関数を登録する #51\r\n        if (func) this.setFunction(key, func);\r\n        // 逆引きリストに追加する\r\n        var reverseList = Config.prototype.__config.__keyConfig[this._pre + this._name] || {};\r\n        var reverseVal = this._pre + key;\r\n        var reverseKey = this.__config.__keyConfig[reverseVal].getConfig(); \r\n        reverseList[reverseKey] = reverseVal;\r\n        Config.prototype.__config.__keyConfig[this._pre + this._name] = reverseList; \r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： option用タグの開始宣言（selectタグ用）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.startTag = function (type) { // #74\r\n        this._tag = type || \"\";\r\n        this._html += '<' + this._tag \r\n                            + ' id=\"' + this._pre + this._name + '\"'\r\n                            + 'class=\"hjnLabel4Input\" onchange=\"HJN.Config.on(this);\">\\n'  ;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： option用タグの終了宣言（selectタグ用）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.endTag = function (type) { // #74\r\n        this._html += '</' + this._tag + '>\\n'\r\n        this._tag = undefined;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 定義＆設定画面作成用機能： keyConfigの設定値を取得する\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getKeyConfig = function (key) { // #74\r\n        return this.__config.__keyConfig[this._pre + key];\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： option設定値からoptionキー値を逆引きする（selectタグ用）\r\n     * \r\n     * @memberof Util.Config\r\n     */\r\n    Config.prototype.getOptionKey = function (key, val) { // #74\r\n        return this.__config.__keyConfig[this._pre + key][val];\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： 固定値を取得するキーの宣言<br>\r\n     * __keyConfig[\"File.SEP_COMMA\"] = {value: \",\", getConfig:\r\n     * LF_ELSE.vから値を取得するfunction, onFunc: null}\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key キー値\r\n     * @param {Object}\r\n     *            [val=key] 取得する固定値（getValueByKeyの返却値、デフォルト：keyと同じ文字列）\r\n     * @param {function}\r\n     *            [onFunc] onイベント時に実行する処理（メニューのa属性などで利用）\r\n     */\r\n    Config.prototype.def = function(key, val, onFunc) { // #76\r\n        var _keyConf = Config.prototype.__config.__keyConfig[this._pre + key] = {};\r\n        _keyConf.value = (val === undefined) ? key : val; // \r\n        _keyConf.getConfig = function () { return (val === undefined) ? key : val; };\r\n        _keyConf.onFunc = onFunc || null; \r\n        return key;\r\n    }\r\n    /**\r\n     * 定義＆設定画面作成用機能： 画面より値を取得するキーの宣言<br>\r\n     * __keyConfig[\"File.LF_ELSE\"] = {value: \"LF_ELSE\", getConfig:\r\n     * LF_ELSE.vから値を取得するfunction}\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key キー値\r\n     * @param {String}\r\n     *            [fieldId=key+\".v\"] 値を取得する画面フィールドのキー\r\n     */\r\n    Config.prototype.v = function (key, fieldId) { // #76\r\n        var _keyConf = Config.prototype.__config.__keyConfig[this._pre + key] = {};\r\n        _keyConf.value = key;           // getValueByKeyの返却値（デフォルト：keyと同じ文字列）\r\n        _keyConf.getConfig = function () {\r\n            _keyConf.getConfig = (function (_prefix, key, fieldId) {\r\n                return window.HJN.Config(_prefix).getValueByKey(fieldId || key + \".v\");\r\n            }).bind(null, this._prefix, key, fieldId); // #96\r\n        };\r\n        return key;\r\n    };\r\n\r\n\r\n    /**\r\n     * HTMLの入力フィールドに、指定値を設定し、Configに反映する\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    Config.prototype.setText = function(key, val) { // #76\r\n        var id = this._pre + key;\r\n        document.getElementById(id).value = val;\r\n        document.getElementById(id).onchange();\r\n    }    \r\n    /**\r\n     * HTMLのselectorを、指定値を選択し、Configに反映する\r\n     * \r\n     * @memberof Util.Config\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    Config.prototype.setSelector = function(key) { // #76\r\n        var id = this._pre + key;\r\n        document.getElementById(id).checked = true;\r\n        document.getElementById(id).onchange();\r\n    }    \r\n    \r\n    /* new */\r\n    return Config;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/config/util-Config.js\n// module id = 34\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class Encoding\r\n * @classdesc 文字コード変換 引用 {@link https://github.com/wealandwoe/ecl_array.js}\r\n */\r\nexport var Encoding = {};\r\n(function() {\r\n//\r\n// Escape Codec Library: ecl.js (Ver.041208)\r\n//\r\n// Copyright (C) http://nurucom-archives.hp.infoseek.co.jp/digital/\r\n//\r\n\r\nvar GetEscapeCodeType=function(str){\r\n    if(/%u[0-9A-F]{4}/i.test(str))return \"Unicode\";\r\n    if(/%([0-9A-DF][0-9A-F]%[8A]0%|E0%80|[0-7][0-9A-F]|C[01])%[8A]0|%00|%[7F]F/i.test(str))return \"UTF16LE\";\r\n    if(/%E[0-9A-F]%[8A]0%[8A]0|%[CD][0-9A-F]%[8A]0/i.test(str))return \"UTF8\";\r\n    if(/%F[DE]/i.test(str))return /%8[0-9A-D]|%9[0-9A-F]|%A0/i.test(str)?\"UTF16LE\":\"EUCJP\";\r\n    if(/%1B/i.test(str))return /%[A-D][0-9A-F]/i.test(str)?\"JIS8\":\"JIS7\";\r\n    var S=str.substring(0,6143).replace(/%[0-9A-F]{2}|[^ ]| /ig,function(s){\r\n        return s.length<3?\"40\":s.substring(1)\r\n    }),c,C,i=0,T;\r\n    while(0<=(c=parseInt(S.substring(i,i+=2),16))&&i<4092)if(128<=c){\r\n        if((C=parseInt(S.substring(i,i+2),16))<128)i+=2;\r\n        else if(194<=c&&c<240&&C<192){\r\n            if(c<224){T=\"UTF8\";i+=2;continue}\r\n            if(2==parseInt(S.charAt(i+2),16)>>2){T=\"UTF8\";i+=4;continue}\r\n        }\r\n        if(142==c&&161<=C&&C<224){if(!T)T=\"EUCJP\";if(\"EUCJP\"==T)continue}\r\n        if(c<161)return \"SJIS\";\r\n        if(c<224&&!T)\r\n            if((164==c&&C<244||165==c&&C<247)&&161<=C)i+=2;\r\n            else T=224<=C?\"EUCJP\":\"SJIS\";\r\n        else T=\"EUCJP\"\r\n    }\r\n    return T?T:\"EUCJP\"\r\n};\r\nvar JISX0208=Function(\r\n'var a=\"zKV33~jZ4zN=~ji36XazM93y!{~k2y!o~k0ZlW6zN?3Wz3W?{EKzK[33[`y|;-~j^YOTz$!~kNy|L1$353~jV3zKk3~k-4P4zK_2+~jY4y!xYHR~jlz$_~jk4z$e3X5He<0y!wy|X3[:~l|VU[F3VZ056Hy!nz/m1XD61+1XY1E1=1y|bzKiz!H034zKj~mEz#c5ZA3-3X$1~mBz$$3~lyz#,4YN5~mEz#{ZKZ3V%7Y}!J3X-YEX_J(3~mAz =V;kE0/y|F3y!}~m>z/U~mI~j_2+~mA~jp2;~m@~k32;~m>V}2u~mEX#2x~mBy+x2242(~mBy,;2242(~may->2&XkG2;~mIy-_2&NXd2;~mGz,{4<6:.:B*B:XC4>6:.>B*BBXSA+A:X]E&E<~r#z+625z s2+zN=`HXI@YMXIAXZYUM8X4K/:Q!Z&33 3YWX[~mB`{zKt4z (zV/z 3zRw2%Wd39]S11z$PAXH5Xb;ZQWU1ZgWP%3~o@{Dgl#gd}T){Uo{y5_d{e@}C(} WU9|cB{w}bzvV|)[} H|zT}d||0~{]Q|(l{|x{iv{dw}(5}[Z|kuZ }cq{{y|ij}.I{idbof%cu^d}Rj^y|-M{ESYGYfYsZslS`?ZdYO__gLYRZ&fvb4oKfhSf^d<Yeasc1f&a=hnYG{QY{D`Bsa|u,}Dl|_Q{C%xK|Aq}C>|c#ryW=}eY{L+`)][YF_Ub^h4}[X|?r|u_ex}TL@YR]j{SrXgo*|Gv|rK}B#mu{R1}hs|dP{C7|^Qt3|@P{YVV |8&}#D}ef{e/{Rl|>Hni}R1{Z#{D[}CQlQ||E}[s{SG_+i8eplY[=[|ec[$YXn#`hcm}YR|{Ci(_[ql|?8p3]-}^t{wy}4la&pc|3e{Rp{LqiJ],] `kc(]@chYnrM`O^,ZLYhZB]ywyfGY~aex!_Qww{a!|)*lHrM{N+n&YYj~Z b c#e_[hZSon|rOt`}hBXa^i{lh|<0||r{KJ{kni)|x,|0auY{D!^Sce{w;|@S|cA}Xn{C1h${E]Z-XgZ*XPbp]^_qbH^e[`YM|a||+=]!Lc}]vdBc=j-YSZD]YmyYLYKZ9Z>Xcczc2{Yh}9Fc#Z.l{}(D{G{{mRhC|L3b#|xK[Bepj#ut`H[,{E9Yr}1b{[e]{ZFk7[ZYbZ0XL]}Ye[(`d}c!|*y`Dg=b;gR]Hm=hJho}R-[n}9;{N![7k_{UbmN]rf#pTe[x8}!Qcs_rs[m`|>N}^V})7{^r|/E}),}HH{OYe2{Skx)e<_.cj.cjoMhc^d}0uYZd!^J_@g,[[[?{i@][|3S}Yl3|!1|eZ|5IYw|1D}e7|Cv{OHbnx-`wvb[6[4} =g+k:{C:}ed{S]|2M]-}WZ|/q{LF|dYu^}Gs^c{Z=}h>|/i|{W]:|ip{N:|zt|S<{DH[p_tvD{N<[8Axo{X4a.^o^X>Yfa59`#ZBYgY~_t^9`jZHZn`>G[oajZ;X,i)Z.^~YJe ZiZF^{][[#Zt^|]Fjx]&_5dddW]P0C[-]}]d|y {C_jUql] |OpaA[Z{lp|rz}:Mu#]_Yf6{Ep?f5`$[6^D][^u[$[6^.Z8]]ePc2U/=]K^_+^M{q*|9tYuZ,s(dS{i=|bNbB{uG}0jZOa:[-]dYtu3]:]<{DJ_SZIqr_`l=Yt`gkTnXb3d@kiq0a`Z{|!B|}e}Ww{Sp,^Z|0>_Z}36|]A|-t}lt{R6pi|v8hPu#{C>YOZHYmg/Z4nicK[}hF_Bg|YRZ7c|crkzYZY}_iXcZ.|)U|L5{R~qi^Uga@Y[xb}&qdbd6h5|Btw[}c<{Ds53[Y7]?Z<|e0{L[ZK]mXKZ#Z2^tavf0`PE[OSOaP`4gi`qjdYMgys/?[nc,}EEb,eL]g[n{E_b/vcvgb.{kcwi`~v%|0:|iK{Jh_vf5lb}KL|(oi=LrzhhY_^@`zgf[~g)[J_0fk_V{T)}I_{D&_/d9W/|MU[)f$xW}?$xr4<{Lb{y4}&u{XJ|cm{Iu{jQ}CMkD{CX|7A}G~{kt)nB|d5|<-}WJ}@||d@|Iy}Ts|iL|/^|no|0;}L6{Pm]7}$zf:|r2}?C_k{R(}-w|`G{Gy[g]bVje=_0|PT{^Y^yjtT[[[l!Ye_`ZN]@[n_)j3nEgMa]YtYpZy].d-Y_cjb~Y~[nc~sCi3|zg}B0}do{O^{|$`_|D{}U&|0+{J3|8*]iayx{a{xJ_9|,c{Ee]QXlYb]$[%YMc*]w[aafe]aVYi[fZEii[xq2YQZHg]Y~h#|Y:thre^@^|_F^CbTbG_1^qf7{L-`VFx Zr|@EZ;gkZ@slgko`[e}T:{Cu^pddZ_`yav^Ea+[#ZBbSbO`elQfLui}.F|txYcbQ`XehcGe~fc^RlV{D_0ZAej[l&jShxG[ipB_=u:eU}3e8[=j|{D(}dO{Do[BYUZ0/]AYE]ALYhZcYlYP/^-^{Yt_1_-;YT`P4BZG=IOZ&]H[e]YYd[9^F[1YdZxZ?Z{Z<]Ba2[5Yb[0Z4l?]d_;_)a?YGEYiYv`_XmZs4ZjY^Zb]6gqGaX^9Y}dXZr[g|]Y}K aFZp^k^F]M`^{O1Ys]ZCgCv4|E>}8eb7}l`{L5[Z_faQ|c2}Fj}hw^#|Ng|B||w2|Sh{v+[G}aB|MY}A{|8o}X~{E8paZ:]i^Njq]new)`-Z>haounWhN}c#{DfZ|fK]KqGZ=:u|fqoqcv}2ssm}.r{]{nIfV{JW)[K|,Z{Uxc|]l_KdCb%]cfobya3`p}G^|LZiSC]U|(X|kBlVg[kNo({O:g:|-N|qT}9?{MBiL}Sq{`P|3a|u.{Uaq:{_o|^S}jX{Fob0`;|#y_@[V[K|cw[<_ }KU|0F}d3|et{Q7{LuZttsmf^kYZ`Af`}$x}U`|Ww}d]| >}K,r&|XI|*e{C/a-bmr1fId4[;b>tQ_:]hk{b-pMge]gfpo.|(w[jgV{EC1Z,YhaY^q,_G[c_g[J0YX]`[h^hYK^_Yib,` {i6vf@YM^hdOKZZn(jgZ>bzSDc^Z%[[o9[2=/YHZ(_/Gu_`*|8z{DUZxYt^vuvZjhi^lc&gUd4|<UiA`z]$b/Z?l}YI^jaHxe|;F}l${sQ}5g}hA|e4}?o{ih}Uz{C)jPe4]H^J[Eg[|AMZMlc}:,{iz}#*|gc{Iq|/:|zK{l&}#u|myd{{M&v~nV};L|(g|I]ogddb0xsd7^V})$uQ{HzazsgxtsO^l}F>ZB]r|{7{j@cU^{{CbiYoHlng]f+nQ[bkTn/}<-d9q {KXadZYo+n|l[|lc}V2{[a{S4Zam~Za^`{HH{xx_SvF|ak=c^[v^7_rYT`ld@]:_ub%[$[m](Shu}G2{E.ZU_L_R{tz`vj(f?^}hswz}GdZ}{S:h`aD|?W|`dgG|if{a8|J1{N,}-Ao3{H#{mfsP|[ bzn+}_Q{MT{u4kHcj_q`eZj[8o0jy{p7}C|[}l){MuYY{|Ff!Ykn3{rT|m,^R|,R}$~Ykgx{P!]>iXh6[l[/}Jgcg{JYZ.^qYfYIZl[gZ#Xj[Pc7YyZD^+Yt;4;`e8YyZVbQ7YzZxXja.7SYl[s]2^/Ha$[6ZGYrb%XiYdf2]H]kZkZ*ZQ[ZYS^HZXcCc%Z|[(bVZ]]:OJQ_DZCg<[,]%Zaa [g{C00HY[c%[ChyZ,Z_`PbXa+eh`^&jPi0a[ggvhlekL]w{Yp^v}[e{~;k%a&k^|nR_z_Qng}[E}*Wq:{k^{FJZpXRhmh3^p>de^=_7`|ZbaAZtdhZ?n4ZL]u`9ZNc3g%[6b=e.ZVfC[ZZ^^^hD{E(9c(kyZ=bb|Sq{k`|vmr>izlH[u|e`}49}Y%}FT{[z{Rk}Bz{TCc/lMiAqkf(m$hDc;qooi[}^o:c^|Qm}a_{mrZ(pA`,}<2sY| adf_%|}`}Y5U;}/4|D>|$X{jw{C<|F.hK|*A{MRZ8Zsm?imZm_?brYWZrYx`yVZc3a@f?aK^ojEd {bN}/3ZH]/$YZhm^&j 9|(S|b]mF}UI{q&aM]LcrZ5^.|[j`T_V_Gak}9J[ ZCZD|^h{N9{~&[6Zd{}B}2O|cv]K}3s}Uy|l,fihW{EG`j_QOp~Z$F^zexS`dcISfhZBXP|.vn|_HYQ|)9|cr]<`&Z6]m_(ZhPcSg>`Z]5`~1`0Xcb4k1{O!bz|CN_T{LR|a/gFcD|j<{Z._[f)mPc:1`WtIaT1cgYkZOaVZOYFrEe[}T$}Ch}mk{K-^@]fH{Hdi`c*Z&|Kt{if[C{Q;{xYB`dYIX:ZB[}]*[{{p9|4GYRh2ao{DS|V+[zd$`F[ZXKadb*A] Ys]Maif~a/Z2bmclb8{Jro_rz|x9cHojbZ{GzZx_)]:{wAayeDlx}<=`g{H1{l#}9i|)=|lP{Qq}.({La|!Y{i2EZfp=c*}Cc{EDvVB|;g}2t{W4av^Bn=]ri,|y?|3+}T*ckZ*{Ffr5e%|sB{lx^0]eZb]9[SgAjS_D|uHZx]dive[c.YPkcq/}db{EQh&hQ|eg}G!ljil|BO]X{Qr_GkGl~YiYWu=c3eb}29v3|D|}4i||.{Mv})V{SP1{FX}CZW6{cm|vO{pS|e#}A~|1i}81|Mw}es|5[}3w{C`h9aL]o{}p[G`>i%a1Z@`Ln2bD[$_h`}ZOjhdTrH{[j_:k~kv[Sdu]CtL}41{I |[[{]Zp$]XjxjHt_eThoa#h>sSt8|gK|TVi[Y{t=}Bs|b7Zpr%{gt|Yo{CS[/{iteva|cf^hgn}($_c^wmb^Wm+|55jrbF|{9^ q6{C&c+ZKdJkq_xOYqZYSYXYl`8]-cxZAq/b%b*_Vsa[/Ybjac/OaGZ4fza|a)gY{P?| I|Y |,pi1n7}9bm9ad|=d{aV|2@[(}B`d&|Uz}B}{`q|/H|!JkM{FU|CB|.{}Az}#P|lk}K{|2rk7{^8^?`/|k>|Ka{Sq}Gz}io{DxZh[yK_#}9<{TRdgc]`~Z>JYmYJ]|`!ZKZ]gUcx|^E[rZCd`f9oQ[NcD_$ZlZ;Zr}mX|=!|$6ZPZYtIo%fj}CpcN|B,{VDw~gb}@hZg`Q{LcmA[(bo`<|@$|o1|Ss}9Z_}tC|G`{F/|9nd}i=}V-{L8aaeST]daRbujh^xlpq8|}zs4bj[S`J|]?G{P#{rD{]I`OlH{Hm]VYuSYUbRc*6[j`8]pZ[bt_/^Jc*[<Z?YE|Xb|?_Z^Vcas]h{t9|Uwd)_(=0^6Zb{Nc} E[qZAeX[a]P^|_J>e8`W^j_Y}R{{Jp__]Ee#e:iWb9q_wKbujrbR}CY`,{mJ}gz{Q^{t~N|? gSga`V_||:#mi}3t|/I`X{N*|ct|2g{km}gi|{={jC}F;|E}{ZZjYf*frmu}8Tdroi{T[|+~}HG{cJ}DM{Lp{Ctd&}$hi3|FZ| m}Kr|38}^c|m_|Tr{Qv|36}?Up>|;S{DV{k_as}BK{P}}9p|t`jR{sAm4{D=b4pWa[}Xi{EjwEkI}3S|E?u=X0{jf} S|NM|JC{qo^3cm]-|JUx/{Cj{s>{Crt[UXuv|D~|j|d{YXZR}Aq}0r}(_{pJfi_z}0b|-vi)Z mFe,{f4|q`b{}^Z{HM{rbeHZ|^x_o|XM|L%|uFXm}@C_{{Hhp%a7|0p[Xp+^K}9U{bP}: tT}B|}+$|b2|[^|~h{FAby[`{}xgygrt~h1[li`c4vz|,7p~b(|mviN}^pg[{N/|g3|^0c,gE|f%|7N{q[|tc|TKA{LU}I@|AZp(}G-sz{F |qZ{}F|f-}RGn6{Z]_5})B}UJ{FFb2]4ZI@v=k,]t_Dg5Bj]Z-]L]vrpdvdGlk|gF}G]|IW}Y0[G| /bo|Te^,_B}#n^^{QHYI[?hxg{[`]D^IYRYTb&kJ[cri[g_9]Ud~^_]<p@_e_XdNm-^/|5)|h_{J;{kacVopf!q;asqd}n)|.m|bf{QW|U)}b+{tL|w``N|to{t ZO|T]jF}CB|0Q{e5Zw|k |We}5:{HO{tPwf_uajjBfX}-V_C_{{r~gg|Ude;s+}KNXH}! `K}eW{Upwbk%ogaW}9EYN}YY|&v|SL{C3[5s.]Y]I]u{M6{pYZ`^,`ZbCYR[1mNg>rsk0Ym[jrE]RYiZTr*YJ{Ge|%-lf|y(`=[t}E6{k!|3)}Zk} ][G{E~cF{u3U.rJ|a9p#o#ZE|?|{sYc#vv{E=|LC}cu{N8`/`3`9rt[4|He{cq|iSYxY`}V |(Q|t4{C?]k_Vlvk)BZ^r<{CL}#h}R+[<|i=}X|{KAo]|W<`K{NW|Zx}#;|fe{IMr<|K~tJ_x}AyLZ?{GvbLnRgN}X&{H7|x~}Jm{]-| GpNu0}.ok>|c4{PYisrDZ|fwh9|hfo@{H~XSbO]Odv]%`N]b1Y]]|eIZ}_-ZA]aj,>eFn+j[aQ_+]h[J_m_g]%_wf.`%k1e#Z?{CvYu_B^|gk`Xfh^M3`afGZ-Z|[m{L}|k3cp[it ^>YUi~d>{T*}YJ{Q5{Jxa$hg|%4`}|LAgvb }G}{P=|<;Ux{_skR{cV|-*|s-{Mp|XP|$G|_J}c6cM{_=_D|*9^$ec{V;|4S{qO|w_|.7}d0|/D}e}|0G{Dq]Kdp{}dfDi>}B%{Gd|nl}lf{C-{y}|ANZr}#={T~|-(}c&{pI|ft{lsVP}){|@u}!W|bcmB{d?|iW|:dxj{PSkO|Hl]Li:}VYk@|2={fnWt{M3`cZ6|)}|Xj}BYa?vo{e4|L7|B7{L7|1W|lvYO}W8nJ|$Vih|{T{d*_1|:-n2dblk``fT{Ky|-%}m!|Xy|-a{Pz}[l{kFjz|iH}9N{WE{x,|jz}R {P|{D)c=nX|Kq|si}Ge{sh|[X{RF{t`|jsr*fYf,rK|/9}$}}Nf{y!1|<Std}4Wez{W${Fd_/^O[ooqaw_z[L`Nbv[;l7V[ii3_PeM}.h^viqYjZ*j1}+3{bt{DR[;UG}3Og,rS{JO{qw{d<_zbAh<R[1_r`iZTbv^^a}c{iEgQZ<exZFg.^Rb+`Uj{a+{z<[~r!]`[[|rZYR|?F|qppp]L|-d|}K}YZUM|=Y|ktm*}F]{D;g{uI|7kg^}%?Z%ca{N[_<q4xC]i|PqZC]n}.bDrnh0Wq{tr|OMn6tM|!6|T`{O`|>!]ji+]_bTeU}Tq|ds}n|{Gm{z,f)}&s{DPYJ`%{CGd5v4tvb*hUh~bf]z`jajiFqAii]bfy^U{Or|m+{I)cS|.9k:e3`^|xN}@Dnlis`B|Qo{`W|>||kA}Y}{ERYuYx`%[exd`]|OyiHtb}HofUYbFo![5|+]gD{NIZR|Go}.T{rh^4]S|C9_}xO^i`vfQ}C)bK{TL}cQ|79iu}9a];sj{P.o!f[Y]pM``Jda^Wc9ZarteBZClxtM{LW}l9|a.mU}KX}4@{I+f1}37|8u}9c|v${xGlz}jP{Dd1}e:}31}%3X$|22i<v+r@~mf{sN{C67G97855F4YL5}8f{DT|xy{sO{DXB334@55J1)4.G9A#JDYtXTYM4, YQD9;XbXm9SX]IB^4UN=Xn<5(;(F3YW@XkH-X_VM[DYM:5XP!T&Y`6|,^{IS-*D.H>:LXjYQ0I3XhAF:9:(==.F*3F1189K/7163D,:@|e2{LS36D4hq{Lw/84443@4.933:0307::6D7}&l{Mx657;89;,K5678H&93D(H<&<>0B90X^I;}Ag1{P%3A+>><975}[S{PZE453?4|T2{Q+5187;>447:81{C=hL6{Me^:=7ii{R=.=F<81;48?|h8}Uh{SE|,VxL{ST,7?9Y_5Xk3A#:$%YSYdXeKXOD8+TXh7(@>(YdXYHXl9J6X_5IXaL0N?3YK7Xh!1?XgYz9YEXhXaYPXhC3X`-YLY_XfVf[EGXZ5L8BXL9YHX]SYTXjLXdJ: YcXbQXg1PX]Yx4|Jr{Ys4.8YU+XIY`0N,<H%-H;:0@,74/:8546I=9177154870UC]d<C3HXl7ALYzXFXWP<<?E!88E5@03YYXJ?YJ@6YxX-YdXhYG|9o{`iXjY_>YVXe>AYFX[/(I@0841?):-B=14337:8=|14{c&93788|di{cW-0>0<097/A;N{FqYpugAFT%X/Yo3Yn,#=XlCYHYNX[Xk3YN:YRT4?)-YH%A5XlYF3C1=NWyY}>:74-C673<69545v {iT85YED=64=.F4..9878/D4378?48B3:7:7/1VX[f4{D,{l<5E75{dAbRB-8-@+;DBF/$ZfW8S<4YhXA.(5@*11YV8./S95C/0R-A4AXQYI7?68167B95HA1*<M3?1/@;/=54XbYP36}lc{qzSS38:19?,/39193574/66878Yw1X-87E6=;964X`T734:>86>1/=0;(I-1::7ALYGXhF+Xk[@W%TYbX7)KXdYEXi,H-XhYMRXfYK?XgXj.9HX_SX]YL1XmYJ>Y}WwIXiI-3-GXcYyXUYJ$X`Vs[7;XnYEZ;XF! 3;%8;PXX(N3Y[)Xi1YE&/ :;74YQ6X`33C;-(>Xm0(TYF/!YGXg8 9L5P01YPXO-5%C|qd{{/K/E6,=0144:361:955;6443@?B7*7:F89&F35YaX-CYf,XiFYRXE_e{}sF 0*7XRYPYfXa5YXXY8Xf8Y~XmA[9VjYj*#YMXIYOXk,HHX40YxYMXU8OXe;YFXLYuPXP?EB[QV0CXfY{:9XV[FWE0D6X^YVP*$4%OXiYQ(|xp|%c3{}V`1>Y`XH00:8/M6XhQ1:;3414|TE|&o@1*=81G8<3}6<|(f6>>>5-5:8;093B^3U*+*^*UT30XgYU&7*O1953)5@E78--F7YF*B&0:%P68W9Zn5974J9::3}Vk|-,C)=)1AJ4+<3YGXfY[XQXmT1M-XcYTYZXCYZXEYXXMYN,17>XIG*SaS|/eYJXbI?XdNZ+WRYP<F:R PXf;0Xg`$|1GX9YdXjLYxWX!ZIXGYaXNYm6X9YMX?9EXmZ&XZ#XQ>YeXRXfAY[4 ;0X!Zz0XdN$XhYL XIY^XGNXUYS/1YFXhYk.TXn4DXjB{jg|4DEX]:XcZMW=A.+QYL<LKXc[vV$+&PX*Z3XMYIXUQ:ZvW< YSXFZ,XBYeXMM)?Xa XiZ4/EXcP3%}&-|6~:1(-+YT$@XIYRBC<}&,|7aJ6}bp|8)K1|Xg|8C}[T|8Q.89;-964I38361<=/;883651467<7:>?1:.}le|:Z=39;1Y^)?:J=?XfLXbXi=Q0YVYOXaXiLXmJXO5?.SFXiCYW}-;|=u&D-X`N0X^,YzYRXO(QX_YW9`I|>hZ:N&X)DQXP@YH#XmNXi$YWX^=!G6YbYdX>XjY|XlX^XdYkX>YnXUXPYF)FXT[EVTMYmYJXmYSXmNXi#GXmT3X8HOX[ZiXN]IU2>8YdX1YbX<YfWuZ8XSXcZU%0;1XnXkZ_WTG,XZYX5YSX Yp 05G?XcYW(IXg6K/XlYP4XnI @XnO1W4Zp-9C@%QDYX+OYeX9>--YSXkD.YR%Q/Yo YUX].Xi<HYEZ2WdCE6YMXa7F)=,D>-@9/8@5=?7164;35387?N<618=6>7D+C50<6B03J0{Hj|N9$D,9I-,.KB3}m |NzE0::/81YqXjMXl7YG; [.W=Z0X4XQY]:MXiR,XgM?9$9>:?E;YE77VS[Y564760391?14941:0=:8B:;/1DXjFA-564=0B3XlH1+D85:0Q!B#:-6&N/:9<-R3/7Xn<*3J4.H:+334B.=>30H.;3833/76464665755:/83H6633:=;.>5645}&E|Y)?1/YG-,93&N3AE@5 <L1-G/8A0D858/30>8<549=@B8] V0[uVQYlXeD(P#ID&7T&7;Xi0;7T-$YE)E=1:E1GR):--0YI7=E<}n9|aT6783A>D7&4YG7=391W;Zx<5+>F#J39}o/|cc;6=A050EQXg8A1-}D-|d^5548083563695D?-.YOXd37I$@LYLWeYlX<Yd+YR A$;3-4YQ-9XmA0!9/XLY_YT(=5XdDI>YJ5XP1ZAW{9>X_6R(XhYO65&J%DA)C-!B:97#A9;@?F;&;(9=11/=657/H,<8}bz|j^5446>.L+&Y^8Xb6?(CYOXb*YF(8X`FYR(XPYVXmPQ%&DD(XmZXW??YOXZXfCYJ79,O)XnYF7K0!QXmXi4IYFRXS,6<%-:YO(+:-3Q!1E1:W,Zo}Am|n~;3580534*?3Zc4=9334361693:30C<6/717:<1/;>59&:4}6!|rS36=1?75<8}[B|s809983579I.A.>84758=108564741H*9E{L{|u%YQ<%6XfH.YUXe4YL@,>N}Tv|ve*G0X)Z;/)3@A74(4P&A1X:YVH97;,754*A66:1 D739E3553545558E4?-?K17/770843XAYf838A7K%N!YW4.$T19Z`WJ*0XdYJXTYOXNZ 1XaN1A+I&Xi.Xk3Z3GB&5%WhZ1+5#Y[X<4YMXhQYoQXVXbYQ8XSYUX4YXBXWDMG0WxZA[8V+Z8X;D],Va$%YeX?FXfX[XeYf<X:Z[WsYz8X_Y]%XmQ(!7BXIZFX]&YE3F$(1XgYgYE& +[+W!<YMYFXc;+PXCYI9YrWxGXY9DY[!GXiI7::)OC;*$.>N*HA@{C|}&k=:<TB83X`3YL+G4XiK]i}(fYK<=5$.FYE%4*5*H*6XkCYL=*6Xi6!Yi1KXR4YHXbC8Xj,B9ZbWx/XbYON#5B}Ue}+QKXnF1&YV5XmYQ0!*3IXBYb71?1B75XmF;0B976;H/RXU:YZX;BG-NXj;XjI>A#D3B636N;,*%<D:0;YRXY973H5)-4FXOYf0:0;/7759774;7;:/855:543L43<?6=E,.A4:C=L)%4YV!1(YE/4YF+ F3%;S;&JC:%/?YEXJ4GXf/YS-EXEYW,9;E}X$}547EXiK=51-?71C%?57;5>463553Zg90;6447?<>4:9.7538XgN{|!}9K/E&3-:D+YE1)YE/3;37/:05}n<}:UX8Yj4Yt864@JYK..G=.(A Q3%6K>3(P3#AYE$-6H/456*C=.XHY[#S.<780191;057C)=6HXj?955B:K1 E>-B/9,;5.!L?:0>/.@//:;7833YZ56<4:YE=/:7Z_WGC%3I6>XkC*&NA16X=Yz2$X:Y^&J48<99k8}CyB-61<18K946YO4{|N}E)YIB9K0L>4=46<1K0+R;6-=1883:478;4,S+3YJX`GJXh.Yp+Xm6MXcYpX(>7Yo,/:X=Z;Xi0YTYHXjYmXiXj;*;I-8S6N#XgY}.3XfYGO3C/$XjL$*NYX,1 6;YH&<XkK9C#I74.>}Hd`A748X[T450[n75<4439:18A107>|ET}Rf<1;14876/Yb983E<5.YNXd4149>,S=/4E/<306443G/06}0&}UkYSXFYF=44=-5095=88;63844,9E6644{PL}WA8:>)7+>763>>0/B3A545CCnT}Xm|dv}Xq1L/YNXk/H8;;.R63351YY747@15YE4J8;46;.38.>4A369.=-83,;Ye3?:3@YE.4-+N353;/;@(X[YYD>@/05-I*@.:551741Yf5>6A443<3535;.58/86=D4753442$635D1>0359NQ @73:3:>><Xn?;43C14 ?Y|X611YG1&<+,4<*,YLXl<1/AIXjF*N89A4Z576K1XbJ5YF.ZOWN.YGXO/YQ01:4G38Xl1;KI0YFXB=R<7;D/,/4>;$I,YGXm94@O35Yz66695385.>:6A#5}W7n^4336:4157597434433<3|XA}m`>=D>:4A.337370?-6Q96{`E|4A}C`|Qs{Mk|J+~r>|o,wHv>Vw}!c{H!|Gb|*Ca5}J||,U{t+{CN[!M65YXOY_*B,Y[Z9XaX[QYJYLXPYuZ%XcZ8LY[SYPYKZM<LMYG9OYqSQYM~[e{UJXmQYyZM_)>YjN1~[f3{aXFY|Yk:48YdH^NZ0|T){jVFYTZNFY^YTYN~[h{nPYMYn3I]`EYUYsYIZEYJ7Yw)YnXPQYH+Z.ZAZY]^Z1Y`YSZFZyGYHXLYG 8Yd#4~[i|+)YH9D?Y^F~Y7|-eYxZ^WHYdYfZQ~[j|3>~[k|3oYmYqY^XYYO=Z*4[]Z/OYLXhZ1YLZIXgYIHYEYK,<Y`YEXIGZI[3YOYcB4SZ!YHZ*&Y{Xi3~[l|JSY`Zz?Z,~[m|O=Yi>??XnYWXmYS617YVYIHZ(Z4[~L4/=~[n|Yu{P)|];YOHHZ}~[o33|a>~[r|aE]DH~[s|e$Zz~[t|kZFY~XhYXZB[`Y}~[u|{SZ&OYkYQYuZ2Zf8D~[v}% ~[w3},Q[X]+YGYeYPIS~[y}4aZ!YN^!6PZ*~[z}?E~[{3}CnZ=~[}}EdDZz/9A3(3S<,YR8.D=*XgYPYcXN3Z5 4)~[~}JW=$Yu.XX~] }KDX`PXdZ4XfYpTJLY[F5]X~[2Yp}U+DZJ::<446[m@~]#3}]1~]%}^LZwZQ5Z`/OT<Yh^ -~]&}jx[ ~m<z!%2+~ly4VY-~o>}p62yz!%2+Xf2+~ly4VY-zQ`z (=] 2z~o2\",C={\" \":0,\"!\":1},c=34,i=2,p,s=\"\",u=String.fromCharCode,t=u(12539),m=[];while(++c<127)C[u(c)]=c^39&&c^92?i++:0;i=0;while(0<=(c=C[a.charAt(i++)]))if(16==c)if((c=C[a.charAt(i++)])<87){if(86==c)c=1879;while(c--){/*s+=u(*/++p/*)*/;m.push(p)}}else{/*s+=s.substr(8272,360);*/m=m.concat(m.slice(8272,8632))}else if(c<86){/*s+=u(*/p+=c<51?c-16:(c-55)*92+C[a.charAt(i++)]/*)*/;m.push(p)}else if((c=((c-86)*92+C[a.charAt(i++)])*92+C[a.charAt(i++)])<49152){/*s+=u(*/p=c<40960?c:c|57344/*)*/;m.push(p)}else{c&=511;while(c--){/*s+=t*/;m.push(12539)}p=12539}return {\"array\":m}')();\r\n\r\n// var JCT8836=(JCT11280=JISX0208.s).substring(0,8836);\r\n\r\n/**\r\n * U2CP,CP2U Unicode番号とJIS番号の対応テーブル\r\n * Unicode番号はスカラ値、JIS番号は区点位置(1面、1～119区、1～94点)を1+7+7bitの15bit整数にしたものを用いる。\r\n * \r\n * JCT11280はWindows-31Jのテーブルで、重複登録された漢字がある。 重複登録された漢字の区点位置を求める場合はWindows\r\n * APIの仕様に従い (1)JIS X 0208-1990の登録文字である場合は、これに統一\r\n * (2)「NEC特殊文字」「IBM拡張文字」が重複する場合は、「NEC特殊文字」に統一\r\n * (3)「NEC選定IBM拡張文字」「IBM拡張文字」が重複する場合は、「IBM拡張文字」に統一 のルールでコードポイントに変換する。\r\n * 言い換えると,1～88区までは先に現れたコードポイントを優先し、89～92区のNEC選定IBM拡張文字は利用せず\r\n * 代わりに115～119区に現れるIBM拡張文字のコードポイントを利用する\r\n * \r\n * @see http://ja.wikipedia.org/wiki/Microsoft%E3%82%B3%E3%83%BC%E3%83%89%E3%83%9A%E3%83%BC%E3%82%B8932#Windows-31J_.E3.81.AB.E9.87.8D.E8.A4.87.E7.99.BB.E9.8C.B2.E3.81.95.E3.82.8C.E3.81.9F.E3.82.B3.E3.83.BC.E3.83.89\r\n */\r\nvar U2CP={},CP2U={},P1=1<<14;\r\n(function(array) {\r\n    var sc,cp,i,il=array.length;\r\n    for(i=0;i<il;i++) {\r\n        sc = array[i];\r\n        if(sc===12539&&i>5){continue;}\r\n        cp = P1|(i/94|0)<<7|i%94;\r\n        CP2U[cp] = sc;\r\n        if((i<8272||10715<i) && U2CP[sc]===undefined) {U2CP[sc] = cp;}\r\n    }\r\n})(JISX0208.array);\r\n\r\nvar charset={Unicode:{},SJIS:{},EUCJP:{},JIS7:{},JIS8:{},UTF7:{},UTF8:{},UTF16LE:{},UTF16BE:{},MUTF7:{}},\r\n        enc={Text:{},Unicode:{},URI:{},Base64:{}};\r\n\r\n/**\r\n * 文字列を16bit整数の配列に変換する\r\n */\r\nenc.Text.parse = function(str){\r\n    var a=[],i,il=str.length;\r\n    for(i=0;i<il;i++) {\r\n        a.push(str.charCodeAt(i));\r\n    }\r\n    return a;\r\n};\r\n/**\r\n * 16bit整数の配列を文字列に変換する\r\n */\r\nenc.Text.stringify = function(array) {\r\n    var s=\"\",i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        s+=String.fromCharCode(array[i]);\r\n    }\r\n    return s;\r\n};\r\n/**\r\n * 文字列を24bit(0..0x10FFFF)整数の配列に変換する\r\n */\r\ncharset.Unicode.parse = function(str){\r\n    var a=[],i,il=str.length,c;\r\n    for(i=0;i<il;i++) {\r\n        // scalar UTF-16\r\n        // 000uuuuuxxxxxxyyyyyyyyyy 110110wwwwxxxxxx 110111yyyyyyyyyy wwww =\r\n        // uuuuu - 1\r\n        55295<(c=str.charCodeAt(i))&&c<56320&&(c=((c&1023)+64<<10)+(str.charCodeAt(++i)&1023));\r\n        a.push(c);\r\n    }\r\n    return a;\r\n};\r\n/**\r\n * 24bit整数の配列を文字列に変換する\r\n */\r\ncharset.Unicode.stringify = function(array){\r\n    var s=\"\",i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        s+=(c=array[i])>65535?String.fromCharCode((c>>>10)-64|55296,(c&1023|56320)):String.fromCharCode(c);\r\n    }\r\n    return s;\r\n};\r\ncharset.Unicode.fromU=charset.Unicode.toU=function(a){return a;}\r\n// http://charset.7jp.net/sjis.html\r\n// http://ja.wikipedia.org/wiki/Microsoft%E3%82%B3%E3%83%BC%E3%83%89%E3%83%9A%E3%83%BC%E3%82%B8932\r\n/**\r\n * UTF-16の配列からSJISの8bit配列に変換する\r\n * \r\n * @param {Array}\r\n *            array Unicodeの24it配列\r\n * @return {Array} SJISの8bit配列\r\n */\r\ncharset.SJIS.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,s,m;\r\n    for(i=0;i<il;i++) {\r\n        c=array[i];\r\n        c<128 ? a.push(c) : \r\n            65376<c&&c<65440 ? a.push(c-65216) : \r\n/*\r\n * (c=JCT11280.indexOf((s=String.fromCharCode(c))))<0 ? a.push(129,69) :\r\n * a.push( (m=((c<8272?c:(c=JCT11280.lastIndexOf(s)))-(c%=188))/188)<31 ?\r\n * m+129 : m+193, //mは(区-1)/2 c+=c<63?64:65 )\r\n */\r\n                (c=U2CP[c]||-1)<0||c>31499 ? a.push(129,69) : a.push(\r\n                    (m=(c>>>7&127),c=(c&127)+(m&1)*94,m=m>>>1)<31 ? m+129 : m+193,\r\n                    c+=c<63?64:65\r\n                )\r\n\r\n    }\r\n    return a;\r\n};\r\n/**\r\n * SJISの8bit配列をUnicodeの配列に変換する\r\n * \r\n * @param {Array}\r\n *            array SJISの8bit配列\r\n * @return {Array} Unicodeの24bit配列\r\n */\r\ncharset.SJIS.toU = function(array) {\r\n    var a=[],i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        (c<128||160<c&&c<224) \r\n            ? a.push(160<c?c+65216:c) // ASCII+ｶﾅ\r\n// : a.push(\r\n// JCT11280.charAt((c<160?c-129:c-193)*188+(c=array[++i],c<127?c-64:c-65)).charCodeAt(0)\r\n// )\r\n            : a.push( CP2U[P1|(c<160?c-129:c-193)<<8|(c=array[++i],c<127?c-64:c<159?c-65:c-31)] )\r\n    }\r\n    return a;\r\n};\r\n// http://www.unixuser.org/~euske/doc/kanjicode/\r\n// JIS区点位置からSJISに変換\r\ncharset.SJIS.fromJ = function(array) {\r\n    var a=[],i,il=array.length,c,m;\r\n    for(i=0;i<il;i++) {\r\n        c=array[i];\r\n        c<224 ? a.push(c)\r\n            : c>31499 ? a.push(129,69)\r\n                : a.push(\r\n                    (m=(c>>>7&127),c=(c&127)+(m&1)*94,m=m>>>1)<31 ? m+129 : m+193,\r\n                    c+=c<63?64:65\r\n                )\r\n    }\r\n    return a;\r\n};\r\ncharset.SJIS.toJ = function(array) {\r\n    var a=[],i,il=array.length,c,k;\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        (c<128||160<c&&c<224) ? a.push(c) // ASCII+ｶﾅ\r\n            : a.push( P1|(c<160?c-129:c-193)<<8|(c=array[++i],c<127?c-64:c<159?c-65:c-31) )\r\n    }\r\n    return a;\r\n};\r\n// http://ja.wikipedia.org/wiki/EUC-JP, http://charset.7jp.net/euc.html\r\ncharset.EUCJP.fromU = function(array) {\r\n    var a=[],i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<128 ? a.push(c) : \r\n            65376<c&&c<65440 ? a.push(142,c-65216) : \r\n/*\r\n * (c=JCT8836.indexOf(String.fromCharCode(c)))<0 ? a.push(161,166) : (\r\n * a.push((c-(c%=94))/94+161, c+161)\r\n */\r\n                (c=U2CP[c]||-1)<0||c>31499 ? a.push(161,166) : (\r\n                    a.push((c>>>7&127)+161, (c&127)+161)\r\n                )\r\n    }\r\n    return a;\r\n};\r\ncharset.EUCJP.toU = function(array) {\r\n    var a=[],i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        (c<161)\r\n            ? a.push(c<128 ? c : array[++i]+65216) // ASCII+ｶﾅ\r\n// : a.push(JCT8836.charAt((c-161)*94 + array[++i]-161).charCodeAt(0))\r\n                : a.push(CP2U[P1|(c-161)<<7|array[++i]-161])\r\n    }\r\n    return a;\r\n};\r\ncharset.EUCJP.fromJ = function(array) {\r\n    var a=[],i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<224 ? a.push(c<128?c:c+65216)\r\n            : c>31499 ? a.push(161,166)\r\n                : a.push((c>>>7&127)+161, (c&127)+161)\r\n    }\r\n    return a;\r\n};\r\ncharset.EUCJP.toJ = function(array) {\r\n    var a=[],i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        (c<161) ? a.push(c<128 ? c : array[++i]) // ASCII+ｶﾅ\r\n            : a.push( P1|(c-161)<<7|array[++i]-161 )\r\n    }\r\n    return a;\r\n};\r\n// http://charset.7jp.net/jis.html,\r\n// http://yasu.asuka.net/translations/RFC1468.html\r\ncharset.JIS7.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0]; // \"\\e(B\":ASCIIの開始,\"\\e(I\":半角カタカナの開始,\"\\e$B\":漢字の開始\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<128 ? ((e!=es[0] && (e=es[0],a.push(27,40,66))),a.push(c))\r\n            : 65376<c&&c<65440 ? ((e!=es[1] && (e=es[1],a.push(27,40,73))),a.push(c-65344))\r\n                : (e!=es[2] && (e=es[2],a.push(27,36,66)),\r\n// (c=JCT8836.indexOf(String.fromCharCode(c)))<0 ? a.push(33,38) :\r\n// a.push((c-(c%=94))/94+33,c+33))\r\n                        (c=U2CP[c]||-1)<0||c>31499 ? a.push(33,38) : a.push((c>>>7&127)+33,(c&127)+33))\r\n    }\r\n    e!==es[0] && a.push(27,40,66); // ASCIIで終わっている必要がある\r\n    return a;\r\n};\r\ncharset.JIS7.toU = function(array) {\r\n// \"\\e(B\":ASCIIの開始,\"\\e(I\":半角カタカナの開始,\"\\e$B\":漢字の開始, \"\\e(J\":ローマ字セット(≒ASCII)開始,\r\n// \"\\e$@\":漢字の開始(旧)\r\n// 0x1b2842(27,40,66), 0x1b2849(27,40,73), 0x1b2442(27,36,66),\r\n// 0x1b284a(27,40,74), 0x1b2440(27,36,64)\r\n// [27,40,66]or[27,40,74]ならASCII、[27,40,73]なら半角カナ、[27,36,66]or[27,36,64]なら漢字としてデコードする\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0];\r\n    for(i=0;i<il;i++) {\r\n        array[i]===27 && (array[++i]===36?(e=es[2],i+=2):(e=(array[++i]===73?es[1]:es[0]),i++));\r\n        (i<il)&&(c=array[i]) && ( \r\n// e===es[2] ? a.push(JCT8836.charAt((c-33)*94+array[++i]-33).charCodeAt(0))\r\n                e===es[2] ? a.push(CP2U[P1|c-33<<7|array[++i]-33])\r\n                : e===es[1] ? a.push(c+65344)\r\n                    : a.push(c<128 ? c : c+65216)\r\n        );\r\n    }\r\n    return a;\r\n};\r\ncharset.JIS7.fromJ = function(array) {\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0];\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<128 ? ((e!=es[0] && (e=es[0],a.push(27,40,66))),a.push(c))\r\n            : 160<c&&c<224 ? ((e!=es[1] && (e=es[1],a.push(27,40,73))),a.push(c))\r\n                : (e!=es[2] && (e=es[2],a.push(27,36,66)),\r\n                    c<P1||c>31499 ? a.push(33,38) : a.push((c>>>7&127)+33,(array[++i]&127)+33))\r\n    }\r\n    e!==es[0] && a.push(27,40,66); // ASCIIで終わっている必要がある\r\n    return a;\r\n};\r\ncharset.JIS7.toJ = function(array) {\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0];\r\n    for(i=0;i<il;i++) {\r\n        array[i]===27 && (array[++i]===36?(e=es[2],i+=2):(e=(array[++i]===73?es[1]:es[0]),i++));\r\n        (i<il)&&(c=array[i]) && ( \r\n            e===es[2] ? a.push(P1|c-33<<7|array[++i]-33)\r\n                : e===es[1] ? a.push(c+128) : a.push(c)\r\n        );\r\n    }\r\n    return a;\r\n};\r\ncharset.JIS = charset.JIS7;\r\n// JIS7と違い半角カナは ASCIIシーケンス[\\e(B]のA1-DFに入る\r\ncharset.JIS8.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0];\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<128||65376<c&&c<65440 ? ((e!=es[0] && (e=es[0],a.push(27,40,66))),a.push(c<128?c:c-65216))\r\n            : (e!==es[2] && (e=es[2],a.push(27,36,66)),\r\n// (c=JCT8836.indexOf(String.fromCharCode(c)))<0 ? a.push(33,38) :\r\n// a.push((c-(c%=94))/94+33,c+33))\r\n                    (c=U2CP[c]||-1)<0||c>31499 ? a.push(33,38) : a.push((c>>>7&127)+33,(c&127)+33))\r\n    }\r\n    e!==es[0] && a.push(27,40,66);\r\n    return a;\r\n};\r\n// 半角カナシーケンスも念のため考慮する\r\ncharset.JIS8.toU = function(array) {\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0];\r\n    for(i=0;i<il;i++) {\r\n        array[i]===27&&(array[++i]===36?(e=es[2],i+=2):(e=(array[++i]===73?es[1]:es[0]),i++));\r\n        (i<il)&&(c=array[i]) && (\r\n// e===es[2] ? a.push(JCT8836.charAt((c-33)*94+array[++i]-33).charCodeAt(0))\r\n                e===es[2] ? a.push(CP2U[P1|c-33<<7|array[++i]-33])\r\n                : e===es[1] ? a.push(c+65344)\r\n                    : a.push(c<128 ? c : c+65216)\r\n        );\r\n    }\r\n    return a;\r\n};\r\ncharset.JIS8.fromJ = function(array) {\r\n    var a=[],i,il=array.length,c,es=[0,1,2],e=es[0];\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<128||160<c&&c<224 ? ((e!=es[0] && (e=es[0],a.push(27,40,66))),a.push(c))\r\n            : (e!==es[2] && (e=es[2],a.push(27,36,66)),\r\n                c<P1||c>31499 ? a.push(33,38) : a.push((c>>>7&127)+33,(array[++i]&127)+33))\r\n    }\r\n    e!==es[0] && a.push(27,40,66);\r\n    return a;\r\n};\r\ncharset.JIS8.toJ = charset.JIS7.toJ;\r\n// http://ja.wikipedia.org/wiki/UTF-7\r\n// http://suika.fam.cx/~wakaba/wiki/sw/n/UTF-7\r\n// 62のアルファベットと9の記号 ['(),-./:?] はそのまま表記する。\r\n// [\\t\\n\\r !\"#$%&*;<=>@[]^_`{|}]は表記してもいいし符号化してもいい(fromUでは符号化する)\r\ncharset.UTF7.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,tmp=[];\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        38<c&&c<59&&c!=42||c===63||64<c&&c<91||96<c&&c<123 ? (a.push(c),c===43&&a.push(45)) : (a.push(43),tmp.push(c))\r\n        if (tmp.length>0) {\r\n            while((c=array[i+1]) && !(38<c&&c<59&&c!=42||c===63||64<c&&c<91||96<c&&c<123)) {tmp.push(c);i++;}\r\n            a = a.concat(enc.Base64.fromU(tmp,charset.UTF16BE));\r\n            a.push(45);\r\n            tmp=[];\r\n        }\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF7.toU = function(array) {\r\n    var a=[],i,il=array.length,c,tmp=[];\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        8<c&&c<11||c===13||31<c&&c<126&&c!==43&&c!==92\r\n            ? a.push(c) // (?![^+\\\\~])[ !-}]\r\n            : c===43 // \"+\"\r\n                ? (c=array[++i])===45 // \"-\"\r\n                    ? a.push(c)   // \"+-\" => \"+\"\r\n                    : tmp.push(c) // Base64\r\n                : a.push(63); // 不正な文字は?に\r\n        if (tmp.length>0) {\r\n            while((c=array[i+1]) && (c===43||46<c&&c<58||64<c&&c<91||96<c&&c<123)) {tmp.push(c);i++;}\r\n            array[i+1]===45 && i++; // 直後がBase64以外の文字なら-を省略可能(直後が-だったら-はスキップしそれ以外だったら次に読む)\r\n            a = a.concat(enc.Base64.toU(tmp,charset.UTF16BE));\r\n            tmp=[];\r\n        }\r\n    }\r\n    return a;\r\n};\r\n// Modified UTF-7 の実装 http://tools.ietf.org/rfc/rfc3501.txt\r\n/*\r\n * 5.1.3. Mailbox International Naming Convention By convention, international\r\n * mailbox names in IMAP4rev1 are specified using a modified version of the\r\n * UTF-7 encoding described in [UTF-7]. Modified UTF-7 may also be usable in\r\n * servers that implement an earlier version of this protocol. In modified\r\n * UTF-7, printable US-ASCII characters, except for \"&\", represent themselves;\r\n * that is, characters with octet values 0x20-0x25 and 0x27-0x7e. The character\r\n * \"&\" (0x26) is represented by the two-octet sequence \"&-\". All other\r\n * characters (octet values 0x00-0x1f and 0x7f-0xff) are represented in modified\r\n * BASE64, with a further modification from [UTF-7] that \",\" is used instead of\r\n * \"/\". Modified BASE64 MUST NOT be used to represent any printing US-ASCII\r\n * character which can represent itself. \"&\" is used to shift to modified BASE64\r\n * and \"-\" to shift back to US-ASCII. There is no implicit shift from BASE64 to\r\n * US-ASCII, and null shifts (\"-&\" while in BASE64; note that \"&-\" while in\r\n * US-ASCII means \"&\") are not permitted. However, all names start in US-ASCII,\r\n * and MUST end in US-ASCII; that is, a name that ends with a non-ASCII\r\n * ISO-10646 character MUST end with a \"-\").\r\n */\r\ncharset.MUTF7.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,tmp=[];\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        31<c&&c<127 ? (a.push(c),c===38&&a.push(45)) : (a.push(38),tmp.push(c))\r\n        if (tmp.length>0) {\r\n            while((c=array[i+1]) && (c<32||126<c)) {tmp.push(c);i++;}\r\n            tmp = enc.Base64.fromU(tmp,charset.UTF16BE);\r\n            for(j=0;j<tmp.length;j++){tmp[j]===47&&(tmp[j]=44)}; // \"/\" =>\r\n                                                                    // \",\"\r\n            a = a.concat(tmp);\r\n            a.push(45);\r\n            tmp=[];\r\n        }\r\n    }\r\n    return a;\r\n};\r\ncharset.MUTF7.toU = function(array) {\r\n    var a=[],i,il=array.length,c,tmp=[];\r\n    for(i=0;i<il;i++) {\r\n        c = array[i];\r\n        31<c&&c<127&&c!==38\r\n            ? a.push(c) // &以外\r\n            : c===38 // \"&\"\r\n                ? (c=array[++i])===45 // \"-\"\r\n                    ? a.push(38)   // \"&-\" => \"&\"\r\n                    : tmp.push(c) // Base64\r\n                : a.push(65533); // 不正な文字は\\ufffdに\r\n        if (tmp.length>0) {\r\n            while((c=array[i+1]) && (42<c&&c<45||47<c&&c<58||64<c&&c<91||96<c&&c<123)) {tmp.push(c===44?47:c);i++;}\r\n            array[i+1]===45 && i++;\r\n            a = a.concat(enc.Base64.toU(tmp,charset.UTF16BE));\r\n            tmp=[];\r\n        }\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF8.fromU = function(array) {\r\n    var a=[],i,il=array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])<128 ? a.push(c)\r\n            : c<2048 ? a.push(c>>>6|192,c&63|128)\r\n                : c<65536 ? a.push(c>>>12|224,c>>>6&63|128,c&63|128)\r\n                    : a.push(c>>>18|240,c>>>12&63|128,c>>>6&63|128,c&63|128)\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF8.toU = function(array) {\r\n    var a=[],i=0,il=array.length,c;\r\n    array[0]===239&&array[1]===187&&array[2]===191&&(i=3);// BOM\r\n    for(;i<il;i++) a.push(\r\n        (c=array[i])<128 ? c\r\n            : c<224 ? (c&31)<<6|array[++i]&63\r\n                : c<240 ? ((c&15)<<6|array[++i]&63)<<6|array[++i]&63\r\n                    : (((c&7)<<6|array[++i]&63)<<6|array[++i]&63)<<6|array[++i]&63\r\n    );\r\n    return a;\r\n};\r\ncharset.UTF16LE.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,m;\r\n    for(i=0;i<il;i++) {\r\n        // scalar UTF-16\r\n        // 000uuuuuxxxxxxyyyyyyyyyy 110110wwwwxxxxxx 110111yyyyyyyyyy wwww =\r\n        // uuuuu - 1\r\n        (c=array[i])>65535&&(m=(c>>>10)-64|55296,a.push(m&255,m>>>8),c=(c&1023|56320));\r\n        a.push(c&255,c>>>8);\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF16LE.toU = function(array) {\r\n    var a=[],i=0,il=array.length,c;\r\n    array[0]===255&&array[1]===254&&(i=2);\r\n    for(;i<il;i++) {\r\n        c=array[i]|array[++i]<<8;\r\n        55295<c&&c<56320&&(c=((c&1023)+64<<10)+((array[++i]|array[++i]<<8)&1023));\r\n        a.push(c);\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF16BE.fromU = function(array) {\r\n    var a=[],i,il=array.length,c,m;\r\n    for(i=0;i<il;i++) {\r\n        (c=array[i])>65535&&(m=(c>>>10)-64|55296,a.push(m>>>8,m&255),c=(c&1023|56320));\r\n        a.push(c>>>8,c&255);\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF16BE.toU = function(array) {\r\n    var a=[],i=0,il=array.length,c;\r\n    array[0]===254&&array[1]===255&&(i=2);\r\n    for(;i<il;i++) {\r\n        c=array[i]<<8|array[++i];\r\n        55295<c&&c<56320&&(c=((c&1023)+64<<10)+((array[++i]<<8|array[++i])&1023));\r\n        a.push(c);\r\n    }\r\n    return a;\r\n};\r\ncharset.UTF16 = charset.UTF16BE;\r\n/**\r\n * convert_array 他の文字コード配列に変換する\r\n * \r\n * @memberof Util.Encoding\r\n * @param {Array}\r\n *            array 変換前配列\r\n * @param {String|Object}\r\n *            to 変換先の文字コード('SJIS','UTF8',Encoding.charset.SJIS,など)\r\n * \r\n * @param {String|Object}\r\n *            from 変換元の文字コード('SJIS','UTF8',Encoding.charset.SJIS,など)<BR>\r\n *            \"SJIS\",\"EUCJP\",\"JIS7\",\"JIS8\",\"Unicode\",\"UTF7\",\"UTF8\",\"UTF16LE\",\"UTF16BE\",\"MUTF7\"\r\n * @return {Array} 変換後配列\r\n */\r\ncharset.convert_array = function(array, to, from) {\r\n    from=from||charset.Unicode;\r\n    (!from.hasOwnProperty(\"toU\")) && (from=charset[from]);\r\n    (!to.hasOwnProperty(\"fromU\")) && (to=charset[to]);\r\n    if (to==from) {return array;}\r\n    if(from.hasOwnProperty(\"toJ\") && to.hasOwnProperty(\"fromJ\")) return to.fromJ(from.toJ(array));\r\n    return to.fromU(from.toU(array));\r\n}\r\n/**\r\n * convert 他の文字コードに変換する\r\n * \r\n * @memberof Util.Encoding\r\n * @param {String}\r\n *            str 変換前文字列\r\n * @param {String|Object}\r\n *            to 変換先の文字コード('SJIS','UTF8',Encoding.charset.SJIS,など)\r\n * @param {String|Object}\r\n *            from 変換元の文字コード('SJIS','UTF8',Encoding.charset.SJIS,など)<BR>\r\n *            \"SJIS\",\"EUCJP\",\"JIS7\",\"JIS8\",\"Unicode\",\"UTF7\",\"UTF8\",\"UTF16LE\",\"UTF16BE\",\"MUTF7\"\r\n * \r\n * @return {String} 変換後文字列\r\n */\r\ncharset.convert = function(str, to, from) {\r\n    var array,parser;\r\n    from=from||charset.Unicode;\r\n    (!from.hasOwnProperty(\"toU\"))&&(from=charset[from]);\r\n    (!to.hasOwnProperty(\"fromU\"))&&(to=charset[to]);\r\n    if (to==from) {return str;}\r\n    parser = from===charset.Unicode ? from : enc.Text;\r\n    array = parser.parse(str);\r\n    return charset.Unicode.stringify(charset.convert_array(array, to, from));\r\n};\r\n/**\r\n * Unicode配列をBase64符号化する\r\n * \r\n * @memberof Util.Encoding\r\n * @param {Array}\r\n *            array 24bit配列\r\n * @param {String|Object}\r\n *            to 変換する文字コード(default:UTF8)\r\n * @return {Array} Base64符号化された6bit配列\r\n */\r\nenc.Base64.fromU = function(array, to) {\r\n    (!(to=to||'UTF8').hasOwnProperty(\"fromU\"))&&(to=charset[to]);\r\n    return enc.Base64.fromB(to.fromU(array));\r\n};\r\n/**\r\n * Base64符号化された6bit配列をUnicode配列にする\r\n * \r\n * @memberof Util.Encoding\r\n * @param {Array}\r\n *            array Base64符号化された6bit配列\r\n * @param {String|Object}\r\n *            from 変換する文字コード(default:UTF8)\r\n * @return {Array} 24bit配列\r\n */\r\nenc.Base64.toU = function(array, from) {\r\n    (!(from=from||'UTF8').hasOwnProperty(\"toU\"))&&(from=charset[from]);\r\n    return from.toU(enc.Base64.toB(array));\r\n};\r\n/**\r\n * 8bit配列をBase64符号化する\r\n * \r\n * @memberof Util.Encoding\r\n * @param {Array}\r\n *            8bit配列\r\n * @return {Array} Base64符号化された6bit配列\r\n */\r\nenc.Base64.fromB = function(array) {\r\n    var a=[],i=0,il=array.length,\r\n            b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",B=[],c;\r\n    for(i=0;i<64;i++) B.push(b.charCodeAt(i));\r\n    for(i=0;i<il;i++) a.push(B[(c=array[i])>>>2],B[(c&3)<<4|(c=array[++i])>>>4],B[(c&15)<<2|(c=array[++i])>>>6],B[63&c]);\r\n    (i=il%3)!==0&&(a.pop(),i===1&&a.pop());\r\n    return a;\r\n};\r\n/**\r\n * Base64符号化された6bit配列を8bit配列にする\r\n * \r\n * @memberof Util.Encoding\r\n * @param {Array}\r\n *            Base64符号化された6bit配列\r\n * @return {Array} 8bit配列\r\n */\r\nenc.Base64.toB = function(array) {\r\n    var i=0,a=[],il=array.length,B={},b,c;\r\n    while(i<64)B[\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charCodeAt(i)]=i++;\r\n    for(i=0;i<il;i++) a.push((c=B[array[i]])<<2|(c=B[array[++i]])>>>4,(c&15)<<4|(c=B[array[++i]])>>>2,(c&3)<<6|B[array[++i]]);\r\n    (i=il%4)!==0&&(a.pop(),i<3&&a.pop());\r\n    return a;\r\n};\r\nenc.Base64.parse = function(str) {\r\n    str=str.replace(/=+$/,'');\r\n    return enc.Base64.toB(enc.Text.parse(str));\r\n};\r\nenc.Base64.stringify = function(array) {\r\n    return enc.Text.stringify(enc.Base64.fromB(array));\r\n};\r\n/**\r\n * 文字列をBase64エンコードする この関数はpaddingの=を追加する\r\n * \r\n * @memberof Util.Encoding\r\n * @param {String}\r\n *            str 変換する文字列\r\n * @param {String|Object}\r\n *            cs1 strの文字セット default:Unicode\r\n * @param {String|Object}\r\n *            cs2 cs1がUnicodeだった場合の変換先文字セット default:UTF8\r\n * @return {String} Base64符号化された文字列\r\n * \r\n * @example // JS文字列をUTF8としてBase64符号化 Encoding.encodeBase64(\"文字列\"); //=>\r\n *          \"5paH5a2X5YiX===\" Encoding.encodeBase64(\"文字列\", \"Unicode\", \"UTF8\"); //\r\n *          上記と同じ // SJIS文字列をエンコード(引数は省略不可)\r\n *          Encoding.encodeBase64(Encoding.convert(\"文字列\", \"SJIS\"), \"SJIS\"); //=>\r\n *          \"lbaOmpfx===\"\r\n * \r\n */\r\nenc.Base64.encode = function(str, cs1, cs2) {\r\n    var array,parser,b;\r\n    (!(cs1=cs1||'Unicode').hasOwnProperty(\"parse\"))&&(cs1=charset[cs1]);\r\n    (!(cs2=cs2||'UTF8').hasOwnProperty(\"fromU\"))&&(cs2=charset[cs2]);\r\n    parser = cs1===charset.Unicode ? cs1 : enc.Text;\r\n    array = parser.parse(str);\r\n    b=enc.Base64.stringify(cs1===charset.Unicode?cs2.fromU(array):array);\r\n    b+=\"===\".substring(0,4-b.length%4);\r\n    return b;\r\n};\r\n/**\r\n * Base64文字列をデコードする この関数はpaddingの=を削除する\r\n * \r\n * @memberof Util.Encoding\r\n * @param {String}\r\n *            str Base64文字列\r\n * @param {String|Object}\r\n *            from 元の文字セット指定すればJS文字列に変換する default:UTF8\r\n * @return {String} デコードされた文字列\r\n * \r\n * @example // Base64符号化されたUTF8文字列をJS文字列に\r\n *          Encoding.decodeBase64(\"5paH5a2X5YiX===\"); //=> \"文字列\"\r\n *          Encoding.decodeBase64(\"5paH5a2X5YiX===\", \"UTF8\"); //=> \"文字列\" //\r\n *          エンコードされたSJIS文字列 Encoding.decodeBase64(\"lbaOmpfx===\", \"\"); //=>\r\n *          \"\\x95\\xb6\\x8e\\x9a\\x97\\xf1\" Encoding.decodeBase64(\"lbaOmpfx===\",\r\n *          \"SJIS\"); //=> \"文字列\"\r\n * \r\n */\r\nenc.Base64.decode = function(str, from) {\r\n    str=str.replace(/=+$/,'');\r\n    var array = enc.Base64.parse(str)\r\n    if (from===\"\") {\r\n        return enc.Text.stringify(array);\r\n    }\r\n    (!(from=from||'UTF8').hasOwnProperty(\"toU\"))&&(from=charset[from]);\r\n    return charset.Unicode.stringify(from.toU(array));\r\n};\r\n/**\r\n * enc.URI.escape RFC3986に準じて [A-Za-z0-9_.~-] 以外を%エスケープする\r\n * RFC2396準拠のencodeURIComponent()と違い [!*'()] もエスケープする\r\n * arrayは8bitを想定しているのでUnicode(24bit)配列を渡すと正しい結果にならない\r\n * \r\n * @param {Array}\r\n *            array 8bit配列\r\n * @param {Boolean}\r\n *            asRFC2396 [!*'()]をエスケープしない (default:false)\r\n * @return {String} encoded エスケープされた文字列\r\n * \r\n * @see https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\r\n *      encodeURIComponent は、次を除く全ての文字をエスケープします。: アルファベット、数字、- _ . ! ~ * ' ( )\r\n *      ... より厳格に RFC 3986に従う場合には、「!」・「'」・「(」・「)」・「*」の各文字が予約されています\r\n * @see http://www.ipa.go.jp/security/fy21/reports/tech1-tg/b_09.html なお、上記の\r\n *      \"!\", \"'\", \"(\", \")\", \"*\" が sub-delims の文字であるが、これらは RFC 2396 では unreserved\r\n *      に属していた。\r\n */\r\nenc.URI.escape = function(array, asRFC2396) {\r\n    var s=\"\",i,il=array.length,c;\r\n    if (asRFC2396) {\r\n            for(i=0;i<il;i++) s+=(c=array[i])<58&&c>38||64<c&&c<91||96<c&&c<123&&c!=43&&c!=44&&c!=47||c===33||c===95||c===126?String.fromCharCode(c):(c<16?\"%0\":\"%\")+c.toString(16).toUpperCase();\r\n    } else {\r\n        for(i=0;i<il;i++) s+=(c=array[i])<58&&c>47||64<c&&c<91||96<c&&c<123||c===45||c===46||c===95||c===126?String.fromCharCode(c):(c<16?\"%0\":\"%\")+c.toString(16).toUpperCase();\r\n    }\r\n    return s;\r\n};\r\nenc.URI.unescape = function(str) {\r\n    var a=[],i,il=str.length,c;\r\n    for(i=0;i<il;i++)a.push((c=str.charCodeAt(i))===37?parseInt(str.substring(++i,++i+1),16):c===43?20:c);\r\n    return a;\r\n};\r\n/**\r\n * encodeURIComponent 互換の関数\r\n * \r\n * @param {String}\r\n *            str JS文字列\r\n * @param {String|Object}\r\n *            変換先文字コード(default:'UTF8')\r\n * @return {String} encoded\r\n */\r\nenc.URI.encodeURIComponent = function(str, to) {\r\n    (!(to||\"UTF8\").hasOwnProperty(\"fromU\"))&&(to=charset[to]);\r\n    return enc.URI.escape(to.fromU(charset.Unicode.parse(str)));\r\n};\r\nenc.URI.decodeURIComponent = function(str, from) {\r\n    (!(from||\"UTF8\").hasOwnProperty(\"toU\"))&&(from=charset[from]);\r\n    return charset.Unicode.stringify(from.toU(enc.URI.unescape(str)));\r\n};\r\n/**\r\n * enc.Unicode.escape Unicode(24bit整数)配列を%エスケープする(0xff以上は%uXXXXになる)\r\n * [*+\\-\\.\\/@_0-9A-Za-z] 以外はエスケープされる\r\n * \r\n * @param {Array}\r\n *            u24array 24bit整数の配列(String#charCodeAt() で取得した整数など)\r\n * @return {String} escaped %エスケープされた文字列\r\n */\r\nenc.Unicode.escape = function(u24array) {\r\n    var s=\"\",i,il=u24array.length,c;\r\n    for(i=0;i<il;i++) {\r\n        c=u24array[i];\r\n        s += 41<c&&c<58&&c!=44||63<c&&c<91||94<c&&c<123&&c!=96?String.fromCharCode(c):(c<16?\"%0\":c<256?\"%\":c<4096?\"%u0\":\"%u\")+c.toString(16).toUpperCase();\r\n    }\r\n    return s;\r\n};\r\n/**\r\n * enc.Unicode.unescape %エスケープされた文字列をUnicode(24bit整数)配列にする\r\n * \r\n * @return {String} escaped %エスケープされた文字列\r\n * @param {Array}\r\n *            u24array 24bit整数の配列\r\n */\r\nenc.Unicode.unescape = function(str) {\r\n    var a=[],i,il=str.length,c;\r\n    for(i=0;i<il;i++){\r\n        a.push(\r\n            (c=str.charCodeAt(i))===37 // %\r\n            ? (c=str.charCodeAt(++i))===117 // %u\r\n                ? parseInt(str.charAt(++i)+str.charAt(++i)+str.charAt(++i)+str.charAt(++i)+((c=str.charAt(i+1))!==\"%\"?(++i,c):''),16)\r\n                : parseInt(str.charAt(i)+str.charAt(++i),16)\r\n            : c\r\n        );\r\n    }\r\n    return a;\r\n};\r\n/**\r\n * enc.TextEncoder class Encoding StandardのTextEncoderのように振る舞うクラス\r\n * \r\n * @see https://encoding.spec.whatwg.org/\r\n * @see https://developer.mozilla.org/ja/docs/Web/API/TextEncoder\r\n */\r\nenc.TextEncoder = function(encoding) {\r\n    var en, map = {'UTF8':[], 'UTF16LE':['UTF16'], 'UTF16BE':[], 'SJIS':['SHIFTJIS','WINDOWS31J','XSJIS'], 'EUCJP':['XEUCJP'], 'JIS7':['iso2022jp']}, m={}, x, i;\r\n    if (!encoding) {encoding = 'UTF-8';}\r\n    for(x in map) {\r\n        m[x] = x;\r\n        for(i=0; i<map[x].length; i++) {m[map[x][i]] = x;}\r\n    }\r\n    en = m[encoding.toUpperCase().replace(/[^A-Z0-9]/g,'')];\r\n    if (!en) {throw new TypeError(encoding+\" is not supported encoding\");}\r\n    this.encoding = encoding;\r\n    this.encode = function(text) {\r\n        return new Uint8Array(charset[en].fromU(enc.Text.parse(text)));\r\n    };\r\n};\r\n/**\r\n * enc.TextDecoder class Encoding StandardのTextDecoderのように振る舞うクラス\r\n * \r\n * @see https://encoding.spec.whatwg.org/\r\n * @see https://developer.mozilla.org/ja/docs/Web/API/TextEncoder\r\n */\r\nenc.TextDecoder = function(encoding) {\r\n    var en, map = {'UTF8':[], 'UTF16LE':['UTF16'], 'UTF16BE':[], 'SJIS':['SHIFTJIS','WINDOWS31J','XSJIS'], 'EUCJP':['XEUCJP'], 'JIS7':['iso2022jp']}, m={}, x, i;\r\n    if (!encoding) {encoding = 'UTF-8';}\r\n    for(x in map) {\r\n        m[x] = x;\r\n        for(i=0; i<map[x].length; i++) {m[map[x][i]] = x;}\r\n    }\r\n    en = m[encoding.toUpperCase().replace(/[^A-Z0-9]/g,'')];\r\n    if (!en) {throw new TypeError(encoding+\" is not supported encoding\");}\r\n    this.encoding = encoding;\r\n    this.decode = function(u8array) {\r\n        return enc.Text.stringify(charset[en].toU(u8array));\r\n    };\r\n};\r\n/**\r\n * 配列から文字コードを推測する ecl.jsのGetEscapeCodeType(str)に丸投げしている\r\n */\r\ncharset.guess_array = function(array) {\r\n    var i,il=array.length,c=array[0],cs=null,p,a,m,u7,mu7,pm,am,b64,mb64;\r\n    // BOM 0xEFBBBF:UTF8, 0xFEFF:UTF16BE, 0xFFFE:UTF16LE\r\n    cs=c===239&&array[1]===187&&array[2]===191?\"UTF8\":c===255&&array[1]===254?\"UTF16LE\":c===254&&array[1]===255?\"UTF16BE\":null;\r\n    if(cs!=null) return cs;\r\n    // Unicode or ASCII(maybe UTF7,MUTF7) or ...?\r\n    cs=\"ASCII\",p=a=m=-1,u7=mu7=true,pm=am=b64=mb64=0;\r\n    for(i=0;i<il;i++){\r\n        c=array[i];\r\n        if(255<c){cs=\"Unicode\";break;}\r\n        if(c<32&&c!==9&&c!==10&&c!==13||126<c){cs=null;break;} // 未定\r\n        if (!u7&&!mu7) continue; // UTF-7でもModified UTF-7でもないならこの先を省略\r\n        c===126&&(u7=false); // UTF-7は~を符号化するがModifiedUTF-7は~をそのまま印字する\r\n        8<c&&c<11||c===13 && (mu7=false); // Modified UTF-7は\\t\\n\\rを符号化する\r\n        // \"+-\" or \"\\+[A-Za-z0-9\\+\\/]+-\" があればUTF7 \"&\" ならMUTF7\r\n        if (c===45) { // [+&]- の出現数をカウント\r\n            p>=0&&u7 ? (i===p+1&&(pm++),(p=-1)) : a>=0&&mu7 && (i===a+1&&(am++),(a=-1));\r\n            p = a = -1;\r\n        } else {\r\n            if (u7&&p>=0) { // Base64 [A-Za-z0-9+/] かどうか\r\n                (u7 = (c===43||46<c&&c<58||64<c&&c<91||96<c&&c<123)) ? b64++ : (p=-1);\r\n            }\r\n            if (mu7&&a>=0) { // Modified Base64 [A-Za-z0-9+,] かどうか\r\n                (mu7 = (42<c&&c<45||47<c&&c<58||64<c&&c<91||96<c&&c<123)) ? mb64++ : (a=-1);\r\n            }\r\n        }\r\n        c===43&&p<0 ? (p=i) : c===38&&a<0 ? (a=i) : c===45 && (m=i);\r\n    }\r\n    if (cs===\"ASCII\") {\r\n        cs = u7&&(b64>0||pm>0) ? \"UTF7\" : mu7&&(mb64>0||am>0) ? \"MUTF7\" : \"ASCII\";\r\n    }\r\n    // TODO: GetEscapeCodeTypeの代替処理が未実装\r\n    return cs?cs:GetEscapeCodeType(enc.URI.escape(array));\r\n};\r\ncharset.guess = function(str) {\r\n    return charset.guess_array(enc.Text.parse(str));\r\n};\r\nvar names=[\"SJIS\",\"EUCJP\",\"JIS7\",\"JIS8\",\"Unicode\",\"UTF7\",\"UTF8\",\"UTF16LE\",\"UTF16BE\",\"MUTF7\"],i,il=names.length;\r\nEncoding.charset=charset;\r\nfor(i=0;i<il;i++) {\r\n    if (names[i]==='Unicode') {\r\n        Encoding[\"escapeUnicode\"] = function(str){return enc.Unicode.escape(charset.Unicode.parse(str));};\r\n        Encoding[\"unescapeUnicode\"] = function(str){return charset.Unicode.stringify(enc.Unicode.unescape(str));};\r\n    } else {\r\n        Encoding[\"escape\"+names[i]] = (function(fnc,cs){return function(str){return fnc(str,cs);};})(enc.URI.encodeURIComponent, charset[names[i]]);\r\n        Encoding[\"unescape\"+names[i]] = (function(fnc,cs){return function(str){return fnc(str,cs);};})(enc.URI.decodeURIComponent, charset[names[i]]);\r\n        Encoding.charset[names[i]].parse = (function(fnc){return function(str){return fnc(enc.Text.parse(str));};})(charset[names[i]].toU);\r\n        Encoding.charset[names[i]].stringify = (function(fnc){return function(array){return enc.Text.stringify(fnc(array));};})(charset[names[i]].fromU);\r\n    }\r\n}\r\nEncoding.convert = charset.convert;\r\nEncoding.convert_array = charset.convert_array;\r\nEncoding.enc=enc;\r\nEncoding.escape = Encoding.escapeUnicode;\r\nEncoding.unescape = Encoding.unescapeUnicode;\r\nEncoding.encodeURIComponent = enc.URI.encodeURIComponent;\r\nEncoding.decodeURIComponent = enc.URI.decodeURIComponent;\r\nEncoding.encodeBase64 = enc.Base64.encode;\r\nEncoding.decodeBase64 = enc.Base64.decode;\r\nEncoding.TextEncoder = enc.TextEncoder;\r\nEncoding.TextDecoder = enc.TextDecoder;\r\n// Encoding.getEscapeCodeType = GetEscapeCodeType;\r\n// Encoding.JCT11280 = JCT11280;\r\n// Encoding.JCT8836 = JCT8836;\r\n\r\nEncoding.JISX0208={\"U2CP\":U2CP, \"CP2U\":CP2U};\r\n\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-Encoding.js\n// module id = 35\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class SubWindow\r\n * @classdesc SubWindow サブウィンドウ\r\n *            <p>\r\n *            サブウィンドウを操作する\r\n * \r\n * @param {String}\r\n *            [name=\"HJN_subwindow\"] サブウィンドウの名前（ウィンドウをユニークに指定する名前）\r\n * \r\n * @example // TopHogeBottom と表示するサブウィンドウを表示し、閉じる<br>\r\n *          var sub = new SubWindow(\"SUB_NAME\");\r\n *          sub.openHtml(\"hoge\").appendHtml(\"Bottom\").prependHtml(\"Top\");\r\n *          sub.close();\r\n */\r\nexport default (function() { // #95\r\n    /** @constructor */\r\n    function SubWindow(name){ \r\n        if(!(this instanceof SubWindow)) return new SubWindow(name);\r\n\r\n        this._name = name || \"HJN_subwindow\";\r\n        SubWindow._map[name] = {};\r\n    }\r\n\r\n    // private\r\n    // クラス変数\r\n    SubWindow._map = {};\r\n    // メソッド\r\n    \r\n    // public\r\n    /**\r\n     * サブウィンドウを表示する(HTML指定）<br>\r\n     * Element.createDialog と同一引数\r\n     * \r\n     * @memberOf Util.SubWindow\r\n     * @param {String}\r\n     *            [iHtml=\"no message\"] サブウィンドウのbodyに設定する文字列\r\n     * @param {DOM}\r\n     *            [element=window] サブウィンドウの位置とサイズを指定する際の基準となるウィンドウ\r\n     * @param {String}\r\n     *            [id=\"HJN_subwindow\"] サブウィンドウのid名、同一名称のダイアログを閉じて作成する\r\n     * @param {Number}\r\n     *            [w=40] ウィンドウに対するサブウィンドウの幅の比率％\r\n     * @param {Number}\r\n     *            [h=40] ウィンドウに対するサブウィンドウの高さの比率％\r\n     * @param {Object}\r\n     *            [style={bgColor: \"rgba(255, 255, 255, 0.8)\"}] ダイアログ背景のCSSスタイル\r\n     */\r\n    SubWindow.createSubWindow = function(iHtml, win, id, w, h, style){\r\n        iHtml = iHtml || \"no message\";\r\n        win = win || window;\r\n        style = style || {};\r\n        id = id || \"HJN_subwindow\";\r\n        w = w || 40; // 幅40%\r\n        h = h || 40; // 高さ40%\r\n\r\n        // サブウィンドウ表示オプションを編集する\r\n        var width  = Math.round(win.innerWidth  * ( w / 100 ));\r\n        var height = Math.round(win.innerHeight * ( h / 100 ));\r\n        var top    = Math.round(win.screenTop  + (win.innerHeight / 2) - (height / 2));\r\n        var left   = Math.round(win.screenLeft + (win.innerWidth / 2) - (width  / 2));\r\n        var opt = \"width=\" + width + \", height=\" + height \r\n                + \", top=\" + top + \", left=\" + left\r\n                + \", menubar=no, toolbar=no, location=no\"\r\n                + \", status=yes, resizable=yes, scrollbars=yes\";\r\n\r\n        // サブウィンドウを作成する\r\n        var sub = new SubWindow(id);\r\n        // サブウィンドウにHTMLを表示する（別ウィンドウ処理なのでスケジュールが反転しないよう非同期）\r\n        HJN.Util.setZeroTimeout( function(){\r\n            // HTMLを表示する\r\n            sub.openHtml(iHtml, opt);\r\n\r\n            // デフォルトスタイルを設定する\r\n            var body = SubWindow._map[id].document.body;\r\n            var styleD = {bgColor: \"rgba(255, 0, 255, 0.8)\"};\r\n            for (var property in styleD) body.style[property] = styleD[property];\r\n            // 指定スタイルを設定する\r\n            for (var property in style) body.style[property] = style[property];\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * サブウィンドウを表示する(URI指定）\r\n     * \r\n     * @memberOf Util.SubWindow\r\n     * @param {String}\r\n     *            [uri=\"about:blank\"] サブウィンドウに表示するURI\r\n     * @param {String}\r\n     *            [opt=\"width=600, height=450 ,menubar=no, toolbar=no,\r\n     *            location=no, status=yes, resizable=yes, scrollbars=yes\"]\r\n     *            サブウィンドウ生成時に指定するオプション\r\n     * @return {Object} Window サブウィンドウ\r\n     */\r\n    SubWindow.prototype.openUri = function(uri, opt) {\r\n        uri = uri || \"about:blank\";\r\n        opt = opt || \"width=600, height=450 \"\r\n            + \",menubar=no, toolbar=no, location=no, status=yes, resizable=yes, scrollbars=yes\";\r\n        // サブウィンドウが既に開いている時、閉じる\r\n        var sub = SubWindow._map[this._name]; // サブウィンドウへの参照\r\n        if (sub && (typeof sub.close === \"function\") && !sub.closed){\r\n                sub.close();\r\n        }\r\n        // サブウィンドウを開く\r\n        SubWindow._map[this._name] = sub = window.open(uri, this._name, opt);\r\n        // サブウィンドウを最前面にする\r\n        sub.blur();\r\n        window.focus();\r\n        window.blur();\r\n        sub.focus();\r\n        // サブウィンドウを返却する\r\n        return sub;\r\n    };\r\n    /**\r\n     * サブウィンドウを表示する(HTML指定）\r\n     * \r\n     * @memberOf Util.SubWindow\r\n     * @param {String}\r\n     *            [body=\"\"] サブウィンドウに表示するHTML\r\n     * @param {String}\r\n     *            [opt=\"width=600, height=450 ,menubar=no, toolbar=no,\r\n     *            location=no, status=yes, resizable=yes, scrollbars=yes\"]\r\n     *            サブウィンドウ生成時に指定するオプション\r\n     * @return {Object} this 自オブジェクト\r\n     */\r\n    SubWindow.prototype.openHtml = function(body, opt) {\r\n        body = body || \"\";\r\n        opt = opt || \"width=600, height=450 \"\r\n            + \",menubar=no, toolbar=no, location=no, status=yes, resizable=yes, scrollbars=yes\";\r\n        // サブウィンドウを開く\r\n        var sub = this.openUri(\"about:blank\" ,opt);\r\n        // サブウィンドウのHTML bodyを設定する\r\n        sub.document.body.innerHTML = body;\r\n        // 自オブジェクトを返却する\r\n        return this;\r\n    };\r\n    /**\r\n     * サブウィンドウを閉じる\r\n     * \r\n     * @memberOf Util.SubWindow\r\n     */\r\n    SubWindow.prototype.close = function() {\r\n        var sub = SubWindow._map[this._name]; // サブウィンドウへの参照\r\n        // サブウィンドウを閉じる\r\n        sub.close();\r\n    };\r\n    /**\r\n     * サブウィンドウのHTML body の末尾にHTMLを追記する\r\n     * \r\n     * @memberOf Util.SubWindow\r\n     * @param {String}\r\n     *            [html=\"\"] 追記するHTML文字列\r\n     * @return {Object} this 自オブジェクト\r\n     */\r\n    SubWindow.prototype.append = function(html) {\r\n        html = html || \"\";\r\n        var sub = SubWindow._map[this._name]; // サブウィンドウへの参照\r\n        // サブウィンドウのHTML bodyに追記する\r\n        sub.document.body.innerHTML += html;\r\n        // サブウィンドウを返却する\r\n        return win;\r\n    };\r\n    /**\r\n     * サブウィンドウのHTML body の先頭にHTMLを追記する\r\n     * \r\n     * @memberOf Util.SubWindow\r\n     * @param {String}\r\n     *            [html=\"\"] 追記するHTML文字列\r\n     * @return {Object} this 自オブジェクト\r\n     */\r\n    SubWindow.prototype.prepend = function(html) {\r\n        html = html || \"\";\r\n        var sub = SubWindow._map[this._name]; // サブウィンドウへの参照\r\n        // サブウィンドウのHTML bodyに追記する\r\n        sub.document.body.innerHTML = html + sub.document.body.innerHTML;\r\n        // サブウィンドウを返却する\r\n        return win;\r\n    };\r\n    \r\n    /* new */\r\n    return SubWindow;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-SubWindow.js\n// module id = 36\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class Menu\r\n * @classdesc Menu メニュー\r\n *            <p>\r\n *            メニューを操作する\r\n * @param {String}\r\n *            menuId メニューのID（メニュー要素をユニークに指定するID）\r\n * @param {String}\r\n *            [menuLabel=\"\"] メニューのラベル\r\n * @param {String}\r\n *            funcName メニュー要素選択時に発行する関数名\r\n * \r\n * @example // TopHogeBottom と表示するサブウィンドウを表示し、閉じる<br>\r\n *          var menu1 = new Util.Menu( \"Usage of TAT log diver\", divMenuId +\r\n *          \"_HelpUsage\", \"HJN.init.Usage\"); menu1.mekeAsDialog(\r\n *          \"HJN.dialogUsage\", 50 , 40);\r\n */\r\nexport default (function() { // #95\r\n    /** @constructor */\r\n    function Menu(menuId, menuLabel, funcName){ \r\n        if(!(this instanceof Menu)) return new Menu(id, label, funcName);\r\n\r\n        this.menuId = menuId;\r\n        this.menuLabel = menuLabel;\r\n        this.funcName = funcName;\r\n    }\r\n\r\n    // private\r\n    // クラス変数\r\n    \r\n    // メソッド\r\n    \r\n    // public\r\n    /**\r\n     * アコーディオンラベル用タグを取得する\r\n     * \r\n     * @memberOf Util.Menu\r\n     * @param {Object}\r\n     *            that ラベル押下時のアコーディオン開閉ラジオボタン連動用の接頭語\r\n     * @param {String}\r\n     *            id ラベル押下時のアコーディオン開閉ラジオボタン連動用の接尾語（ユニークな英数字）\r\n     * @param {String}\r\n     *            labelText ラベル表示文字列\r\n     * @param {Boolean}\r\n     *            [isChecked=閉じた状態て初期表示] trueを指定したとき展開して初期表示\r\n     * @return {String} html アコーディオンラベル用HTMLテキスト\r\n     */\r\n    Menu.getAccordionTag = function(that, id, labelText, isChecked) { // #31\r\n        var isAccordion = true, // true:アコーディオン型 false:折りたたみ型 #21\r\n        typeStr = isAccordion ? ' type=\"checkbox\" name=\"accordion\" '\r\n                : ' type=\"radio\" name=\"accordion\" ', //\r\n        checkedStr = ' checked=\"checked\" ';\r\n\r\n        return ''\r\n                + '<input id=\"ac-' + that.chartIdName + id + '\"' // \r\n                + typeStr + (isChecked ? checkedStr : '') + '\">' // \r\n                + '<label for=\"ac-' + that.chartIdName + id + '\">' //\r\n                + labelText + '</label>';\r\n    };\r\n\r\n    /**\r\n     * File Open用タグを取得する\r\n     * \r\n     * @example\r\n     * <ol>\r\n     * <a><label>Child Menu<input type=\"file\" id=\"xxx\" multiple/></label></a>\r\n     * </ol>\r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            [preLabel=\"\"] ラベルの先頭文字列\r\n     * @return {String} html メニュー要素の表示用HTMLテキスト\r\n     */\r\n    Menu.prototype.getFileOpenTag = function(preLabel) {\r\n        preLabel = preLabel || \"\";\r\n\r\n        return ''\r\n                + '<ol><a><label class=\"hjnButton4Input\">' + this.menuLabel // #51\r\n                + '<input type=\"file\" id=\"' + this.menuId + '\"  multiple />'\r\n                + '</label></a></ol>';\r\n    };\r\n    \r\n    /**\r\n     * ダウンロード処理に対応する\r\n     * \r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            [fileName=\"HJN_download\"] ダウンロードファイル名\r\n     * @return {Object} this\r\n     */\r\n    Menu.prototype.makeDownloadable = function(fileName) {\r\n        this[\"fileName\"] = fileName || \"HJN_download\";\r\n\r\n        return this;\r\n    };\r\n    /**\r\n     * ダウンロード用アンカータグを取得する\r\n     * \r\n     * @example\r\n     * <li><a id=\"xxx\" href=\"#\">Child Menu</a><li/>\r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            [preLabel=\"\"] ラベルの先頭文字列\r\n     * @return {String} html メニュー要素の表示用HTMLテキスト\r\n     */\r\n    Menu.prototype.getATag = function(preLabel) {\r\n        preLabel = preLabel || \"\";\r\n\r\n        return '' + '<li><a id=\"' + this.menuId + '\" '\r\n                + 'class=\"hjnButton4Input\" href=\"#\" ' // #51\r\n                + 'download=\"' + this.fileName + '\" ' //\r\n                + 'onclick=\"' + this.funcName + '(' + \"'\" + this.menuId + \"', '\"\r\n                + this.fileName + \"'\" + ')\" ' + '>' + preLabel + this.menuLabel\r\n                + '</a></li>';\r\n    };\r\n\r\n    /**\r\n     * グローバルメソッド呼出用アンカータグを取得する\r\n     * \r\n     * @example\r\n     * <li><a id=\"xxx\" href=\"#\" onclick=\"funcName()\">Child Menu</a></li>\r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            [preLabel=\"\"] ラベルの先頭文字列\r\n     * @return {String} html メニュー要素の表示用HTMLテキスト\r\n     */\r\n    Menu.prototype.getFuncTag = function(preLabel) { // #34\r\n        preLabel = preLabel || \"\";\r\n        \r\n        return ''\r\n                + '<li><a id=\"' + this.menuId + ' \"'\r\n                + 'class=\"hjnButton4Input\" href=\"#\" ' // #51\r\n                + 'onclick=\"' + this.funcName + '()\">' //\r\n                + preLabel + this.menuLabel + '</a></li>';\r\n    };\r\n    \r\n    \r\n    /**\r\n     * ポップアップダイアログ処理に対応する\r\n     * \r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            dialogId ダイアログのID（同一IDのダイアログは上書きされる）\r\n     * @param {Number}\r\n     *            [w=40] ダイアログの幅\r\n     * @param {Number}\r\n     *            [h=40] ダイアログの高さ\r\n     * @return {Object} this\r\n     */\r\n    Menu.prototype.makePopupable = function(dialogId, w, h) {\r\n        this[\"dialogId\"] = dialogId;\r\n        this[\"w\"] = w || 40;\r\n        this[\"h\"] = h || 40;\r\n\r\n        return this;\r\n    };\r\n    /**\r\n     * ダイアログ用タグを取得する\r\n     * \r\n     * @example\r\n     * <ol>\r\n     * <a id=\"xxx\" class=\"hjnButton4Input\"\r\n     * onclick=\"HJN.init.ShowDialog(FUNC_NAME(), 'DIALOG_ID', w , h)\">\r\n     * <label>Child Menu</label></a>\r\n     * </ol>\r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            [preLabel=\"\"] ラベルの先頭文字列\r\n     * @return {String} html メニュー要素の表示用HTMLテキスト\r\n     */\r\n    Menu.prototype.getDialogTag = function(preLabel) {\r\n        preLabel = preLabel || \"\";\r\n\r\n        return ''\r\n            + '<ol><a id=\"' + this.menuId + '\" '\r\n            + 'class=\"hjnButton4Input\" ' // #51\r\n            + ' onclick=\"HJN.Util.Element.createDialog(' // #95\r\n                + this.funcName + \"()\"+ \", \" // #84\r\n                + \"false, \" \r\n                + \"'\" + this.dialogId + \"',\"\r\n                + this.w + \",\"\r\n                + this.h +\")\" \r\n            + '\"' + '>' // #79\r\n            + '<label>' + preLabel + this.menuLabel + '</label></a></ol>';\r\n    };\r\n    /**\r\n     * サブウィンドウ用タグを取得する\r\n     * \r\n     * @example\r\n     * <ol>\r\n     * <a id=\"xxx\" class=\"hjnButton4Input\"\r\n     * onclick=\"HJN.init.ShowDialog(FUNC_NAME(), 'DIALOG_ID', w , h)\">\r\n     * <label>Child Menu</label></a>\r\n     * </ol>\r\n     * @memberOf Util.Menu\r\n     * @param {String}\r\n     *            [preLabel=\"\"] ラベルの先頭文字列\r\n     * @return {String} html メニュー要素の表示用HTMLテキスト\r\n     */\r\n    Menu.prototype.getSubWindowTag = function(preLabel) { // #95\r\n        preLabel = preLabel || \"\";\r\n\r\n        return ''\r\n        + '<ol><a id=\"' + this.menuId + '\" '\r\n        + 'class=\"hjnButton4Input\" ' // #51\r\n        + ' onclick=\"HJN.Util.SubWindow.createSubWindow(' // #95\r\n            + this.funcName + \"()\"+ \", \" // #84\r\n            + \"false, \" \r\n            + \"'\" + this.dialogId + \"',\"\r\n            + this.w + \",\"\r\n            + this.h +\")\" \r\n        + '\"' + '>' // #79\r\n        + '<label>' + preLabel + this.menuLabel + '</label></a></ol>';\r\n    };\r\n\r\n\r\n    /* new */\r\n    return Menu;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-Menu.js\n// module id = 37\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport {HJN} from '../tatLogDiver/tatLogDiver-HJN.js';\r\n\r\n/**\r\n * @memberof TimeSeries\r\n * @class FileParser\r\n * @classdesc ファイルをパースして読み込む\r\n *            <p>\r\n *            パース条件指定画面生成つき\r\n */\r\nexport default (function() {\r\n    /** @static */\r\n\r\n    /** constructor */\r\n    function FileParser(){\r\n        if(!(this instanceof FileParser)) return new FileParser();\r\n    }\r\n    \r\n    /** @private */\r\n\r\n    // public\r\n    /**\r\n     * ファイルが新たに指定された時、eTatOriginalを再構築するか否（データを追加する）か\r\n     * \r\n     * @memberof TimeSeries.FileParser\r\n     * @return {boolean} 再構築モードするときtrue、データを追加するときfalse\r\n     */\r\n    FileParser.prototype.isNewETAT = function() { // #23\r\n        return Util.Config.File.getConfig(\"NEWFILE\") === \"NEWDATA\"; // #76\r\n    }\r\n    \r\n    /**\r\n     * 「ファイルから次の1レコードを取得するutil」 を取得する\r\n     * \r\n     * @memberof TimeSeries.FileParser\r\n     */\r\n    FileParser.prototype.createGetterOfLine = function(file) {\r\n\r\n        /**\r\n         * @memberof TimeSeries.FileParser\r\n         * @class GetterOfLine\r\n         * @classdesc ファイルから１レコード取得する\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持する改行コードを用いて、ファイルから１レコードを取得する\r\n         * \r\n         * @example try{ var getterOfLine = FileParser.createGetterOfLine(file),\r\n         *          fileInfo;<br>\r\n         *          for(var i = 0; i < n; i++) { <br>\r\n         *          line = getterOfLine.next(); fileInfo += line.str + \"<BR>\"; }<br>\r\n         *          }catch (e) {<br>\r\n         *          console.error(\"改行コードの無いファイルは扱えません]%o\",e); }\r\n         */\r\n        function GetterOfLine(file, maxLength){ /* constructor */\r\n            if(!(this instanceof GetterOfLine)) return new GetterOfLine(file, maxLength);\r\n\r\n            this.file = file;\r\n            this.buf = new Uint8Array(file);\r\n            this.maxLength = maxLength || this.buf.length,\r\n            this.confLF = Util.Config.File.getConfig(\"LF\");  // 改行コードor固定レコード長\r\n                                                                // #76\r\n            this.from = 0;\r\n            this.to = 0;\r\n            this.len = 0;\r\n            this.line = {file: this.file, pos: 0, array: null, str: \"\", isEoF: false };\r\n        }\r\n        // public\r\n        /**\r\n         * 次の1レコードを取得する\r\n         * \r\n         * @memberof TimeSeries.FileParser.GetterOfLine\r\n         * @name next\r\n         */\r\n        if (Util.Config.File.getValueByKey(\"LF\") === \"LF_FIX\"){ // 固定長のとき #76\r\n            GetterOfLine.prototype.next = function () { // 次の1レコードを取得する\r\n                if(this.from >= this.maxLength ){   // ファイル末尾のとき\r\n                    this.line = {file: this.file, pos: this.maxLength, array: null, str: \"\", isEoF: true };\r\n                } else {\r\n                    this.len = Math.min(this.maxLength - this.from, this.confLF);\r\n                    var array = new Uint8Array(this.file, this.from, this.len);\r\n                    this.line = {\r\n                            file: this.file,\r\n                            pos: this.from,\r\n                            array: array,\r\n                            str: String.fromCharCode.apply(null, array),\r\n                            isEoF: false };\r\n                }\r\n                this.from += this.confLF;   // 次の行を指しておく\r\n                return this.line;\r\n            };\r\n        } else { // 可変長のとき\r\n            GetterOfLine.prototype.next = function () { // 次の1レコードを取得する\r\n                if(this.from >= this.maxLength ){   // ファイル末尾のとき\r\n                    this.line = {file: this.file, pos: this.maxLength, array: null, str: \"\", isEoF: true };\r\n                } else {\r\n                    this.to = this.buf.indexOf(this.confLF, this.from);\r\n                    if(this.to < 0) this.to = this.maxLength;   // 最終レコード（EOFで改行コードなし）のとき\r\n                    this.len = Math.min(this.to - this.from, 1024);\r\n                    var array = new Uint8Array(this.file, this.from, this.len);\r\n                    this.line = {\r\n                            file: this.file,\r\n                            pos: this.from,\r\n                            array: array,\r\n                            str: String.fromCharCode.apply(null, array),\r\n                            isEoF: false };\r\n                }\r\n                this.from = this.to + 2;    // 次の行を指しておく\r\n                return this.line;\r\n            };\r\n        }\r\n        return new GetterOfLine(file);\r\n    };\r\n    \r\n    \r\n    /**\r\n     * eTatのフィルター\r\n     * \r\n     * @memberof TimeSeries\r\n     */\r\n    FileParser.prototype.createFilter = function() { // #34\r\n       /**\r\n         * @memberof TimeSeries.FileParser\r\n         * @class Filter\r\n         * @classdesc FileParserのフィルター\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持するフィルタ条件を用いるフィルターを取得する\r\n         */\r\n        function Filter(){ /* constructor */\r\n            if(!(this instanceof Filter)) return new Filter();\r\n            var c = Util.Config.Filter; // #76\r\n            \r\n            this.confF_TIME_FROM = Util.S2D(c.getConfig(\"F_TIME_FROM\"));    // 時刻(X)の最小値フィルター\r\n            this.confF_TIME_TO   = Util.S2D(c.getConfig(\"F_TIME_TO\"));      // 時刻(X)の最大値フィルター\r\n            this.confF_TIME = (isNaN(this.confF_TIME_FROM) && isNaN(this.confF_TIME_TO))\r\n                            ? false : true; // 時刻(x）フィルター指定の有無\r\n            \r\n            this.confF_TAT_FROM = c.getConfig(\"F_TAT_FROM\") || 0; // 時間(Y)の最小値フィルター\r\n            this.confF_TAT_TO   = c.getConfig(\"F_TAT_TO\") || Number.MAX_VALUE; // 時間(Y)の最大値フィルター\r\n            this.confF_TAT = (this.confF_TAT_FROM === 0 && this.confF_TAT_TO === Number.MAX_VALUE)\r\n                            ? false : true; // 時間(ｙ）フィルター指定の有無\r\n\r\n            this.confF_TEXT = c.getConfig(\"F_TEXT\") || null; // テキストフィルタの条件（使用しない、Include,Exclude\r\n            if (this.confF_TEXT === \"F_TEXT_INCLUDE\") {\r\n                this.confF_TEXT = true;\r\n            } else if (this.confF_TEXT === \"F_TEXT_EXCLUDE\") {\r\n                this.confF_TEXT = false;\r\n            } else { // \"F_TEXT_NON\"\r\n                this.confF_TEXT = null;\r\n            }\r\n            \r\n            this.confF_TEXT_LEN = c.getConfig(\"F_TEXT_LEN\") || null;    // フィルタテキストのバイト長\r\n            this.confF_TEXT_POS = c.getConfig(\"F_TEXT_POS\") || 0;       // フィルタテキストの先頭バイト位置\r\n            this.confF_TEXT_COL = (c.getConfig(\"F_TEXT_COL\") || 3) - 1; // フィルタテキストのカラム位置（先頭：０）\r\n            this.confF_TEXT_REG = new RegExp(c.getConfig(\"F_TEXT_REG\") || \".*\");    // フィルタテキストの正規表現\r\n            \r\n            this.confF_IS = (this.confF_TIME === true \r\n                            || this.confF_TAT === true || this.confF_TEXT != null)\r\n                          ? true : false; // フィルタ指定の有無\r\n            \r\n            c = new Util.Config(\"File\"); // #76\r\n            this.confF_SEP = c.getConfig(\"SEP\").charCodeAt(0);\r\n        }\r\n        \r\n        // class method\r\n        // private\r\n        /**\r\n         * フィルター条件で判定する\r\n         * \r\n         * @memberof TimeSeries.Filter\r\n         */\r\n        Filter.prototype._isIn = function (e) {\r\n            // フィルタ指定が無いときフィルタしない（初期表示時に無駄な処理をしない）\r\n            if (this.confF_IS === false) return true;\r\n            // 時刻（ｘ）フィルタの判定 （conf指定なしのとき NaNとの比較となりfalseとなる）\r\n            if (e.x < this.confF_TIME_FROM || this.confF_TIME_TO < e.x ) {\r\n                return false;\r\n            }\r\n            // 時間（ｙ）フィルタの判定\r\n            if (e.y < this.confF_TAT_FROM || this.confF_TAT_TO < e.y){\r\n                return false;\r\n            }\r\n            // テキストフィルタの判定\r\n            if (this.confF_TEXT === null) {\r\n                return true; // フィルタ指定なし\r\n            }\r\n            var text = \"\";\r\n            if (e.pos === undefined) { // テキスト読み込みでないとき（自動生成データのとき）\r\n                // レコードを取得する #62\r\n                text = HJN.chart.fileParser.getRecordAsText(e); // #61\r\n                // 指定正規表現に合致するか判定し、Include/Exclude指定に応じてリターンする\r\n                return this.confF_TEXT === this.confF_TEXT_REG.test(text);\r\n            } else { // ファイル読み込みのとき\r\n                // レコードを取得する\r\n                var arr = new Uint8Array(HJN.filesArrayBuffer[e.fileIdx+1], e.pos, e.len);\r\n                // CSVレコードの指定カラムを取得する(arr)\r\n                var colPos = 0;\r\n                for (var i = 0; i < this.confF_TEXT_COL; i++) {\r\n                    colPos = arr.indexOf(this.confF_SEP,colPos + 1);\r\n                }\r\n                if (colPos === -1){\r\n                    // 指定数のカラムが無い場合、Includeは処理対象外、Excludeは処理対象\r\n                    return !this.confF_TEXT;\r\n                }\r\n                var col = arr.slice(colPos, arr.length);\r\n                // 判定用文字列を取得する\r\n                text = col.slice(this.confF_TEXT_POS, this.confF_TEXT_POS + this.confF_TEXT_LEN);\r\n                // 指定正規表現に合致するか判定し、Include/Exclude指定に応じてリターンする\r\n                return this.confF_TEXT === this.confF_TEXT_REG.test(String.fromCharCode.apply(null, text));\r\n            }\r\n            return true;\r\n        };\r\n        \r\n        // public\r\n        /**\r\n         * eTatをフィルターする\r\n         * \r\n         * @memberof TimeSeries.Filter\r\n         * @param {eTat}\r\n         *            eTat フィルター処理対象のeTat\r\n         * @return {eTat} eTat フィルターされたeTat\r\n         * \r\n         */\r\n        Filter.prototype.filter = function (eTat) {\r\n            if (!eTat) return [];\r\n            return eTat.filter(this._isIn, this);\r\n        };\r\n\r\n        return new Filter();\r\n    };\r\n\r\n\r\n    /**\r\n     * 「１レコードからx:時刻（数値：ミリ秒）,y:Tat(数値：秒)を取得するutil」を取得する\r\n     * \r\n     * @memberof TimeSeries.Filter\r\n     */\r\n    FileParser.prototype.createGetterOfXY = function() {\r\n\r\n        /**\r\n         * @memberof TimeSeries.FileParser\r\n         * @class GetterOfXY\r\n         * @classdesc １レコードをパースし、XとYをレコード取得する\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持するレコードフォーマット情報を用いて、ファイルの指定レコードからＸ(data)とＹ(value)を取得する\r\n         */\r\n        function GetterOfXY(){ /* constructor */\r\n            if(!(this instanceof GetterOfXY)) return new GetterOfXY();\r\n\r\n            var c = new Util.Config(\"File\"); // #76\r\n            this.confSEP = c.getConfig(\"SEP\");   // セパレータ\r\n            \r\n            this.confTIME_COL = c.getConfig(\"TIME_COL\") - 1 || 0;    // 時刻(X)のカラム位置\r\n            this.confTIME_POS = (c.getConfig(\"TIME_POS\") || 1) - 1;  // 時刻(X)の先頭バイト位置\r\n            this.confTIME_LEN = (c.getConfig(\"TIME_LEN\") || 0);      // 時刻(X)のバイト長\r\n            this.confTIME_FORM = c.getConfig(\"TIME_FORM\");           // 時刻(X)の文字フォーマット指定\r\n            this.confTIME_YMD = (c.getConfig(\"TIME_YMD\") || '\"YYYY/MM/DD hh.mm.ss.000\"'); // #42\r\n                                                                    // 時刻(X)のYMDフォーマット\r\n                                                                    // #92\r\n            this.paseDateConf = {  // YYYY/MM/DD hh:mm:dd.ss.000 #41\r\n                YYYY: this.confTIME_YMD.indexOf(\"YYYY\"),\r\n                MM: this.confTIME_YMD.indexOf(\"MM\"),\r\n                DD: this.confTIME_YMD.indexOf(\"DD\"),\r\n                hh: this.confTIME_YMD.indexOf(\"hh\"),\r\n                mm: this.confTIME_YMD.indexOf(\"mm\"),\r\n                ss: this.confTIME_YMD.indexOf(\"ss\"),\r\n                p000: this.confTIME_YMD.indexOf(\"0\"), // #92\r\n            };\r\n            this.isYMD = (this.confTIME_FORM === \"TIME_FORM_YMD\");\r\n            // 時刻(X)の数値単位(1or1000,YMDのとき1)\r\n            this.confTIME_UNIT = this.isYMD? 1 : (c.getConfig(\"TIME_UNIT\") || 1);\r\n            \r\n            \r\n            this.confTAT_COL = c.getConfig(\"TAT_COL\") - 1 || 1;      // 時間(Y)のカラム位置\r\n            this.confTAT_POS = (c.getConfig(\"TAT_POS\") || 1) - 1;    // 時間(Y)の先頭バイト位置\r\n            this.confTAT_LEN = (c.getConfig(\"TAT_LEN\") || 0);        // 時間(Y)のバイト長\r\n            this.confTAT_FORM = c.getConfig(\"TAT_FORM\");             // 時間(Y)のフォーマット指定\r\n            this.confTAT_UNIT = c.getConfig(\"TAT_UNIT\") || 1;        // 時間(Y)の数値単位(1/1000)\r\n            this.confENDIAN =  c.getConfig(\"ENDIAN\");    // リトルエンディアンはtrue、ビッグエンディアンはfalse\r\n            this.isLittle = (function(){\r\n                // long用に4バイト取得する\r\n                var buf = new ArrayBuffer(4);               \r\n                // true:bufに、リトルエンディアン指定で1を書き込む\r\n                new DataView(buf).setUint32(0, 1, true);\r\n                // プラットフォームのエンディアンを使用するUint32Arrayと比較する\r\n                return (new Uint32Array(buf)[0] === 1);     \r\n            }());\r\n            \r\n            this.dateAndValue = {date: 0, value: 0, isError: false };\r\n        }\r\n        \r\n        // class method\r\n        /**\r\n         * 数値(秒)、時間（時分秒)をパースして数値（秒*unit）を取得する<br>\r\n         * 数値でない場合 NaN を返却する<br>\r\n         * /[0-9,:\\. ]+/ に合致する文字列のみを処理する 例： argY: \"-1:1:1.2\" unit:1000 ->\r\n         * -3661200 ms = -(1*60*60 + 1*60 + 1.2)*1000\r\n         * \r\n         * @memberof TimeSeries.FileParser.GetterOfXY\r\n         */\r\n        GetterOfXY.parseNumber = function (){ // argY, unit,\r\n            var argY = arguments[0],\r\n                unit = arguments[1];\r\n            if(!argY) {console.log(\"data Y parse error\"); return 0; }\r\n            // 数値を含まないとき NaN を返却する\r\n            var nums =  argY.match(/[0-9,:\\. ]+/); // #92\r\n            if (!nums) return NaN; // #93\r\n            // 時分秒(hh:mm:ss.000)を秒にする\r\n            var str = nums[0];\r\n            var ds = (str.indexOf(\":\") < 0) ? [str] : str.split(\":\"),   // #40\r\n                pm = (0 <= ds[0]) ? 1 : -1,\r\n                sec = 0.0;\r\n            for(var i = 0; i < ds.length; i++){\r\n                sec += pm * Math.abs(ds[i]) * Math.pow(60, ds.length - i - 1);\r\n            }\r\n            // 単位補正する（ミリ秒指定の場合 unit = 1000）\r\n            return sec * (unit || 1);\r\n        };\r\n\r\n        /**\r\n         * Long(4バイトバイナリ）数字をパースして数値（ミリ秒）を取得する\r\n         * \r\n         * @private\r\n         */\r\n        GetterOfXY.prototype._parseLong = function (arr){\r\n            if (4 <= arr.length ) { // Long(4byte)以上のときunsigned longとして処理する\r\n                // bufの先頭4byteを、指定バイトオーダ(endian)で、符号無32bit intとして参照\r\n                return (new DataView(arr.buffer, 0 , 4)).getUint32(0, this.confENDIAN);\r\n            } else {\r\n                // Long(4バイト）より短いとき、Byte単位に処理する\r\n                if (this.confENDIAN) { // little endianのとき\r\n                    return arr.reduceRight(function(a, b){ return a*256 + b; });\r\n                } else {               // big endianのとき\r\n                    return arr.reduce(function(a, b){ return a*256 + b; });\r\n                }\r\n            }\r\n        };\r\n\r\n        // public\r\n        /**\r\n         * レコードからXとYを取得する\r\n         * \r\n         * @memberof TimeSeries.FileParser.GetterOfXY\r\n         */\r\n        GetterOfXY.prototype.parse = function (line) {\r\n            // セパレータでカラム分割する\r\n            var posMax = Math.max(this.confTIME_COL, this.confTAT_COL),\r\n                sep = this.confSEP.charCodeAt(0),   // 区切り文字のUint値\r\n                pos = 0,\r\n                nextPos = line.array.indexOf(sep),  // 行末（次の区切り文字位置）\r\n                x = 0,\r\n                y = -1;\r\n            for (var i = 0; i <= posMax; i++) {\r\n                if (i === this.confTIME_COL){\r\n                    // パース対象フィールドを切り出す\r\n                    var posX =  pos + this.confTIME_POS;\r\n                    var arrX = (0 < this.confTIME_LEN) \r\n                             ? line.array.slice(posX, posX + this.confTIME_LEN)\r\n                             : line.array.slice(posX, nextPos);\r\n                    var strX = \"\";\r\n                    // フィールドをパースする\r\n                    if (this.isYMD){    // 年月日時分秒の文字列のとき\r\n                        strX = String.fromCharCode.apply(null,arrX);\r\n                        x = Util.S2D(strX, this.paseDateConf);\r\n                    } else if (this.confTIME_FORM === \"TIME_FORM_TEXT\"){    // テキスト数字のUNIX経過時間のとき\r\n                        strX = String.fromCharCode.apply(null,arrX);\r\n                        x = GetterOfXY.parseNumber(strX);\r\n                    } else{ // this.confTIME_FORM === \"TIME_FORM_LONG\"\r\n                            // longのUNIX経過時間のとき\r\n                        x = this._parseLong(arrX);\r\n                    }\r\n                    // 単位を補正する\r\n                    x *= this.confTIME_UNIT;\r\n                }\r\n                if (i === this.confTAT_COL){\r\n                    // パース対象フィールドを切り出す\r\n                    var posY =  pos + this.confTAT_POS;\r\n                    var arrY = (0 < this.confTAT_LEN) \r\n                             ? line.array.slice(posY, posY + this.confTAT_LEN)\r\n                             : line.array.slice(posY, nextPos);\r\n                    // フィールドをパースする\r\n                    if (this.confTAT_FORM === \"TAT_FORM_TEXT\"){\r\n                        // テキスト数字によるUNIX経過時間のとき\r\n                        var strY = String.fromCharCode.apply(null,arrY);\r\n                        y = GetterOfXY.parseNumber(strY);\r\n                    } else{\r\n                        // TAT_FORM_TEXT === \"TAT_FORM_LONG\" 数値によるUNIX経過時間のとき\r\n                        y = this._parseLong(arrY);\r\n                    }\r\n                    // 単位を補正する\r\n                    y *= this.confTAT_UNIT;\r\n                }\r\n                pos = nextPos + 1;\r\n                nextPos = line.array.indexOf(sep, pos);\r\n                if (nextPos < 0) nextPos = line.array.length;\r\n            }\r\n            \r\n            if(0 < x && 0 <= y){ // 正常時\r\n                return {x: x, y: y, isError: false };\r\n            } else {            // エラー時、（ NaN の場合を含む）\r\n                return {x: x, y: y, isError: true };\r\n            }\r\n        };\r\n        \r\n        return new GetterOfXY();\r\n    };\r\n    \r\n    /**\r\n     * eTatの指定行の編集元レコードを、テキストフォーマットに変換して取得する\r\n     * \r\n     * @memberof TimeSeries.FileParser\r\n     * @param {Object}\r\n     *            e eTat[n]：eTatの指定行\r\n     * @return {String} eTatの指定行の表示用テキスト\r\n     */\r\n    FileParser.prototype.getRecordAsText = function (e) { // #62 ADD\r\n        if (!e) return \"\";\r\n        var text = \"\";\r\n        if (typeof e.pos === \"undefined\") { // 生成データのとき\r\n            // 生成データをCSVのログデータとして編集する #61\r\n            text = Util.D2S(e.x, \"yyyy/MM/dd hh:mm:ss.000\", true) // #92\r\n                    + \", \" + e.y + \", \" + e.message; // #53\r\n            // 状態遷移履歴を追加する #62\r\n            if (e.history){\r\n                e.history.forEach(function(h){\r\n                    var timeStr = \"\";\r\n                    if (typeof(h.time) === \"number\") {\r\n                        timeStr = Util.D2S(h.time, \"mm:ss.000\", true) + \" seq:\" // #92\r\n                    }\r\n                    text += \" [\" + h.sequenceIdx + \":\" + h.status + \"]\" // #61\r\n                        + timeStr + Util.D2S(h.sequenceTime, \"mm:ss.000\", true); // #92\r\n                }, this);\r\n            }\r\n        } else { // ファイル読込のとき\r\n            // ファイルの該当行を Uint8Arrayに登録する\r\n            var buff = new Uint8Array(e.len + 2);\r\n            var file = HJN.filesArrayBuffer[e.fileIdx]; // #23\r\n            buff.set(new Uint8Array(file, e.pos,\r\n                    Math.min(e.len + 2, file.byteLength - e.pos)));\r\n            // ログデータを編集する\r\n            text = String.fromCharCode.apply(null, buff);\r\n        }\r\n        return text;\r\n        \r\n    };\r\n \r\n    // new\r\n    return FileParser;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-FileParser.js\n// module id = 38\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport Graph from '../tatLogDiver/tatLogDiver-Graph.js';\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class MenuConfigFile\r\n * @classdesc FileParser用メニューHTML定義\r\n * \r\n */\r\nexport default function MenuConfigFile() {}  // #76\r\n  \r\n\r\nMenuConfigFile.config = function () {\r\n    // File Format Config設定画面定義 #51\r\n    var prefix = \"File\";\r\n    var c = new  Util.Config(prefix);\r\n    c // #53\r\n        .name(\"NEWFILE\").label(null,\"Open file as \") // #23\r\n            .radio(\"NEWDATA\", null, \"newly\", true)\r\n            .radio(\"ADDDATA\", null, \"append\").n()\r\n//        .startTag(\"select\")\r\n//            .option(\"NEWDATA\", null, \"newly\", true)\r\n//            .option(\"ADDDATA\", null, \"append\")\r\n//        .endTag().n()\r\n        .label(null,\"<B>----- File format definition --------</B>\").n()\r\n        .name(\"CHAR\").label(null, \"<B>[Charset]</B>\") // #82\r\n//          .n()        \r\n//            .radio(c.def(\"CHAR_SJIS\", \"SJIS\"), null, \"Shift-JIS\", true)\r\n//            .radio(c.def(\"CHAR_EUCJP\", \"EUCJP\"), null, \"EUC-JP\")\r\n//            .radio(c.def(\"CHAR_UTF8\", \"UTF8\"), null, \"UTF-8\")\r\n//            .radio(c.def(\"CHAR_UNICODE\", \"Unicode\"), null, \"Unicode\")\r\n//        .n(\"<br>\")\r\n        .startTag(\"select\")\r\n            .option(c.def(\"CHAR_SJIS\", \"SJIS\"), null, \"Shift-JIS\", true)\r\n            .option(c.def(\"CHAR_EUCJP\", \"EUCJP\"), null, \"EUC-JP\")\r\n            .option(c.def(\"CHAR_UTF8\", \"UTF8\"), null, \"UTF-8\")\r\n            .option(c.def(\"CHAR_UNICODE\", \"Unicode\"), null, \"Unicode\")\r\n        .endTag().n()\r\n        .name(\"LF\").label(null, \"<B>[Line feed code]</B>\").n()\r\n            .radio(c.v(\"LF_FIX\"), null, \"Fixed Length\")\r\n                .number(\"LF_FIX.v\",  null, \"byte\",\"80\",'style=\"width:60px;\"').n()\r\n            .radio(c.def(\"LF_WIN\",  13), null, \"Windows:CR(13)+LF(10)\", true).n()\r\n            .radio(c.def(\"LF_UNIX\", 10), null, \"Unix/Linux:LF(10)\").n()\r\n            .radio(c.def(\"LF_ZOS\",  15), null, \"zOS:NEL(15)\").n()\r\n            .radio(c.def(\"LF_MAC\",  13), null, \"Mac:CR(13)\").n()\r\n            .radio(c.v(\"LF_ELSE\"), null, \"other charcode\")\r\n                .number(\"LF_ELSE.v\", \"(\", \")\", \"10\", 'style=\"width:40px;\"').n()\r\n        .n(\"<br>\")\r\n        .name(\"SEP\").label(null,\"<B>[CSV delimiter]</B>\")\r\n        .startTag(\"select\")\r\n            .option(c.def(\"SEP_COMMA\", ','), null, \"comma\")\r\n            .option(c.def(\"SEP_TAB\", '\\t'),   null,\"tab\", true)\r\n            .option(c.v(\"SEP_ELSE\"), null, \"other :\")\r\n        .endTag()\r\n//            .radio(c.def(\"SEP_COMMA\", ','), null, \"comma\")\r\n//            .radio(c.def(\"SEP_TAB\", '\\t'),   null,\"tab\", true)\r\n//            .radio(c.v(\"SEP_ELSE\"), null, \"other\")\r\n                .text(\"SEP_ELSE.v\", '\"', '\"', ',', 'size=\"2\" placeholder=\",\"').n()\r\n        .n(\"<br>\")\r\n        .label(null,\"<B>----- Data format definition --------</B>\").n()\r\n        .name(\"DATATYPE\").label(null,\"\") // #89\r\n            .radio(\"DATATYPE_TATSTART\", null, \"TAT & START time\")\r\n            .radio(\"DATATYPE_TATEND\", null, \"TAT & END time\", true)\r\n            .radio(\"DATATYPE_START_END\", null, \"START & END time\").n()\r\n        .n(\"<br>\")\r\n        .name(\"TIME\").label(null, \"<B>[TIMESTAMP field]</B>\").n()\r\n        .number(\"TIME_COL\", \"\", \"th column of CSV\", \"1\", 'style=\"width:40px;\"').n()\r\n        // .name(\"TIME_POS\")\r\n        .number(\"TIME_POS\", \"& Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n        .number(\"TIME_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .name(\"TIME_FORM\").label(null,\"Format:\").n()\r\n            .radio(\"TIME_FORM_YMD\", \"text\", null, true)\r\n                .text(\"TIME_YMD\", null, null, '\"YYYY/MM/DD hh:mm:ss.000\"',\r\n                        'size=\"23\" placeholder=' + \"'\" +'\"YYYY/MM/DD hh:mm:ss.000\"'+ \"'\" ).n() // #92\r\n            .radio(\"TIME_FORM_TEXT\", \"(num)\", \"text\")\r\n            .radio(\"TIME_FORM_LONG\", null, \"long\").n()\r\n            .nDown()\r\n                .name(\"TIME_UNIT\").label(null, \"Units of numbers:\")\r\n                    .radio(c.def(\"TIME_UNIT_MS\", 1), null, \"msec\")\r\n                    .radio(c.def(\"TIME_UNIT_SEC\", 1000), null, \"sec\", true)\r\n            .nUp()\r\n        .n(\"<br>\")\r\n        .n(\"<br>\") // #89\r\n        .name(\"CSV_TAT_LABEL\").label(null,\"<B>[TAT or START/END judgment field]</B>\").n() // #89\r\n        .number(\"TAT_COL\", \"\", \"th column of CSV\", \"2\", 'style=\"width:40px;\"').n()\r\n        // .name(\"TAT_POS\")\r\n        .number(\"TAT_POS\", \"& Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n        .number(\"TAT_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .n(\"<br>\") // #89\r\n        .name(\"TAT_CONF\").label(null,\"<B>for TAT(turnaround time) condition</B>\").n() // #89\r\n        .name(\"TAT_UNIT\").label(null, \"Units of numbers:\")\r\n            .radio(c.def(\"TAT_UNIT_MS\", 1), null, \"msec\", true)\r\n            .radio(c.def(\"TAT_UNIT_SEC\", 1000), null, \"sec\").n()\r\n        .name(\"TAT_FORM\").label(null,\"Format: \")\r\n            .radio(\"TAT_FORM_TEXT\", null, \"text\", true)\r\n            .radio(\"TAT_FORM_LONG\", null, \"long\").n()\r\n            .nDown()\r\n                .name(\"ENDIAN\").label(null, \"for long Endian: \")\r\n                    .radio(c.def(\"ENDIAN_LIL\", true), null, \"little\", true)\r\n                    .radio(c.def(\"ENDIAN_BIG\", false), null, \"big\")\r\n            .nUp()\r\n        .n(\"<br>\")\r\n        // 開始 ／終了時刻指定 #89\r\n        .n(\"<br>\")\r\n        .name(\"CSV_SE_LABEL1\").label(null,\"<B>for START/END judgment condition</B>\").n() \r\n        .text(\"CSV_SE_S_REG\", 'START record: Matches /', '/', 'START', \r\n                'size=\"8\" placeholder=\"START\"').n()\r\n        .text(\"CSV_SE_E_REG\", 'END record: Matches /', '/', 'END',\r\n                'size=\"8\" placeholder=\"END\"').n()\r\n        .n(\"<br>\")\r\n        // 開始-終了ペアリングキー定 #89\r\n        .n(\"<br>\")\r\n        .name(\"CSV_SE_LABEL2\").label(null, \"<B>[START-END pairing KEY field]</B>\").n()\r\n        .number(\"CSV_SE_COL\", \"\", \"th column of CSV\", \"3\", 'style=\"width:40px;\"').n()\r\n        // .name(\"CSV_SE_POS\")\r\n            .number(\"CSV_SE_POS\", \"& Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n            .number(\"CSV_SE_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .name(\"CSV_SE_LABEL3\").label(null, \"& Position(Matches reg. exp.):\").n()\r\n        .nDown()\r\n            .text(\"CSV_SE_FROM_REG\", 'between /', '/', '',   'size=\"8\" placeholder=\"\"')\r\n            .text(\"CSV_SE_TO_REG\", 'and /', '/', '',   'size=\"8\" placeholder=\"\"').n()\r\n        .nUp()\r\n        .text(\"CSV_SE_MATCH_REG\", '& Adopt as KEY: Matches /', '/', '[0-9A-Z]+',\r\n                'size=\"8\" placeholder=\"[0-9A-Z]+\"').n()\r\n        .n(\"<br>\")\r\n    ;\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-MenuConfigFile.js\n// module id = 39\n// module chunks = 0","import * as Util from '../util/util.js';\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualApp\r\n * @classdesc 仮想アプリケーション\r\n * \r\n * @param {String}\r\n *            [userName = \"dafault\"] ログに出力するユーザ名\r\n * @param {Array}\r\n *            [sequence = SQL３個のオン処理] 取引の処理シーケンスを格納した配列\r\n * @param {Number}\r\n *            [times = 2 回] 繰返し回数\r\n * @param {Number}\r\n *            [thinkTime = 300 ms] 繰返し時の次回処理開始までの平均時間(ミリ秒）\r\n */\r\nexport default (function() { // #53\r\n    /** @constructor */\r\n    function VirtualApp(userName, model){\r\n        if(!(this instanceof VirtualApp)){\r\n            return new VirtualApp(userName, model);\r\n        }\r\n        this._userName = userName || \"default\"; // ログ出力テキスト\r\n        // 定数の設定\r\n        // イベントシーケンスを取得する\r\n        if (typeof(model) === \"undefined\") model = {}\r\n        model.baseModel = model.baseModel || {\"holds\": []};\r\n        this._sequence = model.sequence;\r\n        // イベントシーケンスの繰り返し回数\r\n        this._times = (typeof(model.times) !== \"undefined\") ? model.times : 1;\r\n        // イベントシーケンス終了時に再実行する場合の平均再開時間\r\n        this._thinkTime = Math.max(0,\r\n                (typeof(model.thinkTime) !== \"undefined\") ? model.thinkTime : 500);\r\n        // イベントシーケンス終了時に再実行する場合の最小再開時間\r\n        this._thinkTimeMin = Math.max(0,\r\n                (typeof(model.thinkTimeMin) !== \"undefined\") ? model.thinkTimeMin : 500);\r\n        // メッセージ（ログ末尾に付与する文字列）\r\n        this._baseMessage = model.message; // + \"\\n\"; // #88\r\n        this._message = \"\";\r\n        this._history = []; // #62\r\n\r\n        // 変数の設定\r\n        this._startTime = Number.MIN_SAFE_INTEGER; // イベントシーケンス開始時刻（UNIX時刻：ミリ秒）\r\n        this._sequenceTime = Number.MIN_SAFE_INTEGER; // シミュレータに登録したイベントの時刻（現在時刻）\r\n        this._sequenceIdx = 0;    // シミュレータに登録したイベントシーケンスの位置\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n\r\n    /**\r\n     * シミュレータのログを出力する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            logLv ログレベル（isLog <= logLvのときログ出力する）<br>\r\n     *            (0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)\r\n     * @param {boolean}\r\n     *            isLog ログ出力レベル\r\n     * @param {Number}\r\n     *            time 日時を表す数値（ミリ秒）\r\n     * @param {Object}\r\n     *            vApp 仮想アプリ\r\n     * @param {Object}\r\n     *            resource リソース\r\n     * @param {String}\r\n     *            text ログテキスト\r\n     * @param {String}\r\n     *            highText 強調表示テキスト\r\n     */\r\n    VirtualApp.prototype.logger = function(logLv, isLog, time, vApp, resource, text, highText) {\r\n        // 0:なしの時\r\n        if (!isLog) return;\r\n        var errCode = 0;\r\n        if (resource && (resource._holdHeap.size() !== resource._holdingQty)) {\r\n            // エラー時★\r\n            errCode = 1;\r\n            highText = highText ? highText + \"　unkown error!!\" : \"　unkown error!!\";\r\n        } else if (logLv > +isLog) {\r\n            return; \r\n        }\r\n\r\n        // エラーログ編集\r\n        var user = vApp ? \" \" + vApp._userName : \" \";\r\n        var resourceText = resource ? (\" [\" + resource._name + \" wait:\"\r\n                + resource._waitHeap.size() + \"hold:\"\r\n                + resource._holdHeap.size() + \"=\"\r\n                + resource._holdingQty + \" qty] \") : \" \";\r\n        text = text || \"\";\r\n        var logText = Util.D2S(this.getTime(),\"hh:mm:ss.000\",true) \r\n                    + user +\"(\" + this._times + \"-\" + this._sequenceIdx + \")\"\r\n                    + resourceText \r\n                    + text;\r\n        highText = highText || \"\";\r\n\r\n        // エラー時の強制補正★\r\n        var modify = \"\";\r\n        if (errCode === 1) { // リソースヒープもしくはリソース量を強制補正する\r\n            var deleted = undefined;\r\n            if (resource._holdHeap.size() < resource._holdingQty) {\r\n                deleted = resource._holdHeap.del(this);\r\n            }\r\n            if (deleted){\r\n                modify = \"FORCE★: holdHeap.del(\" + deleted.userName + \")\";\r\n            } else {\r\n                modify = \"FORCE★: holdingQty modified\"\r\n                    resource._holdingQty = resource._holdHeap.size();\r\n            }\r\n        }\r\n\r\n        // エラーログ出力\r\n        if (highText || modify){\r\n            console.log(logText + \" %o\", highText + \" \" + modify);\r\n        } else {\r\n            console.log(logText);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取引を開始する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            startTime 開始時刻（UNIX時刻：ミリ秒）\r\n     * @return {Object}仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.start = function(startTime) {\r\n        this._times--; // イベントシーケンスの繰り返し回数を1減らす\r\n        this._sequenceIdx = 0;    // シミュレータに登録したイベントシーケンスの位置\r\n        this._startTime = startTime;      // イベントシーケンス開始時刻（UNIX時刻：ミリ秒）\r\n        this._sequenceTime = startTime;   // シミュレータに登録したイベントの時刻\r\n        this._message = this._baseMessage; // ログ末尾に出力する文字列の初期化\r\n        this._history = []; // ログ末尾に出力する状態遷移履歴情報の初期化 #62\r\n        this.addHistory(\"start\");\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * イベント時刻を返却する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualApp.prototype.getTime = function() {\r\n        return this._sequenceTime;\r\n    };\r\n\r\n    /**\r\n     * リソース使用量を返却する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            [resource| 指定なしのとき1.0を返却する] リソース\r\n     * @return {Number} リソース使用量\r\n     */\r\n    VirtualApp.prototype.getAmount = function(resource) {\r\n        return 1.0;\r\n    };\r\n\r\n    /**\r\n     * 次の状態に遷移する、シーケンス終了時TATログを出力する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualApp.prototype.next = function(system) {\r\n        this.logger(4, system._log, system.getTime(), this, undefined, 'NEXT', undefined);\r\n        var events = []; // 戻り値\r\n        var ret = {result: true, events: [this]};\r\n\r\n        if (this._sequenceIdx < this._sequence.length) { // イベントシーケンス処理途中のとき\r\n            var seq = this._sequence[this._sequenceIdx]; // 現在の処理シーケンス位置\r\n            // holdリソースを取得する\r\n            if (seq.hold && seq.hold !== \"\") {\r\n                // holdリソースが指定されているとき、指定リソースを確保する（確保できたとき[this]が戻り値）\r\n                ret = system.getResouce(seq.hold).hold(system, this); // #61\r\n                events = ret.events;\r\n            } else {\r\n                // holdリソースが指定されていないとき、無条件に自身をスケジュール対象に加える\r\n                events = [this];\r\n            }\r\n            // リソースを確保できたとき、該当シーケンスを完了させる\r\n            if (0 < events.length && (0 <= this._times) && ret.result) { // #61\r\n                // 完了した処理の処理時間を加える\r\n                var tatAdd = Math.ceil(Util.Random().exponential(seq.tat - seq.tatMin));\r\n                this.setSequenceTime(this._sequenceTime += seq.tatMin + tatAdd, seq.hold); // #61\r\n                // シーケンスのfreeで指定されているリソースの解放\r\n                if (seq.free) {\r\n                    for (var i = 0; i < seq.free.length; i++) {\r\n                        events = events.concat(system.getResouce(seq.free[i]).free(this));\r\n                    }\r\n                }\r\n                // 次の処理を参照する（ シミュレータに登録したイベントシーケンスの位置）\r\n                this._sequenceIdx++;\r\n            }\r\n            return events;\r\n        }\r\n\r\n        // イベントシーケンスを終えたときTATログを出力する(this._sequenceIdx >= this._sequence.length)\r\n        var vApp = this._finish(system, \"N_000\");\r\n        // シーケンスをstart状態に設定する\r\n        // this._sequenceTime = system.getTime(); はfinishで更新されるので不可\r\n        // this._startTime = this._sequenceTime; finishで設定する\r\n        // 繰返し処理を継続する場合、自アプリケーションを再スケジュールする\r\n        if (vApp) {\r\n            events.push(this);\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * Freeに伴い、次の状態に遷移する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            [time | 変更しない} イベント時刻（UNIX時刻：ミリ秒）\r\n     * @param {String}\r\n     *            status ログに追記する時刻設定理由文字列\r\n     * @return {Object} 仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.setSequenceTime = function(time, status) {\r\n        status = status || \"\"; \r\n        // 解放された時刻をイベント時刻に設定する\r\n        this._sequenceTime = time;\r\n        // ログに状態遷移履歴を追記する\r\n        return this.addHistory(status);\r\n    };\r\n\r\n    /**\r\n     * ログにステータス変更履歴を追記する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {String}\r\n     *            status ログに追記する状態遷移の理由文字列\r\n     * @param {Number}\r\n     *            time 状態遷移時刻（ミリ秒）\r\n     * @return {Object} 仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.addHistory = function(status, time) {\r\n// var timeStr = \"\";\r\n// if (typeof(time) === \"number\") {\r\n// timeStr = Util.D2S(time, \"mm:ss.000\", true) + \" seq:\"\r\n// }\r\n// this._message += \" [\" + this._sequenceIdx + \":\" + status + \"]\" // #61\r\n// + timeStr + Util.D2S(this._sequenceTime, \"mm:ss.000\", true);\r\n        // 状態遷移履歴（ログ出力用）を追加する\r\n        this._history.push({ // #62\r\n            sequenceIdx : this._sequenceIdx,\r\n            status : status,\r\n            time : time,\r\n            sequenceTime : this._sequenceTime\r\n        });\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * アベンド処理（holdしている可能性のあるリソースを解放し、イベントシーケンスを強制終了する）\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {Object}\r\n     *            holdedResource アベンドさせたVirtualResource\r\n     * @param {String}\r\n     *            [logID=\"E_600\"] ログID\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Boolean}\r\n     *            [isHolding=true] リソース(holdedResource)をholdしているか否か<br>\r\n     * @param {Number}\r\n     *            [abendTime=sytem.getTime()] abend時刻\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualApp.prototype.abend = function(system, holdedResource, \r\n                                    logID, logMesseage, isHolding, abendTime) {\r\n        logID = logID || \"E_600\";\r\n        abendTime = abendTime || system.getTime();\r\n        isHolding = (typeof(isHolding) === \"boolean\") ? isHolding : true; // #61\r\n        var events = []; // 戻り値\r\n        this.logger(3, system._log, this._sequenceTime, this, holdedResource, 'abend', undefined);\r\n        var seq = this._sequence[this._sequenceIdx];\r\n        // 現在のシーケンスでholdするリソースがあるとき、waitしている可能性があるため、waitから削除する\r\n        if (seq && seq.hold) { // #61\r\n            system._resources[seq.hold].release(this);\r\n        }\r\n        // holdingリソースを開放する\r\n        var holdings;\r\n        // シーケンスから、holdingリソース一覧を取得する #59\r\n        if (seq) holdings = seq.holding;\r\n        if (holdings) { // シーケンス上holdingリソースがあるとき(undefined対策） #61\r\n            for (var i = holdings.length - 1; 0 <= i; i--) { // #61\r\n                // holdedResourceは削除処理対象外（呼び出し元リソースは、呼び出し前に削除済なので）\r\n                if (holdings[i] !== holdedResource._name || isHolding){ // #61\r\n                    // holdingリソースを開放し、使用リソース減に伴って新たにスケジュールするvAppを取得 #59\r\n                    events = events.concat(system._resources[holdings[i]].free(this));\r\n                }\r\n            }\r\n        }\r\n        // イベントシーケンスを強制終了する\r\n        this.setSequenceTime(abendTime, logID); // #59\r\n        var vApp = this._finish(system, logID, logMesseage);\r\n        // 自vAppに継続処理があれば、自vAppをスケジュール対象に加える\r\n        if (vApp && (0 <= this._times)) { // #61\r\n            events = events.concat([vApp]);\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * イベント終了時処理（ログ出力と、繰り返し判定）\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {String}\r\n     *            [logID=\"N_000\"] ログID（ログメッセージの先頭文字）\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Number}\r\n     *            [forceTime] 強制終了時刻を指定する（ミシュレーション停止後のeTat強制出力用）\r\n     * @return {Object|undefined} 再スケジュールするときthis、再スケジュールしないときundefined\r\n     */\r\n    VirtualApp.prototype._finish = function(system, logID, logMesseage, forceTime) {\r\n        logID = logID || \"N__00\";\r\n        logMesseage = logMesseage || \"\";\r\n        var events = []; // 戻り値\r\n        var logText = logID + \" \" + this._userName + \" \" + logMesseage + \" \" + this._message;\r\n        var now = this._sequenceTime;\r\n\r\n        // 強制終了時（シミュレーション終了時刻到来時）、自APのシミュレーションを強制終了する\r\n        if (typeof(forceTime) === \"number\") {\r\n            // 起動済処理はTATログを出力する #59\r\n            if (this._startTime <= forceTime) { \r\n                // TATログを出力する\r\n                system.eTat.push( { x: forceTime, \r\n                                    y: Math.round(forceTime - this._startTime),\r\n                                    sTatIdx: 0,\r\n                                    message: logText,\r\n                                    history: this._history} ); // #62\r\n                this.logger(2, system._log, forceTime, this, undefined, 'finish() FORCE\"', logText);\r\n            }\r\n            this._sequenceIdx = this._sequence.length; // #61 処理完了状態にする\r\n            this._startTime = this._sequenceTime; // #61 念のため設定\r\n            return undefined;\r\n        }\r\n\r\n        // 起動済処理はTATログを出力する #59\r\n        if (this._startTime <= now ) { // || this._sequenceIdx ===\r\n                                        // this._sequence.length) {\r\n            system.eTat.push( { x: now,\r\n                                y: Math.round(now - this._startTime),\r\n                                sTatIdx: 0,\r\n                                message: logText,\r\n                                history: this._history} ); // #62\r\n            this.logger(2, system._log, now, this, undefined, 'finish() \"', logText);\r\n        } else  {\r\n            this.logger(0, system._log, now, this, undefined,\r\n                    'finish() Unexpected error★ _startTime > _sequenceTime:'\r\n                    + Util.D2S(this._startTime, \"hh:mm:ss.000\", true)\r\n                            + \" \" + this._startTime + \" > \" + now\r\n                            + \" Idx:\" + this._sequenceIdx \r\n                    , logText);\r\n        }\r\n        this._message = this._baseMessage; // ログ末尾に追加するメッセージの初期化\r\n \r\n        // 継続判定\r\n        if (0 < this._times) { // イベントシーケンスを繰り返すとき\r\n            // イベント時刻にThink time（指数分布）を加える\r\n            var nextTime = this.getTime() + this._thinkTimeMin;\r\n            if (this._thinkTimeMin < this._thinkTime) {\r\n                nextTime += Math.ceil(Math.abs( // #61\r\n                        Util.Random().exponential(this._thinkTime - this._thinkTimeMin)));\r\n            }\r\n            // 処理の先頭に戻る\r\n            return this.start(nextTime);\r\n        }\r\n        // イベントシーケンスを継続しない時(this._times < 0)\r\n        this._times--;       // イベントシーケンスの繰り返し回数を1減らす\r\n        this._sequenceIdx = this._sequence.length; // #61 処理完了状態にする\r\n        this._startTime = this._sequenceTime; // #61\r\n        return undefined;\r\n    };\r\n\r\n    /* new */\r\n    return VirtualApp;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-VirtualApp.js\n// module id = 40\n// module chunks = 0","import * as Util from '../util/util.js';\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualResource\r\n * @classdesc 仮想リソース\r\n * \r\n * @param {Object}\r\n *            system 仮想システム（シミュレーション中の現在時刻取得等に用いる）\r\n * @param {String}\r\n *            [name = \"unlimited\"] リソース名（\"unlimited\"はリソース解放待ちを管理しない）\r\n * @param {Number}\r\n *            [holdCapacity = 1.0] 保有リソース総量（数）\r\n * @param {Number}\r\n *            [timeout = 10秒] 処理のタイムアウト時間（未使用）\r\n * @param {Number}\r\n *            [waitCapacity = Number.MAX_SAFE_INTEGER]\r\n *            リソース取得待ちキューの深さ（数）、キュー溢れ時は即時エラー終了しリソース処理しない\r\n * @param {Number}\r\n *            [queueWait = 10秒] 最大キュー滞留時間（リソース取得待ちタイムアウト時間）\r\n * @param {Boolean}\r\n *            [log=false] 詳細ログ出力有無\r\n */\r\nexport default (function() { // #53\r\n    /** @constructor */\r\n    function VirtualResource(system, name,\r\n                        holdCapacity, timeout, waitCapacity, queueWait, log){\r\n        if(!(this instanceof VirtualResource)){\r\n            return new VirtualResource(system, name,\r\n                        holdCapacity, timeout, waitCapacity, queueWait, log);\r\n        }\r\n        this._system = system;\r\n        this._name = name || \"unlimited\";\r\n        this._log = log ? +log : 0; // #59\r\n\r\n        // 処理待ち管理用\r\n        this._waitTimeout = (typeof(queueWait) !== \"undefined\")\r\n                                ? queueWait : 10000;   // キュー滞留時間上限\r\n        this._waitCapacity  = (typeof(waitCapacity) !== \"undefined\")\r\n                                ? waitCapacity : Number.MAX_SAFE_INTEGER; // キューの深さ\r\n        this._waitHeap = Util.Heap(    // リソース解放待ちキュー（登録時間順）\r\n                function(obj){ return obj.getTime(); });\r\n        \r\n        // リソース管理用\r\n        this._holdTimeout  = (typeof(timeout)  !== \"undefined\") \r\n                                ? timeout : 10000;   // 処理のタイムアウト時間\r\n        this._holdCapacity = (typeof(holdCapacity) !== \"undefined\")\r\n                                ? holdCapacity : 1.0;   // 保有リソース量（数）\r\n        this._holdingQty = 0;   // 使用リソース量\r\n        this._holdHeap = Util.Heap( // 処理のタイムアウト管理用ヒープ{obj:,val:} #59\r\n                 function(node){ return node.val; }, // valはタイムアウト時刻\r\n                 function(node){ return node.obj; }); // objはvApp\r\n        \r\n        // イベントスケジュール制御用\r\n        this._sequenceTime = 0;   // シミュレータに登録したイベントの時刻（タイムアウトチェック用）\r\n        this._isScheduled = false; // シミュレータにタイムアウトチェックイベントをスケジュールしたか\r\n        if (0 < this._waitTimeout && 0 < this._holdTimeout){ // スケジュール間隔 #61\r\n            this._interval = Math.min(this._waitTimeout, this._holdTimeout);\r\n        } else if (0 < this._waitTimeout) {\r\n            this._interval = this._waitTimeout;\r\n        } else if (0 < this._holdTimeout) {\r\n            this._interval = this._holdTimeout;\r\n        } else {\r\n            this._interval = 0;\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * リソースチェックイベント（タイムアウトチェック）を開始する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Number}\r\n     *            startTime 開始時刻（UNIX時刻：ミリ秒）\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Object} イベント(this)\r\n     */\r\n    VirtualResource.prototype.start = function(startTime, system) { // #59\r\n        this._sequenceTime = startTime + this._interval; // シミュレータに登録するイベントの時刻\r\n        system.setEvent(this);    // シミュレータにタイムアウトチェックイベントをスケジュールする\r\n        this._isScheduled = true; // 「シミュレータにタイムアウトチェックイベントをスケジュールしたかフラグ」をON\r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * イベント時刻を返却する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualResource.prototype.getTime = function() {\r\n        return this._sequenceTime;\r\n    };\r\n    \r\n    /**\r\n     * タイムアウトチェック用仮想イベント\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualResource.prototype.next = function(system) {\r\n        var events = []; // 戻り値\r\n        var now = this.getTime();\r\n        // リソース解放待ち時間がタイムアウトしたappをタイムアウトさせる\r\n        var queuedTime = Number.MIN_SAFE_INTEGER; \r\n        while (0 < this._waitHeap.size() && this._waitTimeout <= now - queuedTime) {\r\n            queuedTime = this._waitHeap.top().getTime();\r\n            if (this._waitTimeout <= now - queuedTime) { // キューイング取引がタイムアウトしているとき\r\n                // リソース解放待ちHeapからfreeするappを取り出す\r\n                var app = this._waitHeap.pop();\r\n                // appをアベンドさせる(holdリソース解放なし）\r\n                var apps = app.abend(system, this, \"E_QTO\", this._name + \" queue timeout\",\r\n                        false, queuedTime + this._waitTimeout); // appにfree時刻をセットする\r\n                // appsをスケジュールイベント登録対象に加える\r\n                if (apps.length){\r\n                    events = events.concat(apps);\r\n                }\r\n            }\r\n        }\r\n        // リソース使用時間がタイムアウトしたappをタイムアウトさせる #59\r\n        var holdTimeoutTime = Number.MIN_SAFE_INTEGER;\r\n        while (0 < this._holdHeap.size() && holdTimeoutTime <= now) {\r\n            var top = this._holdHeap.top();\r\n            holdTimeoutTime = top.val;\r\n            if (holdTimeoutTime <= now) { // 処理中取引がタイムアウトしているとき #61\r\n                var app = top.obj;\r\n                // appがスケジュールされている場合削除する（スケジューラに登録されていない場合何も起きない）\r\n                system.removeEvent(app);\r\n                // appの使用時間がタイムアウトしたリソースを解放する（注：abendで解放させると永久ループする）\r\n                events = events.concat(this.free(app));                \r\n                // appをタイムアウト時刻にアベンドさせる(holdリソース解放を伴う）\r\n                events = events.concat(app.abend(system, this,\"E_HTO\", \r\n                            this._name + \" hold timeout\", false, holdTimeoutTime));\r\n            }\r\n        }\r\n        // 次回タイムアウトチェック時刻を設定する\r\n        if ((0 < this._waitHeap.size()) || (0 < this._holdHeap.size())) {\r\n            // タイムアウトの設定があるとき、 #61\r\n            // リソース解放待ちvAppがあるとき、(タイムアウトしていない)最古vAppのタイムアウト時刻\r\n            // リソース解放待ちvAppがないとき、現在からタイムアウト時刻後 にスケジュールする\r\n            var nextWaitTimeout = Number.MAX_SAFE_INTEGER;\r\n            if (0 < this._waitTimeout) {\r\n                if ( 0 < this._waitHeap.size() \r\n                        && now <= this._waitTimeout + this._waitHeap.top().getTime()) {\r\n                    nextWaitTimeout = this._waitHeap.top().getTime() + this._waitTimeout; \r\n                } else {\r\n                    nextWaitTimeout = now + this._waitTimeout;\r\n                }\r\n            }            \r\n            var nextHoldTimeout = Number.MAX_SAFE_INTEGER;\r\n            if (0 < this._holdTimeout) {\r\n                if(0 < this._holdHeap.size()) {\r\n                    nextHoldTimeout = this._holdHeap.top().val;\r\n                } else {\r\n                    nextHoldTimeout = now + this._holdTimeout;\r\n                }\r\n            }\r\n            this._sequenceTime = Math.min(nextWaitTimeout, nextHoldTimeout);\r\n            if (this._sequenceTime < Number.MAX_SAFE_INTEGER) {\r\n                events.push(this); // タイムアウトチェックイベントをケジュールイベント登録対象に加える\r\n            } else {\r\n                this._isScheduled = false;\r\n            }\r\n        } else { \r\n            // 以外のとき、シミュレータにタイムアウトチェックイベントを再スケジュールしない\r\n            this._isScheduled = false;\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * リソースを取得する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {Object}\r\n     *            vApp リソースにhold要求する仮想AP\r\n     * @return {Objcet} 処理結果{result:boolean, events:Array}<br>\r\n     *         {boolean} result :\r\n     *         true:正常（リソース取得、取得待ち、取得不要）、false:エラー（リソース枯渇E_QOF)）<br>\r\n     *         {Array} :events リソース取得後、スケジューラに登録するイベントの配列<br>\r\n     *         [vApp]： リソースを取得できたとき、もしくはリソース枯渇時でvApp再処理の場合、スケジュール対象の vApp\r\n     *         が登録された配列[vApp]を返却<br>\r\n     *         []： リソース待ちに登録されたとき、既にリソースが管理するスケジューラに登録さているので、空の配列[]を返却<br>\r\n     *         もしくはリソース枯渇時で繰返し完了時、再スケジュールしないので[]を返却\r\n     */\r\n    VirtualResource.prototype.hold = function(system, vApp) {\r\n        var ret = { result : true,\r\n                    events : [vApp] }; // 戻り値 #61\r\n        if (this._name === \"unlimited\") return ret; // [vApp] リソース解放待ちを管理しないとき\r\n        vApp.logger(4, this._log, vApp._sequenceTime, vApp, this, 'HOLD' , undefined);\r\n        // タイムアウトチェックイベントがスケジュールされていないとき、スケジュールする\r\n        if (!this._isScheduled && (0 < this._interval)) {\r\n            this.start(system.getTime(), system);\r\n        }\r\n        // リソースを取得できるとき、使用リソース量（数）を増やし、実行中処理管理ヒープに登録し、スケジュール対象とする\r\n        var amount = vApp.getAmount(this); // 消費リソース量(デフォルト1.0）\r\n        if (amount <= (this._holdCapacity - this._holdingQty)) {\r\n            // 使用リソースを増やす\r\n            this._holdingQty += amount;\r\n            // タイムアウト管理対象リソースのとき、vAppをタイムアウト管理対象に加える #59\r\n            if (0 < this._holdTimeout) {\r\n                this._holdHeap.push({obj: vApp, val: system.getTime() + this._holdTimeout});\r\n            }\r\n            vApp.logger(3, this._log, system.getTime(), vApp, this, 'hold' , undefined);\r\n            return ret; // [vApp]\r\n        }\r\n\r\n        // リソース解放待ちキューに空きがあるとき、vAppをリソース解放待ちに 登録する（スケジュールしない）\r\n        if ((this._waitHeap.size() < this._waitCapacity) && (0 < this._waitTimeout)){\r\n            // リソース解放待ちタイムアウト管理対象に加える\r\n            this._waitHeap.push(vApp);\r\n            vApp.addHistory(\"wait:\" + this._name, system.getTime()); // #61\r\n            vApp.logger(3, this._log, system.getTime(), vApp, this, 'wait' , undefined);\r\n            return { result: true, events: [] };\r\n        }\r\n        \r\n        // リソース解放待ちキューが溢れていた時、リソースを取得できずにアベンド（リソース解放なし、自AP継続の場合[vApp]をリターン） #61\r\n        var apps = vApp.abend(system, this, \"E_QOF\",\r\n                    \"[\" + this._name + \"] over flow\", false);\r\n        vApp.logger(3, this._log, system.getTime(), vApp, this, 'over' , undefined);\r\n        return { result: false, events: apps }; // #61\r\n    };\r\n\r\n    /**\r\n     * 引数vAppが使用していたリソースを解放する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            vApp リソースにfree要求する仮想AP\r\n     * @param {Boolean}\r\n     *            [isHolding=true] 該当vAppが自リソースをholdしているか否か<br>\r\n     *            false指定時、指定vAppはリソースをholdしていない前提で、hold vApp一覧からの削除処理を行わない\r\n     * @return {Array} スケジューラに登録するイベントの配列([vApp] | [])\r\n     */\r\n    VirtualResource.prototype.free = function(vApp, isHolding) { // #59\r\n        vApp.logger(4, this._log, this._system.getTime(), vApp, this, 'FREE' , undefined);\r\n        isHolding = (typeof(isHolding) === \"boolean\") ? isHolding : true;\r\n        if (this._name === \"unlimited\") return []; // リソース解放待ちを管理しないとき\r\n        var vApps = []; // 戻り値\r\n        // 自リソースを使用している可能性があるとき、使用リソースを解放する\r\n        // 解放したvAppが使用していたリソース量(デフォルト1.0）を、使用リソース量（数）から減らす #59\r\n        if (isHolding === true) { // #61\r\n            this._holdingQty -= vApp.getAmount(this);\r\n            // タイムアウト管理対象リソースのとき、vAppをタイムアウト管理対象から削除する #61\r\n            if (0 < this._holdTimeout) { // #61\r\n                var app = this._holdHeap.del(vApp);\r\n            }\r\n            vApp.addHistory(\"free:\" + this._name, this._system.getTime());\r\n            vApp.logger(3, this._log, this._system.getTime(), vApp, this, 'del' , undefined);\r\n        }\r\n        // リソース解放待ちキューから、空きリソースで処理できるようになったvAppを取り出しスケジュールする #61\r\n        var marginQty = this._holdCapacity - this._holdingQty;\r\n        var addQty = this._waitHeap.top()\r\n                    ? this._waitHeap.top().getAmount(this) // 次のリソース解放待ちキューの使用量\r\n                    : Number.MAX_SAFE_INTEGER;\r\n        for (var i = this._waitHeap.size() && addQty <= marginQty; 0 < i; i--) {\r\n            // リソース解放待ちキューからfreeするappを取り出す\r\n            var app = this._waitHeap.pop();\r\n            // appにfree時刻をセットし、スケジュールイベント登録対象に加える\r\n            // (注：リソース取得はスケジュール後、E_HTOに伴う他のリソースの時刻は将来）\r\n            app.setSequenceTime(this._system.getTime(), \"release:\" + this._name);\r\n            vApps.push(app);\r\n            // 次のappのリソース量を加える\r\n            addQty += this._waitHeap.top() \r\n                    ? this._waitHeap.top().getAmount(this) // 次のリソース解放待ちキューの使用量\r\n                    : Number.MAX_SAFE_INTEGER;\r\n        }\r\n        return vApps;\r\n    };\r\n\r\n\r\n    /**\r\n     * 引数vAppをリソース開放待ちキューからリリースする\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            vApp リリースする仮想AP\r\n     * @return {Object | undefined} リリースした仮想AP\r\n     */\r\n    VirtualResource.prototype.release = function(vApp) { // #61\r\n        var app = this._waitHeap.del(vApp);\r\n        if (app) vApp.addHistory(\"release\", this._system.getTime());\r\n        return app;\r\n    }\r\n\r\n    \r\n    \r\n    /**\r\n     * イベント終了時処理（リソースが管理しているvAppをfinishさせる（強制終了させ処理中vAppはTATログ出力する）\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {String}\r\n     *            [logID=\"N_000\"] ログID（ログメッセージの先頭文字）\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Number}\r\n     *            forceTime 強制終了時刻を指定する（ミシュレーション停止後のeTat強制出力用）\r\n     * @return {null}\r\n     */\r\n    VirtualResource.prototype._finish = function(system, logID,\r\n                                        logMesseage, forceTime) { // #59\r\n        // シミュレーション終了後処理（処理中のvAppを強制終了する）\r\n        logID = logID || \"N_EoS\";\r\n        logMesseage = logMesseage || \"\";\r\n        while(0 < this._waitHeap.size()){\r\n            event = this._waitHeap.pop();\r\n            if (event._finish) {\r\n                event._finish(system, logID,\r\n                        \"[\" + this._name + \"] \" + logMesseage , forceTime);\r\n            }\r\n        }\r\n    }\r\n\r\n    /* new */\r\n    return VirtualResource;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-VirtualResource.js\n// module id = 41\n// module chunks = 0","import VirtualSystem from './simulator-VirtualSystem.js';\r\nimport * as Util from '../util/util.js';\r\n/**\r\n * @memberOf Simulator\r\n * @class virtualSystemByJson\r\n * @classdesc 仮想システム生成ツール(virtualSystemByJson)\r\n *            <p>\r\n *            Util管理用クラス（スタティックメソッドのみ）のためコンストラクタは使用しない\r\n */\r\nexport default (function() { // #53\r\n    /** @constructor */\r\n    function virtualSystemByJson(){\r\n        if(!(this instanceof virtualSystemByJson)){\r\n            return new virtualSystemByJson();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n\r\n    // static\r\n    /**\r\n     * 初期表示用サンプルデータ(ETAT)を自動生成する\r\n     * \r\n     * @memberof Simulator.VirtualSystemByJson\r\n     * @param {String}\r\n     *            [jsonText] シミュレーション条件JSONテキスト\r\n     * @return {ETAT} 終了時刻のTAT（応答時間）時系列データ [{x:終了時刻(UNIX時刻の経過時間(秒)),\r\n     *         y:レスポンス(秒)}]\r\n     */\r\n    // CreateSampleTatLog\r\n    virtualSystemByJson.Execute = function(jsonText){ // #53\r\n        var vSys = {};\r\n        // parse\r\n        var json = JSON.parse(jsonText)\r\n        // virtual system と resources の設定\r\n        var log = (json.log !== undefined) ? json.log : false; // #59\r\n        var start = (json.start !== undefined) \r\n                    ? Util.S2D(json.start) : new Date(1970,1,2);\r\n        var end = start + Util.S2N(json.end, \"24*h\");\r\n        var resources = json.resources;\r\n        for (var i = 0; i < resources.length; i++) {\r\n            resources[i].timeout = Util.S2N(resources[i].timeout, \"10*sec\");\r\n            resources[i].qWait = Util.S2N(resources[i].qWait, \"10*sec\");\r\n        }\r\n        vSys = VirtualSystem(start, end, json.resources, log);\r\n        // model の取得\r\n        var models = json.models;\r\n        for (var i = 0; i < models.length; i++) {\r\n            var model = models[i];\r\n            var name = Object.keys(model)[0]; // モデルの名称\r\n            var m = model[name]; // モデル\r\n            var baseModel = m.baseModel; // baseModel\r\n            for (var j = 0; j < m.sequence.length; j++) {\r\n                // 時間指定文字列を、ミリ秒数値に変換する（例：\"3*sec\"->3000)\r\n                m.sequence[j].tatMin = Util.S2N(m.sequence[j].tatMin);\r\n                m.sequence[j].tat = Util.S2N(m.sequence[j].tat);\r\n            }\r\n            // sequenceに、baseModelを展開し、未開放リソースの開放処理を登録する\r\n            models[name] = VirtualSystem.getModel(\r\n                        baseModel.holds, \r\n                        Util.S2N(baseModel.tatMin), Util.S2N(baseModel.tat),\r\n                        m.sequence, \r\n                        (typeof(m.times) === \"number\") ? m.times : 1, // #61\r\n                        Util.S2N(m.thinkTimeMin), Util.S2N(m.thinkTime)); \r\n        }\r\n        // client の設定\r\n        var clients = json.clients;\r\n        for (var i = 0; i < clients.length; i++) {\r\n            var c = clients[i];\r\n            var cStart = start + Util.S2N(c.start, 0);\r\n            var cEnd   = start + Util.S2N(c.end, 24*60*60*1000);\r\n            vSys.setClients(c.user, c.message, c.num, cStart, cEnd, models[c.model]);\r\n        }\r\n        if (1 < log) console.log(vSys); // #59\r\n        return vSys.execute();\r\n    }\r\n\r\n    /**\r\n     * シミュレーション条件JSONテキストを作成する\r\n     * \r\n     * @memberof Simulator.VirtualSystemByJson\r\n     * @param {Number}\r\n     *            [n = 0] シナリオ番号\r\n     * @return {String} シミュレーション条件JSONテキスト\r\n     */\r\n    // CreateSampleTatLogJson\r\n    virtualSystemByJson.GetJsonConfig = function(n){ // #53\r\n        n = (typeof(n) !== \"undefined\") ? n : 0;\r\n        var jsonText = \"\";\r\n        if (n === 0) {\r\n            jsonText =  '{\\n'\r\n                + '\"log\" : 1,\\n'\r\n                + '\"start\" : \"2017/01/02 00:00:00.000\",\\n'\r\n                + '\"end\"   : \"17.0*h\",\\n'\r\n                + '\"resources\" : [\\n'\r\n                + '  {\"type\" :\"WEB\", \"thread\":1024,\"timeout\":\"300*sec\", \"q\":1280, \"qWait\":0},\\n'\r\n                + '  {\"type\" :\"AP\",  \"thread\":20,  \"timeout\":\"300*sec\", \"q\":1280, \"qWait\":0},\\n'\r\n                + '  {\"type\" :\"DB\",  \"thread\":10,  \"timeout\": \"10*sec\", \"q\":10,  \"qWait\":\"10*sec\"}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"models\" : [\\n' // 取引モデル一覧\r\n                + '  { \"ON-1\" : {\\n' // オンライン取引1\r\n                + '    \"times\": 60, \"thinkTimeMin\":\"3*sec\", \"thinkTime\": \"10*sec\",\\n'\r\n                + '    \"baseModel\":  {\"holds\": [\"WEB\",\"AP\",\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":30, \"tat\":50, \"note\":\"select A\"},\\n'\r\n                + '      {\"tatMin\":50, \"tat\":50, \"note\":\"updateB\", \"hold\":\"TBL_B\"},\\n'\r\n                + '      {\"tatMin\":80, \"tat\":100,\"note\":\"updateC\", \"hold\":\"TBL_C\"}\\n'\r\n                + '    ]}},\\n'\r\n                + ' { \"ON-2\" : {\\n' // オンライン取引2\r\n                + '    \"times\": 60, \"thinkTimeMin\":\"500*ms\", \"thinkTime\": \"1*sec\",\\n'\r\n                + '    \"baseModel\":  {\"holds\": [\"WEB\",\"AP\",\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":\"100*ms\", \"tat\":\"500*ms\", \"hold\":\"\"}\\n'\r\n                + '    ]}},\\n'\r\n                + ' { \"BATCH-1\" : {\\n' // バッチ取引3\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":\"2*sec\",\"tat\":\"5*sec\",\"note\":\"updateB\",\"hold\":\"TBL_B\"}\\n'\r\n                + '    ]}}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"clients\" : [\\n' // ユーザ作成条件\r\n                + '  {\"num\":100,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"ON-1\",  \"user\" :\"userU\", \"message\":\"select A update B,C\"},\\n'\r\n                + '  {\"num\": 20,\"start\":\"16.5*h\", \"end\":\"16.6*h\", \"model\":\"ON-1\",  \"user\" :\"userT\", \"message\":\"select A update B,C 【増】\"},\\n'\r\n                + '  {\"num\":100,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"ON-2\",  \"user\" :\"userS\", \"message\":\"排他なし(WEBのみ)\"},\\n'\r\n                + '  {\"num\": 20,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"BATCH-1\",\"user\":\"userB\", \"message\":\"バッチ処理 update B＊＊＊＊＊\"}\\n'\r\n                + ']\\n'\r\n                + '}\\n';\r\n        } else if (n === 1) {\r\n            // test用\r\n            jsonText =  '{\\n'\r\n                + '\"//\" : \"log（任意、デフォルト3）:詳細ログ出力指定(0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)\",\\n'\r\n                + '\"//\" : \"start/end:シミュレーション開始時刻/終了時刻\",\\n'\r\n                + '\"log\" : 1,\\n'\r\n                + '\"start\" : \"1970/01/02 00:00:00.000\",\\n'\r\n                + '\"end\"   : \"30.0*sec\",\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"resources:sequenceのhold/freeで指定するリソース名の定義\",\\n'\r\n                + '\"//\" : \"type:リソース名、thread:最大同時hold数、timeout：holdタイムアウト時間\",\\n'\r\n                + '\"//\" : \"　　　　　　　　　　　q:最大hold待ち数、qWait:最大hold待ち時間\",\\n'\r\n                + '\"resources\" : [\\n'\r\n                + '  {\"type\" :\"DB\",  \"thread\":2,  \"timeout\": \"5*sec\", \"q\":1,  \"qWait\":\"2*sec\"}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"models:clientsで指定するモデル名(model)の定義、以下modelsで指定できる項目\",\\n'\r\n                + '\"//\" : \"baseModel:複数リソースのsequenceをまとめて宣言できる、sequenceに展開した後処理される、任意指定\",\\n'\r\n                + '\"//\" : \"sequence:指定された順にリソースを取得する、配列内に複数指定可、sequenceも複数指定可\",\\n'\r\n                + '\"//\" : \"hold：リソース名、holds(baseModelのみ指定可）：リソース一覧、各々にtat/tatMinが適用される\",\\n'\r\n                + '\"//\" : \"tat/tatMin：リソースの取得に要する平均/最小時間、tatMinのデフォルトはtat\",\\n'\r\n                + '\"//\" : \"　　　　　　★注：tatはリソースの使用時間ではない、リソース使用時間を指定す場合はfreeで指定\",\\n'\r\n                + '\"//\" : \"数値はミリ秒単位、*ms,*sec,*min,*h,*day 指定可\",\\n'\r\n                + '\"//\" : \"times：繰返し回数\",\\n'\r\n                + '\"//\" : \"thinkTime/thinkTimeMin：繰返し時の間隔の平均/最小時間、thinkTimeMinのデフォルトはthinkTime\",\\n'\r\n                + '\"//\" : \"free：[リソース名の配列]、指定リソースを開放する、free指定の無いリソースはシーケンスの最後にfreeされる\",\\n'\r\n                + '\"models\" : [\\n' // 取引モデル一覧\r\n                + ' { \"TEST-AB\" : {\\n' // テスト取引\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"2*ms\"},\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_A\", \"tatMin\":\"1*sec\", \"tat\":\"1*sec\"}],\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_B\", \"tatMin\":\"3*sec\", \"tat\":\"3*sec\"}],\\n'\r\n                + '    \"times\": 2, \"thinkTimeMin\":\"1*sec\", \"thinkTime\": \"1*sec\"}},\\n'\r\n                + ' { \"TEST-BA\" : {\\n' // テスト取引\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"2*ms\"},\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_B\", \"tatMin\":\"1*sec\", \"tat\":\"1*sec\"}],\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_A\", \"tatMin\":\"3*sec\", \"tat\":\"3*sec\"}],\\n'\r\n                + '    \"times\": 2, \"thinkTimeMin\":\"1*sec\", \"thinkTime\": \"1*sec\"}}\\n'\r\n                + '    ],\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"clients：仮想アプリケーションの起動クライアントの定義\",\\n'\r\n                + '\"//\" : \"num:作成クライアント数、start～endの間で、ランダム（指数分布）に指定回数起動する\",\\n'\r\n                + '\"//\" : \"start/end:仮想クライアント作成/終了時刻、先頭で宣言したstartからの相対時刻\",\\n'\r\n                + '\"//\" : \"model:modelsで宣言したモデル名\",\\n'\r\n                + '\"//\" : \"user:user+通番 のユーザ名で仮想クライアントが作成される\",\\n'\r\n                + '\"clients\" : [\\n' // ユーザ作成条件\r\n                + '  {\"num\": 1,\"start\":\"0*sec\", \"end\":\"0*sec\", \"model\":\"TEST-AB\",\"user\" :\"testAB1\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"1*sec\", \"end\":\"1*sec\", \"model\":\"TEST-AB\",\"user\" :\"testAB2\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"3*sec\", \"end\":\"3*sec\", \"model\":\"TEST-BA\",\"user\" :\"testBA3\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"4*sec\", \"end\":\"4*sec\", \"model\":\"TEST-BA\",\"user\" :\"testBA4\"}\\n'\r\n                + ' ]\\n'\r\n                + '}\\n';\r\n        }\r\n\r\n        return jsonText; \r\n    }\r\n\r\n    /* new */\r\n    return virtualSystemByJson;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-VirtualSystemByJson.js\n// module id = 42\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport {CreateSampleTatLogAndChartShow} from '../tatLogDiver/tatLogDiver-Init.js';\r\n\r\n/**\r\n * @memberOf Simulator\r\n * @class MenuConfig\r\n * @classdesc シミュレータ用メニューHTML定義\r\n * \r\n */\r\nexport default function MenuConfig() {} // #74\r\n\r\nMenuConfig.config = function() {\r\n    // Simulator Config用関数定義(radio用） #53\r\n    var func_S_SIMU_000 = function(){ CreateSampleTatLogAndChartShow(0); };\r\n    var func_S_SIMU_001 = function(){ CreateSampleTatLogAndChartShow(1); };\r\n    // Simulator Config設定画面定義 #53\r\n    var prefix = \"Simulator\";\r\n    var c = new  Util.Config(prefix);\r\n        c    // #53\r\n         .n(\"<br>\")\r\n         .label(null,\" If you change the scenario below,\").n()\r\n         .label(null,\"JSON is initialized and re-simulated.\").n()\r\n         .n(\"<br>\")\r\n         .name(\"S_SIMU\")\r\n             .radio(\"S_SIMU_000\", null, \r\n                       \"1 hour with table(B) lock.<br>\"\r\n                     + \"- online[100-500ms 2-5tps]<br>\" \r\n                     + \"- batch[2-5sec evry3min]\",\r\n                     true ,null, func_S_SIMU_000).n()\r\n             .radio(\"S_SIMU_001\", null, \"for test\", \r\n                     false ,null, func_S_SIMU_001).n()\r\n     ;\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-MenuConfig.js\n// module id = 43\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport Graph from '../tatLogDiver/tatLogDiver-Graph.js';\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class MenuConfigFilter\r\n * @classdesc FileParser用メニューHTML定義\r\n * \r\n */\r\nexport default function MenuConfigFilter() {} // #76\r\n\r\nMenuConfigFilter.config = function () {\r\n    var prefix = \"Filter\";\r\n    var c = new  Util.Config(prefix);\r\n    // Filter Config用関数定義(radio用） #51\r\n    var func_F_SYNC_UPPER = function(){ Graph.DrawCallback(HJN.chart.graph); };\r\n    var func_F_SYNC_DETAIL = function(){ Graph.DrawCallback(HJN.chartD.graph); };\r\n    // Filter Config設定画面定義 #51\r\n    c // #53\r\n        .name(\"F_SYNC\").label(null,\"Sync\") // #50\r\n            .radio(\"F_SYNC_UPPER\", null, \"Upper\", false ,null, func_F_SYNC_UPPER) // #51\r\n            .radio(\"F_SYNC_DETAIL\", null, \"Detail\", false, null, func_F_SYNC_DETAIL)\r\n            .radio(\"F_ASYNC\", null, \"Async\", true).n()\r\n        .label(null,\"<B>----- Data filter condition--------</B>\").n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TIME\").label(null, \"<B>[Date filter]</B>\").n()\r\n            .label(null,\"Include if end time is between\").n()\r\n                .text(\"F_TIME_FROM\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.000\"') // #92\r\n                .label(null,\"and\").n()\r\n                .text(\"F_TIME_TO\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.000\"').n() // #92\r\n            .n(\"<br>\")\r\n            .name(\"F_TAT\").label(null,\"<B>[Turnaround time(TAT) filter]</B>\").n()\r\n            .label(null,\"Include if TAT is between\").n()\r\n                .number(\"F_TAT_FROM\", null, null, \"0\", 'style=\"width:80px;\"')\r\n                .number(\"F_TAT_TO\", \"and\", null, null, 'style=\"width:80px;\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TEXT\").label(null,\"<B>[Text filter]</B>\").n()\r\n                .radio(\"F_TEXT_NON\", null, \"Don't use.\", true)\r\n                .radio(\"F_TEXT_INCLUDE\", null, \"Include \")\r\n                .radio(\"F_TEXT_EXCLUDE\", null, \"Exclude \").n()\r\n                .number(\"F_TEXT_LEN\", \"if \", \" bytes\", null, 'style=\"width:40px;\"')\r\n                .number(\"F_TEXT_POS\", \"from the \", \"th byte\", \"1\", 'style=\"width:40px;\"').n()\r\n                .number(\"F_TEXT_COL\", \"from head of the\", \"th column of CSV\", \"3\", 'style=\"width:40px;\"').n()\r\n                .text(\"F_TEXT_REG\", \"match the regular expression\", null, null, 'size=\"7\" placeholder=\".*\"').n()\r\n            .n(\"<br>\")\r\n    ;\r\n}\r\n\r\nMenuConfigFilter.reset = function () {\r\n    // メニュー画面フィルタ条件に、初期値を設定する\r\n    var c = new Util.Config(\"Filter\");\r\n    c.setText(\"F_TIME_FROM\", null);\r\n    c.setText(\"F_TIME_FROM\", null);\r\n    c.setText(\"F_TIME_TO\", null);\r\n    c.setText(\"F_TAT_FROM\", 0);\r\n    c.setText(\"F_TAT_TO\", null);\r\n    c.setSelector(\"F_TEXT_NON\");\r\n    c.setText(\"F_TEXT_LEN\", null);\r\n    c.setText(\"F_TEXT_POS\", 1);\r\n    c.setText(\"F_TEXT_COL\", 3);\r\n    c.setText(\"F_TEXT_REG\", null);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-MenuConfigFilter.js\n// module id = 44\n// module chunks = 0","var map = {\n\t\"./tatLogDiver\": 6,\n\t\"./tatLogDiver-Copyright\": 8,\n\t\"./tatLogDiver-Copyright.js\": 8,\n\t\"./tatLogDiver-Graph\": 1,\n\t\"./tatLogDiver-Graph.js\": 1,\n\t\"./tatLogDiver-HJN\": 2,\n\t\"./tatLogDiver-HJN.js\": 2,\n\t\"./tatLogDiver-Init\": 3,\n\t\"./tatLogDiver-Init.js\": 3,\n\t\"./tatLogDiver-Menu\": 7,\n\t\"./tatLogDiver-Menu.js\": 7,\n\t\"./tatLogDiver-MenuConfigDetailGraph\": 10,\n\t\"./tatLogDiver-MenuConfigDetailGraph.js\": 10,\n\t\"./tatLogDiver-Plot\": 9,\n\t\"./tatLogDiver-Plot.js\": 9,\n\t\"./tatLogDiver-Usage.html\": 46,\n\t\"./tatLogDiver.css\": 13,\n\t\"./tatLogDiver.js\": 6\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 45;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver ^\\.\\/.*$\n// module id = 45\n// module chunks = 0","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n<meta charset=\\\"UTF-8\\\">\\r\\n<title>Insert title here</title>\\r\\n</head>\\r\\n<body>\\r\\n<p>Ver. b19.06.30, Last update: 2019/06/30, (c)2017-2019 hirosejn </p>\\r\\n<h1 id=\\\"index\\\">Index</h1>\\r\\n<p><a href=\\\"#environment\\\"><strong>Environment　動作環境</strong></a></p>\\r\\n<p><a href=\\\"#items\\\"><strong>Items　画面の構成要素</strong></a></p>\\r\\n<p><a href=\\\"#graph\\\"><strong>Graph　グラフの操作方法</strong></a></p>\\r\\n<p><a href=\\\"#menu\\\"><strong>Menu　メニューの操作方法</strong></a></p>\\r\\n<ol>\\r\\n<li><a href=\\\"#menu-file\\\">&gt; File</a></li>\\r\\n<li><a href=\\\"#menu-filter\\\">&gt; Filter</a></li>\\r\\n<li><a href=\\\"#menu-simulator\\\">&gt; Simulator</a></li>\\r\\n<li><a href=\\\"#menu-view\\\">&gt; View</a></li>\\r\\n<li><a href=\\\"#menu-download\\\">&gt; Download</a></li>\\r\\n<li><a href=\\\"#menu-bottomdetailgraph\\\">&gt; Bottom detail graph</a></li>\\r\\n<li><a href=\\\"#menu-help\\\">&gt; Help</a></li>\\r\\n</ol>\\r\\n<p><a href=\\\"#simulator\\\"><strong>Simulator　シミュレーションシナリオの仕様</strong></a></p>\\r\\n<ol>\\r\\n<li><a href=\\\"#simulator-01\\\">Simulator-01　サンプル01(1 hour with table block.)の仕様</a></li>\\r\\n<li><a href=\\\"#simulator-99\\\">Simulator-99　サンプル99(for test)の仕様</a></li>\\r\\n</ol>\\r\\n<hr>\\r\\n<h2 id=\\\"environment\\\">Environment</h2>\\r\\n<h2 id=\\\"動作環境-↑\\\">動作環境　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n\\t<li><p>Chrome：Ver74以降にて動作検証（推奨）</p></li>\\r\\n\\t<li><p>Edge：基本動作検証済</p></li>\\r\\n\\t<li><p>ie8 ：基本動作検証済、注：Chroneに比べ5倍程度遅い。</p></li>\\r\\n</ul>\\r\\n<hr>\\r\\n<h2 id=\\\"items\\\">Items</h2>\\r\\n<h2 id=\\\"画面の構成要素-↑\\\">画面の構成要素　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n\\t<li><strong>右メニュー</strong>\\r\\n\\t\\t<br>：機能をアコーディオンメニュー形式で表示</li>\\r\\n\\t<li><strong>右上メッセージエリア</strong>\\r\\n\\t\\t<br>：ファイル読込処理結果等のメッセージを表示（ダイアログの操作で移動／リサイズ可）</li>\\r\\n\\t<li><strong>上段全体グラフ</strong>\\r\\n\\t\\t<br>：指定ファイルを、フィルター条件でフィルターしたデータを表示</li>\\r\\n\\t<li><strong>下段詳細グラフ</strong>\\r\\n\\t\\t<br>：上段表示データのうち「下段詳細グラフ表示条件」による指定期間のデータを表示</li>\\r\\n\\t<li><strong>下段データ表示エリア</strong>\\r\\n\\t\\t<br>：下段詳細グラフで、マウスオーバにより選択されたプロットに該当する、ファイルのレコードを表示。（ダイアログの操作で移動／リサイズ可）</li>\\r\\n\\t<li><strong>ダイアログ</strong>：\\r\\n\\t\\t<br>【閉じる】：ダイアログ右上のバツボタン。\\r\\n\\t\\t<br>【移動】：上部にマウスオーバすると表示されるグレーのバーをドラッグする。\\r\\n\\t\\t<br>【リサイズ】：四隅四辺にマウスオーバし、マウスがリサイズアイコンになった状態からドラッグする。</li>\\r\\n</ul>\\r\\n<hr>\\r\\n<h2 id=\\\"graph\\\">Graph</h2>\\r\\n<h2 id=\\\"グラフの操作方法-↑\\\">グラフの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n\\t<li><p><strong>マウスオーバー</strong> ：X軸の最も近い時刻のプロットが選択され強調表示される。</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p>　下段グラフの場合は、選択プロットの時刻に同時処理(CONC)している処理の開始時刻―終了時刻を結ぶ線が表示される（同時処理が視認し易く表示されるので、容易に排他解放待ちの有無を特定できる）。下部データ表示エリアに、選択プロットの元ファイルのレコードが表示される（排他処理を容易に特定できる）。</p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n\\t<li><p><strong>マウスクリック／タッチ</strong> ：選択されたプロットを基準に、下段詳細グラフが更新され、「下段詳細グラフ表示条件」アイコンが追加される。</p></li>\\r\\n\\t<li><p><strong>マウスドラッグ（横／縦）</strong> ：指定範囲を横幅／縦幅としてグラフを拡大表示する。</p></li>\\r\\n\\t<li><p><strong>マウスダブルクリック</strong> ：マウスドラッグによるグラフの拡大表示をリセットする。（左上の「reset zoom」ボタンも同一機能）</p></li>\\r\\n</ul>\\r\\n<hr>\\r\\n<h2 id=\\\"menu\\\">Menu</h2>\\r\\n<h2 id=\\\"メニューの操作方法-↑\\\">メニューの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n\\t<li><strong>メッセージ表示エリア</strong> ：処理結果メッセージを表示する。マウスによる移動（エリア上部選択）／リサイズに対応。</li>\\r\\n\\t<li><strong>Place on/side</strong> ボタン：メニューをグラフに「重ねる／重ねない」を切り替える。</li>\\r\\n\\t<li><strong>reset zoom</strong> ボタン：グラフの描画サイズを初期化する。（Androidでグラフのダブルクリックができないため設置）</li>\\r\\n\\t<li><strong>バツ／ハンバーガー</strong> ボタン：メニューの「表示／非表示」を切り替える</li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-file\\\">Menu-File</h3>\\r\\n<h2 id=\\\"メニュー／fileの操作方法-↑\\\">メニュー／Fileの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<h4>ボタン</h4>\\r\\n<ul>\\r\\n\\t<li><p><strong>Open csv data file</strong> ボタン：CSVファイルを選択。ファイルを選択するとグラフを表示する。</p></li>\\r\\n</ul>\\r\\n<h4>指定項目</h4>\\r\\n<ul>\\r\\n\\t<li><p><strong>Open file as</strong> ：データ読込モード指定</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p> <strong>◎newly</strong> ：新規に読み込む（既存データを破棄） <strong>○append</strong> ：既存データに指定ファイルの内容を追加する</p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n</ul>\\r\\n<h4>----- File format definition --------</h4>\\r\\n<ul>\\r\\n\\t<li><p><strong>[Line feed code]</strong> ：CSVファイルの改行コードを指定</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>○固定長 &quot;80&quot;byte</strong> ／ <strong>◎Windows:CR(13)+CF(10)</strong>\\r\\n\\t\\t\\t ／ <strong>○UNIX/Linux:LF(10)</strong> ／ <strong>○zOS:NEL(15)</strong> ／ <strong>○Max:CR(13)</strong>\\r\\n\\t\\t\\t  ／ <strong>○other charcode (&quot; &quot;)</strong> 文字コード番地を10進で指定</p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n\\t<li><p><strong>[Charset]</strong> ：CSVファイルの文字コードを指定（レコードデータ表示時に指定文字コードからUnicodeに変換して表示）</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>○Shift-JIS</strong> ／<strong>○EUC-JP</strong> ／  <strong>◎UTF-8</strong> ／ <strong>○Unicode</strong></p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n\\t<li><p><strong>[CSV delimiter]</strong> ：CSVファイルのデリミタを指定</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>○comma</strong> ：カンマ区切り／ <strong>◎tab</strong> ：タブ区切り／ <strong>○other &quot;,&quot;</strong>  区切り文字を指定する</p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n</ul>\\r\\n<h4>----- Data format definition --------</h4>\\r\\n<ul>\\r\\n\\t<li><p><strong>　</strong>CSVのカラムが保有するデータ構成を指定</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>○TAT &amp; START time</strong> ／<strong>◎TAT &amp; END time</strong> ／  <strong>○START &amp; END time</strong></p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n\\t<li><p><strong>[Timestamp field]</strong> ：終了時刻のフィールドの位置とフォーマットを指定</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>&quot;1&quot;th column of CSV</strong>：CSVのカラム位置を指定（デフォルト1カラム目、固定長レコードの場合1を指定）</p>\\r\\n\\t\\t<p><strong>Position(byte): from &quot;1&quot; length &quot; &quot;</strong>\\r\\n\\t\\t\\t：レコード内の固定バイト位置指定　レコードのfromバイト目から、length指定バイト長</p>\\r\\n\\t\\t<p><strong>Format</strong> :時刻のフォーマット</p>\\r\\n\\t\\t<p><strong>◎text &quot;YYYY/MM/DD hh.mm.ss.000&quot;</strong>\\r\\n\\t\\t\\t ：指定カラムのYYYY MM DD hh mm ss 000の位置から値を取得（エクセルの表示フォーマット： YYYY/MM/DD hh:mm:ss.000 に相当）</p>\\r\\n\\t\\t<p>　／ <strong>◎(num)text</strong> ／ <strong>○long</strong>\\r\\n\\t\\t\\t ：text：ユリウス日0:00との時差数値　テキスト数値／long(4バイト)数値（別途エンディアン指定)</p>\\r\\n\\t\\t<p><strong>Units of numbers:</strong> <strong>○msec</strong> ／ <strong>◎sec</strong>\\r\\n\\t\\t\\t ：(num)textもしくはlong選択時に、数値の単位をmsec/secから選択</p>\\r\\n\\t</blockquote>\\r\\n\\t</li>\\r\\n</ul>\\r\\n<ul>\\r\\n\\t<li><p><strong>[TAT or START/END judgment field]</strong> ：処理時間(TAT)フィールド　もしくは、開始／終了レコード判定フィールド の位置とフォーマットを指定</p>\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>&quot;2&quot;th column of CSV</strong>：CSVのカラム位置を指定（デフォルト2カラム目、固定長レコードの場合1を指定）</p>\\r\\n\\t\\t<p><strong>Position(byte): from &quot;1&quot; length &quot; &quot;</strong>：固定バイト位置指定　指定カラムのfromバイト目から、length指定バイト長</p>\\r\\n\\t</blockquote>\\r\\n\\t\\t<strong>for TAT(turnaround time) condition</strong> ：処理時間(TAT)フィールド　の条件\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>Units of numbers:</strong> <strong>○msec</strong> ／ <strong>◎sec</strong>\\r\\n\\t\\t\\t ：処理時間の単位　msec/secから選択</p>\\r\\n\\t\\t<p><strong>Format:◎(num)text</strong> ／ <strong>○long</strong>\\r\\n\\t\\t\\t ：処理時間のフォーマット　テキスト数値／long(4バイト)数値</p>\\r\\n\\t\\t<p><strong>for long Endian:  ◎little</strong> ／ <strong>○big</strong>\\r\\n\\t\\t\\t ：long指定時のエンディアンを選択　リトルエンディアン／ビッグエンディアン</p>\\r\\n\\t</blockquote>\\r\\n\\t<strong>for START/END judgment condition</strong> ：開始／終了レコード判定フィールド　の条件\\r\\n\\t<blockquote>\\r\\n\\t\\t<p><strong>START record: Matches:/\\\"START\\\"/</strong>：指定正規表現（デフォルト/START/）に合致するレコードを開始レコードとする</p>\\r\\n\\t\\t<p><strong>END record: Matches:/\\\"END\\\"/</strong>：指定正規表現(デフォルト/END/)に合致するレコードを終了レコードとする</p>\\r\\n\\t</blockquote>\\r\\n</ul>\\r\\n<ul>\\r\\n<li><p><strong>[START-END pairing KEY field]</strong>\\r\\n\\t\\t ：開始／終了レコードなど同一取引と判定するキーフィールドを指定</p>\\r\\n<blockquote>\\r\\n\\t<p><strong>&quot;3&quot;th column of CSV</strong>\\r\\n\\t\\t：CSVのカラム位置を指定（デフォルト2カラム目、固定長レコードの場合1を指定）</p>\\r\\n\\t<p><strong>Position(byte): from &quot;1&quot; length &quot; &quot;</strong>\\r\\n\\t\\t：固定バイト位置指定　指定カラムのfromバイト目から、length指定バイト長</p>\\r\\n\\t<p><strong>&amp;Position(Matches reg. exp.):</strong>\\r\\n\\t\\t：かつ、以下の正規表現に合致する文字列に間（空欄のときは先頭～末尾）、</p>\\r\\n\\t<p><strong>between /\\\" \\\"/ and /\\\" \\\"/</strong></p>\\r\\n\\t<p><strong>&amp;Adopt as KEY: Matches /\\\"[0-9A-Z]+\\\"/</strong>\\r\\n\\t\\t:かつ、指定の正規表現に合致する文字列</p>\\r\\n</blockquote>\\r\\n</ul>\\r\\n<h4>ボタン</h4>\\r\\n<ul>\\r\\n\\t<li><p><strong>save format (.json)</strong> ボタン\\r\\n\\t\\t：メニュー指定項目を、JSON形式のファイルでダウンロードする</p></li>\\r\\n\\t<li><p><strong>load format (.json)</strong> ボタン\\r\\n\\t\\t： JSON形式のファイルから、メニュー指定項目を読み込む</p></li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-filter\\\">Menu-Filter</h3>\\r\\n<h2 id=\\\"メニュー／filterの操作方法-↑\\\">メニュー／Filterの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n<li><p><strong>Sync ○Upper ○Detail ◎Async</strong> 指定：表示しているグラフの条件をフィルター条件に取り込む</p>\\r\\n<blockquote>\\r\\n<p>　Upperを選択したタイミングで上段グラフを取り込む／Detailを選択したタイミングで下段グラフ／Asyncを選択した際には何も変更しない</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>[Date filter]</strong> 指定機能</p>\\r\\n<blockquote>\\r\\n<p><strong>Include if end time is between &quot;YYYY/MM/DD hh.mm.ss.000&quot; and &quot;YYYY/MM/DD hh.mm.ss.000&quot;</strong> ：</p>\\r\\n<p>　指定期間のデータのみを上段グラフの表示対象とする。時刻を手入力する作業は時間がかかるので Sync Upper/Detail で現在描画している情報を取り込んでから修正する操作を想定</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>[Turnaround time(TAT) filter]</strong> 指定機能：</p>\\r\\n<blockquote>\\r\\n<p><strong>Include if TAT is between &quot;0①&quot; and &quot;数値②&quot;</strong> ：</p>\\r\\n<p>　処理時間(TAT)が①～②のデータのみを上段グラフの表示対象とする</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>[Text filter]</strong> 指定機能：</p>\\r\\n<blockquote>\\r\\n<p><strong>◎Don&#39;t use. ○Include ○Exclude</strong></p>\\r\\n<p> <strong>if &quot;数値①&quot; bytes from the &quot;1②&quot;th byte from head of the &quot;3③&quot;th column of CSV match the regular expression &quot;④&quot;</strong> ：</p>\\r\\n<p>　テキストフィルターを使わない／正規表現に合致するデータを処理対象とする／正規表現に合致しないデータを処理対象とする</p>\\r\\n<p>　CSVレコードの、③番目のカラムの、先頭②バイト目から、①バイトの文字列を、正規表現④に照らして評価</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-simulator\\\">Menu-Simulator</h3>\\r\\n<h2 id=\\\"メニュー／simulatorの操作方法-↑\\\">メニュー／Simulatorの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<p>TAT log diver を起動すると、サンプルシミュレーションシナリオ１を初期表示する。</p>\\r\\n<ul>\\r\\n<li><strong>Simulate</strong> ボタン：指定したシミュレーションシナリオを実行しグラフを表示する。</li>\\r\\n<li><strong>JSON Editor(Open/Close)</strong> ボタン：シミュレーションシナリオ編集画面を開く／編集画面が開いている場合は閉じる。</li>\\r\\n<li><strong>サンプルシナリオ選択機能</strong> ：サンプルシナリオを選択します。異なるシナリオを選択したタイミングでシミュレーション実行しグラフを再描画する。</li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-view\\\">Menu-View</h3>\\r\\n<h2 id=\\\"メニュー／viewの操作方法-↑\\\">メニュー／Viewの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<p>上4つのチェックボックス（一部機能）で、上段全体グラフ上の表示有無を指定</p>\\r\\n<p>下7つのチェックボックス（全機能）で、下段詳細グラフ上の表示有無を指定</p>\\r\\n<ul>\\r\\n<li><p><strong>多重度（詳細）</strong> ：青　左Y軸　上段なし／下段☒</p>\\r\\n<blockquote>\\r\\n<p>同時処理数（多重度）をヒストグラム形式で表示</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>多重度（区間最大）/sec</strong> ：水色　左Y軸　上段☒／下段☒</p>\\r\\n<blockquote>\\r\\n<p>1秒間の区間の多重度の最大値</p>\\r\\n<p>上段グラフ：透過プロットで表示。同一多重度が連続するとプロットが重なり濃く見える</p>\\r\\n<p>下段グラフ：ヒストグラム形式で表示。多重度（詳細）と重ねて表示すると秒間最大値との関係を把握できる</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>average tps / min (end) [line]</strong> ：緑　左Y軸　上段☒／下段☒</p>\\r\\n<blockquote>\\r\\n<p>1分間の平均tps。コンピュータの処理数は1分毎にとられることが多いため、突合しやすいように表示</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>response by start time [Y2軸:plot]</strong> ：黄　右Y軸　上段なし／下段☒</p>\\r\\n<blockquote>\\r\\n<p>X軸：処理開始時刻、Y軸(点の高さ)は処理時間</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>response by end time [Y2軸:plot]</strong> ：茶　右Y軸　上段なし／下段☒</p>\\r\\n<blockquote>\\r\\n<p>X軸：処理終了時刻、Y軸(点の高さ)は処理時間</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>max response / min (end) [Y2軸:line]</strong> ：赤　右Y軸　上段☒／下段☒</p>\\r\\n<blockquote>\\r\\n<p>1分間の最大レスポンス（処理終了時刻ベース）、ヒストグラム風折れ線で表示</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>average response / min (end) [Y2軸:line]</strong> ：ピンク　右Y軸　上段☒／下段☐</p>\\r\\n<blockquote>\\r\\n<p>1分間の平均レスポンス（処理終了時刻ベース）、ヒストグラム風折れ線で表示。コンピュータの処理数は1分毎にとられることが多いため、突合しやすいように表示機能を設けているがデフォルト非表示</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-download\\\">Menu-Download</h3>\\r\\n<h2 id=\\\"メニュー／downloadの操作方法-↑\\\">メニュー／Downloadの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n<li><strong>Upper graph image(.png)</strong> ボタン：上段グラフの図をpng形式で、初期ファイル名 graph.png でダウンロード。</li>\\r\\n<li><strong>Upper graph data(.csv)</strong> ボタン：上段グラフに表示しているデータを、CSV形式で（改行コード、デリミタはFileメニューの指定値を適用）初期ファイル名 graph.csv でダウンロード。</li>\\r\\n<li><strong>Upper graph log records(.csv)</strong> ボタン：上段グラフに表示しているデータの元データを、処理終了時刻順に、入力ファイルのレコードフォーマット（改行コード、デリミタ等も元ファイルのまま加工せずに適用）で、初期ファイル名 tatlog.csv でダウンロード。<blockquote>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><strong>Detail graph image(.png)</strong> ボタン：下段グラフに対して上段と同じ処理。</li>\\r\\n<li><strong>Detail graph data(.csv)</strong> ボタン：下段グラフに対して上段と同じ処理。</li>\\r\\n<li><strong>Detail graph log records(.csv)</strong> ボタン：下段グラフに対して上段と同じ処理。</li>\\r\\n<li><strong>Detail conc log records(.csv)</strong> ボタン：下段グラフに表示用に選択したCONC（同時処理数）時に処理しているデータを、処理終了時刻順に、入力ファイルのレコードフォーマットで、初期ファイル名 conclog.csv でダウンロード。（CONC指定時以外の場合はCONC最大値を基準）。</li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-bottomdetailgraph\\\">Menu-BottomDetailGraph</h3>\\r\\n<h2 id=\\\"メニュー／bottom-detail-graphの操作方法-↑\\\">メニュー／Bottom detail graphの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<p>下段詳細グラフの表示条件を指定する</p>\\r\\n<ul>\\r\\n<li><p><strong>Range: - &quot;1①&quot; + &quot;2②&quot; &quot;10sec③&quot;</strong> 指定機能：下段グラフの期間を指定する</p>\\r\\n<blockquote>\\r\\n<p>「下段詳細グラフ表示条件」の基準時刻を③単位で切り捨てた時刻を基準に、-①数値×③単位　～ +②数値×③単位　を下段グラフの表示データ抽出期間とする。③単位はsec/10sec/min/hour/6hour/day/year から選択</p>\\r\\n<p>指定値を変更する都度、指定値を「下段詳細グラフ表示条件」に反映し下段グラフを再描画する。なお、グラフ上の範囲指定による表示期間変更は描画のみで「下段詳細グラフ表示条件」には反映されない。</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n<li><p><strong>「下段詳細グラフ表示条件」</strong> アイコン ：下段グラフに表示する条件を選択する機能（初期表示：同時処理数が最大となるタイミングを１つ）</p>\\r\\n<blockquote>\\r\\n<p>上段／下段グラフの任意の点をクリックすると、「下段詳細グラフ表示条件」アイコン　が追加される。アイコンは基準時刻順に縦に並ぶ。</p>\\r\\n<p>下段グラフに表示している「下段詳細グラフ表示条件」アイコンは背景グレー。他のアイコンは背景白</p>\\r\\n<p>アイコンにマウスをのせると、アイコンの左側にマイナス「－」アイコンが表示され、「－」をクリックすると該当「下段詳細グラフ表示条件」アイコンが削除される。</p>\\r\\n</blockquote>\\r\\n</li>\\r\\n</ul>\\r\\n<h3 id=\\\"menu-help\\\">Menu-Help</h3>\\r\\n<h2 id=\\\"メニュー／helpの操作方法-↑\\\">メニュー／Helpの操作方法　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n<li><strong>Usage of TAT log diver</strong> ボタン：&quot;TAT log diver&quot;の使用方法をサブウィンドウで表示</li>\\r\\n<li><strong>about TAT log diver</strong> ボタン：&quot;TAT log diver&quot;のコピーライト、関連ＵＲＬをダイアログで表示</li>\\r\\n</ul>\\r\\n<hr>\\r\\n<h2 id=\\\"simulator\\\">Simulator</h2>\\r\\n<h2 id=\\\"シミュレーションシナリオの仕様-↑\\\">シミュレーションシナリオの仕様　<a href=\\\"#\\\">↑</a></h2>\\r\\n<h3 id=\\\"simulator-01\\\">Simulator-01</h3>\\r\\n<h2 id=\\\"サンプル011-hour-with-table-blockの仕様-↑\\\">サンプル01(1 hour with table block.)の仕様　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n<li>概要</li>\\r\\n</ul>\\r\\n<p><strong>数秒のバッチが、通常0.5秒以下の更新系オンのレスポンス遅延を起こす。更新系集中時に滞留増により遅延長時間化</strong></p>\\r\\n<p>online[100-500ms 2-5tps]：レスポンス100～500ミリ秒のオンライン取引を２～５tpsで発行。16:30～16:36に更新系オン2割増</p>\\r\\n<p>batch[2-5sec evry3min]：処理時間２～５秒のオン中バッチ取引（DB更新あり）を３分毎に起動</p>\\r\\n<ul>\\r\\n<li>詳細</li>\\r\\n</ul>\\r\\n<p>{\\r\\n&quot;log&quot; : 1,</p>\\r\\n<blockquote>\\r\\n<p>エラーログのみ出力</p>\\r\\n<p>　log（任意、デフォルト3）:詳細ログ出力指定(0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)</p>\\r\\n</blockquote>\\r\\n<p>&quot;start&quot; : &quot;2017/01/02 00:00:00.000&quot;,\\r\\n&quot;end&quot;   : &quot;17.0*h&quot;,</p>\\r\\n<blockquote>\\r\\n<p>2017/01/02 00:00:00.000 を基準、最大17時間後までシミュレーション実行</p>\\r\\n<p>シミュレーション開始時刻/終了時刻&quot;,</p>\\r\\n</blockquote>\\r\\n<p>&quot;resources&quot; : [</p>\\r\\n<blockquote>\\r\\n<p>システム構成定義： &quot;type:リソース名、thread:最大同時hold数、timeout：holdタイムアウト時間&quot;、q:最大hold待ち数、qWait:最大hold待ち時間&quot;</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;type&quot; :&quot;WEB&quot;, &quot;thread&quot;:1024,&quot;timeout&quot;:&quot;300*sec&quot;, &quot;q&quot;:1280, &quot;qWait&quot;:0},</p>\\r\\n<blockquote>\\r\\n<p>WEBサーバ：1024スレッド、タイムアウトエラー：300秒、スレッド溢れ時：即時エラー</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;type&quot; :&quot;AP&quot;,  &quot;thread&quot;:20,  &quot;timeout&quot;:&quot;300*sec&quot;, &quot;q&quot;:1280, &quot;qWait&quot;:0},</p>\\r\\n<blockquote>\\r\\n<p>APサーバ：20スレッド、タイムアウトエラー：300秒、スレッド溢れ時：即時エラー</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;type&quot; :&quot;DB&quot;,  &quot;thread&quot;:10,  &quot;timeout&quot;: &quot;10<em>sec&quot;, &quot;q&quot;:10,  &quot;qWait&quot;:&quot;10</em>sec&quot;}</p>\\r\\n<blockquote>\\r\\n<p>DBサーバ：10スレッド、SQL処理タイムアウトエラー：10秒、コネクションプール：10個、コネクション取得待ち：10秒でエラー</p>\\r\\n</blockquote>\\r\\n<p>],</p>\\r\\n<p>&quot;models&quot; : [</p>\\r\\n<blockquote>\\r\\n<p> &quot;models:clientsで指定するモデル名(model)の定義、以下modelsで指定できる項目&quot;,</p>\\r\\n<p> &quot;baseModel:複数リソースのsequenceをまとめて宣言できる、sequenceに展開した後処理される、任意指定&quot;,</p>\\r\\n<p> &quot;sequence:指定された順にリソースを取得する、配列内に複数指定可、sequenceも複数指定可&quot;,</p>\\r\\n<p> &quot;hold：リソース名、holds(baseModelのみ指定可）：リソース一覧、各々にtat/tatMinが適用される&quot;,</p>\\r\\n<p> &quot;tat/tatMin：リソースの取得に要する平均/最小時間、tatMinのデフォルトはtat&quot;,</p>\\r\\n<p> &quot;　　　　　　★注：tatはリソースの使用時間ではない、リソース使用時間を指定す場合はfreeで指定&quot;,</p>\\r\\n<p> &quot;数値はミリ秒単位、<em>ms,</em>sec,<em>min,</em>h,*day 指定可&quot;,</p>\\r\\n<p> &quot;times：繰返し回数&quot;,</p>\\r\\n<p> &quot;thinkTime/thinkTimeMin：繰返し時の間隔の平均/最小時間、thinkTimeMinのデフォルトはthinkTime&quot;,</p>\\r\\n<p> &quot;free：[リソース名の配列]、指定リソースを開放する、free指定の無いリソースはシーケンスの最後にfreeされる&quot;,</p>\\r\\n</blockquote>\\r\\n<p>  { &quot;ON-1&quot; : {\\r\\n    &quot;times&quot;: 60, &quot;thinkTimeMin&quot;:&quot;3<em>sec&quot;, &quot;thinkTime&quot;: &quot;10</em>sec&quot;,\\r\\n    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;WEB&quot;,&quot;AP&quot;,&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;5</em>ms&quot;},\\r\\n    &quot;sequence&quot;: [\\r\\n      {&quot;tatMin&quot;:30, &quot;tat&quot;:50, &quot;note&quot;:&quot;select A&quot;},\\r\\n      {&quot;tatMin&quot;:50, &quot;tat&quot;:50, &quot;note&quot;:&quot;updateB&quot;, &quot;hold&quot;:&quot;TBL_B&quot;},\\r\\n      {&quot;tatMin&quot;:80, &quot;tat&quot;:100,&quot;note&quot;:&quot;updateC&quot;, &quot;hold&quot;:&quot;TBL_C&quot;}\\r\\n    ]}},</p>\\r\\n<blockquote>\\r\\n<p>オンライン取引１(ON-1)：１ユーザあたり3～10秒の取引を60回発行、Web-AP-DBの３層AP、各レイヤ呼出し時に2～5msの通信遅延あり、\\r\\n　処理内容 30～50ms 参照排他なしSQL　＞　50ms TBL_B排他SQL　＞ 80~100ms TBL_C排他SQL（更新処理を想定）</p>\\r\\n</blockquote>\\r\\n<p> { &quot;ON-2&quot; : {\\r\\n    &quot;times&quot;: 60, &quot;thinkTimeMin&quot;:&quot;500<em>ms&quot;, &quot;thinkTime&quot;: &quot;1</em>sec&quot;,\\r\\n    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;WEB&quot;,&quot;AP&quot;,&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;5</em>ms&quot;},\\r\\n    &quot;sequence&quot;: [\\r\\n      {&quot;tatMin&quot;:&quot;100<em>ms&quot;, &quot;tat&quot;:&quot;500</em>ms&quot;, &quot;hold&quot;:&quot;&quot;}\\r\\n    ]}},</p>\\r\\n<blockquote>\\r\\n<p>オンライン取引２(ON-2)：１ユーザあたり500ミリ秒~1秒の取引を60回発行、Web-AP-DBの３層AP、各レイヤ呼出し時に2～5msの通信遅延あり、\\r\\n　処理内容 100～500ms 排他なし（一覧参照処理を想定）</p>\\r\\n</blockquote>\\r\\n<p> { &quot;BATCH-1&quot; : {\\r\\n    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;5</em>ms&quot;},\\r\\n    &quot;sequence&quot;: [\\r\\n      {&quot;tatMin&quot;:&quot;2<em>sec&quot;,&quot;tat&quot;:&quot;5</em>sec&quot;,&quot;note&quot;:&quot;updateB&quot;,&quot;hold&quot;:&quot;TBL_B&quot;}\\r\\n    ]}}</p>\\r\\n<blockquote>\\r\\n<p>バッチ取引２(BATCH-1)：１ユーザあたり１ジョブ実行、DB更新のみ、各レイヤ呼出し時に2～5msの通信遅延あり、\\r\\n処理内容 2～5秒 TBL_Bを排他（長時間トランザクションのオン中バッチを想定）</p>\\r\\n</blockquote>\\r\\n<p>],</p>\\r\\n<p>&quot;clients&quot; : [</p>\\r\\n<blockquote>\\r\\n<p> &quot;clients：仮想アプリケーションの起動クライアントの定義&quot;,\\r\\n &quot;num:作成クライアント数、start～endの間で、ランダム（指数分布）に指定回数起動する&quot;,\\r\\n &quot;start/end:仮想クライアント作成/終了時刻、先頭で宣言したstartからの相対時刻&quot;,\\r\\n &quot;model:modelsで宣言したモデル名&quot;,\\r\\n &quot;user:user+通番 のユーザ名で仮想クライアントが作成される&quot;,</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;:100,&quot;start&quot;:&quot;16.0<em>h&quot;, &quot;end&quot;:&quot;17.0</em>h&quot;, &quot;model&quot;:&quot;ON-1&quot;,  &quot;user&quot; :&quot;userU&quot;, &quot;message&quot;:&quot;select A update B,C&quot;},</p>\\r\\n<blockquote>\\r\\n<p>16:00～17:00の 1時間に、userU00～userU99の100ユーザが、各々ON-1（更新系）を100回発行</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;: 20,&quot;start&quot;:&quot;16.5<em>h&quot;, &quot;end&quot;:&quot;16.6</em>h&quot;, &quot;model&quot;:&quot;ON-1&quot;,  &quot;user&quot; :&quot;userT&quot;, &quot;message&quot;:&quot;select A update B,C 【増】&quot;},</p>\\r\\n<blockquote>\\r\\n<p>16:30～16:36 の6分間に、userT00～userT19の20ユーザが、各々ON-1（更新系）を20回発行（一時的に更新オン取引200%増）</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;:100,&quot;start&quot;:&quot;16.0<em>h&quot;, &quot;end&quot;:&quot;17.0</em>h&quot;, &quot;model&quot;:&quot;ON-2&quot;,  &quot;user&quot; :&quot;userS&quot;, &quot;message&quot;:&quot;排他なし(WEBのみ)&quot;},</p>\\r\\n<blockquote>\\r\\n<p>16:00～17:00 の1時間に、userS00～userS99の100ユーザが、各々ON-2（参照系）を100回発行</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;: 20,&quot;start&quot;:&quot;16.0<em>h&quot;, &quot;end&quot;:&quot;17.0</em>h&quot;, &quot;model&quot;:&quot;BATCH-1&quot;,&quot;user&quot;:&quot;userB&quot;, &quot;message&quot;:&quot;バッチ処理 update B＊＊＊＊＊&quot;}</p>\\r\\n<blockquote>\\r\\n<p>16:00～17:00 に、userBが、BATCH-1（更新系）を20回発行</p>\\r\\n</blockquote>\\r\\n<p>]\\r\\n}</p>\\r\\n<blockquote>\\r\\n</blockquote>\\r\\n<h3 id=\\\"simulator-99\\\">Simulator-99</h3>\\r\\n<h2 id=\\\"サンプル99for-testの仕様-↑\\\">サンプル99(for test)の仕様　<a href=\\\"#\\\">↑</a></h2>\\r\\n<ul>\\r\\n<li>概要</li>\\r\\n</ul>\\r\\n<p><strong>デッドロックが発生し、タイムアウトで解消</strong></p>\\r\\n<p>デグレードテスト用シナリオを兼ねる（描画バリエーションの網羅率の高い短いシナリオ）</p>\\r\\n<ul>\\r\\n<li>詳細</li>\\r\\n</ul>\\r\\n<p>{\\r\\n&quot;log&quot; : 1,\\r\\n&quot;start&quot; : &quot;1970/01/02 00:00:00.000&quot;,\\r\\n&quot;end&quot;   : &quot;30.0*sec&quot;,</p>\\r\\n<blockquote>\\r\\n<p>2017/01/02 00:00:00.000 を基準、最大30秒後までシミュレーション実行、エラーログのみ出力</p>\\r\\n</blockquote>\\r\\n<p>&quot;resources&quot; : [\\r\\n  {&quot;type&quot; :&quot;DB&quot;,  &quot;thread&quot;:2,  &quot;timeout&quot;: &quot;5<em>sec&quot;, &quot;q&quot;:1,  &quot;qWait&quot;:&quot;2</em>sec&quot;}\\r\\n],</p>\\r\\n<blockquote>\\r\\n<p>DBサーバ：2スレッド、DBトランザクションタイムアウトエラー：5秒、コネクションプール：1個、コネクション取得待ち：2秒でエラー</p>\\r\\n</blockquote>\\r\\n<p>&quot;models&quot; : [\\r\\n { &quot;TEST-AB&quot; : {\\r\\n    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;2</em>ms&quot;},\\r\\n    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_A&quot;, &quot;tatMin&quot;:&quot;1<em>sec&quot;, &quot;tat&quot;:&quot;1</em>sec&quot;}],\\r\\n    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_B&quot;, &quot;tatMin&quot;:&quot;3<em>sec&quot;, &quot;tat&quot;:&quot;3</em>sec&quot;}],\\r\\n    &quot;times&quot;: 2, &quot;thinkTimeMin&quot;:&quot;1<em>sec&quot;, &quot;thinkTime&quot;: &quot;1</em>sec&quot;}},</p>\\r\\n<blockquote>\\r\\n<p>バッチ取引AB(TEST-AB)：１ユーザあたり１秒毎に２回迄ジョブ起動、DB更新のみ、</p>\\r\\n<p>処理内容 3.007秒処理（開始 ＞ 1+2ms&gt;DB排他&gt;TBL_A排他 ＞ 1+2ms+３秒&gt;TBL_B排他 ＞ 1ms&gt;排他解放 ＞ 1ms終了）＋1秒＋3.008秒処理</p>\\r\\n</blockquote>\\r\\n<p> { &quot;TEST-BA&quot; : {\\r\\n    &quot;baseModel&quot;:  {&quot;holds&quot;: [&quot;DB&quot;], &quot;tatMin&quot;: &quot;2<em>ms&quot;, &quot;tat&quot;:&quot;2</em>ms&quot;},\\r\\n    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_B&quot;, &quot;tatMin&quot;:&quot;1<em>sec&quot;, &quot;tat&quot;:&quot;1</em>sec&quot;}],\\r\\n    &quot;sequence&quot;: [{&quot;hold&quot;:&quot;TBL_A&quot;, &quot;tatMin&quot;:&quot;3<em>sec&quot;, &quot;tat&quot;:&quot;3</em>sec&quot;}],\\r\\n    &quot;times&quot;: 2, &quot;thinkTimeMin&quot;:&quot;1<em>sec&quot;, &quot;thinkTime&quot;: &quot;1</em>sec&quot;}}\\r\\n    ],</p>\\r\\n<blockquote>\\r\\n<p>バッチ取引BA(TEST-BA)：１ユーザあたり１秒毎に２回迄ジョブ起動、DB更新のみ、</p>\\r\\n<p>処理内容 3.007秒処理（開始 ＞ 1+2ms&gt;DB排他&gt;TBL_B排他 ＞ 1+2ms+３秒&gt;TBL_A排他 ＞ 1ms&gt;排他解放 ＞ 1ms終了）＋1秒＋3.008秒処理</p>\\r\\n</blockquote>\\r\\n<p>&quot;clients&quot; : [</p>\\r\\n<blockquote>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;0<em>sec&quot;, &quot;end&quot;:&quot;0</em>sec&quot;, &quot;model&quot;:&quot;TEST-AB&quot;,&quot;user&quot; :&quot;testAB1&quot;},</p>\\r\\n<blockquote>\\r\\n<p>1回目：0.001秒に、ユーザtestAB10が、TEST-AB起動（排他待ちなし、3.007秒で正常終了:N_000)</p>\\r\\n<p>2回目：4.007秒に、ユーザtestAB10が、TEST-AB起動（DBコネクションキューオーバフロー、0.001秒で終了:E_QoF）</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;1<em>sec&quot;, &quot;end&quot;:&quot;1</em>sec&quot;, &quot;model&quot;:&quot;TEST-AB&quot;,&quot;user&quot; :&quot;testAB2&quot;},</p>\\r\\n<blockquote>\\r\\n<p>1回目：1.000秒に、ユーザtestAB20が、TEST-AB起動（デッドロック DBトランザクションタイムアウト5.000秒でエラー終了:E_HTO）</p>\\r\\n<p>2回目：7.000秒に、ユーザtestAB20が、TEST-AB起動（3.007秒で正常終了:N_000）</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;3<em>sec&quot;, &quot;end&quot;:&quot;3</em>sec&quot;, &quot;model&quot;:&quot;TEST-BA&quot;,&quot;user&quot; :&quot;testBA3&quot;},</p>\\r\\n<blockquote>\\r\\n<p>1回目：3.000秒に、ユーザtestBA30が、TEST-BA起動（testAB10のDB解放待ち0.007秒を加えた、3.014秒で正常終了:N_000）</p>\\r\\n<p>2回目：7.014秒に、ユーザtestBA30が、TEST-BA起動（5.005秒で正常終了:N_000）</p>\\r\\n</blockquote>\\r\\n<p>  {&quot;num&quot;: 1,&quot;start&quot;:&quot;4<em>sec&quot;, &quot;end&quot;:&quot;4</em>sec&quot;, &quot;model&quot;:&quot;TEST-BA&quot;,&quot;user&quot; :&quot;testBA4&quot;}</p>\\r\\n<blockquote>\\r\\n<p>1回目：4.001秒に、ユーザtestBA40が、TEST-BA起動（5.014秒で正常終了:N_000）</p>\\r\\n<p>2回目：3.000秒に、ユーザtestBA40が、TEST-BA起動（デッドロック DBトランザクションタイムアウト5.000秒でエラー終了:E_HTO）</p>\\r\\n</blockquote>\\r\\n<p> ]\\r\\n}</p>\\r\\n<blockquote>\\r\\n</blockquote>\\r\\n<p>　<a href=\\\"#\\\">go to top ↑</a></p>\\r\\n</body>\\r\\n</html>\\r\\n\\r\\n'; */\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Usage.html\n// module id = 46\n// module chunks = 0"],"sourceRoot":""}