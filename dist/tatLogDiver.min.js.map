{"version":3,"sources":["webpack:///tatLogDiver.min.js","webpack:///webpack/bootstrap d707cee15d90ed7c7b39","webpack:///./src/util/util.js","webpack:///./src/tatLogDiver/tatLogDiver-HJN.js","webpack:///./src/tatLogDiver/tatLogDiver-Init.js","webpack:///./src/tatLogDiver/tatLogDiver-Graph.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./src/timeSeries/timeSeries-MappedETat.js","webpack:///./src/timeSeries/timeSeries-ETat.js","webpack:///./src/timeSeries/timeSeries-Cash.js","webpack:///./src/simulator/simulator-VirtualSystem.js","webpack:///./src/timeSeries/timeSeries-MenuConfig.js","webpack:///./src/tatLogDiver/tatLogDiver.js","webpack:///./libs/dygraph.css?0b95","webpack:///./libs/dygraph.css","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/tatLogDiver/tatLogDiver.css?871f","webpack:///./src/tatLogDiver/tatLogDiver.css","webpack:///./src/util/util-TouchPanel.js","webpack:///./src/util/util-string.js","webpack:///./src/util/util-Random.js","webpack:///./src/util/util-setZeroTimeout.js","webpack:///./src/util/util-Logger.js","webpack:///./src/util/util-copyToClipboard.js","webpack:///./src/util/util-binarySearch.js","webpack:///./src/util/util-Heap.js","webpack:///./src/util/config/util-Config.js","webpack:///./src/timeSeries/timeSeries-Tat.js","webpack:///./src/timeSeries/timeSeries-FileParser.js","webpack:///./src/simulator/simulator-VirtualApp.js","webpack:///./src/simulator/simulator-VirtualResource.js","webpack:///./src/simulator/simulator-VirtualSystemByJson.js","webpack:///./src/simulator/simulator-MenuConfig.js","webpack:///./src/tatLogDiver/tatLogDiver-Menu.js","webpack:///./src/tatLogDiver/tatLogDiver-Copyright.js","webpack:///./src/tatLogDiver/tatLogDiver-Plot.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__util_TouchPanel_js__","__WEBPACK_IMPORTED_MODULE_1__util_string_js__","__WEBPACK_IMPORTED_MODULE_2__util_Random_js__","__WEBPACK_IMPORTED_MODULE_4__util_setZeroTimeout_js__","__WEBPACK_IMPORTED_MODULE_5__util_Logger_js__","__WEBPACK_IMPORTED_MODULE_6__util_copyToClipboard_js__","__WEBPACK_IMPORTED_MODULE_7__util_binarySearch_js__","__WEBPACK_IMPORTED_MODULE_8__util_Heap_js__","__WEBPACK_IMPORTED_MODULE_9__config_config_js__","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Uint8Array","indexOf","target","index","undefined","last","this","slice","begin","end","subarray","Array","findIndex","predicate","TypeError","value","list","length","thisArg","arguments","find","__WEBPACK_IMPORTED_MODULE_1__simulator_VirtualApp_js__","__WEBPACK_IMPORTED_MODULE_2__simulator_VirtualResource_js__","__WEBPACK_IMPORTED_MODULE_3__simulator_VirtualSystemByJson_js__","__WEBPACK_IMPORTED_MODULE_4__simulator_MenuConfig_js__","HJN","window","init","chart","chartD","chartName","CONC","key","label","N","scale","color","tpsN","CTPS","detailN","ETPS","STAT","ETAT","EMPS","EAPS","seriesConfig","detailDateTime","Date","detailRangePlus","detailRangeMinus","files","filesArrayBuffer","timer","Init","__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__","document","title","__WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Copyright_js__","Version","html_chart","getElementById","body","innerHTML","html_nav","createElement","parentNode","insertBefore","dropFieldName","__WEBPACK_IMPORTED_MODULE_0__util_util_js__","ShowLogTextInit","__WEBPACK_IMPORTED_MODULE_5__tatLogDiver_Graph_js__","DropField","GetConfig","getFunctionByKey","CreateSampleTatLogAndChartShow","json","jsonText","__WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__","GetJsonConfig","eTatOriginal","Execute","ChartShow","__WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__","eTat","fileParser","createFilter","filter","Plot","List","x","y","tat","setSeriesSet","update","text","ShowLogText","ChartRegistDetail","cTps","showBalloon","toString","replace","Dygraph","synchronize","graph","selection","zoom","element","addEventListener","e","preventDefault","data_transfer","dataTransfer","types","FileReader","funcOnloadend","file","evt","readyState","DONE","filesIdx","result","textArray","isNewETAT","getTatLogArray","push","concat","idx","xy","date","isError","getterOfLine","createGetterOfLine","getterOfXY","createGetterOfXY","line","next","isEoF","ByInterval","parse","fileIdx","pos","len","array","byteLength","sTatIdx","console","error","err","size","lastModifiedDate","toLocaleString","reader","onloadend","bind","readAsArrayBuffer","msg","ShowText","maxY","MIN_VALUE","maxYIdx","forEach","cTpsUnit","unit","cTpsIdx","conc","SetDetailDateTime","GetSliderRangedEtat","Add","seriesSet","rangeTagPlus","rangeTagMinus","rangeTagUnit","rangeCycle","detailRangeUnit","CYCLE","eTatDetail","sliceByRangeUnit","setDetailRange","clearTimeout","setTimeout","radio","plot","rangePlus","rangeMinus","rangeUnit","Math","floor","Copyright","__WEBPACK_IMPORTED_MODULE_0__timeSeries_Tat_js__","__WEBPACK_IMPORTED_MODULE_1__timeSeries_ETat_js__","__WEBPACK_IMPORTED_MODULE_2__timeSeries_FileParser_js__","__WEBPACK_IMPORTED_MODULE_3__timeSeries_MenuConfig_js__","Graph","chartIdName","globalName","config","isMain","SERIESES","process","visiblity","renderer","height","isVisiblity","__WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__","windowId","menuId","menuPlaceOnId","chartId","dyData","dySeries","UNIT_CTPS","labels","j","order","attr","strokeWidth","drawPoints","connectSeparatedPoints","stepPlot","fillGraph","axis","__WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Menu_js__","__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_Init_js__","DrawCallback","g","is_initial","setText","id","val","onchange","syncMode","getValueByKey","xAxisRange","yAxisRange","toPrecision","that","serieses","divLegend","formName","htmlText","ckBox","destroy","resize","resizes","getElementsByClassName","onClickSetVisibility","ck","elements","checked","setVisibility","dWidth","clientWidth","width","innerWidth","style","innerHeight","getSeriesSet","getCTpsUnit","xAxisLabelFormatter","gran","opts","isTop","format","diffTime","yAxisLabelFormatter","range","yAxisRanges","diff","ceil","days","time","drawHighlightPointCallback","ctx","cx","cy","r","drawTatLine","heigth","tXs","toDomXCoord","tXe","tY","toDomYCoord","drawLine","drawPoint","plots","lineDashSegments","beginPath","lineWidth","lineCap","strokeStyle","setLineDash","moveTo","lineTo","stroke","fillStyle","arc","PI","fill","round","textAlign","fillText","rawData_","sTat","eTatIdx","getRecordAsText","tatMap","trans","search","clearRect","canvas","setIndexByName_","highlightCallback","pts","row","seriesName","hoverXY","pointClickCallback","event","annotation","PointClickCallback","annotationClickHandler","annotationDblClickHandler","PointDblClickCallback","minX","cols","updateOptions","resetZoom","xRangeMin","xRangeMax","MAX_VALUE","xRangeUnit","dt","xVal","firstRow","xyData","yVal","some","lastRow","visibility","inputs","titleHeight","legend","showLabelsOnHighlight","labelsSeparateLines","axes","axisLabelFormatter","axisLabelWidth","independentTicks","logscale","y2","drawGrid","gridLinePattern","includeZero","axisLineColor","gridLineColor","pointSize","ylabel","y2label","highlightCircleSize","drawCallback","highlightSeriesOpts","series","labelsKMB","interactionModel","mousedown","defaultInteractionModel","willDestroyContextMyself","dblclick","animatedZooms","DispatchEventTouchToMouse","canvas_","canvas_ctx_","addIcon_ZoomReset","ann","xval","shortText","anns","ctps","maxX","tpsPlot","ready","setAnnotations","legendFormatter","data","getStyle","html","xHTML","isVisible","yHTML","labelHTML","isHighlighted","menuOpenCsv","file_list","menuSaveConfig","fileName","save","HJN.Plot.List","HJN.chart.fileParser","_config_File","__config","HJN.chartD.fileParser","JSON","stringify","menuDownloadBlob","menuBuffToBlob","menuLoadConfig","isSameType","sample","obj","buf","String","fromCharCode","apply","alert","jsonObj","conf","confD","tmpPlots","Render","ShowBalloon","menuFilterApply","menuFilterClear","menuSimulatorSimulate","menuSimulatorEditor","divSimulator","divSimulatorEditor","scrollHeight","menuDownloadImg","getElementsByTagName","dataurl","toDataURL","bin","atob","split","buffer","charCodeAt","blob","Blob","type","menuDownloadCsv","bom","csv","join","menuDownloadLog","eTatCsv","separator","getValue","message","sort","a","b","maxSize","reduce","buff","offset","set","min","buff2","menuDownloadConc","arrayBuffer","navigator","msSaveBlob","msSaveOrOpenBlob","href","URL","createObjectURL","divChart","idName","input","div","parentElement","removeChild","firstChild","cssWithMappingToString","item","useSourceMap","content","cssMapping","btoa","sourceMapping","toComment","sources","map","source","sourceRoot","sourceMap","unescape","encodeURIComponent","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","base","css","media","part","insertStyleElement","getElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","appendChild","before","removeStyleElement","splice","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","el","keys","setAttribute","remove","transform","singleton","styleIndex","singletonCounter","applyToSingletonTag","revokeObjectURL","updateLink","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","oldSrc","isOldIE","fn","memo","all","selector","styleTarget","HTMLIFrameElement","contentDocument","head","querySelector","DEBUG","newList","mayRemove","textStore","replacement","Boolean","MappedETat","_tatMap","MappedArray","_getKey","_abscissa","_conf","ms","step","_row","start","term","rowLv","e2","from","to","cap","_map","_arr","abscissa","eTatArr","boxNum","k","arr","getKey","isMappedMap","valueOf","_createMappedMappedArray","_createMappedArray","mKey","has","keyValue","indexes","idxArr","lastIndexOf","ETat","__WEBPACK_IMPORTED_MODULE_0__timeSeries_MappedETat_js__","cash","__WEBPACK_IMPORTED_MODULE_1__timeSeries_Cash_js__","TimeSeries","Tat","getRangedCash","setRangedCash","Cash","_cash","_ranges","_size","_arg2arr","args","getCash","lastTime","count","setCash","cashVal","__WEBPACK_IMPORTED_MODULE_0__simulator_js__","__WEBPACK_IMPORTED_MODULE_1__util_util_js__","VirtualSystem","resourcesJson","log","_resources","_log","_start","_end","_simulator","getTime","_now","thread","timeout","q","qWait","debug","setClients","userName","num","model","baseModel","getModel","holds","tatMin","sequence","times","thinkTimeMin","thinkTime","t","vApp","exponential","setEvent","removeEvent","del","execute","events","top","pop","_finish","getResouce","note","hold","free","resources","tran","holding","reverse","def","onFunc","_keyConf","FileParser","__keyConfig","v","fieldId","env","Config","number","nDown","nUp","func_F_SYNC_UPPER","func_F_SYNC_DETAIL","__WEBPACK_IMPORTED_MODULE_0__libs_dygraph_css__","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_css__","__WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Init_js__","eve","hmr","locals","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","trim","$1","test","newUrl","__WEBPACK_IMPORTED_MODULE_0__util_js__","TouchPanel","average","_average","detectDeviceType","_deviceType","changedTouches","removeEventListener","isTouchableDevice","isStopTouch","touchHandler","ev","__TOUCH_TYPES","touchstart","touchmove","touchend","__TOUCH_INPUTS","INPUT","TEXTAREA","SELECT","OPTION","textarea","select","option","bSame","__ajqmeclk","touches","oEv","getAttribute","tagName","touch","tmpClientX","clientX","tmpClientY","clientY","startTouch","abs","newEvent","createEvent","initMouseEvent","screenX","screenY","dispatchEvent","stopImmediatePropagation","stopPropagation","DateToString","S2D","D2S","N2S","S2N","str","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","YYYY","parseInt","substr","MM","DD","h","hh","mm","sec","ss","ppp","match","NaN","ds","isLocal","minus","ret","datetime","getTimezoneOffset","Intl","NumberFormat","sub","eval","Random","uniform","random","poisson","lambda","xp","exp","global","handleMessage","messageName","timeouts","shift","postMessage","attachEvent","Logger","mode","_mode","_logText","_timestamp","_logtime","ts","lastTimestamp","iHtmlBody","ShowIHtmlBody","elementId","execCommand","func","low","high","isEqual","middle","valMiddle","max","tmp","Heap","delFunc","_func","node","_delFunc","_heap","_upHeap","_downHeap","_del","_deletable","_deleteMap","__WEBPACK_IMPORTED_MODULE_0__util_Config_js__","prefix","ol","_pre","_ols","_ole","_html","_nameHtml","_name","_addEventList","_globalName","_onFunctions","on","getFunctionById","getObjctById","getHtml","attribute","labeledForm","typedAttribute","pLabel","sLabel","check","cssClass","classStr","createSeries","__WEBPACK_IMPORTED_MODULE_2__timeSeries_ETat_js__","floorTime","cycle","eTps","eMps","eAps","dFrom","dTo","maxTat","aveTmp","concTmp","concNum","XSec","YMax","YNext","cTpsUnits","concTerm","getElementsByName","lastChild","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__","Property","_type","_config","cKey","GetterOfLine","maxLength","confLF","Filter","_fileParser","confF_TIME_FROM","confF_TIME_TO","confF_TIME","isNaN","confF_TAT_FROM","confF_TAT_TO","confF_TAT","confF_TEXT","confF_TEXT_LEN","confF_TEXT_POS","confF_TEXT_COL","confF_TEXT_REG","RegExp","confF_IS","confF_SEP","_isIn","colPos","GetterOfXY","configId","confSEP","confTIME_COL","confTIME_POS","confTIME_LEN","confTIME_FORM","confTIME_YMD","paseDateConf","isYMD","confTIME_UNIT","confTAT_COL","confTAT_POS","confTAT_LEN","confTAT_FORM","confTAT_UNIT","confENDIAN","isLittle","ArrayBuffer","DataView","setUint32","Uint32Array","dateAndValue","parseNumber","pm","pow","_parseLong","getUint32","reduceRight","posMax","sep","nextPos","posX","arrX","strX","posY","arrY","strY","getConfig","getFunction","history","timeStr","sequenceIdx","status","sequenceTime","VirtualApp","_userName","_sequence","_times","_thinkTime","_thinkTimeMin","_baseMessage","_message","_history","_startTime","_sequenceTime","_sequenceIdx","logger","logLv","isLog","resource","highText","errCode","_holdHeap","_holdingQty","user","resourceText","_waitHeap","logText","modify","deleted","startTime","addHistory","getAmount","system","seq","tatAdd","setSequenceTime","abend","holdedResource","logID","logMesseage","isHolding","abendTime","release","holdings","forceTime","now","nextTime","VirtualResource","holdCapacity","waitCapacity","queueWait","_system","_waitTimeout","_waitCapacity","_holdTimeout","_holdCapacity","_isScheduled","_interval","queuedTime","app","apps","holdTimeoutTime","nextWaitTimeout","nextHoldTimeout","amount","vApps","marginQty","addQty","__WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__","virtualSystemByJson","vSys","models","clients","cStart","cEnd","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Init_js__","func_S_SIMU_000","func_S_SIMU_001","Menu","getAccordionTag","labelText","isChecked","getInputTag","arg","menuLabel","getATag","preLabel","funcName","getFuncTag","divMenuId","divMenu","className","accordion","_id","File","__WEBPACK_IMPORTED_MODULE_0__simulator_simulator_js__","Simulator","jsonEditor","chartDownloadUl","chartViewUl","selected","prev","menuHelpAbout","strFuncName","__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__","__WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__","point","yval","adjustPlotToY","toX","maxTime","concMax","rangePlusTag","rangeMinusTag","rangeUnitTag","divCheckedPlots","CheckBox","CheckRadio"],"mappings":"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","file":"tatLogDiver.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_TouchPanel_js__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_string_js__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_Random_js__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_addEventListener_js__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_setZeroTimeout_js__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_Logger_js__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_copyToClipboard_js__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__util_binarySearch_js__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__util_Heap_js__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__config_config_js__ = __webpack_require__(28);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_0__util_TouchPanel_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_1__util_string_js__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_2__util_Random_js__[\"a\"]; });\n/* unused harmony reexport addEventListener */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return __WEBPACK_IMPORTED_MODULE_4__util_setZeroTimeout_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_5__util_Logger_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_6__util_copyToClipboard_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __WEBPACK_IMPORTED_MODULE_7__util_binarySearch_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_8__util_Heap_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_9__config_config_js__[\"a\"]; });\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @namespace Util */\r\n\r\n\r\n\r\n/** ie11 互換用 * */\r\nif(!Number.MAX_SAFE_INTEGER) Number.MAX_SAFE_INTEGER = 9007199254740991; // #59\r\nif(!Number.MIN_SAFE_INTEGER) Number.MIN_SAFE_INTEGER = -9007199254740991;\r\n\r\nif(!Uint8Array.prototype.indexOf){\r\n    Uint8Array.prototype.indexOf = function(target,index){\r\n        \"use strict\";\r\n        index = (index === undefined) ? 0 : index;  // #29\r\n        for(var i = index, last = index + 4096; i < last; i++){ // 暫定：1レコード4KBまでチェック\r\n            if(this[i] === target) return i; \r\n        }\r\n        return -1;\r\n    };\r\n}\r\nif (!Uint8Array.prototype.slice) {  // #29\r\n    Uint8Array.prototype.slice = function(begin, end) {\r\n        \"use strict\";\r\n        return this.subarray(begin, end);\r\n    };\r\n}\r\n// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\r\nif (!Array.prototype.findIndex) {\r\n    Array.prototype.findIndex = function(predicate) {\r\n          \"use strict\";\r\n      if (this === null) throw new TypeError('Array.prototype.findIndex called on null or undefined');\r\n      if (typeof predicate !== 'function') throw new TypeError('predicate must be a function');\r\n      var list = Object(this), length = list.length >>> 0, thisArg = arguments[1], value;\r\n      for (var i = 0; i < length; i++) {\r\n        value = list[i];\r\n        if (predicate.call(thisArg, value, i, list)) return i;\r\n      }\r\n      return -1;\r\n    };\r\n  }\r\n// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\nif (!Array.prototype.find) {\r\n    Array.prototype.find = function(predicate) {\r\n        \"use strict\";\r\n      if (this === null) throw new TypeError('Array.prototype.find called on null or undefined');\r\n      if (typeof predicate !== 'function')  throw new TypeError('predicate must be a function');\r\n      var list = Object(this), length = list.length >>> 0, thisArg = arguments[1], value;\r\n      for (var i = 0; i < length; i++) {\r\n        value = list[i];\r\n        if (predicate.call(thisArg, value, i, list))  return value;\r\n      }\r\n      return undefined;\r\n    };\r\n  }\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__simulator_VirtualApp_js__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__simulator_VirtualResource_js__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__simulator_VirtualSystemByJson_js__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__simulator_MenuConfig_js__ = __webpack_require__(35);\n/* unused harmony reexport VirtualSystem */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__simulator_VirtualApp_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__simulator_VirtualResource_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__simulator_VirtualSystemByJson_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_4__simulator_MenuConfig_js__[\"a\"]; });\n\r\n\r\n\r\n\r\n\r\n\r\n/** @namespace Simulator */\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return HJN; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* ******1*********2*********3*********4*********5*********6*********7****** */\r\n\r\n\r\n/** @namespace */\r\nvar HJN = {};\r\nwindow.HJN = HJN; // #67\r\n\r\nHJN.init = {}; // 初期登録処理関連\r\n\r\nHJN.chart = HJN.chartD = null;\r\nHJN.chartName = \"chart\";\r\n\r\nHJN.CONC = {\r\n    key : 'conc',\r\n    name : '多重度（詳細）',\r\n    label : 'conc:%N',\r\n    N : 0,\r\n    scale : 0,\r\n    color : 'rgba(  0,  0,127, 0.3)',\r\n    tpsN : 1\r\n}; // #7\r\nHJN.CTPS = {\r\n    key : 'cTps',\r\n    name : '多重度（区間最大）',\r\n    label : 'conc(max):%N',\r\n    N : 1,\r\n    scale : 0,\r\n    color : 'rgba(  0,  0,127, 0.1)',\r\n    detailN : 0\r\n};\r\nHJN.ETPS = {\r\n    key : 'eTps',\r\n    name : 'average tps / min (end) [line]', // #57\r\n    label : 'end:%Ntps',\r\n    N : 2,\r\n    scale : 0,\r\n    color : 'rgba(  0, 127, 127, 0.3)'\r\n};\r\nHJN.STAT = {\r\n    key : 'sTat',\r\n    name : 'response by start time [Y2軸:plot]',\r\n    label : 'start:%Nms',\r\n    N : 3,\r\n    scale : 1,\r\n    color : 'rgba(127, 127, 0, 0.3)'\r\n};\r\nHJN.ETAT = {\r\n    key : 'eTat',\r\n    name : 'response by end time   [Y2軸:plot]',\r\n    label : 'end:%Nms',\r\n    N : 4,\r\n    scale : 1,\r\n    color : 'rgba(127,  0,  0, 0.3)'\r\n};\r\nHJN.EMPS = {\r\n    key : 'eMps',\r\n    name : 'max response / min (end) [Y2軸:line]', // #57\r\n    label : 'max:%Nms',\r\n    N : 5,\r\n    scale : 1,\r\n    color : 'rgba(127,   0,  64, 0.3)'\r\n};\r\nHJN.EAPS = {\r\n    key : 'eAps',\r\n    name : 'average response / min (end) [Y2軸:line]', // #57\r\n    label : 'ave:%Nms',\r\n    N : 6,\r\n    scale : 1,\r\n    color : 'rgba(127,   0,  64, 0.1)'\r\n};\r\n// グラフ定数\r\nHJN.seriesConfig = [ HJN.CONC, HJN.CTPS, HJN.ETPS, HJN.STAT, HJN.ETAT,\r\n        HJN.EMPS, HJN.EAPS ];\r\n\r\nHJN.detailDateTime = new Date(); // 下段表示時刻\r\nHJN.detailRangePlus = 1.0; // 下段表示範囲（＋秒）\r\nHJN.detailRangeMinus = 1.0; // 下段表示範囲（－秒）\r\n\r\nHJN.files = [];\r\nHJN.filesArrayBuffer = [];\r\n\r\nHJN.timer = {};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = Init;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = CreateSampleTatLogAndChartShow;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Copyright_js__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__tatLogDiver_Graph_js__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__tatLogDiver_Plot_js__ = __webpack_require__(38);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* *****1*********2*********3*********4*********5*********6*********7******* */\r\n/**\r\n * HTMLから呼び出すAPI\r\n * \r\n * @memberof Init\r\n * @param {string}\r\n *            [chartName=HJN.chartName=\"chart\"] グラフを作成するHTMLタグ名\r\n * @return {ETAT} 終了時刻のTAT（応答時間）時系列データ\r\n * @example <!doctype html> <html> <head> <meta charset=\"UTF-8\"> <link\r\n *          type=\"text/css\" rel=\"stylesheet\" href=\"../libs/dygraph.css\"> <link\r\n *          type=\"text/css\" rel=\"stylesheet\" href=\"./tatLogDiver.css\"> </head>\r\n *          <body> <div id=\"hjn_chart\"></div> <script src=\"../libs/dygraph.js\"></script>\r\n *          <script src=\"../libs/extras/synchronizer.js\"></script> <script\r\n *          type=\"module\"> import {HJN_init_ChartRegist} from\r\n *          \"./tatLogDiver-Init.js\";\r\n *          window.addEventListener(\"DOMContentLoaded\",function(eve){\r\n *          Bundle(\"chart\"); // チャートを作成する }); </script> </body> </html>\r\n */\r\nfunction Init(chartName){ // #70\r\n\r\n\t\"use strict\";\r\n\t// 引数１ ：デフォルトHJN.chartName(\"chart\")\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartName = chartName = chartName || __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartName;\r\n\t// タイトルを設定する #57\r\n\tdocument.title = \"tat log diver \" + __WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Copyright_js__[\"a\" /* Copyright */].Version; \r\n\t// htmlを作成する #52\r\n\tvar html_chart = document.getElementById(\"hjn_\" + chartName) || document.body;\r\n\thtml_chart.innerHTML = ''\r\n\t    + '<div id=\"' + chartName + '\"></div>'\r\n        + '<div id=\"' + chartName + 'D\"></div>'\r\n        + '<textarea id=\"lineViewer\" class=\"lineViewer\">logdata</textarea>';\r\n\t// 手前にメニュ－用htmlを作成する #52\r\n\tvar html_nav = document.createElement('nav');\r\n\thtml_nav.innerHTML = ''\r\n\t    + '<header>'\r\n        + '<div id=\"Simulator\"></div>' // #53\r\n        + '<div class=\"statusbar\">'\r\n        + '  <iframe id=\"fileInfo\"></iframe>'\r\n        + '</div>'\r\n        + '<div class=\"hjnBurgerTray\">'\r\n        + '  <input id=\"hjnBoxBuger\" type=\"checkbox\" class=\"hjnBurger hjnResize\" checked=\"checked\" />'\r\n        + '    <label for=\"hjnBoxBuger\" class=\"hjnCtrlBox\"><span></span></label>'\r\n        + '  <div class=\"hjnBurgerTitle\">'\r\n        + '    <input id=\"hjnBoxPlaceOn\" type=\"checkbox\" class=\"hjnBoxSwitch hjnResize\" />'\r\n        + '      <label for=\"hjnBoxPlaceOn\" class=\"hjnCtrlBox\"><span></span></label>'\r\n        + '    <p>'\r\n        + '      <a class=\"hjnLabel4Input\" href=\"../jsdoc/index.html\"'\r\n        + '                target=”_hirosejnJSDoc3”>TAT log diver</a><BR>'\r\n        + '      <a class=\"hjnLabel4Input\" href=\"https://github.com/hirosejn/\"'\r\n        + '                target=”_hirosejnGit”>&copy;2017 Junichiroh Hirose</a>'\r\n        + '    </p>'\r\n        + '  </div>'\r\n        + '  <div class=\"hjnBurgerWrap\">'\r\n        + '    <div class=\"hjnAccordion\">'\r\n        + '      <div id=\"' + chartName + '_menu\"></div>'\r\n        + '      <div id=\"' + chartName + 'D_menu\"></div>'\r\n        + '    </div>'\r\n        + '  </div>'\r\n        + '</div>'\r\n        + '</header>';\r\n\thtml_chart.parentNode.insertBefore(html_nav, html_chart);\r\n\t\r\n\tvar dropFieldName = chartName;\t// ファイルドロップを受け付けるタグ名\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogTextInit(); // 処理時間計測の初期化\r\n\r\n\t// グラフのインスタンスを作成し初期化する\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart = new __WEBPACK_IMPORTED_MODULE_5__tatLogDiver_Graph_js__[\"a\" /* default */](chartName, \"HJN.chart\");\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.init();\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD = new __WEBPACK_IMPORTED_MODULE_5__tatLogDiver_Graph_js__[\"a\" /* default */](chartName + \"D\", \"HJN.chartD\");\r\n\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.init();\r\n\t// ドロップフィールドに、処理を登録する(注：dygraphはイベントリスナーを登録しないとクリック時にエラーが出る）\r\n\tInit.DropField(dropFieldName);\r\n\tInit.DropField(dropFieldName+ \"D\");\r\n\r\n\t// 初期表示データを自動生成する // #53\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */].GetConfig(\"Simulator\").getFunctionByKey(\"S_SIMU\")(); // #53\r\n}\r\n\r\n/**\r\n * データを自動生成し表示する\r\n * \r\n * @memberof Init\r\n * @param {String|Number}\r\n *            [json = Simulator.virtualSystemByJson.GetJsonConfig(0)]\r\n *            シミュレーション条件JSONテキスト、もしくはサンプルJSON番号\r\n */\r\nfunction CreateSampleTatLogAndChartShow(json){ // #53\r\n    \"use strict\";\r\n    var jsonText;\r\n    if (typeof(json) === \"number\") { // #53\r\n        jsonText = __WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__[\"d\" /* virtualSystemByJson */].GetJsonConfig(json);\r\n    } else{\r\n        jsonText = json || __WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__[\"d\" /* virtualSystemByJson */].GetJsonConfig(0);\r\n    }\r\n    // JSON Editorを更新する\r\n    document.getElementById(\"SimulatorEditor\").value = jsonText;\r\n    // 初期表示データを自動生成する\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTatOriginal = __WEBPACK_IMPORTED_MODULE_2__simulator_simulator_js__[\"d\" /* virtualSystemByJson */].Execute(jsonText);\r\n    // データを表示する\r\n    Init.ChartShow(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTatOriginal);\r\n}\r\n\r\n/**\r\n * 終了時刻とtatの配列をグラフ表示する（Menuイベントから呼び出される）\r\n * \r\n * @memberof Init\r\n * @param {ETAT}\r\n *            HJN.chart.eTatOriginal 終了時刻とtatを含む配列\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.ChartShow = Init.ChartShow = function(eTatOriginal){\r\n    // フィルタしたeTatを取得する #34\r\n    var eTat = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.createFilter().filter(eTatOriginal);\r\n    \r\n    // グラフを初期表示する\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List = []; // #53\r\n    // 上段\r\n    if (eTat.length === 0) eTat = [{x:0, y:0}]; // #72\r\n    var tat = new __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"d\" /* Tat */](eTat); // #75\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.setSeriesSet(tat);\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.update();\r\n    var text = \"上段表示 [\" + __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTat.length + \"]\";\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(text, \"elaps\");       // 処理時間ログ出力\r\n\r\n    // 下段(非同期）\r\n   __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"m\" /* setZeroTimeout */]( function(){\r\n       __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.update(Init.ChartRegistDetail(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.cTps));\r\n       __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.showBalloon();    // 上段のBalloonを描画する\r\n       if (__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.eTat){\r\n           var text = \"下段表示 [\" + __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.eTat.length + \"]\";\r\n           __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(text, \"elaps\");\r\n           text = \"<mark>Simulated data</mark>[\"\r\n                + __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTat.length.toString()\r\n                    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') + \"]\"; // 整数文字列のカンマ編集\r\n           __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(text, \"msg\");\r\n           \r\n       } else { // #72\r\n           __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"<mark>表示データがありません</mark>\", \"msg\");                        \r\n       }\r\n       // 上下段のマウス操作同期設定 #49\r\n       var sync = Dygraph.synchronize(\r\n                 [ __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.graph, __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.graph ],\r\n                 {selection: true, zoom: false});\r\n    });\r\n}\r\n\r\n/**\r\n * HTMLタグに、CSVファイルのドロップを受付けイベントを登録する\r\n * \r\n * @memberof Init\r\n * @param {string}\r\n *            dropFieldName ファイルのドロップイベントを受けるフィールド名\r\n */\r\nInit.DropField = function (dropFieldName) {\r\n\t\"use strict\";\r\n\t// 第一引数で指定された名前の ID 属性のエレメントを取得する\r\n\tvar element = document.getElementById(dropFieldName);\r\n\t\r\n\t// ドラッグ操作中に実行されるイベント（マウスカーソルが要素内に滞在中）\r\n\telement.addEventListener(\"dragover\" , function (e){\r\n\t\te.preventDefault();   // ドロップを許可し受け入れを表明\r\n\t});\r\n\t\r\n\t// ドロップ時に実行されるイベント\r\n\telement.addEventListener(\"drop\", function (e){\r\n\t\t\tvar data_transfer = e.dataTransfer;\t\t// DataTransfer オブジェクトを取得する\r\n\t\t\tif(!data_transfer.types) return;\t\t// ファイルのコンテンツタイプを取得できたことを確認する\r\n\t\t\tvar files = data_transfer.files;\t// ファイルのリストを取得する\r\n\t\t\tInit.FileReader(files);\r\n\t\t\te.preventDefault();\t\t// デフォルトのドロップ機能を無効化\r\n\t});\r\n};\r\n\r\n/**\r\n * 指定されたファイルを読込んで処理する\r\n * \r\n * @memberof Init\r\n * @param {Object}\r\n *            files ファイルハンドラ\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.FileReader = Init.FileReader = function (files){  // #15\r\n\t\"use strict\";\r\n\tfor(var i = 0; i < files.length; i++){\t// データを順番に取得する\r\n\t\ttry{\r\n\t\t\t// ファイルを取得する\r\n\t\t\tvar file = files[i];\r\n\t\t\t// ログ出力用にファイル名（サイズ）を編集する\r\n\t\t\tvar textArray =\t\"<BR><mark><b>\" + file.name + \"</b></mark> \" +\r\n\t\t\t\t\t\t\t\"[\"+ file.size + \"byte] \" + \r\n\t\t\t\t\t\t\tfile.lastModifiedDate.toLocaleString() +\"<BR>\";\r\n\t\t\t// ファイルの読み込みに成功したら、その内容をドロップエリアに追記して表示する\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.onloadend = funcOnloadend.bind(this, files[i], i);\r\n\t\t\t// ファイルにArrayBufferで参照を取得する（loadイベントを起こす）\r\n\t\t    reader.readAsArrayBuffer(files[i]);\r\n\t\t}catch(e){\r\n\t\t\t// 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n\t\t\tvar msg = \"The \" + i + \"th dropped object is not a file\";\r\n\t\t\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowText( [\"<mark>\"+msg+\"</mark>\"] );\r\n\t\t\tconsole.error(\"[%o]%o\",msg,e );\r\n\t\t}\r\n\t}\r\n\r\n\t// 内部関数：ファイルを読み込みｸﾞﾗﾌを表示する（指定ファイルを読み込んだ後に呼び出される） #23\r\n    function funcOnloadend(file, i, evt) {\r\n        if (evt.target.readyState === FileReader.DONE) { // DONE == 2\r\n            var filesIdx = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].files.length;\r\n            // ファイルの先頭2行をログ表示する\r\n            __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].filesArrayBuffer[filesIdx] = evt.target.result;\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogTextInit();              // 情報表示 : 初期化\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(textArray, \"msg\");  // 情報表示：ドロップファイル情報\r\n            // 指定ファイルを読み込む\r\n            // CSVファイルを上段用eTatに展開する[{x:, y:,pos:,len:},...] 全件展開する\r\n            if (i === 0 && __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.isNewETAT()){\r\n                // 新規モードかつ、同時複数ファイル指定時の最初のファイルのとき、新たに作成する\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].files = [file];\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTatOriginal = getTatLogArray(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].filesArrayBuffer, filesIdx);\r\n            } else { // 2件目以降のファイルのとき、もしくは、追加モード\"ADDDATA\"のとき、追加する\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].files.push(file);\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTatOriginal = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTatOriginal.concat(\r\n                        getTatLogArray(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].filesArrayBuffer, filesIdx));\r\n            }\r\n            \r\n            // 全ファイルを読み込んだらグラフを描画する\r\n            if (__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].files[__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].files.length - 1] === file){ // 指定ファイル群の最後のファイルを処理しているとき\r\n                // フィルタしたeTatを取得する #34\r\n                var eTat = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.createFilter().filter(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTatOriginal);\r\n\r\n                // 上段グラフを描画する（ eTatから上段用 時系列分析データ(seriesSet)を展開する）\r\n                if (eTat.length === 0) eTat = [{x:0, y:0}]; // #72\r\n                var tat = new __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"d\" /* Tat */](eTat); // #75\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.setSeriesSet(tat);\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.update();\r\n                __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"上段表示\", \"elaps\");\r\n\r\n                // 下段用データの展開とグラフ描画（非同期処理）\r\n                __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List = [];\r\n                __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"m\" /* setZeroTimeout */](function(){\r\n                    if (__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.cTps) {\r\n                        // 下段グラフを描画する（下段用 時系列分析データ(seriesSet)を展開する）\r\n                        __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.update(Init.ChartRegistDetail(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.cTps));\r\n                        // 上段のBalloonを描画する(上段update時にはplots登録されていないので、ここで処理）\r\n                        __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.showBalloon();\r\n                        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"下段表示\", \"elaps\");\r\n                        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"<mark>\"+ __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].files[0].name +\r\n                                \"[\"+ __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTat.length +\r\n                                \"]を表示しました</mark>\", \"msg\");\r\n                    } else { // #72\r\n                        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"<mark>表示データがありません</mark>\", \"msg\");                        \r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\t// 内部関数： 指定ファイルの先頭ｎ行を、改行文字<BR> のテキストに変換してリターンする\r\n\tfunction topLines(file, n) {\r\n\t    var fileInfo = \"\",\r\n\t        line;\r\n\t    try{    // 先頭からnレコード取得\r\n\t        var getterOfLine = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.createGetterOfLine(file);\r\n\t        for (var i = 0; i < n; i++) {\r\n\t            line = getterOfLine.next();\r\n\t            fileInfo += line.str + \"<BR>\";\r\n\t        }\r\n\t    }catch (e) {\r\n\t        alert(\"[Init.DropField 改行コードの無いファイルは扱えません]\");\r\n\t        console.error(e);\r\n\t    }\r\n\t    return fileInfo;\r\n\t}\r\n\r\n    // 内部関数： CSVファイルを読み込み、TatLog用アレイ[{x:日時, y:値, pos:レコード開始位置,\r\n    // len:レコード長},...]に展開する\r\n\tfunction getTatLogArray(files, idx) { // arg0:csvﾌｧｲﾙのファイルﾊﾟｽ\r\n\t    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"----- read file -----------------------------\",\"calc\");\r\n\t    var file = files[idx], // #23\r\n\t        eTat = [],\r\n\t        xy = {date: 0, value: 0, isError: false },\r\n\t        i = 0,  // timelog用\r\n\t        getterOfLine = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.createGetterOfLine(file),\r\n\t        getterOfXY = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.createGetterOfXY(),\r\n\t        line = getterOfLine.next();     // 先頭行の初期処理\r\n\t    while (!line.isEoF) {               // 以降最終行まで処理する\r\n\t        try {\r\n\t            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ByInterval(i++, line); // 一定時刻毎に進捗を出力する\r\n\t            xy = getterOfXY.parse(line);\r\n\t            if(!xy.isError){\r\n\t                eTat.push( {x: xy.x, y: xy.y, fileIdx: idx, // #23\r\n\t                    pos: line.pos, len: line.array.byteLength, sTatIdx: 0} );\r\n\t            }\r\n\t            line = getterOfLine.next(); // #24\r\n\t        } catch (e) {   /* 改行だけレコードをスキップ */\r\n\t            console.error(e);\r\n\t            console.err(\"err: %o\",e);\r\n\t        }\r\n\t    }\r\n\t    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[0:file readed & got eTat]---------------\",\"calc\");\r\n\t    return eTat;\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * 詳細グラフ用機能： 表示対象期間のcTpsから、eTps範囲を取得し、詳細Seriesを生成する。併せてPlotsを登録する。\r\n * \r\n * @memberof Init\r\n * @param {xMs}\r\n *            cTps 日時（ミリ秒単位）\r\n * @return {seriesSet} dygraph用時系列データ配列\r\n */\r\nInit.ChartRegistDetail = function(cTps){\r\n\t\"use strict\";\r\n\t// CTPSの最大値となるplotを取得する\r\n\tvar maxY =Number.MIN_VALUE,\r\n\t\tmaxYIdx = -1;\r\n\tcTps.forEach(function(c, i){\r\n\t\tif (maxY < c.y){\r\n\t\t\tmaxY = c.y;\r\n\t\t\tmaxYIdx = i;\r\n\t\t}\r\n\t});\r\n\tif(0 <= maxYIdx){\t// #26\r\n\t\t// 秒単位より大きいとき、最大値を含む時刻(秒)に補正する #38\r\n\t\tvar x = cTps[maxYIdx].x;\r\n\t\tif(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.cTpsUnit.unit >= 1000){\r\n\t\t\tvar cTpsIdx = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.conc.findIndex(function(e,i){return e.y === cTps[maxYIdx].y;});\r\n\t\t\tx = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.conc[cTpsIdx].x;\r\n\t\t}\r\n\t\t// slider rangeに、下段の表示時刻を設定する\r\n\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.SetDetailDateTime(x);\r\n\t\t// eTpsの範囲を取得し、詳細用seriesSet(HJN.chartD.seriesSet）を設定する\r\n\t    var tat = new __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"d\" /* Tat */](__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.GetSliderRangedEtat()); // #75\r\n\t    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.setSeriesSet(tat);\r\n\t\t// plotsアイコン用 HJN.Plot.Listに、下段表示したplotを登録する\r\n\t\t__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.Add(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].CTPS.N, cTps[maxYIdx].x, cTps[maxYIdx].y);\r\n\t}\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[6:Plot added] \" + __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.length + \" plots\",\"calc\");\r\n\r\n\treturn __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.seriesSet;\r\n};\r\n/**\r\n * 詳細グラフ用機能： sliderRangeで指定された範囲のeTatを返却する（グラフの点クリックイベント時に呼び出される）\r\n * \r\n * @memberof Init\r\n * @return {ETAT} 詳細グラフ用eTat\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.GetSliderRangedEtat = function() {\r\n\t\"use strict\";\r\n\t// 指定時刻（ｄｔ ± range）を取得する\r\n\tvar rangeTagPlus  = document.getElementById(\"DetailRangePlus\");\r\n\tvar\trangeTagMinus = document.getElementById(\"DetailRangeMinus\");\r\n    var rangeTagUnit  = document.getElementById(\"DetailRangeUnit\"); // #48\r\n\tvar\trangeCycle = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.cTpsUnit.unit / 1000; // #38\r\n    // HJNグローバル変数に退避する\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].detailRangePlus  = rangeTagPlus  ? +rangeTagPlus.value  : 1 + rangeCycle; // 幅（秒）\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].detailRangeMinus = rangeTagMinus ? +rangeTagMinus.value : rangeCycle;     // 幅（秒）\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].detailRangeUnit  = rangeTagUnit  ? +rangeTagUnit.value  : __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"d\" /* Tat */].CYCLE; // #48\r\n\r\n    var eTatDetail = (new __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"a\" /* ETat */](__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.eTat)).sliceByRangeUnit(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].detailDateTime, \r\n                        __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].detailRangeMinus, __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].detailRangePlus, __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].detailRangeUnit); // #75\r\n\r\n\t__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[0:HJN.init.GetSliderRangedEtat] \",\"calc\");\r\n\treturn eTatDetail;\t// 詳細グラフ用eTatを返却する\r\n\r\n};\r\n/**\r\n * 詳細グラフ用機能： 表示期間変更時に、Detailを再描画する（onChangeイベント時に呼び出される）\r\n * \r\n * @memberof Init\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.setDetailRange = function(){\r\n    \"use strict\";\r\n    clearTimeout(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].timer);\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].timer = setTimeout(function(){\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogTextInit(\"[-:HJN.init.setDetailRange]start---------------\",\"calc\");\r\n            // 表示中Plotsのrangeを更新する #30\r\n            var i = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.findIndex(function(e){ return (e.radio === true); });\r\n            var plot = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List[i];\r\n            plot.rangePlus  = document.getElementById(\"DetailRangePlus\").value;\r\n            plot.rangeMinus = document.getElementById(\"DetailRangeMinus\").value;\r\n            var rangeTagUnit = document.getElementById(\"DetailRangeUnit\"); // #48\r\n            __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].detailRangeUnit  = rangeTagUnit  ? +rangeTagUnit.value  : __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"d\" /* Tat */].CYCLE; // #57\r\n            plot.rangeUnit  = __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].detailRangeUnit; // #48\r\n\r\n            // 下段データを登録する\r\n            var tat = new __WEBPACK_IMPORTED_MODULE_1__timeSeries_timeSeries_js__[\"d\" /* Tat */](__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.GetSliderRangedEtat()); // #75\r\n            __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.setSeriesSet(tat);\r\n            // 下段グラフを描画する\r\n            __WEBPACK_IMPORTED_MODULE_5__tatLogDiver_Graph_js__[\"a\" /* default */].prototype.update.call(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD, __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.seriesSet);\r\n        }, 750);    // 750ms 値の変更がなかった時に、処理を開始する\r\n};\r\n/**\r\n * 詳細グラフ用機能： 指定日時を秒単位に丸めて、FORMのslider Rangeに設定する（Plotから呼び出される）\r\n * \r\n * @memberof Init\r\n * @param {xMs}\r\n *            date 日時（ミリ秒単位）\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.SetDetailDateTime=function(date) {\r\n    \"use strict\";\r\n    __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].detailDateTime = Math.floor(date / 1000) * 1000;    // 秒単位に丸める\r\n};\r\n\r\n\r\n/**\r\n * 著作権表記文字を取得する（Menuイベントから呼び出される）\r\n * \r\n * @memberof Init\r\n * @return {String} str 著作権表記文字\r\n */\r\n__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.Copyright=function(){\r\n    \"use strict\";\r\n    return __WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Copyright_js__[\"a\" /* Copyright */].text;\r\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__timeSeries_Tat_js__ = __webpack_require__(30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_ETat_js__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timeSeries_FileParser_js__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__timeSeries_MenuConfig_js__ = __webpack_require__(12);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_0__timeSeries_Tat_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__timeSeries_ETat_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__timeSeries_FileParser_js__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_3__timeSeries_MenuConfig_js__[\"a\"]; });\n\r\n\r\n\r\n\r\n\r\n/** @namespace TimeSeries */\r\n\r\n\r\n/**\r\n * seriesSet: dygraph用時系列データ配列\r\n * \r\n * @typedef {array.<CONC, CTPS, ETPS, STAT, ETAT, EMPS, EAPS>} seriesSet\r\n */\r\n\r\n/**\r\n * CONC:多重度の時系列データ<br>\r\n * [{x:変化時刻(ms) ,y:多重度数 }]\r\n * \r\n * @typedef {array.<xMs, yInt>} CONC\r\n */\r\n\r\n/**\r\n * CTPS: 秒間最大多重度の時系列データ<br>\r\n * [{x:秒毎時刻(ms), y:秒内最大多重度数 }]\r\n * \r\n * @typedef {array.<xMs, index>} CTPS\r\n */\r\n\r\n/**\r\n * ETPS: 秒間終了件数の時系列データ<br>\r\n * [{x:秒毎時刻(ms), y:秒内終了件数 }]\r\n * \r\n * @typedef {array.<xMs, yInt>} ETPS\r\n */\r\n\r\n/**\r\n * STAT: 開始時刻のTAT（応答時間）時系列データ<br>\r\n * [{x:開始時刻(ms) ,y:レスポンス(sec), eTatIdx: eTatの配列位置 }]\r\n * \r\n * @typedef {array.<xMs, ySec, index>} STAT\r\n */\r\n\r\n/**\r\n * ETAT: 終了時刻のTAT（応答時間）時系列データ<br>\r\n * [{x:変化時刻(ms) ,y:レスポンス(sec), fileIdx:ファイル配列位置, pos:レコード位置, len:レコード長, sTatIdx:\r\n * sTatの配列位置 }]\r\n * \r\n * @typedef {array.<xMs, ySec, index, index, number, index>} ETAT\r\n */\r\n\r\n/**\r\n * EMPS: 秒間最大TAT（応答時間）時系列データ（終了時刻ベース）<br>\r\n * [{x:秒毎時刻(ms), y:秒内最大レスポンス(sec) }]\r\n * \r\n * @typedef {array.<xMs, ySec>} EMPS\r\n */\r\n\r\n/**\r\n * EAPS: 秒間平均TAT（応答時間）時系列データ（終了時刻ベース）<br>\r\n * [{x:秒毎時刻(ms), y:秒内平均レスポンス(sec) }]\r\n * \r\n * @typedef {array.<xMs, ySec>} EAPS\r\n */\r\n\r\n\r\n\r\n/**\r\n * xMs: x軸に用いる時刻(ms)\r\n * \r\n * @typedef {number} xMs\r\n */\r\n/**\r\n * ySec: y軸に用いる秒単位の時間（応答時間など）\r\n * \r\n * @typedef {number} ySec\r\n */\r\n\r\n\r\n\r\n/**\r\n * yInt: y軸に用いる整数（個数など）\r\n * \r\n * @typedef {number} yInt\r\n */\r\n/**\r\n * index: 配列の位置（インデックス）に用いる整数\r\n * \r\n * @typedef {number} index\r\n */\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Graph;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__simulator_simulator_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Menu_js__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_Init_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__ = __webpack_require__(4);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* ******1*********2*********3*********4*********5*********6*********7****** */\r\n\r\n/**\r\n * インスタンス内の定数を設定する。併せて性能対策として頻繁に使うDOM要素を取り込む\r\n * \r\n * @memberof tatLogDiver\r\n * @class Graph\r\n * @classdesc TAT(Turnaround time)ログ分析用グラフ\r\n * @param {string}\r\n *            chartIdName グラフを作成するHTML要素のID\r\n * @param {string}\r\n *            [globalName=\"HJN.chartD\"] グラフのID\r\n * @param {Object}\r\n *            [config] グラフの設定\r\n * @example HJN.chart = new HJN(chartName, \"HJN.chart\"); HJN.chart.init();\r\n *          HJN.chartD = new HJN(chartName + \"Detail\", \"HJN.chartD\");\r\n *          HJN.chartD.init();\r\n */\r\nfunction Graph(chartIdName, globalName, config) {\r\n    \"use strict\";\r\n    /* メンバ変数 */\r\n    this.seriesSet = [];\r\n    this.chartIdName = chartIdName; // arg0 \"chart\",\"chartD\"\r\n    this.globalName = globalName || \"HJN.chartD\"; // arg1\r\n    if (!config) { // arg2\r\n        var isMain = (globalName === \"HJN.chart\") ? true : false;\r\n        config = {\r\n            SERIESES: [ \r\n                { n: HJN.CONC.N, process: !isMain, visiblity: !isMain, renderer: 'area' },\r\n                { n: HJN.CTPS.N, process: true,    visiblity: true,    renderer: isMain ? 'scatterplot' : 'bar' },\r\n                { n: HJN.ETPS.N, process: true,    visiblity: isMain,  renderer: 'line' },\r\n                { n: HJN.STAT.N, process: !isMain, visiblity: !isMain, renderer: 'scatterplot' },\r\n                { n: HJN.ETAT.N, process: !isMain, visiblity: !isMain, renderer: 'scatterplot' },\r\n                { n: HJN.EMPS.N, process: true,    visiblity: true,    renderer: 'line' }, \r\n                { n: HJN.EAPS.N, process: true,    visiblity: isMain,  renderer: 'line' } ],\r\n            height : 0.40,\r\n            isVisiblity : true\r\n        };\r\n    }\r\n\r\n    // File.Parserを設定する\r\n    this.fileParser = __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"b\" /* FileParser */](); // #24\r\n    __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"c\" /* MenuConfig */](); // #74\r\n    \r\n    // グラフ定義領域の宣言\r\n    this.windowId = document.getElementById(\"hjn_chart\");\r\n    this.menuId = document.getElementById(\"hjnBoxBuger\");\r\n    this.menuPlaceOnId = document.getElementById(\"hjnBoxPlaceOn\");\r\n    this.chartId = document.getElementById(this.chartIdName);\r\n    this.dyData = [];\r\n    this.dySeries = {};\r\n\r\n    this.scale = [ null, null ];\r\n    this.graph = null;\r\n    this.cTpsUnit = __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"d\" /* Tat */].UNIT_CTPS[0]; // #75\r\n\r\n    // グラフの設定(処理対象データの設定のみ this.SERIESES[] に取り込む）\r\n    this.SERIESES = [];\r\n    this.labels = [ 'Date' ];\r\n    for (var i = 0, j = 0; i < config.SERIESES.length; i++) {\r\n        if (config.SERIESES[i].process === true) {\r\n            this.SERIESES[j] = {\r\n                key : '',\r\n                name : '',\r\n                visiblity : false,\r\n                renderer : '',\r\n                order : 0,\r\n                scale : 0,\r\n                color : ''\r\n            };\r\n            // 定数(HJN.seriesConfig)指定項目を設定する\r\n            for ( var attr in HJN.seriesConfig[i]) {\r\n                this.SERIESES[j][attr] = HJN.seriesConfig[i][attr];\r\n            }\r\n            // 引数(config)指定項目を設定する\r\n            this.SERIESES[j].visiblity = config.SERIESES[i].visiblity;\r\n            this.SERIESES[j].renderer = config.SERIESES[i].renderer;\r\n\r\n            var renderer = config.SERIESES[i].renderer;\r\n            if (renderer === 'scatterplot') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    drawPoints : true\r\n                };\r\n            } else if (renderer === 'line') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 2.0,\r\n                    connectSeparatedPoints : true,\r\n                    stepPlot : true\r\n                };\r\n            } else if (renderer === 'area') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    stepPlot : true,\r\n                    fillGraph : true\r\n                };\r\n            } else { // if (renderer === 'bar' ) {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    connectSeparatedPoints : true,\r\n                    stepPlot : true,\r\n                    fillGraph : true\r\n                };\r\n            }\r\n            this.dySeries[this.SERIESES[j].key].color = this.SERIESES[j].color;\r\n\r\n            if (this.SERIESES[j].scale === 1) {\r\n                this.dySeries[this.SERIESES[j].key].axis = 'y2';\r\n            }\r\n\r\n            this.labels.push(this.SERIESES[j].key);\r\n            j++;\r\n        }\r\n    }\r\n\r\n    this.height = config.height;\r\n    this.isVisiblity = config.isVisiblity;\r\n};\r\n\r\n/**\r\n * クラス定数\r\n */\r\n// Graph.prototype = {};\r\n\r\n/**\r\n * クラスメソッド：menuのFilterのｘｙ幅指定エリアにグラフのｘｙ幅を設定する<br>\r\n * dygraphのdrawCallbackに設定する関数<br>\r\n * menuのRadio(F_SYNC)選択時に呼び出す関数（このためにクラスメソッド）\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.DrawCallback = function (g, is_initial) { // #50 #51\r\n    // 初期表示時は、メニューを設定しない\r\n    if (is_initial)\r\n        return;\r\n    // Filterメニューで指定されている F_SYNC の状態を取得する\r\n    var syncMode = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */](\"Filter\").getValueByKey(\"F_SYNC\"); // #59\r\n    // \"F_SYNC_UPPER\"かつ上段グラフ もしくは、\"F_SYNC_DETAIL\"かつ下段グラフのとき処理する\r\n    if ((syncMode === \"F_SYNC_UPPER\" && g.HJN === HJN.chart)\r\n            || (syncMode === \"F_SYNC_DETAIL\" && g.HJN === HJN.chartD)) {\r\n        // ｘ軸の幅をFilterメニューフェールドに反映する\r\n        setText(\"Filter.F_TIME_FROM\", __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](g.xAxisRange()[0],\r\n                \"yyyy/MM/dd hh:mm:ss.ppp\", true));\r\n        setText(\"Filter.F_TIME_TO\", __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](g.xAxisRange()[1],\r\n                \"yyyy/MM/dd hh:mm:ss.ppp\", true));\r\n        // ｙ軸(右)の幅をFilterメニューフェールドに反映する\r\n        setText(\"Filter.F_TAT_FROM\", +(g.yAxisRange(1)[0].toPrecision(4)));\r\n        setText(\"Filter.F_TAT_TO\", +(g.yAxisRange(1)[1].toPrecision(4)));\r\n    }\r\n\r\n    function setText(id, val) {\r\n        document.getElementById(id).value = val;\r\n        document.getElementById(id).onchange();\r\n    }\r\n};\r\n\r\n/**\r\n * グラフを初期化する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.init = function () {\r\n    \"use strict\";\r\n    // メニューを作成する\r\n    Object(__WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Menu_js__[\"a\" /* default */])(this);\r\n    // 凡例を作成する\r\n    if (this.isVisiblity)\r\n        addLegend(this);\r\n    // 既にグラフがあるときは削除する\r\n    if (this.graph) {\r\n        this.graph.HJN = null; // （注：循環参照対策\r\n        this.graph.destroy();\r\n    }\r\n    // ウィンドウ枠に合わせて描画領域をリサイズするイベントを登録し、リサイズする\r\n    window.addEventListener(\"resize\", this.resize.bind(this));\r\n    // tablet回転時も、リサイズする #22\r\n    window.addEventListener(\"orientationchange\", this.resize.bind(this));\r\n    var resizes = document.getElementsByClassName(\"hjnResize\");\r\n    for (var i = 0; i < resizes.length; i++) {\r\n        resizes[i].addEventListener(\"change\", this.resize.bind(this)); // メニュ－の開閉\r\n        // #31\r\n    }\r\n\r\n    // legendを追加する（内部関数）\r\n    function addLegend(that) { // arg0 : this\r\n        var chartIdName = that.chartIdName;\r\n        var serieses = that.SERIESES;\r\n        var divLegend = document.getElementById(chartIdName + \"_legend\");\r\n        var formName = chartIdName + \"_LegendForm\";\r\n        var htmlText = '<form name=\"' + formName + '\">';\r\n        for (var i = 0; i < serieses.length; i++) {\r\n            var ckBox = serieses[i].visiblity ? 'checked=\"checked\"' : '';\r\n            htmlText += '<label class=\"legend\" style=\"background:'\r\n                        + serieses[i].color + ';\">' \r\n                    + '<input type=\"checkbox\" '\r\n                        + 'name=\"' + serieses[i].key + '\"' + 'onclick=\"'\r\n                        + that.globalName + '.onClickSetVisibility(' + i + ');\" '\r\n                        + ckBox + '>' \r\n                    + serieses[i].name \r\n                    + '</label><BR>';\r\n        }\r\n        htmlText += '</form>';\r\n        divLegend.innerHTML = htmlText;\r\n    }\r\n};\r\n\r\n/**\r\n * legendの表示指定をグラフに反映する(onclick呼出用）\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {index}\r\n *            i seriesSet配列の設定変更するグラフのインデックス\r\n */\r\nGraph.prototype.onClickSetVisibility = function (i) { //\r\n    \"use strict\";\r\n    var formName = this.chartIdName + \"_LegendForm\";\r\n    var ck = document[formName].elements[i].checked;\r\n    this.graph.setVisibility(i, ck);\r\n};\r\n\r\n/**\r\n * ウィンドウ枠に合わせて描画領域をリサイズする（dygraphは幅は自動、高さは指定）\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.resize = function () {\r\n    \"use strict\";\r\n    // 幅（メニューの状態に合わせて計算） #31\r\n    var dWidth = 0;\r\n    if (this.menuId.checked && !this.menuPlaceOnId.checked) {\r\n        dWidth = this.menuId.parentNode.clientWidth;\r\n    }\r\n    var width = window.innerWidth - dWidth;\r\n    this.windowId.style.width = width + \"px\";\r\n    // 高さ（ウィンドウサイズの比率(this.height)をかけて算出）\r\n    var height = Math.floor(window.innerHeight * this.height);\r\n    this.chartId.style.height = height + \"px\";\r\n\r\n    if (this.graph)\r\n        this.graph.resize(width, height);\r\n    return height;\r\n};\r\n\r\n/**\r\n * seriesSetを取り込む\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Obcjet}\r\n *            [tat] 応答時間(Turnaround time)の時系列データ管理クラス\r\n * @param {array}\r\n *            [seriesSet] tat内の応答時間の時系列データ管理配列\r\n */\r\nGraph.prototype.setSeriesSet = function (tat, seriesSet) { // #30\r\n\r\n    if(tat) {\r\n        this.seriesSet = tat.getSeriesSet();\r\n        this.cTpsUnit = tat.getCTpsUnit(); // #75\r\n    }\r\n    if(seriesSet){\r\n        this.seriesSet = seriesSet;\r\n    }\r\n    HJN.seriesConfig.forEach(function (e) {\r\n        this[e.key] = this.seriesSet[e.N];\r\n    }, this);\r\n};\r\n\r\n\r\n/**\r\n * データを変更し描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {seriesSet}\r\n *            seriesSet dygraph用時系列データ配列\r\n * @param {Integer}\r\n *            n 選択されたグラフのseriesSet配列位置\r\n */\r\nGraph.prototype.update = function (seriesSet, n) {\r\n    \"use strict\";\r\n    // 指定データがあるとき取り込む\r\n    if (seriesSet) this.setSeriesSet(undefined, seriesSet);\r\n    // dygraph用表示データを作成する\r\n    var xy = [[{x:0,y:0}],[{x:0,y:0}],[{x:0,y:0}],[{x:0,y:0}]], // グラフデータの一覧（グラフ１本が配列要素）\r\n        idx = [], // グラフデータの処理中配列位置を保有する配列\r\n        x = [], // グラフデータの処理中配列のｘ(時刻)の値を保有する配列\r\n        row = [], // dygraph１レコードワーク配列：（[x,y0,y1...]の配列）の一レコード分を保持する配列\r\n        minX = 0,\r\n        i = 0; // グラフ番号用ワーク\r\n    // 表示対象データがないとき空データのdygraphを表示する #72\r\n    if (this.seriesSet.length === 0) {\r\n        var cols = [0]; // 日時（ミリ秒）\r\n        for (i = 0; i < this.SERIESES.length; i++) cols[i+1] = null;\r\n        this.dyData = [cols];\r\n        if (this.graph) {\r\n            // 既にグラフがあるときはデータのみ変更する（注：ここでdestroy()すると下段のpointClickCallback時にエラー）\r\n            this.graph.updateOptions( {\r\n                file : this.dyData\r\n            } );\r\n            this.graph.resetZoom(); // #51\r\n        }\r\n        return;\r\n    }\r\n    \r\n    \r\n    // xy[] に処理対象seriesを指定する\r\n    for (i = 0; i < this.SERIESES.length; i++) {\r\n        xy[i] = this.seriesSet[this.SERIESES[i].N];\r\n        idx[i] = 0;\r\n    }\r\n    // dygraph表示時間帯を設定する（上段グラフは全期間が処理対象）\r\n    var xRangeMin = Number.MIN_VALUE,\r\n        xRangeMax = Number.MAX_VALUE,\r\n        xRangeUnit = HJN.detailRangeUnit; // #61\r\n    if (HJN.chartD === this) { // 詳細（下段グラフ）のとき画面で指定された期間を設定する // ミリ秒\r\n        if ((n === HJN.ETPS.N || n === HJN.EMPS.N || n === HJN.EAPS.N)  // #57\r\n                && xRangeUnit < __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"d\" /* Tat */].CYCLE){ // #61\r\n            var dt = Math.floor(+HJN.detailDateTime / __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"d\" /* Tat */].CYCLE) * __WEBPACK_IMPORTED_MODULE_4__timeSeries_timeSeries_js__[\"d\" /* Tat */].CYCLE;\r\n            xRangeMin = dt - HJN.detailRangeMinus * HJN.detailRangeUnit;\r\n            xRangeMax = dt + HJN.detailRangePlus * HJN.detailRangeUnit;\r\n        } else { // undefined, HJN.CTPS.N, HJN.CONC.N, HJN.STAT.N, HJN.ETAT.N\r\n            var dt = Math.floor(+HJN.detailDateTime / xRangeUnit) * xRangeUnit; // #61\r\n            xRangeMin = dt - HJN.detailRangeMinus * HJN.detailRangeUnit; // #48\r\n            xRangeMax = dt + HJN.detailRangePlus * HJN.detailRangeUnit; // #48\r\n        }\r\n    }\r\n\r\n    // dygraph用arrayを空にする\r\n    this.dyData = [];\r\n\r\n    // 指定範囲の先頭が秒単位の端数のとき、dygraph用arrayに、先頭ワークデータを登録する #3\r\n    var xVal = Math.floor(xRangeMin / 1000) * 1000;\r\n    if (Number.MIN_VALUE < xRangeMin && xRangeMin !== xVal) { // 範囲指定（＝下段）\r\n        var firstRow = [ xRangeMin ]; // 先頭はx（時刻）\r\n        xy.forEach(function (xyData, i) {\r\n            // 秒間最大値系のyは最大値or０を、他はnullを設定する\r\n            var yVal = null;\r\n            if (this.SERIESES[i].key === HJN.CTPS.key) {\r\n                // 始端時刻を含む秒の値（最大値）を、始端時刻にセットする\r\n                var j = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"l\" /* binarySearch */](xVal, xyData, function (e) {\r\n                    return e.x;\r\n                });\r\n                yVal = (0 <= j) ? xyData[j].y : 0;\r\n            }\r\n            firstRow.push(yVal);\r\n        }, this);\r\n        this.dyData.push(firstRow);\r\n    }\r\n\r\n    // dygraph用arrayに表示データを登録する\r\n    while (xy.some(function (e, i) {\r\n        return (idx[i] < e.length);\r\n    })) {\r\n        // dygraph１レコードワーク配列 を空にする\r\n        row = [];\r\n        // dygraph１レコードワーク配列 の先頭に、次に追加するｘ（時刻＝各ｘｙ処理位置が持つｘの最小値）を設定する\r\n        xy.forEach(function (e, i) {\r\n            x[i] = (idx[i] < e.length) ? e[idx[i]].x : Number.MAX_VALUE;\r\n        });\r\n        minX = x[0]; // minX = Math.min.apply(null, x);\r\n        for (i = 1; i < x.length; i++) {\r\n            if (x[i] < minX)\r\n                minX = x[i];\r\n        }\r\n        row.push(minX); // ミリ秒\r\n        // dygraph１レコードワーク配列 の２番目以降に、各ｘｙのｘを設定する\r\n        xy.forEach(function (e, i) {\r\n            if (e.length <= idx[i]) {\r\n                row.push(null); // 末尾を過ぎたｘｙのyはnull\r\n            } else if (e[idx[i]].x === minX) {\r\n                // ｘｙのｘ(e[idx[i]].x)が、出力するｘ(minX)と同じとき、ｙを設定し、ｘｙの処理位置(idx[i])を次に進める\r\n                row.push(e[idx[i]].y);\r\n                idx[i]++;\r\n            } else {\r\n                row.push(null); // xと ｘｙのｘが異なる場合 null\r\n            }\r\n        });\r\n        // dygraph用arrayに、編集したdygraph１レコードワーク配列 を登録する\r\n        if (xRangeMin <= minX && minX <= xRangeMax) {\r\n            this.dyData.push(row);\r\n        }\r\n    }\r\n    // 指定範囲の先頭が秒単位の端数のとき、dygraph用arrayに、末尾ワークデータを登録する #3\r\n    if (xRangeMax < Number.MAX_VALUE && // 範囲指定（＝下段）\r\n    xRangeMax !== Math.floor(xRangeMax / 1000) * 1000) {\r\n        var lastRow = [ xRangeMax ]; // 先頭はx（時刻）\r\n        xy.forEach(function (e, i) { // 秒間最大値系のyは始端：最大値、終端：０を、他はnullを設定\r\n            lastRow.push((this.SERIESES[i].key === HJN.CTPS.key) ? 0 : null);\r\n        }, this);\r\n        this.dyData.push(lastRow);\r\n    }\r\n\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[7:dygraph data created] \"\r\n            + this.dyData.length + \" rows\", \"calc\");\r\n\r\n    // グラフの設定\r\n    var visibility = [];\r\n    if (this.isVisiblity) {\r\n        // visiblity指定できるとき画面の表示指定を取り込む\r\n        var inputs = document[this.chartIdName + \"_LegendForm\"];\r\n        for (i = 0; i < this.SERIESES.length; i++) {\r\n            visibility.push(inputs[this.SERIESES[i].key].checked);\r\n        }\r\n    } else {\r\n        // visiblity指定できないとき、デフォルト設定を取り込む\r\n        for (i = 0; i < this.SERIESES.length; i++) {\r\n            visibility.push(this.SERIESES[i].visiblity);\r\n        }\r\n    }\r\n\r\n    // グラフの作成\r\n    if (this.graph) {\r\n        // 既にグラフがあるときはデータのみ変更する（注：ここでdestroy()すると下段のpointClickCallback時にエラー）\r\n        this.graph.updateOptions( {\r\n            file : this.dyData\r\n        } );\r\n        this.graph.resetZoom(); // #51\r\n    } else {\r\n        // グラフが無いときは新規作成する\r\n        this.graph = new Dygraph(this.chartId, this.dyData, {\r\n            height : this.resize(),\r\n            labels : this.labels,\r\n            title : this === HJN.chart ? '' : '', // タイトル\r\n            titleHeight : 10, // タイトルの高さ＆フォントサイズ（デフォルト18px)\r\n            legend : 'always', // 'follow', //\r\n            showLabelsOnHighlight : false, // 効果不明\r\n            // labelsDiv : document.getElementById(HJN.chartName + 'Labels'), //\r\n            // ラベル表示先の変更\r\n            labelsSeparateLines : false,\r\n            // legendFormatter: this.legendFormatter, // コメントアウトでlegendが非表示\r\n            axes : {  // 軸の設定\r\n                x : { // X軸の設定\r\n                    axisLabelFormatter : xAxisLabelFormatter, // ラベル表示文字列編集関数\r\n                    axisLabelWidth : 100        // X軸ラベルの表示幅（幅が不足すると文字が切れる）\r\n                },\r\n                y : { // Y2（左）軸の設定\r\n                    independentTicks : true,    // 目盛合わせ（falseはY2軸に合わせる）\r\n                    axisLabelWidth : 40,        // ラベル表示幅\r\n                    // axisLineColor : 'rgb(0,0,0)',// 軸の色\r\n                    // axisLabelFontSize : 14, // ラベルのフォントサイズ(デフォルト:14)\r\n                    logscale : false            // 対数軸\r\n                },\r\n                y2 : { // Y2（右）軸の設定\r\n                    axisLabelFormatter : yAxisLabelFormatter, // ラベル表示文字列編集関数\r\n                    independentTicks : true,    // 目盛合わせ（falseはY1軸に合わせる）\r\n                    axisLabelWidth : 65,        // ラベル表示幅\r\n                    drawGrid : true,            // 横罫線\r\n                    gridLinePattern : [ 1, 2 ], // 罫線形状（破線）\r\n                    logscale : false            // 対数軸\r\n                }\r\n            },\r\n            includeZero : true,\r\n            // axisLabelFontSize: 10,\r\n            axisLineColor : 'rgba(0, 0, 0, 0.2)',\r\n            gridLineColor : 'rgba(0, 0, 0, 0.2)',\r\n            strokeWidth : 2,\r\n            pointSize : 3,\r\n            ylabel: 'Number of transactions',\r\n            y2label : 'Sec', // this === HJN.chart ? '' : 'Sec',\r\n            // rollPeriod: 7,\r\n            // errorBars: true,\r\n            // showRangeSelector: true\r\n            // drawPointCallback: drawPointCallback,\r\n            drawHighlightPointCallback : drawHighlightPointCallback,\r\n            highlightCircleSize : 3,\r\n            highlightCallback : highlightCallback,\r\n            pointClickCallback : pointClickCallback,\r\n            annotationClickHandler : annotationClickHandler,\r\n            annotationDblClickHandler : annotationDblClickHandler,\r\n            // clickCallback: clickCallback,\r\n            drawCallback : Graph.DrawCallback, // #50 #51\r\n            highlightSeriesOpts : {\r\n            // strokeWidth: 3,\r\n            // strokeBorderWidth: 1,\r\n            // highlightCircleSize: 5\r\n            },\r\n            series : this.dySeries,\r\n            labelsKMB : true,\r\n            visibility : visibility,\r\n            interactionModel: { // #22\r\n                mousedown: Dygraph.defaultInteractionModel.mousedown,\r\n                willDestroyContextMyself: true,\r\n                // touchstart: function(){}, 空functionと未登録は同じ効果\r\n                // touchmove: function(){},\r\n                // touchend: function(){},\r\n                dblclick: Dygraph.defaultInteractionModel.dblclick\r\n            },\r\n            animatedZooms : true, // ズームするときのアニメーション有無（デフォルト:false）\r\n            connectSeparatedPoints : true\r\n        });\r\n        // dygraphイベント処理でHJJを取れるように（注：循環参照）\r\n        this.graph.HJN = this;\r\n        // スマフォ対応 #22\r\n        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"k\" /* TouchPanel */].DispatchEventTouchToMouse(this.graph.canvas_);\r\n        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"k\" /* TouchPanel */].DispatchEventTouchToMouse(this.graph.canvas_ctx_.canvas);\r\n    }\r\n    // zoom reset ボタン追加 #22\r\n    this.addIcon_ZoomReset();\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[8:dygraph showen] \", \"calc\");\r\n\r\n    // 初期表示の不活性グラフの設定\r\n    function xAxisLabelFormatter(d, gran, opts) {\r\n        // return Dygraph.dateAxisLabelFormatter(new Date(d), gran, opts); #63\r\n        var isTop = (this.xAxisRange()[0] === d);\r\n        var format = \"\";\r\n        var diffTime = this.xAxisRange()[1] - this.xAxisRange()[0];\r\n        if (diffTime < 60000) { \r\n            format = isTop ? \"hh:mm:ss.ppp\" : \"ss.ppp\";\r\n        } else if (diffTime < 86400000) { // 1日未満\r\n            format = \"hh:mm:ss\";\r\n        } else if (diffTime < 31536000000) { // 365日未満\r\n            format = isTop ? \"yyyy/MM/dd\": \"MM/dd hh\";\r\n        } else { // 365日以上\r\n            format = \"yyyy/MM/dd\";\r\n        }\r\n        return __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](d,format,true);\r\n    }\r\n    function yAxisLabelFormatter(d, gran, opts) { // #63\r\n        var range = this.yAxisRanges()[1];\r\n        var format = \"\";\r\n        var diff = range[1] - range[0];\r\n        if (diff < 300000) { // 300秒未満\r\n            return \"\" + d / 1000;\r\n        } else if (diff < 86400000) { // 1日未満\r\n            return __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](d, \"hh:mm:ss\", true);\r\n        } else if (diff < 172800000) { // 2日未満\r\n            var hours = Math.ceil(d / 3600000) + \":\";\r\n            return hours + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](d, \"mm:ss\", true);\r\n        } else { // 2日以上\r\n            var days = Math.ceil(d / 86400000) + \" days+\";\r\n            var time = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](d, \" hh:mm:ss\", false);\r\n            return (d < 172800000) ? time : days; // 2日未満？\r\n        }\r\n    }\r\n\r\n    // 再描画する\r\n    this.showBalloon();\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[9:balloon showen] \", \"calc\");\r\n\r\n    // updateメソッド内部関数宣言\r\n    // 点がハイライトになったときの描画処理（内部関数宣言） g:{dygraph} HJN.chartD.graph\r\n    function drawHighlightPointCallback(g, name, ctx, cx, cy, color, r, idx) {\r\n        // file dropのとき、新グラフデータに更新後に、旧グラフのidx値が引き渡されたとき 処理しない #12\r\n        if (!g.rawData_ || g.rawData_.length - 1 < idx)\r\n            return;\r\n        var x = g.rawData_[idx][HJN.CONC.N]; // 選択されている点(時刻)のCONCのxの値（無いときundefined)\r\n        var eTat = HJN.chart.eTat;\r\n        var sTat = HJN.chart.sTat;\r\n        var n = 0;\r\n\r\n        // ETAT,STATのときlogレコードを表示する #28\r\n        if ((name === HJN.STAT.key || name === HJN.ETAT.key)\r\n                && typeof x != 'undefined') { // #41\r\n            // eTatの配列位置をを求める\r\n            if (name === HJN.ETAT.key) {\r\n                // ETATのとき、終了時刻(x)からeTatの配列位置(n)を検索する\r\n                n = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"l\" /* binarySearch */](x, eTat, \r\n                                    function (e) { return e.x; });\r\n            } else {\r\n                // STATのとき、開始時刻(x)からsTatの配列位置(sTatN)を検索し、sTatからeTatの配列位置を取得する\r\n                var sTatN = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"l\" /* binarySearch */](x, sTat, \r\n                                    function (e) { return e.x; });\r\n                n = sTat[sTatN].eTatIdx;\r\n            }\r\n            // ログデータを表示し、線を引く\r\n            if (0 <= n) {\r\n                var e = eTat[n];\r\n                // ログデータを表示する\r\n                document.getElementById(\"lineViewer\").innerHTML =\r\n                            this.HJN.fileParser.getRecordAsText(e); // #62\r\n                // 線を引く #30\r\n                drawTatLine(ctx, e.x, e.y, 2, color);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n\r\n        // CONCのとき同時処理の線を引く\r\n        if (name === HJN.CONC.key && typeof eTat.tatMap != 'undefined') { // #17\r\n            // #41\r\n            // 指定時刻に動いているeTatの一覧(trans)を取得する\r\n            var trans = eTat.tatMap.search(x, x, 1000); // #18\r\n            // 以前に選択した線を消す\r\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            // 同時処理の線を引く\r\n            if (0 <= i && 0 < trans.length) {\r\n                // TRANS分の線を引く\r\n                trans.forEach(function (e) {\r\n                    drawTatLine(ctx, e.x, e.y, 1, HJN.CONC.color);\r\n                });\r\n            }\r\n            ctx.stroke();\r\n        }\r\n\r\n        // 選択点の点と数値を表示する\r\n        var val = \"\";\r\n        var time = \"\";\r\n        if (0 <= idx) {\r\n            time = g.rawData_[idx][0]; // #60\r\n            val = name ? g.rawData_[idx][g.setIndexByName_[name]] : \"\";\r\n            // valが時間のとき、 時間表記に文字列編集する\r\n            if (name === HJN.STAT.key || name === HJN.ETAT.key \r\n                    || name === HJN.EMPS.key || name === HJN.EAPS.key) {\r\n                val = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](val);\r\n            }\r\n        }\r\n        drawPoint(ctx, cx, cy, r, color, val, time);\r\n        // 縦線を引く\r\n        drawLine(ctx, [ {\r\n            x : cx,\r\n            y : 0\r\n        }, {\r\n            x : cx,\r\n            y : ctx.canvas.height\r\n        } ], 1, \"rgba(127,127,127,0.5)\", [ 1, 2 ]);\r\n\r\n        // drawHighlightPointCallback 内部関数宣言\r\n        // TAT線を表示する（内部関数）\r\n        function drawTatLine(ctx, x, y, heigth, color) {\r\n            // isXend指定の始点(false)／終点（true)に合わせて、線の座標を求める\r\n            var tXs = g.toDomXCoord(x - y), // ミリ秒\r\n            tXe = g.toDomXCoord(x), // ミリ秒\r\n            tY = g.toDomYCoord(y, 1); // 第二軸:1\r\n            drawLine(ctx, [ {\r\n                x : tXs,\r\n                y : tY\r\n            }, {\r\n                x : tXe,\r\n                y : tY\r\n            } ], heigth, color);\r\n            drawPoint(ctx, tXs, tY, r, HJN.STAT.color);\r\n            drawPoint(ctx, tXe, tY, r, HJN.ETAT.color);\r\n        }\r\n\r\n        // 線を表示する（内部関数）\r\n        function drawLine(ctx, plots, r, color, lineDashSegments) {\r\n            ctx.beginPath();\r\n            ctx.lineWidth = r;\r\n            ctx.lineCap = \"round\";\r\n            ctx.strokeStyle = color;\r\n            if (lineDashSegments)\r\n                ctx.setLineDash(lineDashSegments); // lineDashは[num]\r\n            ctx.moveTo(plots[0].x, plots[0].y);\r\n            plots.forEach(function (p) {\r\n                ctx.lineTo(p.x, p.y);\r\n            });\r\n            ctx.stroke();\r\n        }\r\n\r\n        // 点を表示する（内部関数）\r\n        function drawPoint(ctx, cx, cy, r, color, val, time) {\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = color;\r\n            ctx.fillStyle = color;\r\n            ctx.arc(cx, cy, r, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            var text = \"\";\r\n            if (val || time) {\r\n                if (typeof(val) === \"number\") {\r\n                    text += Math.round(val * 10) / 10;\r\n                } else if (typeof(val) === \"string\") { // #60\r\n                    text += val;\r\n                }\r\n                if (val && time) text += \" \";\r\n                if (time) text += \"[\" + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](time, \"hh:mm:ss.ppp\", true) + \"]\"; // #60\r\n                ctx.beginPath();\r\n                ctx.fillStyle = color.replace(/\\,[\\s\\.0-9]*\\)/,\",1)\"); // #60\r\n                ctx.textAlign = \"left\"; // \"rigth\" \"center\" #60\r\n                ctx.fillText(text, cx, cy - 12);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 点がハイライトになったときの処理（内部関数宣言）\r\n    function highlightCallback(e, x, pts, row, seriesName) {\r\n        // マウスクリック用に座標をHJN.hoverXYに退避する\r\n        HJN.hoverXY = {\r\n            x : x,\r\n            pts : pts,\r\n            row : row,\r\n            seriesName : seriesName\r\n        };\r\n    }\r\n\r\n    // 点をクリックしたときの処理(内部関数宣言）\r\n    function pointClickCallback(event, p) {\r\n        if (!p.annotation)\r\n            HJN.Plot.PointClickCallback(p);\r\n    }\r\n\r\n    // アノテーション（グラフ中の吹出し）をクリックしたときの処理(内部関数宣言）\r\n    function annotationClickHandler() { // annotation, p, dygraph, event\r\n        HJN.Plot.PointClickCallback(arguments[1]);\r\n    }\r\n\r\n    // アノテーション（グラフ中の吹出し）をダブルクリックしたときの処理(内部関数宣言）\r\n    function annotationDblClickHandler() { // annotation, p, dygraph, event\r\n        // 指定ポイントを削除する\r\n        HJN.Plot.PointDblClickCallback(arguments[1]);\r\n    }\r\n\r\n    // グラフをクリックしたときの処理(内部関数宣言）\r\n    // function clickCallback(e, x, pts) {}\r\n};\r\n\r\n/**\r\n * dygraphのBalloonを再描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.showBalloon = function () {\r\n    \"use strict\";\r\n    if (this.cTps.length === 0)\r\n        return; // ctpsが空の時何もしない\r\n\r\n    var ann = {\r\n        series : \"\",\r\n        xval : 0,\r\n        shortText : \"\",\r\n        text : \"\"\r\n    }, anns = [];\r\n    // 表示時間帯を求める\r\n    var ctps = this.cTps, minX = ctps[0].x, maxX = ctps[ctps.length - 1].x;\r\n    // アノテーションをdygparhに追加する\r\n    HJN.Plot.List.forEach(function (e) {\r\n        if (minX <= e.x && e.x <= maxX) {\r\n            ann = {\r\n                series : HJN.seriesConfig[e.n].key,\r\n                xval : e.x, // ミリ秒\r\n                shortText : e.y,\r\n                text : e.label\r\n            };\r\n            anns.push(ann);\r\n            // 詳細Plot＆詳細グラフデータが無いとき、詳細Plot内のTPS Plotを追加する #7\r\n            if (\"tpsPlot\" in e) { // 詳細plotのとき\r\n                if (this.SERIESES.findIndex(function (s) {\r\n                    return s.N === e.n;\r\n                }) < 0) { // 詳細グラフデータが無いとき\r\n                    ann = {\r\n                        series : HJN.seriesConfig[e.tpsPlot.n].key,\r\n                        xval : e.tpsPlot.x, // ミリ秒\r\n                        shortText : e.tpsPlot.y,\r\n                        text : e.tpsPlot.label\r\n                    };\r\n                    anns.push(ann);\r\n                }\r\n            }\r\n        }\r\n    }, this);\r\n    // dygraphの残描画処理が完了してからアノテーションをセットする\r\n    this.graph.ready(function () {\r\n        this.setAnnotations(anns);\r\n    });\r\n};\r\n\r\n/**\r\n * dygraphのlegendを編集する(dygraph オプション登録用関数）\r\n * {@link http://dygraphs.com/options.html#legendFormatter}\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {ETAT}\r\n *            data [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]\r\n * @return {string} dygraphのlegendに表示する文字（HTML)\r\n */\r\nGraph.prototype.legendFormatter = function (data) {\r\n    \"use strict\";\r\n    // legend: 'always'指定のとき、マウスがグラフ外にあると dataに値が設定されていなことを考慮\r\n    var html = (typeof data.x === \"undefined\") ? '' : __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"d\" /* DateToString */](\r\n            new Date(data.xHTML), \"yyyy/MM/dd hh:mm:ss.ppp\");\r\n    html = '<label class=\"datetime\">' + html + '</label>';\r\n    data.series\r\n            .forEach(function (series) {\r\n                if (!series.isVisible)\r\n                    return;\r\n                var val = (typeof series.yHTML === \"undefined\") ? \"\"\r\n                        : series.yHTML, text = '<label '\r\n                        + getStyle(series.label)\r\n                        + '\">'\r\n                        + \"&nbsp;\"\r\n                        + series.labelHTML\r\n                        + ':'\r\n                        + ('####' + val.replace(/\\.[0-9]*/, \"\")).slice(-4)\r\n                                .replace(/#/g, \"&nbsp;\") + '</label>';\r\n                html += series.isHighlighted ? '<b>' + text + '</b>' : text;\r\n                html += '&nbsp;';\r\n            });\r\n    return html;\r\n    // keyに設定された色指定するstyle文字列を取得する（legendFormatter内部関数宣言）\r\n    function getStyle(key) {\r\n        var i = HJN.seriesConfig.findIndex(function (e) {\r\n            return (e.key === key);\r\n        });\r\n        return 'style=\"background:' + HJN.seriesConfig[i].color + ';';\r\n    }\r\n};\r\n\r\n\r\n\r\n/**\r\n * メニュー機能：CSVデータファイルを開く\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {evt}\r\n *            evt ファイルオープンイペント\r\n */\r\nGraph.prototype.menuOpenCsv = function (evt) {\r\n    \"use strict\";\r\n    var file_list = evt.target.files;\r\n    // 指定されたファイルを処理する\r\n    HJN.init.FileReader(file_list);\r\n};\r\n\r\n/**\r\n * メニュー機能：画面設定をJSON形式のセーブファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuSaveConfig = function (menuId, fileName) {\r\n    \"use strict\";\r\n    // plotsをjsonに変換する\r\n    var save = {\r\n        \"HJN.Plot.List\" : HJN.Plot.List,\r\n        \"HJN.chart.fileParser\" : HJN.chart.fileParser._config_File.__config,\r\n        \"HJN.chartD.fileParser\" : HJN.chartD.fileParser._config_File.__config\r\n    };\r\n    var json = JSON.stringify(save, null, 4);\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(this.menuBuffToBlob(json), menuId, fileName);\r\n};\r\n/**\r\n * メニュー機能：JSON形式の画面設定ファイルをロードし画面表示に反映する TODO\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ？\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名 ？\r\n */\r\nGraph.prototype.menuLoadConfig = function (evt) { // #10\r\n    \"use strict\";\r\n    // 指定されたファイルを開く\r\n    var files = evt.target.files;\r\n    for (var i = 0; i < files.length; i++) { // データを順番に取得する\r\n        try {\r\n            // ファイルを取得する\r\n            var file = files[i];\r\n            // ログ出力用にファイル名（サイズ）を編集する\r\n            if (10000 < file.size) {\r\n                var msg = \"Too large(>10KB) \" + file.name + \" [\" + file.size\r\n                        + \"byte]\";\r\n                __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowText([ \"<mark>\" + msg + \"</mark>\" ]);\r\n                return;\r\n            }\r\n            // ファイルの読み込みに成功したら、その内容をドロップエリアに追記して表示する\r\n            var reader = new FileReader();\r\n            reader.onloadend = funcOnloadend.bind(this, files[i], i);\r\n            // ファイルにArrayBufferで参照を取得する（onloadendイベントを起こす）\r\n            reader.readAsArrayBuffer(files[i]);\r\n        } catch (e) {\r\n            // 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n            var msg = \"The \" + i + \"th dropped object is not a file\";\r\n            __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowText([ \"<mark>\" + msg + \"</mark>\" ]);\r\n            console.error(\"[%o]%o\", msg, e);\r\n        }\r\n    }\r\n\r\n    // 内部関数：ファイルを読み込み後の処理（指定ファイルを読み込んだ後に呼び出される）\r\n    function funcOnloadend(file, i, evt) {\r\n        if (evt.target.readyState === FileReader.DONE) {\r\n            // ファイルからjsonを読み込む\r\n            var filesArrayBuffer = evt.target.result;\r\n            var buf = new Uint8Array(filesArrayBuffer);\r\n            var json = String.fromCharCode.apply(null, buf);\r\n            alert(json);\r\n            var jsonObj = JSON.parse(json);\r\n\r\n            // jsonからHJN.chartD.fileParserに登録されているConfig の定義を作成する\r\n            var conf = jsonObj[\"HJN.chart.fileParser\"];\r\n            HJN.chart.fileParser._config_File.__config = conf;\r\n            var confD = jsonObj[\"HJN.chartD.fileParser\"];\r\n            HJN.chartD.fileParser._config_File.__config = confD;\r\n\r\n            // jsonからHJN.Plot.Listを作成する\r\n            var tmpPlots = jsonObj[\"HJN.Plot.List\"];\r\n            var plots = [];\r\n            // フォーマットに合致する項目のみ抽出する\r\n            if (isSameType([], tmpPlots)) { // 最上位が配列\r\n                tmpPlots.forEach(function (e) { // 2層目がオブジェクト\r\n                    if (isSameType(0, e.x))\r\n                        plots.push(e);\r\n                });\r\n            }\r\n            if (0 < plots.length) {\r\n                HJN.Plot.List = plots;\r\n            }\r\n            HJN.Plot.Render();\r\n            // グラフ内の吹き出しを再表示する\r\n            HJN.Plot.ShowBalloon();\r\n\r\n            // 型判定\r\n            function isSameType(sample, obj) {\r\n                var clas0 = Object.prototype.toString.call(sample);\r\n                var clas1 = Object.prototype.toString.call(obj);\r\n                return clas0 === clas1;\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * メニュー機能：メニューで指定されたフィルタの条件で再描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuFilterApply = function () { // #34\r\n    \"use strict\";\r\n    if (HJN.files && HJN.files.length === 0) {\r\n        // 自動生成データのグラフを表示しているとき\r\n        HJN.init.ChartShow(HJN.chart.eTatOriginal)\r\n    } else {\r\n        // ファイル指定のグラフを表示しているとき\r\n        HJN.init.FileReader(HJN.files);\r\n    }\r\n};\r\n/**\r\n * メニュー機能：フィルタ条件を初期値にし、再描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuFilterClear = function () { // #34\r\n    \"use strict\";\r\n    // メニュー画面おフィルタ条件に、初期値を設定する\r\n    setText(\"Filter.F_TIME_FROM\", null);\r\n    setText(\"Filter.F_TIME_FROM\", null);\r\n    setText(\"Filter.F_TIME_TO\", null);\r\n    setText(\"Filter.F_TAT_FROM\", 0);\r\n    setText(\"Filter.F_TAT_TO\", null);\r\n    setSelector(\"Filter.F_TEXT_NON\");\r\n    setText(\"Filter.F_TEXT_LEN\", null);\r\n    setText(\"Filter.F_TEXT_POS\", 1);\r\n    setText(\"Filter.F_TEXT_COL\", 3);\r\n    setText(\"Filter.F_TEXT_REG\", null);\r\n\r\n    function setText(id, val) {\r\n        document.getElementById(id).value = val;\r\n        document.getElementById(id).onchange();\r\n    }\r\n    function setSelector(id) {\r\n        document.getElementById(id).checked = true;\r\n        document.getElementById(id).onchange();\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー機能：シミュレータ 指定JSONでシミュレートする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuSimulatorSimulate = function () { // #53\r\n    \"use strict\";\r\n    // グラフを再生成する\r\n    var json = document.getElementById(\"SimulatorEditor\").value;\r\n    HJN.files = []; // #61\r\n    HJN.Plot.List = [];\r\n    Object(__WEBPACK_IMPORTED_MODULE_3__tatLogDiver_Init_js__[\"a\" /* CreateSampleTatLogAndChartShow */])(json);\r\n\r\n};\r\n/**\r\n * メニュー機能：シミュレータ JSON入力エリアを広げる\r\n * \r\n */\r\nGraph.prototype.menuSimulatorEditor = function () { // #53\r\n    \"use strict\";\r\n    var divSimulator = document.getElementById(\"Simulator\");\r\n    var divSimulatorEditor = document.getElementById(\"SimulatorEditor\");\r\n    if (divSimulator.style.height === \"100%\") { // #60\r\n        // 開いているとき、textareaの親を閉じる\r\n        divSimulator.style.height = \"0\";\r\n        divSimulator.style.width = \"190px\";\r\n    } else{ // 閉じているとき\r\n        // textareaを一度閉じる（textareaが大きいとき親が大きくなりスクロールが出るため）\r\n        divSimulatorEditor.style.height = \"0\";\r\n        // textareaの親を開く\r\n        divSimulator.style.height = \"100%\";\r\n        divSimulator.style.width = \"70%\";\r\n        divSimulatorEditor.style.height = (divSimulator.scrollHeight - 10) + \"px\";\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * メニュー機能：canvas画像をファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadImg = function (menuId, fileName) {\r\n    \"use strict\";\r\n    var type = 'image/png';\r\n    // canvas から DataURL で画像を出力\r\n    var canvas = this.chartId.getElementsByTagName('canvas')[0], dataurl = canvas\r\n            .toDataURL(type);\r\n    // DataURL のデータ部分を抜き出し、Base64からバイナリに変換\r\n    var bin = atob(dataurl.split(',')[1]);\r\n    // Uint8Array ビューに 1 バイトずつ値を埋める\r\n    var buffer = new Uint8Array(bin.length);\r\n    for (var i = 0; i < bin.length; i++) {\r\n        buffer[i] = bin.charCodeAt(i);\r\n    }\r\n    // Uint8Array ビューのバッファーを抜き出し、それを元に Blob を作る\r\n    var blob = new Blob([ buffer.buffer ], {\r\n        type : type\r\n    });\r\n    // var url = window.URL.createObjectURL(blob);\r\n\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(blob, menuId, fileName);\r\n};\r\n\r\n/**\r\n * メニュー機能：グラフ全データをCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadCsv = function (menuId, fileName) {\r\n    \"use strict\";\r\n    var bom = new Uint8Array([ 0xEF, 0xBB, 0xBF ]), // Excel対応UTF8のBOMコード指定\r\n    csv = this.labels.join(','); // csvヘッダ行の作成\r\n    this.dyData.forEach(function (e) {\r\n        csv += \"\\r\\n\" + e.join(',');\r\n    }); // csvデータ展開\r\n    var blob = new Blob([ bom, csv ], {\r\n        \"type\" : \"text/csv\"\r\n    }); // blob変換\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(blob, menuId, fileName);\r\n};\r\n\r\n/**\r\n * メニュー機能：グラフ全データの編集元に該当するTATログの該当行をCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadLog = function (menuId, fileName) {\r\n    \"use strict\";\r\n    var eTat = this.eTat;\r\n    if (0 < eTat.length) { // 出力対象データがあるとき\r\n        if (typeof eTat[0].pos === \"undefined\") { // 生成データのとき\r\n            // 生成データをCSVに編集する\r\n            var eTatCsv = \"\";\r\n            var delimiter = '\"';\r\n            var separator = delimiter + HJN.chart.fileParser.getValue(\"SEP\") + delimiter;\r\n            eTat.forEach(function (e) {\r\n                eTatCsv += delimiter + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](e.x, 'yyyy/MM/dd hh:mm:ss.ppp') + separator\r\n                        + e.y + separator + e.message + delimiter + '\\r\\n'; // #61\r\n            });\r\n            // ダウンロードする\r\n            this.menuDownloadBlob(this.menuBuffToBlob(eTatCsv), menuId,\r\n                    fileName);\r\n        } else { // ファイル読込のとき\r\n            // 出力データを元ファイルのpos順にソートする（改行コードのないファイル末尾レコートがある場合も最後に来るように） #45\r\n            eTat.sort(function (a, b) {\r\n                return a.pos - b.pos;\r\n            });\r\n            // 最大作業領域として元ファイルサイズの合計分のメモリを確保する #23\r\n            var maxSize = HJN.filesArrayBuffer.reduce(function (p, c) {\r\n                return p + c.byteLength + 2;\r\n            }, 0);\r\n            var buff = new Uint8Array(maxSize), offset = 0;\r\n            // ファイルの該当行を Uint8Arrayに登録する\r\n            eTat.forEach(function (e) {\r\n                buff.set(new Uint8Array(HJN.filesArrayBuffer[e.fileIdx], e.pos,\r\n                        Math.min(e.len + 2,\r\n                                HJN.filesArrayBuffer[e.fileIdx].byteLength\r\n                                        - e.pos)), offset);\r\n                offset += (e.len + 2);\r\n            });\r\n            // 未使用作業領域を削除する\r\n            var buff2 = new Uint8Array(buff.slice(0, offset));\r\n            // ダウンロードする\r\n            this.menuDownloadBlob(this.menuBuffToBlob(buff2), menuId, fileName);\r\n        }\r\n    } else { // 出力対象データがないとき\r\n        var str = \"No log in the time.\";\r\n        // ダウンロードする\r\n        this.menuDownloadBlob(this.menuBuffToBlob(str), menuId, fileName);\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー機能：plotsでconcが選択されているとき、同時処理に該当するTATログの該当行をCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadConc = function (menuId, fileName) {\r\n    \"use strict\";\r\n    var plot = HJN.Plot.List.find(function (e) {\r\n        return e.radio;\r\n    });\r\n    if (plot.n === HJN.CONC.N || plot.n === HJN.STAT.N || plot.n === HJN.ETAT.N) {\r\n        // CONC|STAT|ETATが選択されているとき\r\n        var trans = this.eTat.tatMap.search(plot.x); // #18\r\n        if (0 < trans.length) { // 出力テキストを編集する\r\n            if (typeof trans[0].pos === \"undefined\") {\r\n                // 初期表示データのとき、CSVを編集する\r\n                // 生成データをCSVに編集する\r\n                var csv = \"\";\r\n                trans.forEach(function (e) {\r\n                    csv += __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](e.x, \"yyyy/MM/dd hh:mm:ss.ppp\") + \",\"\r\n                            + e.y + \"\\r\\n\";\r\n                });\r\n                // ダウンロードする\r\n                this.menuDownloadBlob(this.menuBuffToBlob(csv), menuId,\r\n                        fileName);\r\n            } else {\r\n                // ファイル読み込みの時、対象レコードを表示する\r\n                // 出力データを元ファイルのpos順にソートする（改行コードのないファイル末尾レコートがある場合も最後に来るように） #45\r\n                trans.sort(function (a, b) {\r\n                    return a.pos - b.pos;\r\n                });\r\n                // 最大作業領域として元ファイルサイズの合計分のメモリを確保する #23\r\n                var maxSize = HJN.filesArrayBuffer.reduce(function (p, c) {\r\n                    return p + c.byteLength + 2;\r\n                }, 0);\r\n                var buff = new Uint8Array(maxSize), offset = 0;\r\n                // ファイルの該当行を Uint8Arrayに登録する\r\n                trans.forEach(function (e) {\r\n                    buff.set(new Uint8Array(HJN.filesArrayBuffer[e.fileIdx],\r\n                            e.pos, Math.min(e.len + 2,\r\n                                    HJN.filesArrayBuffer[e.fileIdx].byteLength\r\n                                            - e.pos)), offset);\r\n                    offset += (e.len + 2);\r\n                });\r\n                // 未使用作業領域を削除する\r\n                var buff2 = new Uint8Array(buff.slice(0, offset));\r\n                // ダウンロードする\r\n                this.menuDownloadBlob(this.menuBuffToBlob(buff2), menuId,\r\n                        fileName);\r\n            }\r\n        }\r\n\r\n    } else { // CONCが選択されていないとき\r\n        var msg = \"抽出対象データがありません。空データがダウンロードされます\\r\\n\"\r\n                + \"conc：多重度（詳細）の点を選択した状態で行ってください\";\r\n        alert(msg);\r\n        this.menuDownloadBlob(this.menuBuffToBlob(msg), menuId, fileName);\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー共通機能：BinaryString, UintXXArray, ArrayBuffer をBlobに変換する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Object}\r\n *            arrayBuffer 変換元\r\n * @param {Blob} -\r\n *            変換後\r\n */\r\nGraph.prototype.menuBuffToBlob = function (arrayBuffer) {\r\n    \"use strict\";\r\n    return new Blob([ arrayBuffer ], {\r\n        type : \"application/octet-stream\"\r\n    });\r\n};\r\n\r\n/**\r\n * メニュー共通機能：指定blobをファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Objcet}\r\n *            blob ダウンロードさせるblogデータ\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadBlob = function (blob, menuId, fileName) {\r\n    \"use strict\";\r\n    if (window.navigator.msSaveBlob) { // ie11以降のとき\r\n        window.navigator.msSaveBlob(blob, fileName);\r\n        // msSaveOrOpenBlobの場合はファイルを保存せずに開ける\r\n        window.navigator.msSaveOrOpenBlob(blob, fileName);\r\n    } else { // Chrome, FireFoxのとき\r\n        document.getElementById(menuId).href = window.URL.createObjectURL(blob);\r\n    }\r\n};\r\n\r\n/**\r\n * Zoomリセットアイコンを追加する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.addIcon_ZoomReset = function () {\r\n    \"use strict\";\r\n    var divChart = this.chartId; // document.getElementById(\"Icons\");\r\n    var idName = this.chartIdName + \"Zoom\";\r\n    var input = document.getElementById(idName);\r\n    if (input !== null) { // 既にある場合削除する\r\n        var div = input.parentElement;\r\n        div.parentElement.removeChild(div);\r\n    }\r\n\r\n    if (divChart) {\r\n        var div = document.createElement('div');\r\n        var htmlText = '<input id=\"' + idName + '\" type=\"buttom\" class=\"hjnBoxSwitch hjnResize\" '\r\n                                + 'onClick=\"HJN.' + this.chartIdName + '.graph.resetZoom()\">'\r\n                     + '<label for=\"' + idName + '\" class=\"hjnCtrlBox\"><span></span></label>';\r\n        div.innerHTML = htmlText;\r\n        divChart.insertBefore(div, divChart.firstChild);\r\n    }\r\n    \r\n    // divIcons.appendChild(div);\r\n\r\n    // div.id = id;\r\n    // div.className = \"menuBar\";\r\n    // div = element.parentElement;\r\n    /*\r\n     * var divIcons = document.getElementById(\"Icons\"); var idName =\r\n     * this.chartIdName + \"Zoom\"; if (divIcons) { var div =\r\n     * document.createElement('div'); var htmlText = '<input id=\"' + idName + '\"\r\n     * type=\"buttom\" class=\"hjnBoxSwitch hjnResize\" ' + 'onClick=\"HJN.' +\r\n     * this.chartIdName + '.graph.resetZoom()\">' + '<label for=\"' + idName + '\"\r\n     * class=\"hjnCtrlBox\"><span></span></label>'; div.innerHTML = htmlText;\r\n     * divIcons.appendChild(div); }\r\n     */\r\n\r\n};\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(16);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf timeSeries\r\n * @class MappedETat\r\n * @classdesc 期間指定eTat取得用Map\r\n *            <p>\r\n *            指定期間に動いているeTatの一覧を、高速に取得するマップ\r\n * @param {ETAT}\r\n *            eTat インデックスを追加するETAT\r\n * @example eTat.tatMap = new HJN_util.MappedETat(eTat); var trans =\r\n *          eTat.tatMap.search(x, x, 1000);\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #18\r\n    \"use strict\";\r\n    /** @static */\r\n    MappedETat.prototype = {\r\n            _abscissa: [],\r\n            _conf :[{ms:      10, step:5, label:\"0_10ms_\"},\r\n                    {ms:      50, step:2, label:\"1_50ms_\"},\r\n                    {ms:     100, step:5, label:\"2_100ms_\"},\r\n                    {ms:     500, step:2, label:\"3_500ms_\"},\r\n                    {ms:    1000, step:5, label:\"4_1sec_\"},\r\n                    {ms:    5000, step:4, label:\"5_5sec_\"},\r\n                    {ms:   20000, step:3, label:\"6_20sec_\"},\r\n                    {ms:   60000, step:5, label:\"7_1min_\"},\r\n                    {ms:  300000, step:4, label:\"8_5min_\"},\r\n                    {ms: 1200000, step:3, label:\"9_20min_\"},\r\n                    {ms: 3600000, step:6, label:\"10_1h_\"},\r\n                    {ms:21600000, step:4, label:\"11_6h_\"},\r\n                    {ms:Number.MAX_VALUE, step:1, label:\"12_overDay_\"}] // 最後はstep:１\r\n        };\r\n    /** @constructor */\r\n    function MappedETat(eTat){\r\n        if(!(this instanceof MappedETat)) return new MappedETat(eTat);\r\n        // MappedArrayを作成する\r\n        this._tatMap = new MappedArray(eTat, this._getKey, true);\r\n    }\r\n\r\n    /** @private */\r\n    MappedETat.prototype._row = function(label, step) {return label + step;};\r\n\r\n    /** @private */\r\n    // MapKey取得関数\r\n    MappedETat.prototype._getKey = function(e, i) {        // MapedMap用Key配列関数\r\n        var start = e.x - e.y,      // x,yはミリ秒\r\n            end = e.x,\r\n            _conf = MappedETat.prototype._conf,\r\n            _row = MappedETat.prototype._row,\r\n            term = _conf[0].ms,\r\n            rowLv = 0;\r\n        if(Math.ceil(end / term) - 1 === Math.floor(start / term)){ // 最小BOX\r\n            return [_row(_conf[0].label, 0),\r\n                    (Math.ceil(e.x / _conf[0].ms) - 1) * _conf[0].ms];\r\n        }\r\n        for (i = 1; i < _conf.length; i++) {                // 最下位から上に評価\r\n            term = _conf[i].ms;\r\n            if(Math.floor(end / term) === Math.floor(start / term) \r\n                    || end - start < term){                      // 上位BOXを起点\r\n                term = _conf[i-1].ms;   // ひとつ下位のBOX期間（下から評価したので二段下となることは無い\r\n                rowLv = Math.floor(end / term) - Math.floor(start / term);\r\n                return [_row(_conf[i-1].label, rowLv),\r\n                        (Math.ceil(e.x / _conf[i-1].ms) - 1) * _conf[i-1].ms];\r\n            }\r\n        }\r\n        return \"error\";\r\n    };\r\n\r\n    // static メンバーの設定\r\n    // _confから_abscissa(横軸）を生成する\r\n    var c = MappedETat.prototype._conf,\r\n        e2 = c[c.length - 2],\r\n        \r\n        e  = c[c.length - 1];\r\n    MappedETat.prototype._abscissa.push(\r\n            {label: MappedETat.prototype._row(e.label, e.step), ms: e.ms ,i: 1,\r\n                step: e.step, from: e2.ms * e2.step, to: e.ms} );   // 末尾を先頭に追加\r\n    for (var j = c.length - 1; 0 <= j; j--){    // 降順に追加\r\n        e = c[j];\r\n        for (var i = e.step; 0 < i; i--){ // #39\r\n            MappedETat.prototype._abscissa.push(\r\n                    {label: MappedETat.prototype._row(e.label, i), ms: e.ms, i: i, \r\n                                step: e.step, from: e.ms * i, to: e.ms * (i + 1)} );\r\n        }\r\n    }\r\n    MappedETat.prototype._abscissa.push( \r\n            {label: MappedETat.prototype._row(c[0].label, 0), ms: c[0].ms, i: 0,\r\n                step: 0, from: 0, to: c[0].ms} );   // 先頭を末尾に追加\r\n\r\n    \r\n    // public\r\n    /**\r\n     * 指定期間に動いているeTatを検索する\r\n     * \r\n     * @memberOf Util.MappedETat\r\n     * @parm {Number} from 指定期間(from)\r\n     * @parm {Number} [to=from] 指定期間(to)\r\n     * @parm {Number} [cap] cap件数となったら抽出を終了する（指定なしの時：全件）\r\n     * @return {ETAT} eTatArr 指定期間内のeTat配列\r\n     */\r\n    MappedETat.prototype.search = function (from, to, cap) {\r\n        to = to || from;    // to省略時は時刻指定(from=to)\r\n        cap = cap || Number.MAX_VALUE; // 指定なしの時：全件\r\n        var map = this._tatMap._map,\r\n            eTat = this._tatMap._arr,\r\n            abscissa = this._abscissa,\r\n            eTatArr = [],\r\n            start = 0,\r\n            end = 0;\r\n        // 検索対象のBOX一覧を生成する\r\n        abscissa.forEach(function(e){   // 存在しうる横軸のうち（tatが長時間の方から）\r\n            if (map[e.label]){          // 横軸が存在するものについて\r\n                var boxNum = e.i + Math.ceil(to / e.ms) - Math.floor(from / e.ms), // #45\r\n                    key = Math.floor(from / e.ms) * e.ms;\r\n                // 存在しうるKey値を終了時間が早い方から集計する\r\n                for(var j = 0; j <= boxNum; j++){\r\n                    // Key値が存在するものみが集計対象\r\n                    if (map[e.label][key]){ \r\n                        // かつ、Keyが持っている要素(eTatへの参照:k)が集計対象\r\n                        map[e.label][key].forEach(function(k){\r\n                            // かつ、from-toの期間に動いている要素(eTatのindex)が集計対象\r\n                            start = eTat[k].x - eTat[k].y;\r\n                            end   = eTat[k].x;\r\n                            if((start <= to) && (from <= end)){\r\n                                // かつ、戻り値の配列要素数がcap未満の場合が集計対象\r\n                                if(eTatArr.length < cap){\r\n                                    // 集計対象条件に合致する要素を、戻り値の配列に追加する\r\n                                    eTatArr = eTatArr.concat(eTat[k]);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    key += e.ms;    // 次のKey値\r\n                }\r\n            }\r\n        }, this);\r\n        return eTatArr;\r\n    };\r\n    \r\n    // newの戻り値\r\n    return MappedETat;\r\n}());\r\n\r\n\r\n/**\r\n * @memberOf Util\r\n * @class MappedArray\r\n * @classdesc 配列位置逆引きマップ\r\n *            <p>\r\n *            配列に格納されているオブジェクトのx値で、配列位置を高速検索するマップ<br>\r\n *            指定関数の戻り値(x)をキーとするマップを作成する\r\n *            <p>\r\n *            参考 {@link http://qiita.com/alucky0707/items/10052866719ba5c5f5d7}\r\n * \r\n * @param {Array}\r\n *            arr インデクスをつける対象の配列\r\n * @param {String|function}\r\n *            [getKey=\"\"] MappedArrayのKey値の取得方法\r\n *            <p>\r\n *            String指定のとき（デフォルト\"\"を含む）、配列要素の値(valueOf)\r\n *            <p>\r\n *            注： 0,00,\"0\"は同値、1,01,\"1\"は同値 Stringのとき、 配列要素が持つ指定要素の値\r\n *            <p>\r\n *            functionのとき、配列要素に指定関数を適用した戻り値\r\n *            <p>\r\n *            関数の引数：(配列要素オブジェクト、配列のインデックス、作成中のMappedArrayへの参照）\r\n * @param {Boolean}\r\n *            [isMappedMap] getKeyが2段Map用の配列を返却する\r\n * @return {object} Index arrに対するインデックス（連想配列名で検索）\r\n * @example _tatMap = new HJN_util.MappedArray(eTat, this._getKey, true);\r\n */\r\nvar MappedArray = (function() {    // #18\r\n    /** @constructor */\r\n    function MappedArray(arr, getKey, isMappedMap){\r\n        if(!(this instanceof MappedArray)) return new MappedArray();\r\n        this._arr = arr;\r\n        // getKeyによりIndex作成関数を設定する\r\n        if(!getKey || getKey === \"\"){\r\n            // getKey指定がないとき、配列の値\r\n            this._getKey = function(e){ return e.valueOf(); };\r\n        }else if ((typeof(getKey) === \"string\") && (getKey !== \"\")){    // #29\r\n            // getKeyが文字列のとき、配列内オブジェクトのgetKey要素の値\r\n            this._getKey = function(e){ return e[getKey]; };\r\n        }else if (typeof(getKey) === \"function\" ){  // #29\r\n            // getKeyが関数のとき、配列内オブジェクトに関数を適用した戻り値\r\n            this._getKey = getKey;\r\n        }else{  // 以外のときエラーログを出力し、getKey指定なしと同様、配列の値\r\n            console.error(\"MappedArrayの第二引数エラー：[ %o ]を無視します \",getKey);\r\n            this._getKey = function(e){ return e.valueOf(); };\r\n        }\r\n        // MappedArrayを作成する\r\n        if(!isMappedMap){\r\n            this._createMappedArray();          \r\n        }else{\r\n            this._createMappedMappedArray();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    MappedArray.prototype._createMappedArray = function() {\r\n        var key = \"\"; \r\n        this._map = this._arr.reduce(function(m, a, i) {\r\n            key = this._getKey.call(a, a, i, m);\r\n            m[key] = (m[key] || []).concat(i);\r\n            return m;\r\n        }, {});\r\n    };\r\n    /** @private */\r\n    MappedArray.prototype._createMappedMappedArray = function() {\r\n        var keys = [],\r\n            key = \"\",\r\n            mKey = \"\",\r\n            _getKey = this._getKey;\r\n        this._map = this._arr.reduce(function(m, a, i) {\r\n            keys = _getKey.call(a, a, i, m);\r\n            key = keys[1] || \"error\";\r\n            mKey = keys[0] || \"error\";\r\n            if(m[mKey] === undefined) m[mKey] = {};\r\n            m[mKey][key] = (m[mKey][key] || []).concat(i);\r\n            return m;\r\n        }, {});\r\n    };\r\n\r\n    // public\r\n    /**\r\n     * 値の存在チェック\r\n     * \r\n     * @memberOf Util.MappedArray\r\n     */\r\n    MappedArray.prototype.has = function (keyValue) {\r\n        return keyValue in this._map;\r\n    };\r\n    /**\r\n     * 該当位置を配列で返す\r\n     * \r\n     * @memberOf Util.MappedArray\r\n     */\r\n    MappedArray.prototype.indexes = function (keyValue) {\r\n        return this._map[keyValue] || [];\r\n    };\r\n    /**\r\n     * 該当する要素を配列で返す\r\n     * \r\n     * @memberOf Util.MappedArray\r\n     */\r\n    MappedArray.prototype.search = function (keyValue) {    \r\n        var arr = this._arr;\r\n        return this.indexes(keyValue).reduce(function(m, i) {\r\n            m.push(arr[i]);\r\n            return m;\r\n        }, []);\r\n    };\r\n    /**\r\n     * Array.prototype.indexOf() 同等\r\n     * \r\n     * @memberOf Util.MappedArray\r\n     */\r\n    MappedArray.prototype.indexOf = function (keyValue) {\r\n        var idxArr = this._map[keyValue],\r\n            i = idxArr ? idxArr.length : -1;\r\n        return (0 < i) ? idxArr[0] : -1;\r\n    };\r\n    /**\r\n     * Array.prototype.lastIndexOf() 同等\r\n     * \r\n     * @memberOf Util.MappedArray\r\n     */\r\n    MappedArray.prototype.lastIndexOf = function (keyValue) {\r\n        var idxArr = this._map[keyValue],\r\n            i = idxArr ? idxArr.length : -1;\r\n        return (0 < i) ? idxArr[i-1] : -1;\r\n    };\r\n    \r\n    \r\n    return MappedArray;\r\n}());\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ETat;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__timeSeries_MappedETat_js__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_Cash_js__ = __webpack_require__(10);\n\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class ETat\r\n * @extends Array\r\n * @classdesc eTat管理クラス、Arrayのメソッドを継承\r\n * @param {Array}\r\n *            [that] ETAT構造の配列\r\n */\r\nfunction ETat(that) {\r\n    /** @private */\r\n    // cTpsのxからindexを引くMapを作成する #18\r\n    that.tatMap = new __WEBPACK_IMPORTED_MODULE_0__timeSeries_MappedETat_js__[\"a\" /* default */](that);\r\n    // キャッシュを作成する\r\n    that.cash = Object(__WEBPACK_IMPORTED_MODULE_1__timeSeries_Cash_js__[\"a\" /* default */])();\r\n\r\n    /**\r\n     * 指定期間のeTatを取得する<br>\r\n     * 性能対策としてキャッシュを持っている\r\n     * \r\n     * @memberof TimeSeries.ETat\r\n     * @param {Number}\r\n     *            [detailDateTime] 期間の基準時刻(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangeMinus] 抽出開始時刻を求める基準時刻から引く時間(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangePlus] 抽出終了時刻を求める基準時刻に足す時間(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangeUnit] 抽出開始終了時刻を丸める時間の単位(ミリ秒)\r\n     * @return {ETAT} 指定期間のETAT配列\r\n     */\r\n    that.sliceByRangeUnit = function (detailDateTime, detailRangeMinus, detailRangePlus, detailRangeUnit){\r\n        var rangeUnit = detailRangeUnit || TimeSeries.Tat.CYCLE;\r\n        var dt = Math.floor(detailDateTime / rangeUnit) * rangeUnit; // 中央時刻(ミリ秒)\r\n        var from = dt - detailRangeMinus * rangeUnit;  // #48\r\n        var to = dt + detailRangePlus  * rangeUnit;  // 幅（ミリ秒）\r\n        var eTatDetail = [{x: 0, y: 0.001, sTatIdx: 0}];    // tatMapが無い場合の返却値\r\n        if (this.tatMap){ // #18\r\n            // eTatDetailがレンジキャッシュにあるか確認する #30\r\n            eTatDetail = this.cash.getRangedCash(from, to);\r\n            if(eTatDetail === undefined){\r\n                // キャッシュヒットしないとき、eTatDetailを抽出し、キャッシュにセットする\r\n                eTatDetail = this.tatMap.search(from,to);\r\n                this.cash.setRangedCash(eTatDetail, from, to);\r\n            }\r\n        }\r\n        return eTatDetail;\r\n    }\r\n\r\n    return that\r\n}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf timeSeries\r\n * @class Cash\r\n * @classdesc キャッシュ\r\n *            <p>\r\n *            キャッシュを保持させるオブジェクト\r\n * @param {Number}\r\n *            [size=10] キャッシュ最大件数（未対応機能、設定は無視される）\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() {\r\n    /** constructor */\r\n    function Cash(size){\r\n        size = size || 10;  // TODO 未使用\r\n        if(!(this instanceof Cash)) return new Cash(size);\r\n        // インスタンス変数\r\n        this._cash = {};    // キャッシュ {data:, count:, lastTime:}\r\n        this._ranges = [];  // RangedCash用 {key: ,from: , to:, }\r\n        this._size = size;  // キャッシュ最大件数\r\n    }\r\n    \r\n    /* method */\r\n    /**\r\n     * 第一引数のargumentsを配列に変換する<br>\r\n     * （注：引数が１つ以上あることを前提）\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            args 引数一覧（arguments）\r\n     * @return {Array} 引数の配列\r\n     */\r\n    Cash._arg2arr = function(args) {\r\n            return args.length === 1 ? [args[0]] : Array.apply(null, args);\r\n        };\r\n    /**\r\n     * cash判定Keyを取得する<br>\r\n     * （注：引数を'.'でつないだ文字列をkeyとするので、関数名長の上限を超える大きな配列は不可）\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            args 引数一覧（argumentsオブジェクト）\r\n     * @return {String} キャッシュキー用の文字列\r\n     */\r\n    Cash._getKey = function(args) {\r\n            var argsArr = this._arg2arr(args);\r\n            return argsArr.reduce(function(a,b){return a+'.'+b; });\r\n        };\r\n        \r\n    /* private */\r\n\r\n    /* public */\r\n    /**\r\n     * cashオブジェクトを、cashが無いときはundefinedを返却する<br>\r\n     * cashヒットした場合、cashの使用回数をカウントアップする\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            arguments 引数からキー文字列を定める\r\n     * @return {Number|undefined} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.getCash = function () {\r\n            if (arguments.length < 1) return undefined;\r\n            var args = Cash._arg2arr(arguments),\r\n                key = Cash._getKey(args);\r\n            if (key in this._cash){\r\n                var cash = this._cash[key];\r\n                cash.lastTime = new Date();\r\n                cash.count++;\r\n                return cash.data;\r\n            }else{\r\n                return undefined;\r\n            }\r\n        };\r\n    /**\r\n     * オブジェクトをcashする\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            cashVal キャッシュするオブジェクト\r\n     * @param {Object}\r\n     *            arguments 第二引数以降の、引数からキー文字列を定める\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.setCash = function () {\r\n            if (arguments.length < 2) return undefined;\r\n            var cashVal = arguments[0],\r\n                args = Cash._arg2arr(arguments).slice(1, arguments.length),\r\n                key = Cash._getKey(args);\r\n            this._cash[key] = {data: cashVal, count: 0, lastTime:new Date()};\r\n            return cashVal;\r\n        };\r\n\r\n    /**\r\n     * レンジキー(form,to)範囲内でキーマッチするcashを、cashが無いときはundefinedを返却する<br>\r\n     * キーは大小比較できる数値であることが前提\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            from 抽出するキャッシュキー最小値\r\n     * @param {Number}\r\n     *            to 抽出するキャッシュキーの最大値\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.getRangedCash = function (from, to) {\r\n            var range = this._ranges.find(function(e){\r\n                    return (e.from <= from && to <= e.to);\r\n                });\r\n            return (range !== undefined) ? this.getCash(range.from,range.to) : undefined;\r\n        };\r\n    /**\r\n     * レンジキー(from,to)指定でキャッシュする<br>\r\n     * キーは大小比較できること（通常、数値）、from-to期間内の既存のキャッシュは削除される\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            cashVal キャッシュするオブジェクト\r\n     * @param {Number}\r\n     *            from 抽出するキャッシュキー最小値\r\n     * @param {Number}\r\n     *            to 抽出するキャッシュキーの最大値\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.setRangedCash = function (cashVal, from, to) {\r\n            if (arguments.length < 3) return undefined;\r\n            // 登録キー範囲に包含される既存キャッシュを削除する\r\n            var count = 0;\r\n            this._ranges = this._ranges.filter(function(e){\r\n                    if (from <= e.from && e.to <= to){\r\n                        // 登録キャッシュ範囲内のキャッシュを削除する\r\n                        count += this._cash[e.key].count;   // 削除分のカウンタ合算\r\n                        delete this._cash[e.key];\r\n                        return false;\r\n                    }else{  // 登録キャッシュの範囲外の一覧を返却する\r\n                        return true;\r\n                    }\r\n                }, this);\r\n            // 引数をキャッシュに登録する\r\n            var key = Cash._getKey([from, to]);\r\n            this._ranges.push( {from: from, to: to, key: key} );\r\n            this.setCash(cashVal, from, to);\r\n            this._cash[key].count= count + 1;   // 再作成時はカウンタ合算値\r\n            return cashVal;\r\n        };\r\n\r\n    // newの戻り値\r\n    return Cash;\r\n}());\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__simulator_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util_js__ = __webpack_require__(0);\n\r\n\r\n\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualSystem\r\n * @classdesc 仮想システム\r\n *            <p>\r\n *            Web3層(Web-AP-DB)をシミュレートしたWebのTATログ生成する\r\n *            <p>\r\n *            Webサーバ<br>\r\n *            最大スレッド数： Apache 2.4 [MaxClients = 1024]<br>\r\n *            JBossトランザクションタイムアウト [default-timeout = 300 秒]<br>\r\n *            キュー長 ： Apache 2.4 ListenBackLog (511) + Linux\r\n *            tcp_max_syn_backlog(769=1024*0.75+1)、タイムアウトなし<br>\r\n *            APサーバ<br>\r\n *            最大スレッド数(maxThreads)<br>\r\n *            JBossトランザクションタイムアウト [default-timeout=300 秒]<br>\r\n *            DBサーバ 最大コネクション数(max_connections)\r\n * \r\n * @param {Number}\r\n *            [start = 1970/01/02 00:00:00)] シミュレート開始時刻（UNIX日付（ミリ秒））\r\n * @param {Number}\r\n *            [end = startの24時間後] シミュレート終了時刻（UNIX日付（ミリ秒））\r\n * @param {String}\r\n *            [resourcesJson] リソース指定JSONテキスト\r\n * @param {Boolean}\r\n *            [log=false] 詳細ログ出力有無\r\n * @example sim = simulator.VirtualSystem()\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #53　\r\n    \"use strict\";\r\n    /** @constructor */\r\n    function VirtualSystem(start, end, resourcesJson, log){\r\n        if(!(this instanceof VirtualSystem)){\r\n            return new VirtualSystem(start, end, resourcesJson, log);\r\n        }\r\n        if (!resourcesJson) {\r\n            var jsonText =  '['\r\n                +   '{\"type\" :\"WEB\",\"thread\":1024,\"timeout\":300000, \"q\":1280, \"qWait\":0},'\r\n                +   '{\"type\" :\"AP\", \"thread\":20,  \"timeout\":300000, \"q\":1280, \"qWait\":0},'\r\n                +   '{\"type\" :\"DB\", \"thread\":2,   \"timeout\": 10000, \"q\":1000, \"qWait\":10000}'\r\n                + ']';\r\n            resourcesJson = JSON.parse(jsonText);\r\n        }\r\n        this.eTat = []; // シミュレートにより生成するTATログ出力先\r\n        var _resources = resourcesJson;\r\n        this._log = log ? log : false; // #53\r\n        this._start = +start || new Date(1970, 1, 2);   // シミュレート開始時刻\r\n        this._end = end || this._start + 24*60*60*1000; // シミュレート終了時刻（デフォルト：24時間後)\r\n        this._simulator = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"e\" /* Heap */](                // イベント予約スケジュール（ヒープ）\r\n                function(obj){ return obj.getTime(); }, // プライオリティの判定\r\n                function(obj){ return obj; });  // 削除対象の判定 #61\r\n        this._now = 0; // シミュレーション時の現在時刻\r\n        // リソースを設定する\r\n        this._resources = {}\r\n        for (var i = 0; i < _resources.length; i++) {\r\n            var e = _resources[i];\r\n            e.log = e.log ? e.log : this._log; // #53\r\n            this._resources[e.type] = Object(__WEBPACK_IMPORTED_MODULE_0__simulator_js__[\"c\" /* VirtualResource */])(this, // #61\r\n                    e.type, e.thread, e.timeout, e.q, e.qWait, e.log);\r\n        };\r\n        VirtualSystem.debug = this; // ★\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * 仮想クライアントをスケジューラに登録する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {String}\r\n     *            [userName = \"Default_\"] ログに出力するユーザ名\r\n     * @param {String}\r\n     *            [message = \"\"] ログの末尾に出力するデータ\r\n     * @param {Number}\r\n     *            [num = 3] 期間内に生成する仮想クライアントの数\r\n     * @param {Number}\r\n     *            [start = Util.S2D(\"1970/01/02 00:00:00\")]\r\n     *            仮想クライアント生成開始時刻（UNIX時刻の数値、ミリ秒）\r\n     * @param {Number}\r\n     *            [end = startの0.1秒後] 仮想アプリケーション強制終了時刻（UNIX時刻の数値、ミリ秒）\r\n     * @param {Object}\r\n     *            model 仮想クライアントが実行する取引モデル\r\n     */\r\n    VirtualSystem.prototype.setClients = function(userName, message, num, start, end, model) {\r\n        userName = userName || \"Default_\";\r\n        message = message || \"\";\r\n        num = (typeof(num) === \"number\") ? num : 1; // #61\r\n        start = +start || __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"i\" /* S2D */](\"1970/01/02 00:00:00\");\r\n        end = +end || start + 100;\r\n        // baseModelが指定されているとき、modelに展開する\r\n        if (model.baseModel){\r\n            model = VirtualSystem.getModel(\r\n                model.baseModel.holds, model.baseModel.tatMin, model.baseModel.tat,\r\n                model.sequence, model.times, model.thinkTimeMin, model.thinkTime);\r\n        }\r\n        // modelにmessageを設定する\r\n        if (typeof(model.message) === \"string\") {\r\n            model.message += message;\r\n        } else {\r\n            model.message = message;\r\n        }\r\n        // 仮想APを登録する\r\n        var checkStart = start;\r\n        var r = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"h\" /* Random */]((end - start) / num);\r\n        var t = start;\r\n        for (var i = 0; i < num; i++) {\r\n            // 仮想APを作成する\r\n            var vApp = Object(__WEBPACK_IMPORTED_MODULE_0__simulator_js__[\"b\" /* VirtualApp */])(userName + i, model);\r\n            // 仮想APに開始時刻（指数分布）を設定し、登録する\r\n            t += Math.round(r.exponential());\r\n            this.setEvent(vApp.start(t));\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * イベントをスケジューラに登録する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Object}\r\n     *            event 仮想クライアントもしくは仮想リソースのイベント\r\n     */\r\n    VirtualSystem.prototype.setEvent = function(event) {\r\n        this._simulator.push(event);\r\n    }\r\n\r\n    /**\r\n     * スケジューラからイベントを削除する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Object}\r\n     *            event 仮想クライアントもしくは仮想リソースのイベント\r\n     */\r\n    VirtualSystem.prototype.removeEvent = function(event) {\r\n        this._simulator.del(event);\r\n    }\r\n\r\n    /**\r\n     * シミュレーションを実行する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @return {eTat} シミュレート実行結果のログ（this.eTat）\r\n     */\r\n    VirtualSystem.prototype.execute = function() {\r\n        var event, events;\r\n        // 処理対象がなくなるか、シミュレート終了時刻になるまでシミュレートする\r\n        while(0 < this._simulator.size() &&\r\n                this._simulator.top().getTime() <= this._end ) {\r\n            // 次にイベントを迎える仮想APを取り出し、「次の処理」をシミュレートする\r\n            event = this._simulator.pop();\r\n            this._now = event.getTime(); // #59\r\n            events = event.next(this);\r\n            // 「次の処理」のシミュレートに伴い発生したイベントを、スケジュールする\r\n            while (events.length) {\r\n                this._simulator.push(events.pop());\r\n            }\r\n        }\r\n        // シミュレーション終了後処理（処理中のvAppを強制終了する） #59\r\n        while(0 < this._simulator.size()){\r\n            event = this._simulator.pop();\r\n            if (event._finish) {\r\n                event._finish(this, \"N_EoS\", \"\", this._end);\r\n            }\r\n        }\r\n        // シミュレーション終了後処理（リソース開放待ちのvAppを強制終了する） #59\r\n        for (var key in this._resources){\r\n            this._resources[key]._finish(this, \"N_EoS\", \"\", this._end);\r\n        }\r\n        \r\n        return this.eTat;\r\n    };\r\n\r\n    /**\r\n     * リソースを取得する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {String}\r\n     *            [name = \"unlimited\"] 仮想リソース名\r\n     * @return {Object} 仮想リソース（登録されていないときは、新たにholdCapacity=1の仮想リソースを登録）\r\n     */\r\n    VirtualSystem.prototype.getResouce = function(name) {\r\n        if (typeof(this._resources[name]) === \"undefined\") {\r\n            this._resources[name] = Object(__WEBPACK_IMPORTED_MODULE_0__simulator_js__[\"c\" /* VirtualResource */])(this, name);\r\n        }\r\n        return this._resources[name];\r\n    };\r\n\r\n    /**\r\n     * シミュレーション現在時刻（処理中のイベントの時刻）を返却する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualSystem.prototype.getTime = function() {\r\n        return this._now;\r\n    };\r\n\r\n\r\n    // Static Method\r\n    /**\r\n     * 取引モデルを取得する（ユーティリティ）\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Array}\r\n     *            [baseModel = []] 使用リソースの一覧[\"WEB\",\"AP\",\"DB\"]\r\n     * @param {Number}\r\n     *            [tat = 5] 使用リソースの平均取得時間＆平均開放時間\r\n     * @param {Number}\r\n     *            [tatMin = 2] 使用リソースの最小取得時間＆最小開放時間\r\n     * @param {Array}\r\n     *            [sequence = []] イベントシーケンス\r\n     * @param {Number}\r\n     *            [times = undefined] イベントシーケンスの繰り返し回数（未指定時:1)\r\n     * @param {Number}\r\n     *            [thinkTime= undefined] イベントシーケンス終了時に再実行する場合の平均再開時間（未指定時:500)\r\n     * @param {Number}\r\n     *            [thinkTimeMin = undefined]\r\n     *            イベントシーケンス終了時に再実行する場合の最小再開時間（未指定時:thinkTimeと同じ）\r\n     * @param {String}\r\n     *            [message = \"\"] 自動生成ログの末尾に追加する文字列\r\n     * @return {Object} 取引モデル\r\n     */\r\n    VirtualSystem.getModel = function(baseModel, tatMin, tat, sequence, times, thinkTimeMin, thinkTime, message) {\r\n        baseModel = baseModel || [];\r\n        tatMin = tatMin || 2;\r\n        tat = tat || 5;\r\n        message = message || \"\";\r\n        sequence = sequence || [\r\n                {tatMin:6,   tat:15,  note:\"Req\",     hold:\"DB\",    free:[]},\r\n                {tatMin:70,  tat:100, note:\"selectA\", hold:\"TBL_A\", free:[\"TBL_A\"]},\r\n                {tatMin:150, tat:200, note:\"updateB\", hold:\"TBL_B\", free:[]},\r\n                {tatMin:30,   tat:50,  note:\"Res\",     hold:\"\",      free:[\"TBL_B\",\"DB\"]}\r\n            ];\r\n        var model = {sequence :[], message : message}; // 戻り値\r\n        if (typeof(times) === \"number\") model.times = times;\r\n        if (typeof(thinkTimeMin) === \"number\") model.thinkTimeMin = thinkTimeMin;\r\n        if (typeof(thinkTime) === \"number\") model.thinkTime = thinkTime;\r\n        \r\n        // baseModelを返却用シーケンスに展開する\r\n        baseModel.forEach( function(e) {\r\n            model.sequence.push({hold:e, tatMin:tatMin, tat:tat, free:[]});\r\n        });\r\n        // 指定シーケンスを返却用シーケンスに追加する\r\n        model.sequence = model.sequence.concat(sequence);\r\n\r\n        // 返却用シーケンスに、holdingを追加するとともにシーケンス終了時未開放リソースを取得する\r\n        var resources = []; // #61\r\n        var holding = []; // #59\r\n        model.sequence.forEach( function(tran) { // #61\r\n            // tatMinがtatより大きいとき、tatをtatMin一定とする #59\r\n            if (tran.tat < tran.tatMin) tran.tat = tran.tatMin;\r\n            // 処理開始時にholdしているリソース一覧をholdingに登録する #59\r\n            tran.holding = [];\r\n            resources.forEach(function(r) {tran.holding.push(r)});\r\n            // 未開放リソース一覧を更新する\r\n            if (typeof(tran.hold) !== \"undefined\" && tran.hold !== \"\") {\r\n                resources.push(tran.hold);                \r\n            }\r\n            if (tran.free) {\r\n                tran.free.forEach( function(free){\r\n                    resources.some( function(r, i){\r\n                        if (r == free) {\r\n                            resources.splice(i,1);\r\n                            return true;\r\n                        }\r\n                    })    \r\n                })\r\n            }\r\n        }, this);\r\n        // シーケンス終了時未開放リソースが残っているとき、返却用シーケンスにリソース開放処理を追加する\r\n        if (0 < resources.length){\r\n            model.sequence = model.sequence.concat(\r\n                    [{hold: \"\", tatMin: tatMin * baseModel.length, tat: tat * baseModel.length,\r\n                        free: resources.reverse()}]);\r\n        }\r\n        return model;\r\n    };\r\n    \r\n    /* new */\r\n    return VirtualSystem;\r\n}());\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * @memberOf timeSeries\r\n * @class MenuConfig\r\n * @classdesc FileParser用メニューHTML定義\r\n * \r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #76\r\n    // 内部関数：keyを定義する\r\n    function def(key, val, onFunc) {\r\n        var _keyConf = FileParser.prototype.__keyConfig[key] = {};\r\n        _keyConf.value = (val === undefined) ? key : val; // getValueByKeyの返却値（デフォルト：keyと同じ文字列）\r\n        _keyConf.getValue = function () { return (val === undefined) ? key : val; };\r\n        _keyConf.onFunc = onFunc || null;   // onイベント時に実行する処理（メニューのa属性などで利用）\r\n        return key;\r\n    };\r\n    function v(key, fieldId) { // fieldIdの値を返却値とする(デフォルト： key+\".v\")\r\n        var _keyConf = FileParser.prototype.__keyConfig[key] = {};\r\n        _keyConf.value = key;           // getValueByKeyの返却値（デフォルト：keyと同じ文字列）\r\n        _keyConf.getValue = function () {\r\n                return __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */](\"m\").getValueByKey(fieldId || key + \".v\"); // TODO:mの指定\r\n            };\r\n        return key;\r\n    };\r\n\r\n\r\n    // 名称と挙動の定義\r\n    var env = \"File\";\r\n        // this[\"_config_\" + env] = Util.Config(env) // #53\r\n    HJN.Config[env] = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */](env)\r\n        // File Format Config設定画面定義 #51\r\n        .name(\"NEWFILE\").label(null,\"Registered \") // #23\r\n            .radio(\"NEWDATA\", null, \"newly\", true)\r\n            .radio(\"ADDDATA\", null, \"additionally\").n()\r\n        .label(null,\"----- File format definition --------\").n()\r\n        .n(\"<br>\")\r\n        .name(\"LF\").label(null, \"[Line feed code]\").n()\r\n        .radio(v(\"LF_FIX\"), null, \"Fixed Length\")\r\n            .number(\"LF_FIX.v\",  null, \"byte\",\"80\",'style=\"width:60px;\"').n()\r\n        .radio(def(\"LF_WIN\",  13), null, \"Windows:CR(13)+LF(10)\", true).n()\r\n        .radio(def(\"LF_UNIX\", 10), null, \"Unix/Linux:LF(10)\").n()\r\n        .radio(def(\"LF_ZOS\",  15), null, \"zOS:NEL(15)\").n()\r\n        .radio(def(\"LF_MAC\",  13), null, \"Mac:CR(13)\").n()\r\n        .radio(v(\"LF_ELSE\"), null, \"other charcode\")\r\n            .number(\"LF_ELSE.v\", \"(\", \")\", \"10\", 'style=\"width:40px;\"').n()\r\n        .n(\"<br>\")\r\n        .name(\"SEP\").label(null,\"[CSV delimiter]\").n()\r\n        .radio(def(\"SEP_COMMA\", ','), null, \"comma\", true)\r\n        .radio(def(\"SEP_TAB\", '\\t'),   null,\"tab\")\r\n        .radio(v(\"SEP_ELSE\"), null, \"other\")\r\n            .text(\"SEP_ELSE.v\", '\"', '\"', ',', 'size=\"2\" placeholder=\",\"').n()\r\n        .n(\"<br>\")\r\n        .name(\"TIME\").label(null, \"[Timestamp field]\").n()\r\n        .number(\"TIME_COL\", \"\", \"th column of CSV\", \"1\", 'style=\"width:40px;\"').n()\r\n        .name(\"TIME_POS\")\r\n            .number(\"TIME_POS\", \"Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n            .number(\"TIME_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .name(\"TIME_FORM\").label(null,\"Format:\").n()\r\n            .radio(\"TIME_FORM_YMD\", \"text\", null, true)\r\n                .text(\"TIME_YMD\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"').n()\r\n            .radio(\"TIME_FORM_TEXT\", \"(num)\", \"text\")\r\n            .radio(\"TIME_FORM_LONG\", null, \"long\").n()\r\n            .nDown()\r\n            .name(\"TIME_UNIT\").label(null, \"Units of numbers:\")\r\n                .radio(def(\"TIME_UNIT_MS\", 1), null, \"msec\")\r\n                .radio(def(\"TIME_UNIT_SEC\", 1000), null, \"sec\", true)\r\n            .nUp()\r\n        .n(\"<br>\")\r\n        .name(\"TAT\").label(null,\"[Turnaround time(TAT) field]\").n()\r\n        .number(\"TAT_COL\", \"\", \"th column of CSV\", \"2\", 'style=\"width:40px;\"').n()\r\n        .name(\"TAT_POS\")\r\n            .number(\"TAT_POS\", \"Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n            .number(\"TAT_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .name(\"TAT_UNIT\").label(null, \"Units of numbers:\")\r\n                .radio(def(\"TAT_UNIT_MS\", 1), null, \"msec\")\r\n                .radio(def(\"TAT_UNIT_SEC\", 1000), null, \"sec\", true).n()\r\n        .name(\"TAT_FORM\").label(null,\"Format: \")\r\n            .radio(\"TAT_FORM_TEXT\", null, \"text\", true)\r\n            .radio(\"TAT_FORM_LONG\", null, \"long\").n()\r\n            .nDown()\r\n            .name(\"ENDIAN\").label(null, \"for long Endian: \")\r\n                .radio(def(\"ENDIAN_LIL\", true), null, \"little\", true)\r\n                .radio(def(\"ENDIAN_BIG\", false), null, \"big\")\r\n            .nUp()\r\n        .n(\"<br>\")\r\n    ;\r\n\r\n    // Filter Config用関数定義(radio用） #51\r\n    var func_F_SYNC_UPPER = function(){ Graph.DrawCallback(HJN.chart.graph); };\r\n    var func_F_SYNC_DETAIL = function(){ Graph.DrawCallback(HJN.chartD.graph); };\r\n    // Filter Config設定画面定義 #51\r\n    env = \"Filter\";\r\n        // this[\"_config_\" + env] = Util.Config(env) // #53\r\n    HJN.Config[env] = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */](env)\r\n        .name(\"F_SYNC\").label(null,\"Sync\") // #50\r\n            .radio(\"F_SYNC_UPPER\", null, \"Upper\", false ,null, func_F_SYNC_UPPER) // #51\r\n            .radio(\"F_SYNC_DETAIL\", null, \"Detail\", false, null, func_F_SYNC_DETAIL)\r\n            .radio(\"F_ASYNC\", null, \"Async\", true).n()\r\n        .label(null,\"----- Data filter condition--------\").n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TIME\").label(null, \"[Date filter]\").n()\r\n            .label(null,\"Include if end time is between\").n()\r\n                .text(\"F_TIME_FROM\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"')\r\n                .label(null,\"and\").n()\r\n                .text(\"F_TIME_TO\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TAT\").label(null,\"[Turnaround time(TAT) filter]\").n()\r\n            .label(null,\"Include if TAT is between\").n()\r\n                .number(\"F_TAT_FROM\", null, null, \"0\", 'style=\"width:80px;\"')\r\n                .number(\"F_TAT_TO\", \"and\", null, null, 'style=\"width:80px;\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TEXT\").label(null,\"[Text filter]\")\r\n                .radio(\"F_TEXT_NON\", null, \"Don't use.\", true).n()\r\n                .radio(\"F_TEXT_INCLUDE\", null, \"Include \")\r\n                .radio(\"F_TEXT_EXCLUDE\", null, \"Exclude \").n()\r\n                .number(\"F_TEXT_LEN\", \"if \", \" bytes\", null, 'style=\"width:40px;\"')\r\n                .number(\"F_TEXT_POS\", \"from the \", \"th byte\", \"1\", 'style=\"width:40px;\"').n()\r\n                .number(\"F_TEXT_COL\", \"from head of the\", \"th column of CSV\", \"3\", 'style=\"width:40px;\"').n()\r\n                .text(\"F_TEXT_REG\", \"match the regular expression\", null, null, 'size=\"7\" placeholder=\".*\"').n()\r\n            .n(\"<br>\")\r\n    ;\r\n});\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__libs_dygraph_css__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__libs_dygraph_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__libs_dygraph_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_css__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Init_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tatLogDiver_HJN_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tatLogDiver_Graph_js__ = __webpack_require__(5);\n\r\n\r\n\r\n\r\n\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\",function(eve){\r\n    Object(__WEBPACK_IMPORTED_MODULE_2__tatLogDiver_Init_js__[\"b\" /* default */])(\"chart\");      // チャートを作成する\r\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(15);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./dygraph.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./dygraph.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(6)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"/**\\n * Default styles for the dygraphs charting library.\\n */\\n\\n.dygraph-legend {\\n  position: absolute;\\n  font-size: 14px;\\n  z-index: 10;\\n  width: 250px;  /* labelsDivWidth */\\n  /*\\n  dygraphs determines these based on the presence of chart labels.\\n  It might make more sense to create a wrapper div around the chart proper.\\n  top: 0px;\\n  right: 2px;\\n  */\\n  background: white;\\n  line-height: normal;\\n  text-align: left;\\n  overflow: hidden;\\n}\\n\\n/* styles for a solid line in the legend */\\n.dygraph-legend-line {\\n  display: inline-block;\\n  position: relative;\\n  bottom: .5ex;\\n  padding-left: 1em;\\n  height: 1px;\\n  border-bottom-width: 2px;\\n  border-bottom-style: solid;\\n  /* border-bottom-color is set based on the series color */\\n}\\n\\n/* styles for a dashed line in the legend, e.g. when strokePattern is set */\\n.dygraph-legend-dash {\\n  display: inline-block;\\n  position: relative;\\n  bottom: .5ex;\\n  height: 1px;\\n  border-bottom-width: 2px;\\n  border-bottom-style: solid;\\n  /* border-bottom-color is set based on the series color */\\n  /* margin-right is set based on the stroke pattern */\\n  /* padding-left is set based on the stroke pattern */\\n}\\n\\n.dygraph-roller {\\n  position: absolute;\\n  z-index: 10;\\n}\\n\\n/* This class is shared by all annotations, including those with icons */\\n.dygraph-annotation {\\n  position: absolute;\\n  z-index: 10;\\n  overflow: hidden;\\n}\\n\\n/* This class only applies to annotations without icons */\\n/* Old class name: .dygraphDefaultAnnotation */\\n.dygraph-default-annotation {\\n  border: 1px solid black;\\n  background-color: white;\\n  text-align: center;\\n}\\n\\n.dygraph-axis-label {\\n  /* position: absolute; */\\n  /* font-size: 14px; */\\n  z-index: 10;\\n  line-height: normal;\\n  overflow: hidden;\\n  color: black;  /* replaces old axisLabelColor option */\\n}\\n\\n.dygraph-axis-label-x {\\n}\\n\\n.dygraph-axis-label-y {\\n}\\n\\n.dygraph-axis-label-y2 {\\n}\\n\\n.dygraph-title {\\n  font-weight: bold;\\n  z-index: 10;\\n  text-align: center;\\n  /* font-size: based on titleHeight option */\\n}\\n\\n.dygraph-xlabel {\\n  text-align: center;\\n  /* font-size: based on xLabelHeight option */\\n}\\n\\n/* For y-axis label */\\n.dygraph-label-rotate-left {\\n  text-align: center;\\n  /* See http://caniuse.com/#feat=transforms2d */\\n  transform: rotate(90deg);\\n  -webkit-transform: rotate(90deg);\\n  -moz-transform: rotate(90deg);\\n  -o-transform: rotate(90deg);\\n  -ms-transform: rotate(90deg);\\n}\\n\\n/* For y2-axis label */\\n.dygraph-label-rotate-right {\\n  text-align: center;\\n  /* See http://caniuse.com/#feat=transforms2d */\\n  transform: rotate(-90deg);\\n  -webkit-transform: rotate(-90deg);\\n  -moz-transform: rotate(-90deg);\\n  -o-transform: rotate(-90deg);\\n  -ms-transform: rotate(-90deg);\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(18);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(6)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"@CHARSET \\\"UTF-8\\\";\\r\\n/*   ****1**** ****2**** ****3**** ****4**** ****5**** ****6**** ****7***** */\\r\\n/* リセットCSS */\\r\\nhtml, body, h1, h2, h3, h4, ul, ol, dl, li, dt, dd, p, div, span, img, a, table, tr, th, td, selector{\\r\\nmargin: 0; padding: 0; border: 0; font-weight: normal; font-size: 100%; vertical-align:baseline;\\r\\n-webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }\\r\\narticle, header, footer, aside, figure, figcaption, nav, section { display:block; }\\r\\nbody { line-height: 1; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; }\\r\\nol, ul { list-style: none; list-style-type: none; }\\r\\n*:focus { outline: 0; }\\r\\n\\r\\n/* TAT log diver */\\r\\nbody\\t{ font-size: 12px; margin: 0;\\r\\n\\tfont-family:\\\"\\\\30E1\\\\30A4\\\\30EA\\\\30AA\\\",\\\"Meiriyo\\\",\\\"\\\\30D2\\\\30E9\\\\30AE\\\\30CE\\\\89D2\\\\30B4   ProN W3\\\",\\\"Hiragino Kaku Gothic ProN\\\",\\\"sans-serif\\\"; }\\r\\nnav \\t{ height: 36px }\\r\\ninput\\t{ border-width: 1px; font-size: 12px; }\\r\\nselect  { background: #eee;}\\r\\n#Simulator {overflow: auto; resize: both; position: absolute; z-index: 100;\\r\\n\\t\\t\\ttop: 0px; left: 0px; height: 0; width: 190px; background: rgba(255,255,255,0.5); }\\r\\n.statusbar\\t{ overflow: auto; resize: both; position: absolute; z-index: 99;\\r\\n\\t\\t\\ttop: 0px; left: 200px; height: 20px; width: 200px; background: #fff; }\\r\\n.statusbar > iframe { overflow: hidden; width: 95%; height: 100%; }\\r\\n.lineViewer { width: 100%; height: 42px; margin: 25px 0px; padding: 0px; border: 1px #cccccc dotted; }\\r\\nfooter { position: fixed; bottom: 0%; text-align: right; font-size: smaller; }\\r\\n\\r\\n/* ハンバーガーメニュー */\\r\\n.hjnBurgerTray { position :fixed; display: inline-block; visibility: hidden; z-index: 96;\\r\\n\\ttop :0; right :0; width :305px; height:100%; padding :0; background :#fff; }\\r\\n/* ハンバーガーボタン */\\r\\n.hjnCtrlBox { position: relative; float: right; cursor: pointer; z-index: 98;\\r\\n\\twidth: 40px; height: 40px; background-color: #fff; visibility: visible;\\r\\n\\tborder: 1px solid #ccc; box-shadow:\\t1px 1px 1px #ccc; border-radius: 4px;\\r\\n\\tline-height: 12px; box-sizing: border-box;\\ttransition: all 0.1s; }\\r\\n.hjnCtrlBox:hover { border: #ccc; }\\r\\n.hjnCtrlBox:active { border: 1px solid #999;  }\\r\\n.hjnBurger { display: none; }\\r\\n.hjnBurger + label span { top: 17px; height: 4px; border-radius: 2px;\\r\\n\\tposition: absolute; left: 6px; width: 69%; background-color: #888; }\\r\\n.hjnBurger + label span::before, .hjnBurger + label span::after { border-radius: 2px;\\r\\n\\tposition: absolute; width: 26px; height: 4px; background: #888;\\r\\n\\tdisplay: block; content: ''; transition: transform 0.1s; }\\r\\n.hjnBurger + label span::before { top: -8px; }\\r\\n.hjnBurger + label span::after { top: 8px; }\\r\\n.hjnBurger:checked + label span { background: #fff; }\\r\\n.hjnBurger:checked + label span::before { transform: translateY(8px) rotate(-45deg); }\\r\\n.hjnBurger:checked + label span::after { transform: translateY(-8px) rotate(45deg); }\\r\\n\\r\\n/* メニュー 全体 */\\r\\n.hjnBurgerTitle { /* ハンバーガーメニューオープン時の見出し */\\r\\n\\tposition: absolute;\\tvisibility: visible; color: #999; background:#fff; width: 100%;\\r\\n\\tpadding: 0 40px 0 15px; opacity: 0; z-index: 97;\\r\\n\\ttransform: translate3d(0, -15px, 0); transition: transform 0.1s, opacity 0.5s; }\\r\\n.hjnBurgerTitle p { word-wrap: break-word; line-height: 18px; width: 160px; }\\r\\n.hjnBurger:checked ~ .hjnBurgerTitle { transform: none;  opacity: 1; }\\r\\n.hjnBurgerWrap { position: absolute;  visibility: visible; width :100%; height :100%;\\r\\n\\tbackground: #fff; opacity: 0.9;\\ttop: 0; right: -100%; transition: right 0.1s; \\r\\n\\tpadding: 40px 0 0 0; overflow: scroll;}\\r\\n.hjnBurger:checked ~ .hjnBurgerWrap { right: 0; }\\r\\n/* Copyright表示 */\\r\\n.hjnBurgerTitle a {\\r\\n    color: #4d4e53; text-decoration: none; border-bottom: 1px dotted #afafaf; }\\r\\n/* モードボタン */\\r\\n.hjnBoxSwitch { display: none; }\\r\\n.hjnBoxSwitch + label span::before, .hjnBoxSwitch + label span::after\\r\\n\\t\\t{ display: inline-block; text-align:center; transition: all 0.1s; width: 100%}\\r\\n.hjnBoxSwitch + label span::before, .hjnBoxSwitch:checked + label span::after\\r\\n\\t\\t{ color: #ddd; }\\r\\n.hjnBoxSwitch + label span::after, .hjnBoxSwitch:checked + label span::before \\r\\n\\t\\t{ color: #888; font-weight: bold; }\\r\\n\\r\\n#hjnBoxPlaceOn + label span::before { content: \\\"Place on\\\"; }\\r\\n#hjnBoxPlaceOn + label span::after  { content: \\\"side\\\"; }\\r\\n#chartZoom + label span::before, #chartDZoom + label span::before  { content: \\\"reset zoom\\\"; }\\r\\n/* スイッチラベル */\\r\\n.hjnBoxOn { display: none; }\\r\\n.hjnBoxOn + label { text-align:center; color: #ddd; }\\r\\n.hjnBoxOn:checked + label { color: #888; font-weight: bold;}\\r\\n\\r\\n /* アコーデオンメニュー */\\r\\n.hjnAccordion { list-style-type: none; margin: 0; padding: 0; }\\r\\n.hjnMenuLv1 { position:rerative; margin: 0 10px; }\\r\\n.hjnMenuLv1 > input { display: none;}\\r\\n\\r\\n.hjnMenuLv1 > label::after { position: absolute; content: \\\"\\\"; border-style: solid;\\r\\n\\t\\tborder-color: #888 transparent transparent transparent;\\r\\n\\t\\tborder-width: 8px 4px 0 4px; right: 40px; transition: 0.1s;}\\r\\n.hjnMenuLv1 > input:checked ~ label::after { transform: rotate(90deg); }\\r\\n\\r\\n.hjnMenuLv1 > label, .hjnMenuLv1 > a { display: block; cursor: pointer;\\r\\n\\t\\tpadding: 10px; border-bottom: 1px solid #fff; background: #eee; transition: all 0.1s; }\\r\\n.hjnMenuLv1 > label:hover { background: rgba(0,0,0,0.2); }\\r\\n.hjnMenuLv1 > label:active { background: #999;  }\\r\\n.hjnMenuLv1 > input:checked ~ .hjnMenuLv2 { height: auto; padding: 10px; }\\r\\n\\r\\n/* 詳細メニューリスト   */\\r\\n.hjnMenuLv2 { transition: 0.1s; height: 0; overflow: hidden; padding: 0 10px; background: #ddd; }\\r\\n.hjnMenuLv2 ol { display: block; margin: 2px 0; }\\r\\n.hjnMenuLv2 label { height: 12px; }\\r\\n.hjnLabel4Input:hover,  .hjnButton4Input:hover { background: rgba(0,0,0,0.2); }\\r\\n.hjnLabel4Input:active, .hjnButton4Input:active { background: #999; }\\r\\n/* 詳細メニューリスト  ボタン */\\r\\n.hjnMenuLv2 .hjnButton4Input label, .hjnMenuLv2 label.hjnButton4Input, .hjnPlot \\r\\n\\t\\t{ display: block; padding: 8px 12px 8px 22px;}\\r\\n.hjnButton4Input { position: relative; display: block; overflow: hidden; transition: all 0.1s;  \\r\\n\\t\\ttext-decoration: none; color: #000; border: outset #fff; border-radius: 14px; }\\r\\n.hjnButton4Input:active { border: inset #fff; }\\r\\n.hjnMenuLv2 li .hjnButton4Input { padding: 8px 12px 8px 22px; } /* Download用 */\\r\\n.hjnMenuLv2 .hjnButton4Input input[type=\\\"file\\\"] { display: none; } /* File Open用 */\\r\\n/* 詳細メニューリスト  文字 */\\r\\n.hjnMenuLv2 .hjnLabel4Input { display: inline-block; position: relative;\\r\\n\\t\\t border-radius: 14px; padding-left: 1em; cursor: pointer; transition: all 0.1s; }\\r\\n.hjnMenuLv2 input { height: 12px; text-align: right; border-radius: 5px; }\\r\\n.hjnMenuLv2 .hjnLabel4Input input[type=\\\"radio\\\"] { position: absolute;\\r\\n\\t\\t top: 0; bottom: 0; left: 0; margin: auto;  cursor: pointer; }\\r\\n.hjnMenuLv2 select.hjnLabel4Input  {padding-left: 0; }\\r\\n/* 詳細メニューリスト  Legend */\\r\\n.hjnMenuLv2 .legend {cursor: pointer; width:206px; height: auto;\\r\\n \\t\\tdisplay: inline-block; padding: 8px 12px 8px 22px; border-radius: 14px;}\\r\\n.hjnMenuLv2 .legend > input { display: inline; cursor: pointer; margin: auto -15px; }\\r\\n.hjnMenuLv1 > input:checked ~ .hjnMenuLv2 .legend > input { position: absolute; }\\r\\n.hjnMenuLv2 .legend:hover { font-style: oblique; } \\r\\n\\r\\n/* dygraph用設定 */\\r\\n.item.active{ background: rgba(0,0,0,0.2) !important; border: rgba(0,0,0,0.2) !important; }\\r\\n.column { display: inline-block; }\\r\\n.dygraph-annotation { color: rgba(0,0,0,0.8) !important;\\r\\n\\t\\tbackground-color: rgba(256,256,256,0.2) !important; width: 40px !important; }\\r\\n\\r\\n/* Bottom detail graph用設定 */\\r\\n#detailTimeRange { padding: 8px; }\\r\\n#chartPlots div { float: left; padding: 2px 0;}\\r\\n.hjnPlot { margin: 2px 0; width:250px; }\\r\\n.hjnPlot > label { position:relative; margin: 2px 0px; background-color: #eee;\\r\\n\\t\\tpadding: 0px 5px; cursor: pointer; border-radius: 5px; }\\r\\n.hjnPlot > input[type=checkbox] { /* 削除アイコン */\\r\\n\\t\\tvisibility: hidden; z-index: 98; float: left; margin: -2px 0 0 0; \\r\\n\\t\\tbackground-color: #fff; box-shadow: 1px 1px 1px #ccc; height: 16px; width: 16px; }\\r\\n.hjnPlot > input[type=checkbox] + label{ /* 削除アイコンの横棒*/\\r\\n\\t\\tvisibility: hidden; z-index: 97; float: left; left: -13px; top: 2px;\\r\\n\\t\\tbackground: #aaa; height: 3px; width: 9px; padding: 0; border-radius: 2px;}\\r\\n.hjnPlot:hover > input[type=checkbox], .hjnPlot:hover > input[type=checkbox] + label \\r\\n\\t\\t{ visibility: visible; cursor: pointer; }\\r\\n.hjnPlot > input[type=radio] { display:none; }\\r\\n.hjnPlot > input[type=radio]:checked + label { background-color: #ccc; }\\r\\n.hjnPlot:hover { font-weight: bold; }\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * @memberOf Util\r\n * @class TouchPanel\r\n * @classdesc タッチパネル用ツール\r\n *            <p>\r\n *            参考 {@https://code.i-harness.com/ja/q/4f2389}\r\n * \r\n * @param {Number}\r\n *            [average=0.5] 平均値\r\n * @example var r = HJN_util.TouchPanel(10), val = r.exponential();\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #56\r\n    \"use strict\";\r\n    /** @constructor */\r\n    function TouchPanel(average){\r\n        if(!(this instanceof TouchPanel)) return new TouchPanel(average);\r\n        this._average = average || 0.5;\r\n    }\r\n    /** @private */\r\n    \r\n    // public\r\n    /**\r\n     * タッチデバイスか判定する\r\n     * <p>\r\n     * クラスロード後、touchstart と mouosemove の初回のイベントがどちらが先に発生したかにより判定する 参考\r\n     * {@link https://lab.syncer.jp/Web/JavaScript/Snippet/44/}\r\n     * \r\n     * @memberof TouchPanel\r\n     * @return {String} 先に検出したイベントがマウス移動のとき false、以外のときtrue\r\n     * \r\n     */\r\n    TouchPanel.isTouchableDevice = function() {\r\n        __WEBPACK_IMPORTED_MODULE_0__util_js__[\"f\" /* Logger */].ShowText([TouchPanel._deviceType]);\r\n        return true; // (TouchPanel._deviceType === \"MOUSE\") ? false : true;\r\n    }\r\n    // タッチデバイスか判定する（クラス定数）\r\n    TouchPanel._deviceType = \"SHIMULATED_TOUCH\";\r\n    function detectDeviceType(event) {\r\n        TouchPanel._deviceType = event.changedTouches ? \"TOUCH\" : \"MOUSE\" ;\r\n        document.removeEventListener(\"touchstart\", detectDeviceType) ;\r\n        document.removeEventListener(\"mousemove\", detectDeviceType) ;\r\n    }\r\n    document.addEventListener(\"touchstart\", detectDeviceType) ;\r\n    document.addEventListener(\"mousemove\", detectDeviceType) ;\r\n\r\n    /**\r\n     * タッチパネル操作をマウス操作に転送する\r\n     * <p>\r\n     * 参考 {@link https://code.i-harness.com/ja/q/4f2389}\r\n     * \r\n     * @memberof Util.TouchPanel\r\n     * @param {Object}\r\n     *            element 対象dom要素\r\n     * @param {Boolean}\r\n     *            [isStopTouch=false] 元のタッチのデフォルトイベントを消すか（個別に登録されているリスナーには無関係）\r\n     * \r\n     * @example HJN_util.DispatchEventTouchToMouse();\r\n     */\r\n    TouchPanel.DispatchEventTouchToMouse = function(element, isStopTouch) { // #22\r\n        \"use strict\";\r\n        element.addEventListener(\"touchstart\", touchHandler, true);\r\n        element.addEventListener(\"touchmove\", touchHandler, true);\r\n        element.addEventListener(\"touchend\", touchHandler, true);\r\n        element.addEventListener(\"touchcancel\", touchHandler, true);\r\n        return;\r\n\r\n        function touchHandler(ev) {\r\n            var bIgnoreChilds = false;\r\n            if( !window.__TOUCH_TYPES ) {\r\n                window.__TOUCH_TYPES  = { touchstart:'mousedown', touchmove:'mousemove', touchend:'mouseup' };\r\n                window.__TOUCH_INPUTS = { INPUT: 1, TEXTAREA: 1, SELECT: 1, OPTION: 1,\r\n                                         'input':1,'textarea':1,'select':1,'option':1 };\r\n            }\r\n            var bSame = (ev.target == this);\r\n            if (bIgnoreChilds && !bSame) { return; }\r\n            // Get if object is already tested or input type\r\n            var b = (!bSame && ev.target.__ajqmeclk);\r\n            // allow multi-touch gestures to work\r\n            if (b === true || !ev.touches || ev.touches.length > 1 || !window.__TOUCH_TYPES[ev.type]) { return; }\r\n\r\n            var oEv = (!bSame && typeof b != 'boolean') ? ev.target.getAttribute('events') : false;\r\n            var b = (!bSame)\r\n                  ? (ev.target.__ajqmeclk = oEv\r\n                      ? (oEv['click'] || oEv['mousedown'] || oEv['mouseup'] || oEv['mousemove']) \r\n                      : false )\r\n                  :false;\r\n            // allow default clicks to work (and on inputs)\r\n            if (b || window.__TOUCH_INPUTS[ev.target.tagName]) { return; } \r\n\r\n            var touch = ev.changedTouches[0];\r\n            var tmpClientX = touch.clientX;\r\n            var tmpClientY = touch.clientY;\r\n            // クリックに変換するタップ誤差範囲\r\n            var CLICK_MARGIN = 20; // px\r\n            var CLICK_DELAY = 1000; // ms\r\n\r\n            // 前回touchstart時の座標と時刻が一定範囲内の時、dygraphがクリックと判定するよう補正する\r\n            if ((ev.type === \"touchstart\" || ev.type === \"touchend\") &&\r\n                    this.startTouch &&\r\n                    Math.abs(this.startTouch.x - touch.clientX) < CLICK_MARGIN && // タッチ補正幅(px)\r\n                    Math.abs(this.startTouch.y - touch.clientY) < CLICK_MARGIN &&\r\n                    +new Date() - this.startTouch.t < CLICK_DELAY) { // タッチ時間(ms)\r\n                // 位置補正\r\n                tmpClientX = this.startTouch.x;\r\n                tmpClientY = this.startTouch.y;\r\n            } else if (ev.type === \"touchstart\"){\r\n                // touchstart時の座標と時刻を退避する\r\n                this.startTouch = {x: touch.clientX, y: touch.clientY, t: +new Date()};\r\n            } else if (ev.type === \"touchend\") {  \r\n                // touchstart時の座標と時刻を初期化する\r\n                this.startTouch = {};\r\n            }\r\n            // マウスイベントを発生させる\r\n            var newEvent = document.createEvent(\"MouseEvent\");\r\n            newEvent.initMouseEvent(\r\n                window.__TOUCH_TYPES[ev.type],    // type\r\n                true,             // bubbles\r\n                true,             // cancelable\r\n                window,           // view\r\n                1,                // detail\r\n                touch.screenX,    // screenX スクリーンサイズ\r\n                touch.screenY,    // screenY\r\n                tmpClientX,       // clientX タッチ座標\r\n                tmpClientY,       // clientY\r\n                false,            // ctrlKey\r\n                false,            // altKey\r\n                false,            // shiftKey\r\n                false,            // metaKey\r\n                0,                // button\r\n                null              // relatedTarget\r\n              );\r\n            touch.target.dispatchEvent(newEvent);\r\n            \r\n            // タッチイベントを止める #22\r\n            if(isStopTouch) {\r\n                ev.stopImmediatePropagation();\r\n                ev.stopPropagation();\r\n                ev.preventDefault();\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n\r\n    /* new */\r\n    return TouchPanel;\r\n}());\n\n/***/ }),\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DateToString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return S2D; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return D2S; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return N2S; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return S2N; });\n/**\r\n * 日時(Date)から、ローカル時刻に基づく、指定フォーマットの文字列を取得する\r\n * \r\n * @memberOf Util\r\n * @param {Date}\r\n *            dt Date型（内部実装はミリ秒単位）\r\n * @param {String}\r\n *            str フォーマット yyyy-MM-dd hh:mm:ss.ppp （戻り値で上書きされる）\r\n * @return {String} str 編集後文字列\r\n */\r\nvar DateToString = function() {\r\n    \"use strict\";\r\n    var dt = arguments[0],  // arg0\r\n        str = arguments[1]; // arg1\r\n    // if (typeof(dt) === \"number\") dt = new Date(dt);\r\n    str = str.replace(/yyyy/, dt.getFullYear() );\r\n    str = str.replace(/MM/, ('0' + (dt.getMonth() + 1) ).slice(-2) );\r\n    str = str.replace(/dd/, ('0' + dt.getDate()).slice(-2) );\r\n    str = str.replace(/hh/, ('0' + dt.getHours()).slice(-2) );\r\n    str = str.replace(/mm/, ('0' + dt.getMinutes()).slice(-2) );\r\n    str = str.replace(/ss/, ('0' + dt.getSeconds()).slice(-2) );\r\n    str = str.replace(/ppp/,('00' + dt.getMilliseconds()).slice(-3) ); // #60\r\n    // str = str.replace(/ppp/,('00' + Math.floor(dt % 1000)).slice(-3) );\r\n\r\n    return str;\r\n};\r\n\r\n/**\r\n * 日時文字列を指定フォーマットでパースして数値(ミリ秒単位）を取得する\r\n * @memberOf Util\r\n * @param {String}\r\n *            str\r\n * @param {Object|String}\r\n *            [conf={YYYY: 0, MM: 5, DD: 8, hh: 11, mm: 14, ss: 17, ppp: 20}]\r\n *            Object指定のとき：年月日時分秒ミリ秒の先頭位置を示す構造体オブジェクト<br>\r\n *            String指定とき：フォーマットを示す文字列<br>\r\n *            デフォルト値は、\"YYYY/MM/DD hh:mm:ss.ppp\"相当\r\n * @return {Number} timeNum 日時（１ミリ秒を１とする数値、エラーのときNumber.NaN）\r\n */\r\nvar S2D = function(str, conf){ // #34\r\n    \"use strict\";\r\n    if(!str) return Number.NaN;\r\n    \r\n    if(typeof(conf) === \"Object\"){\r\n        // confが\"Object\"のとき、指定された構造体オブジェクトの条件でパースする（最も高速な処理）\r\n        return parse(str, conf);\r\n    } else if (typeof(conf) === \"string\") {\r\n        // confが\"String\"のとき、指定された文字列フォーマットから構造体オブジェクトを作成し、パースする（準高速処理）\r\n        var config = {  // YYYY/MM/DD hh:mm:dd.ss.ppp #41\r\n                YYYY: conf.indexOf(\"YYYY\"),\r\n                MM: conf.indexOf(\"MM\"),\r\n                DD: conf.indexOf(\"DD\"),\r\n                hh: conf.indexOf(\"hh\"),\r\n                mm: conf.indexOf(\"mm\"),\r\n                ss: conf.indexOf(\"ss\"),\r\n                ppp: conf.indexOf(\"p\")};\r\n        return parse(str, config);\r\n    } else {\r\n        // confが指定されていないとき、デフォルト条件でパースする（汎用処理）\r\n        // デフォルトフォーマット：\"YYYY/MM/DD hh:mm:dd.ss.ppp\" #42\r\n        var config = {YYYY: 0, MM: 5, DD: 8, hh: 11, mm: 14, ss: 17, ppp: 20};\r\n        return parse(str, config);\r\n    }\r\n\r\n    // 内部関数：構造体オブジェクトで指定された条件でパースする\r\n    function parse(str, conf){\r\n        var y   = (0 <= conf.YYYY) ? parseInt( str.substr( conf.YYYY, 4), 10) : 1970,\r\n                m   = (0 <= conf.MM)   ? parseInt( str.substr( conf.MM, 2), 10) - 1 : 0, // デフォルト1月\r\n                // 1970/1/1だと時差でマイナスになることがあるので日付のデフォルトは2日\r\n                d   = (0 <= conf.DD)   ? parseInt( str.substr( conf.DD, 2), 10) : 2,\r\n                h   = (0 <= conf.hh)   ? parseInt( str.substr( conf.hh, 2), 10) : 0,\r\n                min = (0 <= conf.mm)   ? parseInt( str.substr( conf.mm, 2), 10) : 0,\r\n                sec = (0 <= conf.ss)   ? parseInt( str.substr( conf.ss, 2), 10) : 0,\r\n                // ミリ秒以下を指定すると丸め誤差が生じるため、秒以下のミリ秒は個別に加算\r\n                p   = (0 <= conf.ppp)  \r\n                    ? (\"0.\" + str.substr( conf.ppp).match(/[0-9]*/)[0]) * 1000.0 \r\n                    : 0;\r\n        return +(new Date( y, m, d, h, min, sec )) + p;  // #14\r\n    }\r\n};\r\n\r\n/**\r\n * 日時(ミリ秒：Ｘ軸用）から、時差補正のない、指定フォーマットの文字列を取得する\r\n * \r\n * @memberOf Util\r\n * @param {Number|Date}\r\n *            ds 時刻をUNIX経過時間（ミリ秒）で表した数値、もしくはDate(日付）\r\n * @param {String}\r\n *            [str=自動] フォーマット yyyy-MM-dd hh:mm:ss.ppp （戻り値で上書きされる）<br>\r\n *            自動のとき 日数+ hh:mm:ss.ppp 表示単位に至らない単位は表示しない、ミリ秒は分単位以下の時表示<br>\r\n *            例： 日数表示：\"1 02:03:04\",時表示\"02:03:04\" 分表示\"0:03:04.567\" 秒表示\"04.567\"\r\n * @param {Boolean}\r\n *            [isLocal=false] trueのとき時差補正をしない\r\n * @return {String} str 編集後文字列\r\n */\r\nvar D2S = function(ds, str, isLocal){ // #60\r\n    \"use strict\";\r\n    var minus = \"\";\r\n    var ret = \"\";\r\n    if (ds < 0) {\r\n        minus = \"-\";\r\n        ds = -1 * ds;\r\n    }\r\n    var datetime = new Date(ds);\r\n    if (!isLocal) { // #60\r\n        datetime = new Date(+datetime + 60000 * datetime.getTimezoneOffset()); // 環境タイムゾーンの補正\r\n    }\r\n    if(str){ // フォーマット指定があるとき\r\n        ret = DateToString(datetime, str);\r\n    } else if (ds < 1000) { // 自動で1秒(1000)未満のとき\r\n        ret = \"0.\" + Math.round(ds);\r\n    } else if (ds < 60000) { // 自動で1分(1*60*1000)未満のとき\r\n        ret = DateToString(datetime, \"ss.ppp\");\r\n    } else if (ds < 3600000) { // 自動で1分以上、1時間(1*60*60*1000)未満のとき\r\n        ret = \"0:\" + DateToString(datetime, \"mm:ss.ppp\");\r\n    } else if (ds < 86400000) { // 自動で1時間以上、1日(1*24*60*60*1000)未満のとき\r\n        ret = DateToString(datetime, \"hh:mm:ss\");\r\n    } else { // 自動で1日以上のとき\r\n        ret = Math.floor(ds / 86400000) + \" \";\r\n        ret += DateToString(datetime, \"hh:mm:ss\");\r\n    }\r\n    return minus + ret;\r\n};\r\n\r\n/**\r\n * 数値(Ｙ軸用）から、誤差のない表示用文字列を取得する<br>\r\n * （hover、legendなどでY軸の値を使うときに使用する）\r\n * \r\n * @memberOf Util\r\n * @param {Number|Date}\r\n *            y 時刻をUNIX経過時間（ミリ秒）で表した数値、もしくはDate(日付）\r\n * @return {String} str 編集後文字列\r\n *         {@linkhttps://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat}\r\n */\r\nvar N2S = function(y){\r\n    \"use strict\";\r\n    return Intl.NumberFormat('en-IN').format(y);\r\n};\r\n\r\n/**\r\n * 文字列を数値に変換する\r\n * \r\n * @memberOf Util\r\n * @param {String|Number}\r\n *            [str = sub] 計算式（日時分秒ミリ秒(d,h,mim,sec,ms)の文字は、ミリ秒に変換する）\r\n * @param {String|Number}\r\n *            [sub] 第一引数が指定されていない(undefined)ときの代用\r\n * @return {Number} n eval(str||sub)で取得した数値\r\n * \r\n */\r\nvar S2N = function(str, sub){ // #53\r\n    \"use strict\";\r\n    var s = (typeof(str) !== \"undefined\") ? str : sub;\r\n    var h = 3600000; // 1時間（ミリ秒）\r\n    var min = 60000; // 1分（ミリ秒）\r\n    var sec =  1000; // 1秒（ミリ秒）\r\n    var ms =      1; // 1ミリ秒\r\n\r\n    return eval(s);\r\n};\n\n/***/ }),\n/* 21 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class Random\r\n * @classdesc Random 乱数取得\r\n *            <p>\r\n *            ある事象の単位時間あたりの発生回数がポアソン分布, その発生間隔が指数分布に従う<br>\r\n *            M/M/1モデルは、到着がポアソン過程となり、(したがって到着間隔は指数分布に従う)、サービス時間が指数分布に従う\r\n *            <p>\r\n *            参考 {@link http://www.ishikawa-lab.com/montecarlo/4shou.html}\r\n * \r\n * @param {Number}\r\n *            [average=0.5] 平均値\r\n * @example var r = HJN_util.Random(10), val = r.exponential();\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #56\r\n    \"use strict\";\r\n    /** @constructor */\r\n    function Random(average){\r\n        if(!(this instanceof Random)) return new Random(average);\r\n        this._average = average || 0.5;\r\n    }\r\n\r\n    /** @private */\r\n    \r\n    // public\r\n    /**\r\n     * 一様分布となる乱数を返却する\r\n     * \r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.uniform = function(average) {\r\n        average = average || this._average;\r\n        return  2.0 * average * Math.random();\r\n    };\r\n\r\n    /**\r\n     * 指数分布となる乱数を返却する(lambda = 1/average)\r\n     * \r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値=1/λ、分散=1/(λ^2)<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.exponential = function(average) {\r\n        average = average || this._average;\r\n        return (-1.0 * average) * Math.log(1.0 - Math.random());\r\n    };\r\n    \r\n    /**\r\n     * ポアソン分布となる乱数を返却する(lambda = average)\r\n     * \r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値=分散=λ<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.poisson = function(average) {\r\n        var lambda = average || this._average;\r\n        var xp = Math.random();\r\n        var k = 0;\r\n        while (xp >= Math.exp(-lambda)) {\r\n            xp = xp * Math.random();\r\n            k = k + 1;\r\n        }\r\n        return (k);\r\n    };\r\n    \r\n    /* new */\r\n    return Random;\r\n}());\n\n/***/ }),\n/* 22 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class addEventListener\r\n * \r\n * 1つのイベントターゲットにイベントリスナーを1つ登録する\r\n * \r\n * @param {dom}\r\n *            element DOM要素、document.getElementById(\"xx\");などで取得\r\n * @param {string}\r\n *            [type=\"click\"] イベントの種類\r\n *            {@link https://developer.mozilla.org/en-US/docs/Web/Events}\r\n * @param {function}\r\n *            func 実行する関数\r\n */\r\n/* unused harmony default export */ var _unused_webpack_default_export = (function(element, type, func) { // #74\r\n    type = type || \"click\";\r\n    if (element.addEventListener) {\r\n        element.addEventListener(type, func, false);\r\n    } else if (element.attachEvent) {\r\n        element.attachEvent(\"on\" + type, func); \r\n    } else {\r\n        console.log(\"unable addEventListner %o\", element);\r\n    }\r\n});;\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class setZeroTimeout\r\n * 非同期化\r\n * \r\n * @param {function}\r\n *            global 非同期化して実行する関数\r\n *            <p>\r\n *            参考 {@link https://jsfiddle.net/kou/j73tLum4/8/}\r\n *            {@link https://gist.github.com/mathiasbynens/579895}\r\n *            {@link http://dbaron.org/log/20100309-faster-timeouts}\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(global) {\r\n    \"use strict\";\r\n    var timeouts = [], \r\n        messageName = \"zero-timeout-message\";\r\n    function handleMessage(event) {\r\n        if (event.source === global && event.data === messageName) {\r\n            if (event.stopPropagation)  event.stopPropagation();\r\n            if (timeouts.length) timeouts.shift()();\r\n        }\r\n    }\r\n    if (global.postMessage) {\r\n        if (global.addEventListener) {\r\n            global.addEventListener(\"message\", handleMessage, true); \r\n        }else if (global.attachEvent) {\r\n            global.attachEvent(\"onmessage\", handleMessage); \r\n        }\r\n        return function (fn) { timeouts.push(fn); global.postMessage(messageName, \"*\"); };\r\n    } \r\n    else {\r\n        return function (fn) { setTimeout(fn, 0); }; \r\n    }\r\n}(window));\n\n/***/ }),\n/* 24 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * @memberOf Util\r\n * @class Logger\r\n * @classdesc ロガー\r\n *            <p>\r\n *            モードに応じたログを出力する。画面ログ表示領域、コンソールログへの出力に対応\r\n * \r\n * @param {String}\r\n *            [mode=0] ログ出力モード\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #27\r\n    \"use strict\";\r\n    /** @static */\r\n    Logger.prototype = {\r\n            _logText: [],\r\n            _timestamp : new Date(),\r\n            _logtime : new Date()\r\n        };\r\n    /** @constructor */\r\n    function Logger(mode){\r\n        if(!(this instanceof Logger)) return new Logger(mode);\r\n        this._mode = mode || 0;\r\n        // getKeyによりIndex作成関数を設定する\r\n    }\r\n    /**\r\n     * 一定時間（１分）経過後、最初に本メソッドが呼ばれたときのみログ出力する（ループ用）\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {Number}\r\n     *            i 参考番号<br>\r\n     *            経過時間内のループ回数などの表示に使用することを想定\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     */\r\n    Logger.ByInterval = function(i, text) {\r\n        var ts = new Date(),\r\n            freq = 60000;   // 1分毎\r\n        if (freq < ts - Logger._logtime){\r\n            var t = Object(__WEBPACK_IMPORTED_MODULE_0__util_js__[\"c\" /* D2S */])(ts, \"hh:mm:ss.ppp\"); // #60\r\n            console.log(t + \"[\" + i + \"]~~~~\" + text);\r\n            Logger._logtime = ts;\r\n        }\r\n    };\r\n    /**\r\n     * ログ出力： ログテキストを初期化する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     * @param {String}\r\n     *            [type] ログ区分（\"calc\"：計算用ログ、\"msg\"：メッセージのみ（タイムスタンプなし））\r\n     */\r\n    Logger.ShowLogTextInit=function(text, type) {\r\n        Logger._timestamp = new Date();\r\n        Logger._logText = [];\r\n        if(text) Logger.ShowLogText(text, type);\r\n    };\r\n    /**\r\n     * ログ出力： ログテキストをテキストアレイに追記し、表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     * @param {String}\r\n     *            [type] ログ区分（\"calc\"：計算用ログ、\"msg\"：メッセージのみ（タイムスタンプなし））\r\n     */\r\n    Logger.ShowLogText=function(text, type) {\r\n        if (type === \"calc\") return; // 集計時評価用ログ出力抑止\r\n        // \"msg\"指定のときは経過時間を取らずに、ログのみ出力する\r\n        if (type !== \"msg\"){\r\n            // 処理時間情報を追加する\r\n            var lastTimestamp = Logger._timestamp;\r\n            Logger._timestamp = new Date();\r\n            text = (Math.round( Logger._timestamp - lastTimestamp ) / 1000.0)\r\n                    + \"s \" + text;\r\n            // 数値のカンマ編集（小数部もカンマが入る）\r\n            text = text.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n            text = Object(__WEBPACK_IMPORTED_MODULE_0__util_js__[\"c\" /* D2S */])(Logger._timestamp, \"hh:mm:ss.ppp     \")\r\n                    + text; // #60\r\n        }\r\n        Logger._logText.push(text);\r\n        Logger.ShowText(Logger._logText);\r\n        if(true) console.log(text);\r\n    };\r\n    /**\r\n     * 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            textArray 出力するログ（配列１行がログ１件）\r\n     */\r\n    Logger.ShowText=function(textArray) {\r\n        var iHtmlBody = \"\";\r\n        for (var i = textArray.length - 1; 0 <= i; i--){\r\n            iHtmlBody += textArray[i] + \"<BR>\"; \r\n        }\r\n        Logger.ShowIHtmlBody('fileInfo',iHtmlBody);\r\n    };\r\n    /**\r\n     * 第一引数のID名のiframeに、第二引数のログ（HTML化）を表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            elementId iframeのID名\r\n     * @param {String}\r\n     *            iHtmlBody ログ（HTML化）\r\n     */\r\n    Logger.ShowIHtmlBody=function(elementId, iHtmlBody){\r\n        var body = document.createElement('body');\r\n        body.innerHTML = \"\"\r\n            + \"<style>body{font-size: 10px; margin: 1px; }</style>\"\r\n            + \"<body id='iHtmlBody'>\" + iHtmlBody + \"</body>\";\r\n        var iframe = document.getElementById(elementId);\r\n        iframe.contentDocument.body = body;\r\n    };\r\n    \r\n    // newの戻り値\r\n    return Logger;\r\n}());\n\n/***/ }),\n/* 25 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * 指定されたtextareaを使って、クリップボードにコピーする\r\n * \r\n * @memberof Util\r\n * @param {Object}\r\n *            elementID textareaのID名\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(elementId) { // #61\r\n    \"usestrict\";\r\n    // textareaをクリップボードにコピーする\r\n    var area = document.getElementById(elementId);\r\n    area.select();\r\n    document.execCommand(\"copy\");\r\n});\n\n/***/ }),\n/* 26 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class binarySearch\r\n * @classdesc 配列二分木検索\r\n * \r\n * @param {Number}\r\n *            val 検索する値\r\n * @param {Array}\r\n *            arr 検索対象の配列\r\n * @param {Function}\r\n *            [func=function(val){return val.valueOf();}] 配列要素に対して、値を取得する関数\r\n * @param {Index}\r\n *            [low=0] 配列の検査範囲の下限\r\n * @param {Index}\r\n *            [high=arr.length-1] 配列の下限検査範囲の上限\r\n * @param {Boolean}\r\n *            [isEqual=false] 完全一致しないときのリターン値：trueのとき-1、falseのとき値との差が最も少ない位置\r\n * @example i=Util.binarySearch(x,arrXY,function(e){return e.x;});\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (val, arr, func, low, high, isEqual) {\r\n    \"use strict\";\r\n    func = func || function(val){ return val.valueOf(); };\r\n    low = low || 0;\r\n    if (!arr) return -1;\r\n    high = high || arr.length - 1;\r\n    isEqual = isEqual || false;\r\n    var middle,\r\n        valMiddle;\r\n    while( low <= high ){\r\n        middle = Math.floor(low + high) / 2 | 0;\r\n        valMiddle = func(arr[middle]);\r\n        if(valMiddle === val) return middle;\r\n        else if(val < valMiddle) high = middle - 1;\r\n        else low = middle + 1;\r\n    }\r\n    // 値が完全一致する要素がなかった場合の戻り値を編集する\r\n    if (isEqual){\r\n        return -1;  // 完全一致指定のとき(-1)をリターンする\r\n    } else {        // 完全一致指定でないとき、値との差が最も少ない位置をリターンする #46\r\n        // low,middle,high を補正する\r\n        low = Math.min(Math.max(0, low), arr.length - 1);\r\n        high = Math.max(0, Math.min(high, arr.length - 1));\r\n        middle = Math.max(low, Math.min(middle, high));\r\n        if(high < low){\r\n            var tmp = high;\r\n            high= low;\r\n            low = tmp;\r\n        }\r\n        // low,middle,high のうち、値との差が最も少ない位置をリターンする\r\n        if(func(arr[middle]) < val){\r\n            if (val - func(arr[middle]) < func(arr[high]) - val) {\r\n                return middle;\r\n            } else {\r\n                return high;\r\n            }\r\n        }else{\r\n            if (func(arr[high]) <= val && val < func(arr[middle])){\r\n                return high;\r\n            } else if (val - func(arr[low]) < func(arr[middle]) - val){\r\n                return low;\r\n            } else {\r\n                return middle;\r\n            }\r\n        }\r\n        return -1;  // 指定範囲外\r\n    }\r\n});;\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class Heap\r\n * @classdesc Heap ヒープ(二分ヒープ)\r\n *            <p>\r\n *            最小値(最大値)を効率よく取り出すことができるデータ構造\r\n *            <p>\r\n *            参考 {@link http://d.hatena.ne.jp/otaks/20121220/1355993039}\r\n * \r\n * @param {Function}\r\n *            [func=function(obj){ return +obj; }]\r\n *            pushで登録するオブジェクトからヒープの大小比較判定値を取り出す関数\r\n * @param {Function}\r\n *            [delFunc=function(obj){ return obj; }] 削除対象ノードを特定する関数<br>\r\n *            「delの引数オブジェクト === delFunc(heapのノードのオブジェクト)」 で判定する\r\n * \r\n * @example h = HJN_util.Heap( function(obj){ return +obj; } );<br>\r\n *          h.push(\"12.34\") // データを登録する ;<br>\r\n *          h.push(0.12) // ;<br>\r\n *          h.pop() // => 0.12 最小値のオブジェクトを取り出す ;<br>\r\n *          h.pop() // => \"12.34\" ;<br>\r\n *          h.top() // =>undefined 最小値のオブジェクト ;<br>\r\n *          h.size() // =>0 登録オブジェクト数\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #55\r\n    \"use strict\";\r\n    /** @constructor */\r\n    function Heap(func, delFunc){ \r\n        if(!(this instanceof Heap)) return new Heap(func, delFunc);\r\n        \r\n        this._func = (typeof(func) === \"function\")\r\n                ? func\r\n                : function(node){\r\n                    if (typeof(node.val) === \"undefined\") { return node }\r\n                    else { return node.val}; \r\n                  };\r\n        this._delFunc = (typeof(delFunc) === \"function\")\r\n                ? delFunc\r\n                : function(node){\r\n                    if(typeof(node.obj) === \"undefined\"){ return node }\r\n                    else { return node.obj};\r\n                  };\r\n        this._heap = []; // Heap構造体（大小比較数値用）\r\n    }\r\n\r\n    //\r\n    /**\r\n     * upheap：root方向へheapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     */\r\n    Heap.prototype._upHeap = function(k) {\r\n        // 指定位置のオブジェクトとその値の控えを取る\r\n        var obj = this._heap[k];\r\n        var val = this._func(obj);\r\n        while( 0 < k ) {\r\n            // 親ノードの配列位置を求める\r\n            var p = Math.floor( (k - 1) / 2 );\r\n            // 逆転していなければ処理終了\r\n            if( this._func(this._heap[p]) <= val ) break;\r\n            // 親ノードと処理対象を入れ替える\r\n            this._heap[k] = this._heap[p];\r\n            this._heap[p] = obj;\r\n            k = p;\r\n        }\r\n    };\r\n    /**\r\n     * downheap：reaf方向へheapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     */\r\n    Heap.prototype._downHeap = function(k) {\r\n        // 指定位置のオブジェクトとその値を控えを取る\r\n        var obj = this._heap[k];\r\n        var val = this._func(obj);\r\n        var size = this._heap.length;\r\n        // 子ノードが無くなるまで繰り返す\r\n        while( k * 2 + 1 < size) {\r\n            var a = k * 2 + 1;  // 子ノード（左）\r\n            var b = a + 1;      // 子ノード（右）\r\n            // aが大小比較対象先となる小さい子ノードを指すようにする\r\n            if( b < size && this._func(this._heap[a]) > this._func(this._heap[b]) ) a = b;\r\n            // 逆転していなければ処理終了\r\n            if( val < this._func(this._heap[a]) ) break;\r\n            // 子ノード（比較対象）と処理対象を入れ替える\r\n            this._heap[k] = this._heap[a];\r\n            this._heap[a] = obj;\r\n            k = a;\r\n        }\r\n    };\r\n    /**\r\n     * _heapのk番目を削除し、_heapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     * @return {object|undefined} 削除したオブジェクト（削除対象が無いとき undefined）\r\n     */\r\n    Heap.prototype._del = function(k) {\r\n        if (this._heap.length <= k) return undefined; // ヒープ外を指定したとき\r\n\r\n        var ret = this._heap[k]; // 削除したオブジェクト\r\n        var obj = this._heap.pop(); // 末尾ノードを取り出す\r\n        var size = this._heap.length;\r\n        if (k === size) return ret; // 末尾ノードを削除したとき再構築不要\r\n\r\n        this._heap[k] = obj; // 末尾ノードを指定位置に移動する\r\n        if (size === 1) return ret; // ヒープが１個のとき、再構築不要\r\n\r\n        // upHeapの判定\r\n        var val = this._func(obj); // 末尾ノードにあったオブジェクトの値\r\n        var p = Math.floor( (k - 1) / 2 );\r\n        if (0 < k && val < this._func(this._heap[p])) {\r\n            // 親ノードより小さいときupheapする\r\n            this._upHeap(k);\r\n        } else {\r\n            var a = k * 2 + 1;  // 子ノード（左）\r\n            var b = a + 1;      // 子ノード（右）\r\n            if (a < size) { // 子ノードがあるとき（末端の枝葉でないとき）のみdownHeapする\r\n                // aに、子ノードの小さい方のノードを設定する\r\n                if( b < size && (this._func(this._heap[a]) > this._func(this._heap[b])) ) a = b;\r\n                // 自分より小さい子ノードがあるとき、downheapする\r\n                if( this._func(this._heap[a]) < val ) this._downHeap(k);\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    // public\r\n    /**\r\n     * データを追加する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @param {Object}\r\n     *            obj 登録オブジェクト\r\n     */\r\n    Heap.prototype.push = function(obj) {\r\n        // 末尾に追加し、upHeapする\r\n        this._heap.push(obj);\r\n        this._upHeap(this._heap.length - 1);\r\n        if (this._deletable) {\r\n            this._deleteMap = {};\r\n        }\r\n    };\r\n    /**\r\n     * 最小値のデータを取り出す\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Object|undefined} 最小値\r\n     */\r\n    Heap.prototype.pop = function() {\r\n        // 先頭ノードを戻り値用に退避する\r\n        var ret = this._heap[0];\r\n        // 末尾ノードを退避し削除する\r\n        var obj = this._heap.pop();\r\n        if(0 < this._heap.length){\r\n            // ヒープが空でないとき、末尾ノードを先頭に移動し、downHeapする\r\n            this._heap[0] = obj;\r\n            this._downHeap(0);\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * 指定データを削除する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @param {Object}\r\n     *            obj 削除対象と同一オブジェクト(=== で判定)\r\n     * @return {Object|undefined} 削除したオブジェクト（undefined：合致するオブジェクトが無いとき）\r\n     */\r\n    Heap.prototype.del = function(obj) { // #59\r\n        // 削除対象オブジェクトのHeap配列位置を取得する\r\n        var k = -1;\r\n        if (this._heap.some(find, this)){\r\n            // 合致するオブジェクトのノードを削除し、合致ノードをリターンする\r\n            return this._del(k);\r\n        }\r\n        // 合致するオブジェクトが無いとき\r\n        return undefined;\r\n        \r\n        function find(e, i) {\r\n            if(this._delFunc(e) === obj){\r\n                k = i;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * 最小値を返却する（登録データは変更しない）\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Object|undefined} 最小値\r\n     */\r\n    Heap.prototype.top = function() {\r\n        return this._heap[0];\r\n    };\r\n    /**\r\n     * ヒープのサイズを返却する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Number} ヒープサイズ（0以上）\r\n     */\r\n    Heap.prototype.size = function() {\r\n        return this._heap.length;\r\n    };\r\n    \r\n    /* new */\r\n    return Heap;\r\n}());\n\n/***/ }),\n/* 28 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_Config_js__ = __webpack_require__(29);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__util_Config_js__[\"a\"]; });\n\r\n\r\n// import Config_addMenu from \"./util-config_addMenu.js\";\r\n// Config.addMenu = Config_addMenu;\r\n\r\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @memberOf Util\r\n * @class Config\r\n * @classdesc 定数設定機能（設定HTML作成機能付き）\r\n *            <p>\r\n *            日時、TATフォーマット指定機能追加用に作成\r\n * \r\n * @param {String}\r\n *            [prefix=''] 定数の名前空間を一位に指定する文字列、指定しない場合グローバル\r\n * @param {String}\r\n *            [ol='ol'] インデント(.nDown() .nUp())に使うHTMLタグ\r\n * @param {String}\r\n *            [globalName='HJN'] Configを登録するグローバル変数(window)の変数名\r\n * @example this._config = HjnConfig(\"m\") // config設定画面定義\r\n *          .label(null,\"------\").n() // ラベルを表示し、改行\r\n *          .name(\"ENDIAN\").label(null,\"[endian(long field)]\") //key:ENDIAN\r\n *          .radio(def(\"ENDIAN_LIL\", true), null, \"little\", true) //表示ラベルと選択時設定値\r\n *          .radio(def(\"ENDIAN_BIG\", false), null, \"big\");\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #24\r\n    \"use strict\";\r\n    /** @static */\r\n    Config.prototype.__config = {};   // config設定コンテナ\r\n    Config.prototype.__config._onFunctions = {}; // 関数登録用\r\n\r\n    /** @constructor */\r\n    function Config(prefix, ol, globalName){ \r\n        if(!(this instanceof Config)) return new Config(prefix, ol, globalName);\r\n        \r\n        this._pre = (prefix || '') + \".\"; // 各フィールド、要素の名称のプレフィックス(区切り文字\".\")\r\n        this._ols = ol ? '<' + ol + '>' : '<ol>';   // リストに使用する要素（初期値 ol )\r\n        this._ole = ol ? '</' + ol + '>' : '</ol>';\r\n        this._html = this._ols; // config設定画面のHtml\r\n        this._nameHtml = '';    // HTMLタグの name属性指定\r\n        this._name = '';        // radioのConfig.get用\r\n        this._addEventList = []; // HTMLに設定するイベント一覧{id,func,type} #74\r\n\r\n        // グローバル変数(window)にConfigを登録する #74\r\n        this._globalName = globalName || \"HJN\";\r\n        if (window[this._globalName].Config === undefined){\r\n            window[this._globalName].Config = Config;\r\n        }\r\n        window[this._globalName].Config[prefix] = this;\r\n    }\r\n\r\n    /**\r\n     * HTML要素の値が変更した時に、configに当該要素を登録する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.on = function(t) {\r\n        if (t.type === \"radio\") { // radioのとき、nameに対して、選択されたキー値（idからprefixを削除した値）を登録\r\n            this.prototype.__config[t.name] = t.id.substr(t.id.indexOf(\".\") + 1);\r\n            // on呼出し関数が登録されているとき、登録関数を呼び出す #51\r\n            var func = Config.GetConfig().getFunctionById(t.id); // #59\r\n            if(typeof(func) === \"function\") func();\r\n        }else if (t.type === \"number\") {    // numberのとき、idに対する、value(入力値)を数値として登録\r\n            this.prototype.__config[t.id] = +t.value;\r\n        } else {                            // textのとき、idに対する、value(入力値)を登録\r\n            this.prototype.__config[t.id] = t.value;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Configリポジトリ管理インスタンスを取得する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.GetConfig = function(prefix) { // #59\r\n        return new Config(prefix);\r\n    }\r\n    \r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * configに登録されているid(=prefix+key)の設定値を取得する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.getObjctById = function(id) {\r\n        // return this.__config[id];\r\n        return Config.prototype.__config[id];\r\n    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の関数を取得する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.getFunctionByKey = function(key) { // #59\r\n        return Config.prototype.__config\r\n                ._onFunctions[this._pre + this.getValueByKey(key)];\r\n    };\r\n    /**\r\n     * configの指定Idに登録されている関数を取得する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.getFunctionById = function(id) { // #53\r\n        return Config.prototype.__config._onFunctions[id];\r\n    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の設定値を取得する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.getValueByKey = function(key) { \r\n        return this.getObjctById(this._pre + key);\r\n    };\r\n    /**\r\n     * config設定用HTMLテキストを取得する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.getHtml = function() { \r\n        return this._html + this._ole;\r\n    };\r\n    /**\r\n     * keyに値を設定する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.set = function(key, val) { \r\n        this.value[this._pre + key] = val;\r\n    };\r\n    \r\n    // config作成用 メソッド\r\n    /**\r\n     * 定義＆設定画面作成用機能： 改行\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.n = function (str) {\r\n        str = str || \"\";\r\n        this._html += this._ole + str + this._ols;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ネスト一つ下げ\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.nDown = function () {\r\n        this._html += this._ols;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ネスト一つ上げ\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.nUp = function () {\r\n        this._html += this._ole;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： nameを変更する（radio等の先頭で指定）\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.name = function (str) {\r\n        this._nameHtml = str ? 'name=\"' + this._pre + str + '\" ' : '';\r\n        this._name = str;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラベル要素(prefix+keyで関連付けるformのid属性となる)\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.label = function (key, str, attribute) {\r\n        this._html += '<label ' +\r\n                        (key ? 'for=\"' + this._pre + key + '\" ': '') +\r\n                        (attribute || '') + '>' +\r\n                        (str || '') +\r\n                        '</label>\\n'; // #51\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラベル付された各種入力フォーム\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.labeledForm = function (key, type, typedAttribute,\r\n                                pLabel, sLabel, val, attribute, check, cssClass) {\r\n        var classStr = (cssClass) ? ' class=\"' + cssClass + '\"' : ''; // #51\r\n        this._html += '<label' + classStr + '>' + // #51\r\n                    (pLabel ? pLabel : '') +\r\n                    '<input type=\"' +type + '\" ' +\r\n                        (typedAttribute || '') + \r\n                        this._nameHtml +\r\n                        'id=\"' + this._pre + key + '\" '+ // idがユニークになるようkeyにprefixを付与\r\n                        'onchange=\"' + this._globalName + '.Config.on(this);\" ' + // #74\r\n                        (val ? 'value=\"' + val + '\" ' : '') +   // val は、キー値のまま\r\n                        (attribute || '') + \r\n                        (check ? ' checked=\"checked;\"' : '') +\r\n                    '>' +\r\n                    (sLabel ? sLabel : '') +\r\n                    '</label>\\n'; // #51\r\n        // デフォルト指定があるとき configにデフォルト値を設定する\r\n        if (type === \"radio\" && check) {    // radioのとき、nameに対して、選択状態のkeyを登録\r\n            Config.prototype.__config[this._pre + this._name] = key;\r\n        } else if (type === \"number\") { // numberradioのとき、keyに対する、val(入力値)を数値として登録\r\n            Config.prototype.__config[this._pre + key] = +val;\r\n        } else {    // text,numberのとき、keyに対する、val(入力値)を登録\r\n            Config.prototype.__config[this._pre + key] = val;\r\n        }\r\n        // HTML生成時に設定するイベントを退避する #74\r\n        this._addEventList.push({\r\n            id: this._pre + key,\r\n            func: Config.on,\r\n            type: \"click\"});\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： テキストボックス要素で、文字列を設定\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.number = function (key, pLabel, sLabel, val, attribute) {\r\n        Config.prototype.labeledForm.call(this, key, \"number\", \"\", \r\n                                pLabel, sLabel, val, attribute);\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： テキストボックス要素で、数値を設定\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.text = function (key, pLabel, sLabel, val, attribute) {\r\n        Config.prototype.labeledForm.call(this, key, \"text\", \"\", \r\n                                pLabel, sLabel, val, attribute);\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラジオボタン要素で、選択肢の一つを設定\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.radio = function (key, pLabel, sLabel, check, attribute, func) {\r\n        Config.prototype.labeledForm.call(this, key, \"radio\", (check ? 'checked=\"checked;\"' : ''),\r\n                                pLabel, sLabel, \"\", attribute, check, \"hjnLabel4Input\");\r\n        // 関数登録指定時、attributeを関数名として、指定関数を登録する #51\r\n        if (func){\r\n            Config.prototype.__config._onFunctions[this._pre + key] = func;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /* new */\r\n    return Config;\r\n}());\n\n/***/ }),\n/* 30 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Tat;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__timeSeries_MappedETat_js__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timeSeries_ETat_js__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__timeSeries_Cash_js__ = __webpack_require__(10);\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class Tat\r\n * @classdesc Tat 応答時間(Turnaround time)の時系列データ管理クラス\r\n * @param {ETAT}\r\n *            [eTat] [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]<br>\r\n *            eTatが指定されているとき、this.seriesSet を設定する\r\n */\r\nfunction Tat(eTat) {\r\n    \r\n    this.cTpsUnit = Tat.UNIT_CTPS[0];\r\n    this.seriesSet = [];\r\n\r\n    if (eTat){\r\n        this.createSeries(eTat);\r\n    }\r\n}\r\n\r\n/**\r\n * クラス定数\r\n */\r\nTat.UNIT_CTPS = [\r\n        { label: \"/sec\",   unit: 1000 },\r\n        { label: \"/min\",   unit: 60000 },\r\n        { label: \"/hour\",  unit: 3600000 },\r\n        { label: \"/day\",   unit: 86400000 }];\r\nTat.CYCLE = 60000;  // ミリ秒 #57\r\n\r\n/**\r\n * 終了時刻のTAT時系列データ(eTat)から、描画用時系列データ配列を作成する\r\n * \r\n * @memberOf TimeSeries\r\n * @param {ETAT}\r\n *            eTat [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]\r\n * @return {seriesSet} dygraph用時系列データ配列\r\n */\r\nTat.prototype.createSeries = function (eTat) {\r\n    // 時系列データを初期化する\r\n    var conc = [], cTps = [], eTps = [], sTat = [], eMps = [], eAps = [];\r\n\r\n    // 集計対象データがないとき\r\n    if (eTat.length === 0)\r\n        return [ conc, cTps, eTps, sTat, eTat, eMps, eAps ];\r\n\r\n    /** eTatをソートする * */\r\n    // 開始時刻でソートする #35\r\n    eTat.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[1:eTat sorten ] \" + eTat.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** eTps(時間あたり処理件数),eMps,eAps(時間あたり最大/平均応答時間)時系列データを作成する * */\r\n    var dFrom = Math.floor(eTat[0].x / Tat.CYCLE) * Tat.CYCLE,\r\n        dTo = dFrom + Tat.CYCLE,\r\n        num = 0, // #39\r\n        maxTat = 0.0, // #19\r\n        aveTmp = 0.0;\r\n    eTat.forEach(function (e) {\r\n        if (e.x < dTo) {\r\n            num += 1;\r\n            if (maxTat < e.y) maxTat = e.y; // #19\r\n            aveTmp += e.y;\r\n        } else {\r\n            eTps.push({x : dFrom, y : num * 1000 / Tat.CYCLE}); // #57\r\n            eMps.push({x : dFrom, y : maxTat}); // #19\r\n            eAps.push({x : dFrom, y : aveTmp / num});\r\n            dFrom = Math.floor(e.x / Tat.CYCLE) * Tat.CYCLE;\r\n            dTo = dFrom + Tat.CYCLE;\r\n            num = 1;\r\n            maxTat = e.y; // #19 #39\r\n            aveTmp = e.y; // #39\r\n        }\r\n    }, this);\r\n    eTps.push({x : dFrom,             y : num * 1000 / Tat.CYCLE}); // #57\r\n    eTps.push({x : dFrom + Tat.CYCLE, y : num * 1000 / Tat.CYCLE}); // #57\r\n    eMps.push({x : dFrom,             y : maxTat}); // #19\r\n    eMps.push({x : dFrom + Tat.CYCLE, y : maxTat}); // #57\r\n    eAps.push({x : dFrom,             y : aveTmp / num});\r\n    eAps.push({x : dFrom + Tat.CYCLE, y : aveTmp / num}); // #57\r\n    \r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[3:eTps,eMps,eAps created] \" + eTps.length\r\n            + \" plots\", \"calc\");\r\n\r\n    /** sTat（開始時間）時系列データを作成する,同時に入力eTatを補正する * */\r\n    // eTatからsTatを登録する\r\n    eTat.forEach(function (e, i) {\r\n        // 処理時間=0 のとき、1マイクロ秒とみなす(有効桁0.2マイクロ秒に切上される）\r\n        if (e.y === 0) {\r\n            e.y = 0.001;\r\n            e.x += e.y;\r\n        } // ミリ秒\r\n        // sTatにeTatデータを登録する\r\n        sTat.push({\r\n            x : e.x - e.y,\r\n            y : e.y,\r\n            eTatIdx : i\r\n        });\r\n    });\r\n    // 開始時刻でソートする\r\n    sTat.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    // eTatにsTatの位置を設定する\r\n    sTat.forEach(function (s, i) {\r\n        eTat[s.eTatIdx].sTatIdx = i;\r\n    });\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[2:sTat created] \" + sTat.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** CONC(多重度)時系列データを作成する * */\r\n    var concTmp = [];\r\n    // eTatから、多重度が変化した時刻の一覧を作成する\r\n    eTat.map(function (e, i) {\r\n        // 開始時刻にカウントアップ情報を追加する\r\n        concTmp.push({x : e.x - e.y, y : 1});\r\n        // 終了時刻をカウントダウン情報を追加する\r\n        concTmp.push({x : e.x, y : -1});\r\n    });\r\n    // concを変化した時刻（開始or終了）でソートする\r\n    concTmp.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    // concに同時取引数を設定する\r\n    var concNum = 0;\r\n    concTmp.forEach(function (c, i, a) {\r\n        // 重複削除用フラグを立てる #23\r\n        if (i > 0 && c.x === a[i - 1].x) {\r\n            a[i - 1].del = true;\r\n        }\r\n        // 同時取引数を集計する(前提：c.y に、開始なら1、終了なら(-1)が設定されている)\r\n        concNum += c.y;\r\n        c.y = concNum;\r\n    });\r\n    // concの同じ時刻の点を削除する #23\r\n    conc = concTmp.filter(function (c) {\r\n        return !c.del;\r\n    });\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[4:conc created] \" + conc.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** cTPS秒間同時処理件数（concurrent transactions/sec）時系列データを作成する #18 * */\r\n    var XSec = floorTime(conc[0].x, Tat.CYCLE), // ミリ秒\r\n    YMax = conc[0].y, YNext = conc[0].y;\r\n    // concの先頭と末尾の時刻(x)の差よりPlot数を求め、Plot数が規定数(8000個)を超えたら、桁上げする #38\r\n    var cTpsMaxPlots = 8000, // 桁上げするPlot数\r\n    cTpsUnits = Tat.UNIT_CTPS, // #48\r\n    concTerm = conc[conc.length - 1].x - conc[0].x, // ミリ秒\r\n    cTpsIdx = 0;\r\n    while (cTpsIdx < cTpsUnits.length\r\n            && concTerm / cTpsUnits[cTpsIdx].unit > cTpsMaxPlots) {\r\n        cTpsIdx++;\r\n    }\r\n    cTpsIdx = (cTpsUnits.length > cTpsIdx) ? cTpsIdx : cTpsUnits.length - 1;\r\n    this.cTpsUnit = cTpsUnits[cTpsIdx];\r\n    // メニューのViewのcTPSのラベルに単位を追加する\r\n    var pos = (this === HJN.chart) ? 0 : 1;\r\n    document.getElementsByName(\"cTps\")[pos]\r\n                .parentNode.lastChild.data = HJN.CTPS.name + this.cTpsUnit.label;\r\n\r\n    // 規定時間単位の最大同時処理数cTPSを作成する\r\n    conc.forEach(function (c) {\r\n        if (floorTime(c.x, this.cTpsUnit.unit) === XSec) { // c.xは ミリ秒\r\n            YMax = Math.max(YMax, c.y);\r\n        } else {\r\n            cTps.push({x : XSec, y : Math.max(YMax, YNext)});\r\n            for (var t = XSec + this.cTpsUnit.unit;\r\n                    t < floorTime(c.x, this.cTpsUnit.unit);\r\n                    t += this.cTpsUnit.unit) { // c.xはミリ秒\r\n                        cTps.push({x : t, y : YNext});\r\n                if (YNext === 0) break;\r\n            }\r\n            XSec = floorTime(c.x, this.cTpsUnit.unit);\r\n            YMax = Math.max(YNext, c.y);\r\n        }\r\n        YNext = c.y;\r\n    }, this);\r\n    cTps.push({x : XSec, y : YMax});\r\n    cTps.push({x : XSec + this.cTpsUnit.unit, y : YNext});\r\n\r\n    // Util.Logger.ShowLogText(\"[5-1:cTps created] \" + cTps.length + \"\r\n    // plots\",\"calc\");\r\n\r\n    // cTpsのxからindexを引くMapを作成する #18\r\n    eTat = new __WEBPACK_IMPORTED_MODULE_2__timeSeries_ETat_js__[\"a\" /* default */](eTat); // #75\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[5:cTps created] \" + cTps.length + \" plots(\"\r\n            + +Math.floor(concTerm / 1000) + \"sec\" + cTpsUnits[cTpsIdx].label\r\n            + \")\", \"calc\");\r\n\r\n    // 集計結果をHJN.Graphに設定する 注）this.SERIESESと同じ順番にすること\r\n    this.seriesSet = [ conc, cTps, eTps, sTat, eTat, eMps, eAps ];\r\n\r\n    return this;\r\n\r\n    \r\n    // 時刻を指定ミリ秒間隔で切り捨てる（内部関数）\r\n    function floorTime(t, cycle) {\r\n        return Math.floor(Math.floor(t / cycle) * cycle);\r\n    }\r\n};\r\n\r\n/**\r\n * cTpsの集計単位を取得する\r\n * \r\n * @memberOf TimeSeries\r\n * @return {object} 単位構造体 { label: \"/sec\", unit: 1000 }\r\n */\r\nTat.prototype.getCTpsUnit = function () {\r\n    return this.cTpsUnit;\r\n}\r\n\r\n/**\r\n * seriesSetを取得する\r\n * \r\n * @memberOf TimeSeries\r\n * @return {array} seriesSet\r\n */\r\nTat.prototype.getSeriesSet = function () {\r\n    return this.seriesSet;\r\n}\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tatLogDiver_tatLogDiver_Graph_js__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__timeSeries_MenuConfig_js__ = __webpack_require__(12);\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @memberof File\r\n * @class FileParser\r\n * @classdesc ファイルをパースして読み込む\r\n *            <p>\r\n *            パース条件指定画面生成つき\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() {\r\n    \"use strict\";\r\n    /** @static */\r\n    FileParser.prototype.__keyConfig = {};  // configで使用する値の定義\r\n\r\n    /** constructor */\r\n    function FileParser(){\r\n        if(!(this instanceof FileParser)) return new FileParser();\r\n\r\n/*        this.configId = \"_config_\" + \"File\"; // #53\r\n\r\n        // コンストラクタ内部関数：keyを定義する\r\n        var def = function(key, val, onFunc) {\r\n                    var _keyConf = FileParser.prototype.__keyConfig[key] = {};\r\n                    _keyConf.value = (val === undefined) ? key : val; // getValueByKeyの返却値（デフォルト：keyと同じ文字列）\r\n                    _keyConf.getValue = function () { return (val === undefined) ? key : val; };\r\n                    _keyConf.onFunc = onFunc || null;   // onイベント時に実行する処理（メニューのa属性などで利用）\r\n                    return key;\r\n                };\r\n        var v = function(key, fieldId) { // fieldIdの値を返却値とする(デフォルト： key+\".v\")\r\n                    var _keyConf = FileParser.prototype.__keyConfig[key] = {};\r\n                    _keyConf.value = key;           // getValueByKeyの返却値（デフォルト：keyと同じ文字列）\r\n                    _keyConf.getValue = function () {\r\n                            return Util.Config(\"m\").getValueByKey(fieldId || key + \".v\"); // TODO:mの指定\r\n                        };\r\n                    return key;\r\n                };\r\n\r\n        // 名称と挙動の定義\r\n        var env = \"File\";\r\n        HJN.Config = {}; \r\n        HJN.Config[env] = this[\"_config_\" + env] = Util.Config(env) // #53\r\n            // File Format Config設定画面定義 #51\r\n            .name(\"NEWFILE\").label(null,\"Registered \") // #23\r\n                .radio(\"NEWDATA\", null, \"newly\", true)\r\n                .radio(\"ADDDATA\", null, \"additionally\").n()\r\n            .label(null,\"----- File format definition --------\").n()\r\n            .n(\"<br>\")\r\n            .name(\"LF\").label(null, \"[Line feed code]\").n()\r\n            .radio(v(\"LF_FIX\"), null, \"Fixed Length\")\r\n                .number(\"LF_FIX.v\",  null, \"byte\",\"80\",'style=\"width:60px;\"').n()\r\n            .radio(def(\"LF_WIN\",  13), null, \"Windows:CR(13)+LF(10)\", true).n()\r\n            .radio(def(\"LF_UNIX\", 10), null, \"Unix/Linux:LF(10)\").n()\r\n            .radio(def(\"LF_ZOS\",  15), null, \"zOS:NEL(15)\").n()\r\n            .radio(def(\"LF_MAC\",  13), null, \"Mac:CR(13)\").n()\r\n            .radio(v(\"LF_ELSE\"), null, \"other charcode\")\r\n                .number(\"LF_ELSE.v\", \"(\", \")\", \"10\", 'style=\"width:40px;\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"SEP\").label(null,\"[CSV delimiter]\").n()\r\n            .radio(def(\"SEP_COMMA\", ','), null, \"comma\", true)\r\n            .radio(def(\"SEP_TAB\", '\\t'),   null,\"tab\")\r\n            .radio(v(\"SEP_ELSE\"), null, \"other\")\r\n                .text(\"SEP_ELSE.v\", '\"', '\"', ',', 'size=\"2\" placeholder=\",\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"TIME\").label(null, \"[Timestamp field]\").n()\r\n            .number(\"TIME_COL\", \"\", \"th column of CSV\", \"1\", 'style=\"width:40px;\"').n()\r\n            .name(\"TIME_POS\")\r\n                .number(\"TIME_POS\", \"Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n                .number(\"TIME_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n            .name(\"TIME_FORM\").label(null,\"Format:\").n()\r\n                .radio(\"TIME_FORM_YMD\", \"text\", null, true)\r\n                    .text(\"TIME_YMD\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"').n()\r\n                .radio(\"TIME_FORM_TEXT\", \"(num)\", \"text\")\r\n                .radio(\"TIME_FORM_LONG\", null, \"long\").n()\r\n                .nDown()\r\n                .name(\"TIME_UNIT\").label(null, \"Units of numbers:\")\r\n                    .radio(def(\"TIME_UNIT_MS\", 1), null, \"msec\")\r\n                    .radio(def(\"TIME_UNIT_SEC\", 1000), null, \"sec\", true)\r\n                .nUp()\r\n            .n(\"<br>\")\r\n            .name(\"TAT\").label(null,\"[Turnaround time(TAT) field]\").n()\r\n            .number(\"TAT_COL\", \"\", \"th column of CSV\", \"2\", 'style=\"width:40px;\"').n()\r\n            .name(\"TAT_POS\")\r\n                .number(\"TAT_POS\", \"Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n                .number(\"TAT_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n            .name(\"TAT_UNIT\").label(null, \"Units of numbers:\")\r\n                    .radio(def(\"TAT_UNIT_MS\", 1), null, \"msec\")\r\n                    .radio(def(\"TAT_UNIT_SEC\", 1000), null, \"sec\", true).n()\r\n            .name(\"TAT_FORM\").label(null,\"Format: \")\r\n                .radio(\"TAT_FORM_TEXT\", null, \"text\", true)\r\n                .radio(\"TAT_FORM_LONG\", null, \"long\").n()\r\n                .nDown()\r\n                .name(\"ENDIAN\").label(null, \"for long Endian: \")\r\n                    .radio(def(\"ENDIAN_LIL\", true), null, \"little\", true)\r\n                    .radio(def(\"ENDIAN_BIG\", false), null, \"big\")\r\n                .nUp()\r\n            .n(\"<br>\")\r\n        ;\r\n\r\n        // Filter Config用関数定義(radio用） #51\r\n        env = \"Filter\"\r\n        var func_F_SYNC_UPPER = function(){ Graph.DrawCallback(HJN.chart.graph); },\r\n            func_F_SYNC_DETAIL = function(){ Graph.DrawCallback(HJN.chartD.graph); };\r\n        // Filter Config設定画面定義 #51\r\n        HJN.Config[env] = this[\"_config_\" + env] = Util.Config(env) // #53\r\n            .name(\"F_SYNC\").label(null,\"Sync\") // #50\r\n                .radio(\"F_SYNC_UPPER\", null, \"Upper\", false ,null, func_F_SYNC_UPPER) // #51\r\n                .radio(\"F_SYNC_DETAIL\", null, \"Detail\", false, null, func_F_SYNC_DETAIL)\r\n                .radio(\"F_ASYNC\", null, \"Async\", true).n()\r\n            .label(null,\"----- Data filter condition--------\").n()\r\n                .n(\"<br>\")\r\n                .name(\"F_TIME\").label(null, \"[Date filter]\").n()\r\n                .label(null,\"Include if end time is between\").n()\r\n                    .text(\"F_TIME_FROM\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"')\r\n                    .label(null,\"and\").n()\r\n                    .text(\"F_TIME_TO\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"').n()\r\n                .n(\"<br>\")\r\n                .name(\"F_TAT\").label(null,\"[Turnaround time(TAT) filter]\").n()\r\n                .label(null,\"Include if TAT is between\").n()\r\n                    .number(\"F_TAT_FROM\", null, null, \"0\", 'style=\"width:80px;\"')\r\n                    .number(\"F_TAT_TO\", \"and\", null, null, 'style=\"width:80px;\"').n()\r\n                .n(\"<br>\")\r\n                .name(\"F_TEXT\").label(null,\"[Text filter]\")\r\n                    .radio(\"F_TEXT_NON\", null, \"Don't use.\", true).n()\r\n                    .radio(\"F_TEXT_INCLUDE\", null, \"Include \")\r\n                    .radio(\"F_TEXT_EXCLUDE\", null, \"Exclude \").n()\r\n                    .number(\"F_TEXT_LEN\", \"if \", \" bytes\", null, 'style=\"width:40px;\"')\r\n                    .number(\"F_TEXT_POS\", \"from the \", \"th byte\", \"1\", 'style=\"width:40px;\"').n()\r\n                    .number(\"F_TEXT_COL\", \"from head of the\", \"th column of CSV\", \"3\", 'style=\"width:40px;\"').n()\r\n                    .text(\"F_TEXT_REG\", \"match the regular expression\", null, null, 'size=\"7\" placeholder=\".*\"').n()\r\n                .n(\"<br>\")\r\n        ; */\r\n    }\r\n\r\n    // class method\r\n    /**\r\n     * ファイルリーダのプロパティ管理インスタンスを取得する\r\n     * \r\n     * @memberof tatLogDiver.FileParser\r\n     * @param {Object}\r\n     *            fileParser ファイルリーダ\r\n     * @param {String}\r\n     *            type プロパティ種別名（\"File\"|\"Filter\"|\"Simulator\")\r\n     * @return {Object} プロパティ\r\n     */\r\n    FileParser.Property = (function() {\r\n        \"use strict\";\r\n        /** @constructor */\r\n        function Property(fileParser, type){ \r\n            if(!(this instanceof Property)) return new Property(fileParser, type);\r\n            this._type = type || \"File\";\r\n            this._config     = fileParser[\"_config_\" + this._type];\r\n            this.__keyConfig = fileParser.__keyConfig;\r\n        }\r\n\r\n        // public\r\n        /**\r\n         * keyの値に指定されたvalue（なければkey値）を返却する\r\n         * \r\n         * @memberof tatLogDiver.FileParser.Property\r\n         * @param {String}\r\n         *            key Conginのキー値\r\n         */\r\n        Property.prototype.getValue = function(key) {\r\n            var cKey = this._config.getValueByKey(key);\r\n            if(!this.__keyConfig[cKey] || this.__keyConfig[cKey].value === undefined){\r\n                return cKey;    // valueが定義されていないとき、keyの設定値を返却\r\n            }else{\r\n                return this.__keyConfig[cKey].getValue(); // keyの設定値のvalueが定義されているとき\r\n            }\r\n        };\r\n        /**\r\n         * configに登録されているkey(prefix補填)の設定値を取得する\r\n         * \r\n         * @memberof tatLogDiver.FileParser.Property\r\n         */\r\n        Property.prototype.getValueByKey = function(key) {\r\n            return this._config.getValueByKey(key);\r\n        };\r\n    \r\n        /* new */\r\n        return Property;\r\n    }());\r\n    \r\n    /** @private */\r\n    //\r\n    // public\r\n\r\n\r\n    /**\r\n     * ファイルが新たに指定された時、eTatOriginalを再構築するか否（データを追加する）か\r\n     * \r\n     * @memberof tatLogDiver.FileParser\r\n     * @return {boolean} 再構築モードするときtrue、データを追加するときfalse\r\n     */\r\n    FileParser.prototype.isNewETAT = function() { // #23\r\n        return this.getValue(\"NEWFILE\") === \"NEWDATA\";\r\n    }\r\n    \r\n    /**\r\n     * 「ファイルから次の1レコードを取得するutil」 を取得する\r\n     * \r\n     * @memberof tatLogDiver.FileParser\r\n     */\r\n    FileParser.prototype.createGetterOfLine = function(file) {\r\n\r\n        /**\r\n         * @memberof tatLogDiver.FileParser\r\n         * @class GetterOfLine\r\n         * @classdesc ファイルから１レコード取得する\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持する改行コードを用いて、ファイルから１レコードを取得する\r\n         * \r\n         * @example try{ var getterOfLine =\r\n         *          HJN.chart.fileParser.createGetterOfLine(file), fileInfo;<br>\r\n         *          for(var i = 0; i < n; i++) { <br>\r\n         *          line = getterOfLine.next(); fileInfo += line.str + \"<BR>\"; }<br>\r\n         *          }catch (e) {<br>\r\n         *          console.error(\"改行コードの無いファイルは扱えません]%o\",e); }\r\n         */\r\n        function GetterOfLine(file, maxLength){ /* constructor */\r\n            if(!(this instanceof GetterOfLine)) return new GetterOfLine(file, maxLength);\r\n\r\n            this.file = file;\r\n            this.buf = new Uint8Array(file);\r\n            this.maxLength = maxLength || this.buf.length,\r\n            this.confLF = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.getValue(\"LF\");  // 改行コードor固定レコード長\r\n            this.from = 0;\r\n            this.to = 0;\r\n            this.len = 0;\r\n            this.line = {file: this.file, pos: 0, array: null, str: \"\", isEoF: false };\r\n        }\r\n        // public\r\n        /**\r\n         * 次の1レコードを取得する\r\n         * \r\n         * @memberof tatLogDiver.FileParser.GetterOfLine\r\n         * @name getValueByKey\r\n         */\r\n        if (__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser.getValueByKey(\"LF\") === \"LF_FIX\"){ // 固定長のとき\r\n            GetterOfLine.prototype.next = function () { // 次の1レコードを取得する\r\n                if(this.from >= this.maxLength ){   // ファイル末尾のとき\r\n                    this.line = {file: this.file, pos: this.maxLength, array: null, str: \"\", isEoF: true };\r\n                } else {\r\n                    this.len = Math.min(this.maxLength - this.from, this.confLF);\r\n                    var array = new Uint8Array(this.file, this.from, this.len);\r\n                    this.line = {\r\n                            file: this.file,\r\n                            pos: this.from,\r\n                            array: array,\r\n                            str: String.fromCharCode.apply(null, array),\r\n                            isEoF: false };\r\n                }\r\n                this.from += this.confLF;   // 次の行を指しておく\r\n                return this.line;\r\n            };\r\n        } else { // 可変長のとき\r\n            GetterOfLine.prototype.next = function () { // 次の1レコードを取得する\r\n                if(this.from >= this.maxLength ){   // ファイル末尾のとき\r\n                    this.line = {file: this.file, pos: this.maxLength, array: null, str: \"\", isEoF: true };\r\n                } else {\r\n                    this.to = this.buf.indexOf(this.confLF, this.from);\r\n                    if(this.to < 0) this.to = this.maxLength;   // 最終レコード（EOFで改行コードなし）のとき\r\n                    this.len = Math.min(this.to - this.from, 1024);\r\n                    var array = new Uint8Array(this.file, this.from, this.len);\r\n                    this.line = {\r\n                            file: this.file,\r\n                            pos: this.from,\r\n                            array: array,\r\n                            str: String.fromCharCode.apply(null, array),\r\n                            isEoF: false };\r\n                }\r\n                this.from = this.to + 2;    // 次の行を指しておく\r\n                return this.line;\r\n            };\r\n        }\r\n        return new GetterOfLine(file);\r\n    };\r\n    \r\n    \r\n    /**\r\n     * eTatのフィルター\r\n     * \r\n     * @memberof tatLogDiver.FileParser\r\n     */\r\n    FileParser.prototype.createFilter = function() { // #34\r\n       /**\r\n         * @memberof tatLogDiver.FileParser\r\n         * @class Filter\r\n         * @classdesc FileParserのフィルター\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持するフィルタ条件を用いるフィルターを取得する\r\n         * \r\n         */\r\n        function Filter(){ /* constructor */\r\n            if(!(this instanceof Filter)) return new Filter();\r\n            this._fileParser = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser; // #62\r\n            var c = FileParser.Property(this._fileParser, \"Filter\");\r\n\r\n            this.confF_TIME_FROM = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"i\" /* S2D */](c.getValue(\"F_TIME_FROM\"));    // 時刻(X)の最小値フィルター\r\n            this.confF_TIME_TO   = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"i\" /* S2D */](c.getValue(\"F_TIME_TO\"));      // 時刻(X)の最大値フィルター\r\n            this.confF_TIME = (isNaN(this.confF_TIME_FROM) && isNaN(this.confF_TIME_TO))\r\n                            ? false : true; // 時刻(x）フィルター指定の有無\r\n            \r\n            this.confF_TAT_FROM = c.getValue(\"F_TAT_FROM\") || 0; // 時間(Y)の最小値フィルター\r\n            this.confF_TAT_TO   = c.getValue(\"F_TAT_TO\") || Number.MAX_VALUE; // 時間(Y)の最大値フィルター\r\n            this.confF_TAT = (this.confF_TAT_FROM === 0 && this.confF_TAT_TO === Number.MAX_VALUE)\r\n                            ? false : true; // 時間(ｙ）フィルター指定の有無\r\n\r\n            this.confF_TEXT = c.getValue(\"F_TEXT\") || null; // テキストフィルタの条件（使用しない、Include,Exclude\r\n            if (this.confF_TEXT === \"F_TEXT_INCLUDE\") {\r\n                this.confF_TEXT = true;\r\n            } else if (this.confF_TEXT === \"F_TEXT_EXCLUDE\") {\r\n                this.confF_TEXT = false;\r\n            } else { // \"F_TEXT_NON\"\r\n                this.confF_TEXT = null;\r\n            }\r\n            \r\n            this.confF_TEXT_LEN = c.getValue(\"F_TEXT_LEN\") || null;    // フィルタテキストのバイト長\r\n            this.confF_TEXT_POS = c.getValue(\"F_TEXT_POS\") || 0;       // フィルタテキストの先頭バイト位置\r\n            this.confF_TEXT_COL = (c.getValue(\"F_TEXT_COL\") || 3) - 1; // フィルタテキストのカラム位置（先頭：０）\r\n            this.confF_TEXT_REG = new RegExp(c.getValue(\"F_TEXT_REG\") || \".*\");    // フィルタテキストの正規表現\r\n            \r\n            this.confF_IS = (this.confF_TIME === true \r\n                            || this.confF_TAT === true || this.confF_TEXT != null)\r\n                          ? true : false; // フィルタ指定の有無\r\n            \r\n            c = FileParser.Property(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser, \"File\");\r\n            this.confF_SEP = c.getValue(\"SEP\").charCodeAt(0);\r\n        }\r\n        \r\n        // class method\r\n        // private\r\n        /**\r\n         * フィルター条件で判定する\r\n         * \r\n         * @memberof tatLogDiver.FileParser.Filter\r\n         */\r\n        Filter.prototype._isIn = function (e) {\r\n            // フィルタ指定が無いときフィルタしない（初期表示時に無駄な処理をしない）\r\n            if (this.confF_IS === false) return true;\r\n            // 時刻（ｘ）フィルタの判定 （conf指定なしのとき NaNとの比較となりfalseとなる）\r\n            if (e.x < this.confF_TIME_FROM || this.confF_TIME_TO < e.x ) {\r\n                return false;\r\n            }\r\n            // 時間（ｙ）フィルタの判定\r\n            if (e.y < this.confF_TAT_FROM || this.confF_TAT_TO < e.y){\r\n                return false;\r\n            }\r\n            // テキストフィルタの判定\r\n            if (this.confF_TEXT === null) {\r\n                return true; // フィルタ指定なし\r\n            }\r\n            var text = \"\";\r\n            if (e.pos === undefined) { // テキスト読み込みでないとき（自動生成データのとき）\r\n                // レコードを取得する #62\r\n                text = this._fileParser.getRecordAsText(e); // #61\r\n                // 指定正規表現に合致するか判定し、Include/Exclude指定に応じてリターンする\r\n                return this.confF_TEXT === this.confF_TEXT_REG.test(text);\r\n            } else { // ファイル読み込みのとき\r\n                // レコードを取得する\r\n                var arr = new Uint8Array(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__[\"a\" /* HJN */].filesArrayBuffer[e.fileIdx+1], e.pos, e.len);\r\n                // CSVレコードの指定カラムを取得する(arr)\r\n                var colPos = 0;\r\n                for (var i = 0; i < this.confF_TEXT_COL; i++) {\r\n                    colPos = arr.indexOf(this.confF_SEP,colPos + 1);\r\n                }\r\n                if (colPos === -1){\r\n                    // 指定数のカラムが無い場合、Includeは処理対象外、Excludeは処理対象\r\n                    return !this.confF_TEXT;\r\n                }\r\n                var col = arr.slice(colPos, arr.length);\r\n                // 判定用文字列を取得する\r\n                text = col.slice(this.confF_TEXT_POS, this.confF_TEXT_POS + this.confF_TEXT_LEN);\r\n                // 指定正規表現に合致するか判定し、Include/Exclude指定に応じてリターンする\r\n                return this.confF_TEXT === this.confF_TEXT_REG.test(String.fromCharCode.apply(null, text));\r\n            }\r\n            return true;\r\n        };\r\n        \r\n        // public\r\n        /**\r\n         * eTatをフィルターする\r\n         * \r\n         * @memberof tatLogDiver.FileParser.Filter\r\n         * @param {eTat}\r\n         *            eTat フィルター処理対象のeTat\r\n         * @return {eTat} eTat フィルターされたeTat\r\n         * \r\n         */\r\n        Filter.prototype.filter = function (eTat) {\r\n            if (!eTat) return [];\r\n            return eTat.filter(this._isIn, this);\r\n        };\r\n\r\n        return new Filter();\r\n    };\r\n\r\n\r\n    /**\r\n     * 「１レコードからx:時刻（数値：ミリ秒）,y:Tat(数値：秒)を取得するutil」を取得する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.Filter\r\n     */\r\n    FileParser.prototype.createGetterOfXY = function() {\r\n\r\n        /**\r\n         * @memberof tatLogDiver.FileParser.Filter\r\n         * @class GetterOfXY\r\n         * @classdesc １レコードをパースし、XとYをレコード取得する\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持するレコードフォーマット情報を用いて、ファイルの指定レコードからＸ(data)とＹ(value)を取得する\r\n         */\r\n        function GetterOfXY(){ /* constructor */\r\n            if(!(this instanceof GetterOfXY)) return new GetterOfXY();\r\n\r\n            var c = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.fileParser;\r\n            this.configId = \"_config_\" + \"Filter\"; // #53\r\n            this.confSEP = c.getValue(\"SEP\");   // セパレータ\r\n            \r\n            this.confTIME_COL = c.getValue(\"TIME_COL\") - 1 || 0;    // 時刻(X)のカラム位置\r\n            this.confTIME_POS = (c.getValue(\"TIME_POS\") || 1) - 1;  // 時刻(X)の先頭バイト位置\r\n            this.confTIME_LEN = (c.getValue(\"TIME_LEN\") || 0);      // 時刻(X)のバイト長\r\n            this.confTIME_FORM = c.getValue(\"TIME_FORM\");           // 時刻(X)の文字フォーマット指定\r\n            this.confTIME_YMD = (c.getValue(\"TIME_YMD\") || \"YYYY/MM/DD hh.mm.ss.ppp\"); // #42\r\n                                                                    // 時刻(X)のYMDフォーマット\r\n            this.paseDateConf = {  // YYYY/MM/DD hh:mm:dd.ss.ppp #41\r\n                YYYY: this.confTIME_YMD.indexOf(\"YYYY\"),\r\n                MM: this.confTIME_YMD.indexOf(\"MM\"),\r\n                DD: this.confTIME_YMD.indexOf(\"DD\"),\r\n                hh: this.confTIME_YMD.indexOf(\"hh\"),\r\n                mm: this.confTIME_YMD.indexOf(\"mm\"),\r\n                ss: this.confTIME_YMD.indexOf(\"ss\"),\r\n                ppp: this.confTIME_YMD.indexOf(\"p\"),\r\n            };\r\n            this.isYMD = (this.confTIME_FORM === \"TIME_FORM_YMD\");\r\n            // 時刻(X)の数値単位(1or1000,YMDのとき1)\r\n            this.confTIME_UNIT = this.isYMD? 1 : (c.getValue(\"TIME_UNIT\") || 1);\r\n            \r\n            \r\n            this.confTAT_COL = c.getValue(\"TAT_COL\") - 1 || 1;      // 時間(Y)のカラム位置\r\n            this.confTAT_POS = (c.getValue(\"TAT_POS\") || 1) - 1;    // 時間(Y)の先頭バイト位置\r\n            this.confTAT_LEN = (c.getValue(\"TAT_LEN\") || 0);        // 時間(Y)のバイト長\r\n            this.confTAT_FORM = c.getValue(\"TAT_FORM\");             // 時間(Y)のフォーマット指定\r\n            this.confTAT_UNIT = c.getValue(\"TAT_UNIT\") || 1;        // 時間(Y)の数値単位(1/1000)\r\n            this.confENDIAN =  c.getValue(\"ENDIAN\");    // リトルエンディアンはtrue、ビッグエンディアンはfalse\r\n            this.isLittle = (function(){\r\n                // long用に4バイト取得する\r\n                var buf = new ArrayBuffer(4);               \r\n                // true:bufに、リトルエンディアン指定で1を書き込む\r\n                new DataView(buf).setUint32(0, 1, true);\r\n                // プラットフォームのエンディアンを使用するUint32Arrayと比較する\r\n                return (new Uint32Array(buf)[0] === 1);     \r\n            }());\r\n            \r\n            this.dateAndValue = {date: 0, value: 0, isError: false };\r\n        }\r\n        \r\n        // class method\r\n        /**\r\n         * 数字をパースして数値（ミリ秒）を取得する<br>\r\n         * 例：\"-1:1:1.2 -> -3661200 ms = -1*(3600+60+1+0.2)*1000\r\n         * \r\n         * @memberof tatLogDiver.FileParser.GetterOfXY\r\n         */\r\n        GetterOfXY.parseNumber = function (){ // str, unit,\r\n            var str = arguments[0],\r\n                unit = arguments[1];\r\n            if(!str) {console.log(\"data Y parse error\"); return 0; }\r\n            var ds = (str.indexOf(\":\") < 0) ? [str] : str.split(\":\"),   // #40\r\n                pm = (0 <= ds[0]) ? 1 : -1,\r\n                sec = 0.0;\r\n            for(var i = 0; i < ds.length; i++){\r\n                sec += pm * Math.abs(ds[i]) * Math.pow(60, ds.length - i - 1);\r\n            }\r\n            return sec * (unit || 1);\r\n        };\r\n\r\n        /**\r\n         * Long(4バイトバイナリ）数字をパースして数値（ミリ秒）を取得する\r\n         * \r\n         * @private\r\n         */\r\n        GetterOfXY.prototype._parseLong = function (arr){\r\n            if (4 <= arr.length ) { // Long(4byte)以上のときunsigned longとして処理する\r\n                // bufの先頭4byteを、指定バイトオーダ(endian)で、符号無32bit intとして参照\r\n                return (new DataView(arr.buffer, 0 , 4)).getUint32(0, this.confENDIAN);\r\n            } else {\r\n                // Long(4バイト）より短いとき、Byte単位に処理する\r\n                if (this.confENDIAN) { // little endianのとき\r\n                    return arr.reduceRight(function(a, b){ return a*256 + b; });\r\n                } else {               // big endianのとき\r\n                    return arr.reduce(function(a, b){ return a*256 + b; });\r\n                }\r\n            }\r\n        };\r\n\r\n        // public\r\n        /**\r\n         * レコードからXとYを取得する\r\n         * \r\n         * @memberof tatLogDiver.FileParser.GetterOfXY\r\n         */\r\n        GetterOfXY.prototype.parse = function (line) {\r\n            // セパレータでカラム分割する\r\n            var posMax = Math.max(this.confTIME_COL, this.confTAT_COL),\r\n                sep = this.confSEP.charCodeAt(0),   // 区切り文字のUint値\r\n                pos = 0,\r\n                nextPos = line.array.indexOf(sep),  // 行末（次の区切り文字位置）\r\n                x = 0,\r\n                y = -1;\r\n            for (var i = 0; i <= posMax; i++) {\r\n                if (i === this.confTIME_COL){\r\n                    // パース対象フィールドを切り出す\r\n                    var posX =  pos + this.confTIME_POS;\r\n                    var arrX = (0 < this.confTIME_LEN) \r\n                             ? line.array.slice(posX, posX + this.confTIME_LEN)\r\n                             : line.array.slice(posX, nextPos);\r\n                    var strX = \"\";\r\n                    // フィールドをパースする\r\n                    if (this.isYMD){    // 年月日時分秒の文字列のとき\r\n                        strX = String.fromCharCode.apply(null,arrX);\r\n                        x = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"i\" /* S2D */](strX, this.paseDateConf);\r\n                    } else if (this.confTIME_FORM === \"TIME_FORM_TEXT\"){    // テキスト数字のUNIX経過時間のとき\r\n                        strX = String.fromCharCode.apply(null,arrX);\r\n                        x = GetterOfXY.parseNumber(strX);\r\n                    } else{ // this.confTIME_FORM === \"TIME_FORM_LONG\"\r\n                            // longのUNIX経過時間のとき\r\n                        x = this._parseLong(arrX);\r\n                    }\r\n                    // 単位を補正する\r\n                    x *= this.confTIME_UNIT;\r\n                }\r\n                if (i === this.confTAT_COL){\r\n                    // パース対象フィールドを切り出す\r\n                    var posY =  pos + this.confTAT_POS;\r\n                    var arrY = (0 < this.confTAT_LEN) \r\n                             ? line.array.slice(posY, posY + this.confTAT_LEN)\r\n                             : line.array.slice(posY, nextPos);\r\n                    // フィールドをパースする\r\n                    if (this.confTAT_FORM === \"TAT_FORM_TEXT\"){\r\n                        // テキスト数字によるUNIX経過時間のとき\r\n                        var strY = String.fromCharCode.apply(null,arrY);\r\n                        y = GetterOfXY.parseNumber(strY);\r\n                    } else{\r\n                        // TAT_FORM_TEXT === \"TAT_FORM_LONG\" 数値によるUNIX経過時間のとき\r\n                        y = this._parseLong(arrY);\r\n                    }\r\n                    // 単位を補正する\r\n                    y *= this.confTAT_UNIT;\r\n                }\r\n                pos = nextPos + 1;\r\n                nextPos = line.array.indexOf(sep, pos);\r\n                if (nextPos < 0) nextPos = line.array.length;\r\n            }\r\n            \r\n            if(0 < x && 0 <= y){ // 正常時\r\n                return {x: x, y: y, isError: false };\r\n            } else {            // エラー時\r\n                return {x: x, y: y, isError: true };\r\n            }\r\n        };\r\n        \r\n        return new GetterOfXY();\r\n    };\r\n    \r\n    /**\r\n     * configに登録されているid(=prefix+key)の設定値を取得する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     */\r\n// #74   FileParser.prototype.getObjctById = function(id) {\r\n//        return this[this.configId].getObjctById(id);\r\n//    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の設定値を取得する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     */\r\n    FileParser.prototype.getValueByKey = function(key) {\r\n        return this[this.configId].getValueByKey(key);\r\n    };\r\n    /**\r\n     * 設定値を保有するオブジェクトを返却する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     */\r\n    FileParser.prototype.getConfig = function() {\r\n        return this[this.configId]._config;\r\n    };\r\n    /**\r\n     * HTML（config設定用）テキストを返却する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     */\r\n// #74    FileParser.prototype.getConfigHtml = function(type) {\r\n//        type = type || \"File\";\r\n//        return this[\"_config_\" + type].getHtml(); // #53\r\n//    };\r\n    /**\r\n     * keyの値に指定された関数（なければ何もしない関数）を返却する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     */\r\n    FileParser.prototype.getFunction = function(key) {\r\n        var cKey = this[this.configId].getValueByKey(key);\r\n        if(!this.__keyConfig[cKey] || !this.__keyConfig[cKey].func){\r\n            return function(){};    // funcが定義されていないとき、何もしない関数を返却する\r\n        }else{\r\n            return this.__keyConfig[cKey].func; // keyの設定値のfuncが定義されているとき\r\n        }\r\n    };\r\n    /**\r\n     * eTatの指定行の編集元レコードを、テキストフォーマットに変換して取得する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     * @param {Object}\r\n     *            e eTat[n]：eTatの指定行\r\n     * @return {String} eTatの指定行の表示用テキスト\r\n     */\r\n    FileParser.prototype.getRecordAsText = function (e) { // #62 ADD\r\n        if (!e) return \"\";\r\n        var text = \"\";\r\n        if (typeof e.pos === \"undefined\") { // 生成データのとき\r\n            // 生成データをCSVのログデータとして編集する #61\r\n            text = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](e.x, \"yyyy/MM/dd hh:mm:ss.ppp\", true)\r\n                    + \", \" + e.y + \", \" + e.message; // #53\r\n            // 状態遷移履歴を追加する #62\r\n            if (e.history){\r\n                e.history.forEach(function(h){\r\n                    var timeStr = \"\";\r\n                    if (typeof(h.time) === \"number\") {\r\n                        timeStr = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](h.time, \"mm:ss.ppp\", true) + \" seq:\"\r\n                    }\r\n                    text += \" [\" + h.sequenceIdx + \":\" + h.status + \"]\" // #61\r\n                        + timeStr + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](h.sequenceTime, \"mm:ss.ppp\", true);\r\n                }, this);\r\n            }\r\n        } else { // ファイル読込のとき\r\n            // ファイルの該当行を Uint8Arrayに登録する\r\n            var buff = new Uint8Array(e.len + 2);\r\n            var file = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_HJN_js__[\"a\" /* HJN */].filesArrayBuffer[e.fileIdx]; // #23\r\n            buff.set(new Uint8Array(file, e.pos,\r\n                    Math.min(e.len + 2, file.byteLength - e.pos)));\r\n            // ログデータを編集する\r\n            text = String.fromCharCode.apply(null, buff);\r\n        }\r\n        return text;\r\n        \r\n    };\r\n    /**\r\n     * keyの値に指定されたvalue（なければkey値）を返却する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    FileParser.prototype.getValue = function(key) {\r\n        var cKey = this[this.configId].getValueByKey(key);\r\n        if(!this.__keyConfig[cKey] || this.__keyConfig[cKey].value === undefined){\r\n            return cKey;    // valueが定義されていないとき、keyの設定値を返却\r\n        }else{\r\n            return this.__keyConfig[cKey].getValue(); // keyの設定値のvalueが定義されているとき\r\n        }\r\n    };\r\n    \r\n    // new\r\n    return FileParser;\r\n}());\n\n/***/ }),\n/* 32 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualApp\r\n * @classdesc 仮想アプリケーション\r\n * \r\n * @param {String}\r\n *            [userName = \"dafault\"] ログに出力するユーザ名\r\n * @param {Array}\r\n *            [sequence = SQL３個のオン処理] 取引の処理シーケンスを格納した配列\r\n * @param {Number}\r\n *            [times = 2 回] 繰返し回数\r\n * @param {Number}\r\n *            [thinkTime = 300 ms] 繰返し時の次回処理開始までの平均時間(ミリ秒）\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #53\r\n\"use strict\";\r\n    /** @constructor */\r\n    function VirtualApp(userName, model){\r\n        if(!(this instanceof VirtualApp)){\r\n            return new VirtualApp(userName, model);\r\n        }\r\n        this._userName = userName || \"default\"; // ログ出力テキスト\r\n        // 定数の設定\r\n        // イベントシーケンスを取得する\r\n        if (typeof(model) === \"undefined\") model = {}\r\n        model.baseModel = model.baseModel || {\"holds\": []};\r\n        this._sequence = model.sequence;\r\n        // イベントシーケンスの繰り返し回数\r\n        this._times = (typeof(model.times) !== \"undefined\") ? model.times : 1;\r\n        // イベントシーケンス終了時に再実行する場合の平均再開時間\r\n        this._thinkTime = Math.max(0,\r\n                (typeof(model.thinkTime) !== \"undefined\") ? model.thinkTime : 500);\r\n        // イベントシーケンス終了時に再実行する場合の最小再開時間\r\n        this._thinkTimeMin = Math.max(0,\r\n                (typeof(model.thinkTimeMin) !== \"undefined\") ? model.thinkTimeMin : 500);\r\n        // メッセージ（ログ末尾に付与する文字列）\r\n        this._baseMessage = model.message + \"\\n\";\r\n        this._message = \"\";\r\n        this._history = []; // #62\r\n\r\n        // 変数の設定\r\n        this._startTime = Number.MIN_SAFE_INTEGER; // イベントシーケンス開始時刻（UNIX時刻：ミリ秒）\r\n        this._sequenceTime = Number.MIN_SAFE_INTEGER; // シミュレータに登録したイベントの時刻（現在時刻）\r\n        this._sequenceIdx = 0;    // シミュレータに登録したイベントシーケンスの位置\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n\r\n    \r\n    /**\r\n     * シミュレータのログを出力する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            logLv ログレベル（isLog <= logLvのときログ出力する）<br>\r\n     *            (0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)\r\n     * @param {boolean}\r\n     *            isLog ログ出力レベル\r\n     * @param {Number}\r\n     *            time 日時を表す数値（ミリ秒）\r\n     * @param {Object}\r\n     *            vApp 仮想アプリ\r\n     * @param {Object}\r\n     *            resource リソース\r\n     * @param {String}\r\n     *            text ログテキスト\r\n     * @param {String}\r\n     *            highText 強調表示テキスト\r\n     */\r\n    VirtualApp.prototype.logger = function(logLv, isLog, time, vApp, resource, text, highText) {\r\n        // 0:なしの時\r\n        if (!isLog) return;\r\n        var errCode = 0;\r\n        if (resource && (resource._holdHeap.size() !== resource._holdingQty)) {\r\n            // エラー時★\r\n            errCode = 1;\r\n            highText = highText ? highText + \"　unkown error!!\" : \"　unkown error!!\";\r\n        } else if (logLv > +isLog) {\r\n            return; \r\n        }\r\n        \r\n        // エラーログ編集\r\n        var user = vApp ? \" \" + vApp._userName : \" \";\r\n        var resourceText = resource ? (\" [\" + resource._name + \" wait:\"\r\n                + resource._waitHeap.size() + \"hold:\"\r\n                + resource._holdHeap.size() + \"=\"\r\n                + resource._holdingQty + \" qty] \") : \" \";\r\n        text = text || \"\";\r\n        var logText = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](this.getTime(),\"hh:mm:ss.ppp\",true) \r\n                    + user +\"(\" + this._times + \"-\" + this._sequenceIdx + \")\"\r\n                    + resourceText \r\n                    + text;\r\n        highText = highText || \"\";\r\n\r\n        // エラー時の強制補正★\r\n        var modify = \"\";\r\n        if (errCode === 1) { // リソースヒープもしくはリソース量を強制補正する\r\n            var deleted = undefined;\r\n            if (resource._holdHeap.size() < resource._holdingQty) {\r\n                deleted = resource._holdHeap.del(this);\r\n            }\r\n            if (deleted){\r\n                modify = \"FORCE★: holdHeap.del(\" + deleted.userName + \")\";\r\n            } else {\r\n                modify = \"FORCE★: holdingQty modified\"\r\n                    resource._holdingQty = resource._holdHeap.size();\r\n            }\r\n        }\r\n                \r\n        // エラーログ出力\r\n        if (highText || modify){\r\n            console.log(logText + \" %o\", highText + \" \" + modify);\r\n        } else {\r\n            console.log(logText);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取引を開始する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            startTime 開始時刻（UNIX時刻：ミリ秒）\r\n     * @return {Object}仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.start = function(startTime) {\r\n        this._times--; // イベントシーケンスの繰り返し回数を1減らす\r\n        this._sequenceIdx = 0;    // シミュレータに登録したイベントシーケンスの位置\r\n        this._startTime = startTime;      // イベントシーケンス開始時刻（UNIX時刻：ミリ秒）\r\n        this._sequenceTime = startTime;   // シミュレータに登録したイベントの時刻\r\n        this._message = this._baseMessage; // ログ末尾に出力する文字列の初期化\r\n        this._history = []; // ログ末尾に出力する状態遷移履歴情報の初期化 #62\r\n        this.addHistory(\"start\");\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * イベント時刻を返却する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualApp.prototype.getTime = function() {\r\n        return this._sequenceTime;\r\n    };\r\n\r\n    /**\r\n     * リソース使用量を返却する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            [resource| 指定なしのとき1.0を返却する] リソース\r\n     * @return {Number} リソース使用量\r\n     */\r\n    VirtualApp.prototype.getAmount = function(resource) {\r\n        return 1.0;\r\n    };\r\n\r\n    /**\r\n     * 次の状態に遷移する、シーケンス終了時TATログを出力する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualApp.prototype.next = function(system) {\r\n        this.logger(4, system._log, system.getTime(), this, undefined, 'NEXT', undefined);\r\n        var events = []; // 戻り値\r\n        var ret = {result: true, events: [this]};\r\n        \r\n        if (this._sequenceIdx < this._sequence.length) { // イベントシーケンス処理途中のとき\r\n            var seq = this._sequence[this._sequenceIdx]; // 現在の処理シーケンス位置\r\n            // holdリソースを取得する\r\n            if (seq.hold && seq.hold !== \"\") {\r\n                // holdリソースが指定されているとき、指定リソースを確保する（確保できたとき[this]が戻り値）\r\n                ret = system.getResouce(seq.hold).hold(system, this); // #61\r\n                events = ret.events;\r\n            } else {\r\n                // holdリソースが指定されていないとき、無条件に自身をスケジュール対象に加える\r\n                events = [this];\r\n            }\r\n            // リソースを確保できたとき、該当シーケンスを完了させる\r\n            if (0 < events.length && (0 <= this._times) && ret.result) { // #61\r\n                // 完了した処理の処理時間を加える\r\n                var tatAdd = Math.ceil(__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"h\" /* Random */]().exponential(seq.tat - seq.tatMin));\r\n                this.setSequenceTime(this._sequenceTime += seq.tatMin + tatAdd, seq.hold); // #61\r\n                // シーケンスのfreeで指定されているリソースの解放\r\n                if (seq.free) {\r\n                    for (var i = 0; i < seq.free.length; i++) {\r\n                        events = events.concat(system.getResouce(seq.free[i]).free(this));\r\n                    }\r\n                }\r\n                // 次の処理を参照する（ シミュレータに登録したイベントシーケンスの位置）\r\n                this._sequenceIdx++;\r\n            }\r\n            return events;\r\n        }\r\n        \r\n        // イベントシーケンスを終えたときTATログを出力する(this._sequenceIdx >= this._sequence.length)\r\n        var vApp = this._finish(system, \"N_000\");\r\n        // シーケンスをstart状態に設定する\r\n        // this._sequenceTime = system.getTime(); はfinishで更新されるので不可\r\n        // this._startTime = this._sequenceTime; finishで設定する\r\n        // 繰返し処理を継続する場合、自アプリケーションを再スケジュールする\r\n        if (vApp) {\r\n            events.push(this);\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * Freeに伴い、次の状態に遷移する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            [time | 変更しない} イベント時刻（UNIX時刻：ミリ秒）\r\n     * @param {String}\r\n     *            status ログに追記する時刻設定理由文字列\r\n     * @return {Object} 仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.setSequenceTime = function(time, status) {\r\n        status = status || \"\"; \r\n        // 解放された時刻をイベント時刻に設定する\r\n        this._sequenceTime = time;\r\n        // ログに状態遷移履歴を追記する\r\n        return this.addHistory(status);\r\n    };\r\n\r\n    /**\r\n     * ログにステータス変更履歴を追記する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {String}\r\n     *            status ログに追記する状態遷移の理由文字列\r\n     * @param {Number}\r\n     *            time 状態遷移時刻（ミリ秒）\r\n     * @return {Object} 仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.addHistory = function(status, time) {\r\n// var timeStr = \"\";\r\n// if (typeof(time) === \"number\") {\r\n// timeStr = Util.D2S(time, \"mm:ss.ppp\", true) + \" seq:\"\r\n// }\r\n// this._message += \" [\" + this._sequenceIdx + \":\" + status + \"]\" // #61\r\n// + timeStr + Util.D2S(this._sequenceTime, \"mm:ss.ppp\", true);\r\n        // 状態遷移履歴（ログ出力用）を追加する\r\n        this._history.push({ // #62\r\n            sequenceIdx : this._sequenceIdx,\r\n            status : status,\r\n            time : time,\r\n            sequenceTime : this._sequenceTime\r\n        });\r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * アベンド処理（holdしている可能性のあるリソースを解放し、イベントシーケンスを強制終了する）\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {Object}\r\n     *            holdedResource アベンドさせたVirtualResource\r\n     * @param {String}\r\n     *            [logID=\"E_600\"] ログID\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Boolean}\r\n     *            [isHolding=true] リソース(holdedResource)をholdしているか否か<br>\r\n     * @param {Number}\r\n     *            [abendTime=sytem.getTime()] abend時刻\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualApp.prototype.abend = function(system, holdedResource, \r\n                                    logID, logMesseage, isHolding, abendTime) {\r\n        logID = logID || \"E_600\";\r\n        abendTime = abendTime || system.getTime();\r\n        isHolding = (typeof(isHolding) === \"boolean\") ? isHolding : true; // #61\r\n        var events = []; // 戻り値\r\n        this.logger(3, system._log, this._sequenceTime, this, holdedResource, 'abend', undefined);\r\n        var seq = this._sequence[this._sequenceIdx];\r\n        // 現在のシーケンスでholdするリソースがあるとき、waitしている可能性があるため、waitから削除する\r\n        if (seq && seq.hold) { // #61\r\n            system._resources[seq.hold].release(this);\r\n        }\r\n        // holdingリソースを開放する\r\n        var holdings;\r\n        // シーケンスから、holdingリソース一覧を取得する #59\r\n        if (seq) holdings = seq.holding;\r\n        if (holdings) { // シーケンス上holdingリソースがあるとき(undefined対策） #61\r\n            for (var i = holdings.length - 1; 0 <= i; i--) { // #61\r\n                // holdedResourceは削除処理対象外（呼び出し元リソースは、呼び出し前に削除済なので）\r\n                if (holdings[i] !== holdedResource._name || isHolding){ // #61\r\n                    // holdingリソースを開放し、使用リソース減に伴って新たにスケジュールするvAppを取得 #59\r\n                    events = events.concat(system._resources[holdings[i]].free(this));\r\n                }\r\n            }\r\n        }\r\n        // イベントシーケンスを強制終了する\r\n        this.setSequenceTime(abendTime, logID); // #59\r\n        var vApp = this._finish(system, logID, logMesseage);\r\n        // 自vAppに継続処理があれば、自vAppをスケジュール対象に加える\r\n        if (vApp && (0 <= this._times)) { // #61\r\n            events = events.concat([vApp]);\r\n        }\r\n        return events;\r\n    };\r\n    \r\n    /**\r\n     * イベント終了時処理（ログ出力と、繰り返し判定）\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {String}\r\n     *            [logID=\"N_000\"] ログID（ログメッセージの先頭文字）\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Number}\r\n     *            [forceTime] 強制終了時刻を指定する（ミシュレーション停止後のeTat強制出力用）\r\n     * @return {Object|undefined} 再スケジュールするときthis、再スケジュールしないときundefined\r\n     */\r\n    VirtualApp.prototype._finish = function(system, logID, logMesseage, forceTime) {\r\n        logID = logID || \"N__00\";\r\n        logMesseage = logMesseage || \"\";\r\n        var events = []; // 戻り値\r\n        var logText = logID + \" \" + this._userName + \" \" + logMesseage + \" \" + this._message;\r\n        var now = this._sequenceTime;\r\n\r\n        // 強制終了時（シミュレーション終了時刻到来時）、自APのシミュレーションを強制終了する\r\n        if (typeof(forceTime) === \"number\") {\r\n            // 起動済処理はTATログを出力する #59\r\n            if (this._startTime <= forceTime) { \r\n                // TATログを出力する\r\n                system.eTat.push( { x: forceTime, \r\n                                    y: Math.round(forceTime - this._startTime),\r\n                                    sTatIdx: 0,\r\n                                    message: logText,\r\n                                    history: this._history} ); // #62\r\n                this.logger(2, system._log, forceTime, this, undefined, 'finish() FORCE\"', logText);\r\n            }\r\n            this._sequenceIdx = this._sequence.length; // #61 処理完了状態にする\r\n            this._startTime = this._sequenceTime; // #61 念のため設定\r\n            return undefined;\r\n        }\r\n        \r\n        // 起動済処理はTATログを出力する #59\r\n        if (this._startTime <= now ) { // || this._sequenceIdx ===\r\n                                        // this._sequence.length) {\r\n            system.eTat.push( { x: now,\r\n                                y: Math.round(now - this._startTime),\r\n                                sTatIdx: 0,\r\n                                message: logText,\r\n                                history: this._history} ); // #62\r\n            this.logger(2, system._log, now, this, undefined, 'finish() \"', logText);\r\n        } else  {\r\n            this.logger(0, system._log, now, this, undefined,\r\n                    'finish() Unexpected error★ _startTime > _sequenceTime:'\r\n                    + __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](this._startTime, \"hh:mm:ss.ppp\", true)\r\n                            + \" \" + this._startTime + \" > \" + now\r\n                            + \" Idx:\" + this._sequenceIdx \r\n                    , logText);\r\n        }\r\n        this._message = this._baseMessage; // ログ末尾に追加するメッセージの初期化\r\n \r\n        // 継続判定\r\n        if (0 < this._times) { // イベントシーケンスを繰り返すとき\r\n            // イベント時刻にThink time（指数分布）を加える\r\n            var nextTime = this.getTime() + this._thinkTimeMin;\r\n            if (this._thinkTimeMin < this._thinkTime) {\r\n                nextTime += Math.ceil(Math.abs( // #61\r\n                        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"h\" /* Random */]().exponential(this._thinkTime - this._thinkTimeMin)));\r\n            }\r\n            // 処理の先頭に戻る\r\n            return this.start(nextTime);\r\n        }\r\n        // イベントシーケンスを継続しない時(this._times < 0)\r\n        this._times--;       // イベントシーケンスの繰り返し回数を1減らす\r\n        this._sequenceIdx = this._sequence.length; // #61 処理完了状態にする\r\n        this._startTime = this._sequenceTime; // #61\r\n        return undefined;\r\n    };\r\n\r\n    /* new */\r\n    return VirtualApp;\r\n}());\n\n/***/ }),\n/* 33 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualResource\r\n * @classdesc 仮想リソース\r\n * \r\n * @param {Object}\r\n *            system 仮想システム（シミュレーション中の現在時刻取得等に用いる）\r\n * @param {String}\r\n *            [name = \"unlimited\"] リソース名（\"unlimited\"はリソース解放待ちを管理しない）\r\n * @param {Number}\r\n *            [holdCapacity = 1.0] 保有リソース総量（数）\r\n * @param {Number}\r\n *            [timeout = 10秒] 処理のタイムアウト時間（未使用）\r\n * @param {Number}\r\n *            [waitCapacity = Number.MAX_SAFE_INTEGER]\r\n *            リソース取得待ちキューの深さ（数）、キュー溢れ時は即時エラー終了しリソース処理しない\r\n * @param {Number}\r\n *            [queueWait = 10秒] 最大キュー滞留時間（リソース取得待ちタイムアウト時間）\r\n * @param {Boolean}\r\n *            [log=false] 詳細ログ出力有無\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #53\r\n    \"use strict\";\r\n    /** @constructor */\r\n    function VirtualResource(system, name,\r\n                        holdCapacity, timeout, waitCapacity, queueWait, log){\r\n        if(!(this instanceof VirtualResource)){\r\n            return new VirtualResource(system, name,\r\n                        holdCapacity, timeout, waitCapacity, queueWait, log);\r\n        }\r\n        this._system = system;\r\n        this._name = name || \"unlimited\";\r\n        this._log = log ? +log : 0; // #59\r\n\r\n        // 処理待ち管理用\r\n        this._waitTimeout = (typeof(queueWait) !== \"undefined\")\r\n                                ? queueWait : 10000;   // キュー滞留時間上限\r\n        this._waitCapacity  = (typeof(waitCapacity) !== \"undefined\")\r\n                                ? waitCapacity : Number.MAX_SAFE_INTEGER; // キューの深さ\r\n        this._waitHeap = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"e\" /* Heap */](    // リソース解放待ちキュー（登録時間順）\r\n                function(obj){ return obj.getTime(); });\r\n        \r\n        // リソース管理用\r\n        this._holdTimeout  = (typeof(timeout)  !== \"undefined\") \r\n                                ? timeout : 10000;   // 処理のタイムアウト時間\r\n        this._holdCapacity = (typeof(holdCapacity) !== \"undefined\")\r\n                                ? holdCapacity : 1.0;   // 保有リソース量（数）\r\n        this._holdingQty = 0;   // 使用リソース量\r\n        this._holdHeap = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"e\" /* Heap */]( // 処理のタイムアウト管理用ヒープ{obj:,val:} #59\r\n                 function(node){ return node.val; }, // valはタイムアウト時刻\r\n                 function(node){ return node.obj; }); // objはvApp\r\n        \r\n        // イベントスケジュール制御用\r\n        this._sequenceTime = 0;   // シミュレータに登録したイベントの時刻（タイムアウトチェック用）\r\n        this._isScheduled = false; // シミュレータにタイムアウトチェックイベントをスケジュールしたか\r\n        if (0 < this._waitTimeout && 0 < this._holdTimeout){ // スケジュール間隔 #61\r\n            this._interval = Math.min(this._waitTimeout, this._holdTimeout);\r\n        } else if (0 < this._waitTimeout) {\r\n            this._interval = this._waitTimeout;\r\n        } else if (0 < this._holdTimeout) {\r\n            this._interval = this._holdTimeout;\r\n        } else {\r\n            this._interval = 0;\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * リソースチェックイベント（タイムアウトチェック）を開始する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Number}\r\n     *            startTime 開始時刻（UNIX時刻：ミリ秒）\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Object} イベント(this)\r\n     */\r\n    VirtualResource.prototype.start = function(startTime, system) { // #59\r\n        this._sequenceTime = startTime + this._interval; // シミュレータに登録するイベントの時刻\r\n        system.setEvent(this);    // シミュレータにタイムアウトチェックイベントをスケジュールする\r\n        this._isScheduled = true; // 「シミュレータにタイムアウトチェックイベントをスケジュールしたかフラグ」をON\r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * イベント時刻を返却する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualResource.prototype.getTime = function() {\r\n        return this._sequenceTime;\r\n    };\r\n    \r\n    /**\r\n     * タイムアウトチェック用仮想イベント\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualResource.prototype.next = function(system) {\r\n        var events = []; // 戻り値\r\n        var now = this.getTime();\r\n        // リソース解放待ち時間がタイムアウトしたappをタイムアウトさせる\r\n        var queuedTime = Number.MIN_SAFE_INTEGER; \r\n        while (0 < this._waitHeap.size() && this._waitTimeout <= now - queuedTime) {\r\n            queuedTime = this._waitHeap.top().getTime();\r\n            if (this._waitTimeout <= now - queuedTime) { // キューイング取引がタイムアウトしているとき\r\n                // リソース解放待ちHeapからfreeするappを取り出す\r\n                var app = this._waitHeap.pop();\r\n                // appをアベンドさせる(holdリソース解放なし）\r\n                var apps = app.abend(system, this, \"E_QTO\", this._name + \" queue timeout\",\r\n                        false, queuedTime + this._waitTimeout); // appにfree時刻をセットする\r\n                // appsをスケジュールイベント登録対象に加える\r\n                if (apps.length){\r\n                    events = events.concat(apps);\r\n                }\r\n            }\r\n        }\r\n        // リソース使用時間がタイムアウトしたappをタイムアウトさせる #59\r\n        var holdTimeoutTime = Number.MIN_SAFE_INTEGER;\r\n        while (0 < this._holdHeap.size() && holdTimeoutTime <= now) {\r\n            var top = this._holdHeap.top();\r\n            holdTimeoutTime = top.val;\r\n            if (holdTimeoutTime <= now) { // 処理中取引がタイムアウトしているとき #61\r\n                var app = top.obj;\r\n                // appがスケジュールされている場合削除する（スケジューラに登録されていない場合何も起きない）\r\n                system.removeEvent(app);\r\n                // appの使用時間がタイムアウトしたリソースを解放する（注：abendで解放させると永久ループする）\r\n                events = events.concat(this.free(app));                \r\n                // appをタイムアウト時刻にアベンドさせる(holdリソース解放を伴う）\r\n                events = events.concat(app.abend(system, this,\"E_HTO\", \r\n                            this._name + \" hold timeout\", false, holdTimeoutTime));\r\n            }\r\n        }\r\n        // 次回タイムアウトチェック時刻を設定する\r\n        if ((0 < this._waitHeap.size()) || (0 < this._holdHeap.size())) {\r\n            // タイムアウトの設定があるとき、 #61\r\n            // リソース解放待ちvAppがあるとき、(タイムアウトしていない)最古vAppのタイムアウト時刻\r\n            // リソース解放待ちvAppがないとき、現在からタイムアウト時刻後 にスケジュールする\r\n            var nextWaitTimeout = Number.MAX_SAFE_INTEGER;\r\n            if (0 < this._waitTimeout) {\r\n                if ( 0 < this._waitHeap.size() \r\n                        && now <= this._waitTimeout + this._waitHeap.top().getTime()) {\r\n                    nextWaitTimeout = this._waitHeap.top().getTime() + this._waitTimeout; \r\n                } else {\r\n                    nextWaitTimeout = now + this._waitTimeout;\r\n                }\r\n            }            \r\n            var nextHoldTimeout = Number.MAX_SAFE_INTEGER;\r\n            if (0 < this._holdTimeout) {\r\n                if(0 < this._holdHeap.size()) {\r\n                    nextHoldTimeout = this._holdHeap.top().val;\r\n                } else {\r\n                    nextHoldTimeout = now + this._holdTimeout;\r\n                }\r\n            }\r\n            this._sequenceTime = Math.min(nextWaitTimeout, nextHoldTimeout);\r\n            if (this._sequenceTime < Number.MAX_SAFE_INTEGER) {\r\n                events.push(this); // タイムアウトチェックイベントをケジュールイベント登録対象に加える\r\n            } else {\r\n                this._isScheduled = false;\r\n            }\r\n        } else { \r\n            // 以外のとき、シミュレータにタイムアウトチェックイベントを再スケジュールしない\r\n            this._isScheduled = false;\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * リソースを取得する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {Object}\r\n     *            vApp リソースにhold要求する仮想AP\r\n     * @return {Objcet} 処理結果{result:boolean, events:Array}<br>\r\n     *         {boolean} result :\r\n     *         true:正常（リソース取得、取得待ち、取得不要）、false:エラー（リソース枯渇E_QOF)）<br>\r\n     *         {Array} :events リソース取得後、スケジューラに登録するイベントの配列<br>\r\n     *         [vApp]： リソースを取得できたとき、もしくはリソース枯渇時でvApp再処理の場合、スケジュール対象の vApp\r\n     *         が登録された配列[vApp]を返却<br>\r\n     *         []： リソース待ちに登録されたとき、既にリソースが管理するスケジューラに登録さているので、空の配列[]を返却<br>\r\n     *         もしくはリソース枯渇時で繰返し完了時、再スケジュールしないので[]を返却\r\n     */\r\n    VirtualResource.prototype.hold = function(system, vApp) {\r\n        var ret = { result : true,\r\n                    events : [vApp] }; // 戻り値 #61\r\n        if (this._name === \"unlimited\") return ret; // [vApp] リソース解放待ちを管理しないとき\r\n        vApp.logger(4, this._log, vApp._sequenceTime, vApp, this, 'HOLD' , undefined);\r\n        // タイムアウトチェックイベントがスケジュールされていないとき、スケジュールする\r\n        if (!this._isScheduled && (0 < this._interval)) {\r\n            this.start(system.getTime(), system);\r\n        }\r\n        // リソースを取得できるとき、使用リソース量（数）を増やし、実行中処理管理ヒープに登録し、スケジュール対象とする\r\n        var amount = vApp.getAmount(this); // 消費リソース量(デフォルト1.0）\r\n        if (amount <= (this._holdCapacity - this._holdingQty)) {\r\n            // 使用リソースを増やす\r\n            this._holdingQty += amount;\r\n            // タイムアウト管理対象リソースのとき、vAppをタイムアウト管理対象に加える #59\r\n            if (0 < this._holdTimeout) {\r\n                this._holdHeap.push({obj: vApp, val: system.getTime() + this._holdTimeout});\r\n            }\r\n            vApp.logger(3, this._log, system.getTime(), vApp, this, 'hold' , undefined);\r\n            return ret; // [vApp]\r\n        }\r\n\r\n        // リソース解放待ちキューに空きがあるとき、vAppをリソース解放待ちに 登録する（スケジュールしない）\r\n        if ((this._waitHeap.size() < this._waitCapacity) && (0 < this._waitTimeout)){\r\n            // リソース解放待ちタイムアウト管理対象に加える\r\n            this._waitHeap.push(vApp);\r\n            vApp.addHistory(\"wait:\" + this._name, system.getTime()); // #61\r\n            vApp.logger(3, this._log, system.getTime(), vApp, this, 'wait' , undefined);\r\n            return { result: true, events: [] };\r\n        }\r\n        \r\n        // リソース解放待ちキューが溢れていた時、リソースを取得できずにアベンド（リソース解放なし、自AP継続の場合[vApp]をリターン） #61\r\n        var apps = vApp.abend(system, this, \"E_QOF\",\r\n                    \"[\" + this._name + \"] over flow\", false);\r\n        vApp.logger(3, this._log, system.getTime(), vApp, this, 'over' , undefined);\r\n        return { result: false, events: apps }; // #61\r\n    };\r\n\r\n    /**\r\n     * 引数vAppが使用していたリソースを解放する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            vApp リソースにfree要求する仮想AP\r\n     * @param {Boolean}\r\n     *            [isHolding=true] 該当vAppが自リソースをholdしているか否か<br>\r\n     *            false指定時、指定vAppはリソースをholdしていない前提で、hold vApp一覧からの削除処理を行わない\r\n     * @return {Array} スケジューラに登録するイベントの配列([vApp] | [])\r\n     */\r\n    VirtualResource.prototype.free = function(vApp, isHolding) { // #59\r\n        vApp.logger(4, this._log, this._system.getTime(), vApp, this, 'FREE' , undefined);\r\n        isHolding = (typeof(isHolding) === \"boolean\") ? isHolding : true;\r\n        if (this._name === \"unlimited\") return []; // リソース解放待ちを管理しないとき\r\n        var vApps = []; // 戻り値\r\n        // 自リソースを使用している可能性があるとき、使用リソースを解放する\r\n        // 解放したvAppが使用していたリソース量(デフォルト1.0）を、使用リソース量（数）から減らす #59\r\n        if (isHolding === true) { // #61\r\n            this._holdingQty -= vApp.getAmount(this);\r\n            // タイムアウト管理対象リソースのとき、vAppをタイムアウト管理対象から削除する #61\r\n            if (0 < this._holdTimeout) { // #61\r\n                var app = this._holdHeap.del(vApp);\r\n            }\r\n            vApp.addHistory(\"free:\" + this._name, this._system.getTime());\r\n            vApp.logger(3, this._log, this._system.getTime(), vApp, this, 'del' , undefined);\r\n        }\r\n        // リソース解放待ちキューから、空きリソースで処理できるようになったvAppを取り出しスケジュールする #61\r\n        var marginQty = this._holdCapacity - this._holdingQty;\r\n        var addQty = this._waitHeap.top()\r\n                    ? this._waitHeap.top().getAmount(this) // 次のリソース解放待ちキューの使用量\r\n                    : Number.MAX_SAFE_INTEGER;\r\n        for (var i = this._waitHeap.size() && addQty <= marginQty; 0 < i; i--) {\r\n            // リソース解放待ちキューからfreeするappを取り出す\r\n            var app = this._waitHeap.pop();\r\n            // appにfree時刻をセットし、スケジュールイベント登録対象に加える\r\n            // (注：リソース取得はスケジュール後、E_HTOに伴う他のリソースの時刻は将来）\r\n            app.setSequenceTime(this._system.getTime(), \"release:\" + this._name);\r\n            vApps.push(app);\r\n            // 次のappのリソース量を加える\r\n            addQty += this._waitHeap.top() \r\n                    ? this._waitHeap.top().getAmount(this) // 次のリソース解放待ちキューの使用量\r\n                    : Number.MAX_SAFE_INTEGER;\r\n        }\r\n        return vApps;\r\n    };\r\n\r\n\r\n    /**\r\n     * 引数vAppをリソース開放待ちキューからリリースする\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            vApp リリースする仮想AP\r\n     * @return {Object | undefined} リリースした仮想AP\r\n     */\r\n    VirtualResource.prototype.release = function(vApp) { // #61\r\n        var app = this._waitHeap.del(vApp);\r\n        if (app) vApp.addHistory(\"release\", this._system.getTime());\r\n        return app;\r\n    }\r\n\r\n    \r\n    \r\n    /**\r\n     * イベント終了時処理（リソースが管理しているvAppをfinishさせる（強制終了させ処理中vAppはTATログ出力する）\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {String}\r\n     *            [logID=\"N_000\"] ログID（ログメッセージの先頭文字）\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Number}\r\n     *            forceTime 強制終了時刻を指定する（ミシュレーション停止後のeTat強制出力用）\r\n     * @return {null}\r\n     */\r\n    VirtualResource.prototype._finish = function(system, logID,\r\n                                        logMesseage, forceTime) { // #59\r\n        // シミュレーション終了後処理（処理中のvAppを強制終了する）\r\n        logID = logID || \"N_EoS\";\r\n        logMesseage = logMesseage || \"\";\r\n        while(0 < this._waitHeap.size()){\r\n            event = this._waitHeap.pop();\r\n            if (event._finish) {\r\n                event._finish(system, logID,\r\n                        \"[\" + this._name + \"] \" + logMesseage , forceTime);\r\n            }\r\n        }\r\n    }\r\n\r\n    /* new */\r\n    return VirtualResource;\r\n}());\n\n/***/ }),\n/* 34 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * @memberOf Simulator\r\n * @class virtualSystemByJson\r\n * @classdesc 仮想システム生成ツール(virtualSystemByJson)\r\n *            <p>\r\n *            Util管理用クラス（スタティックメソッドのみ）のためコンストラクタは使用しない\r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #53\r\n    \"use strict\";\r\n    /** @constructor */\r\n    function virtualSystemByJson(){\r\n        if(!(this instanceof virtualSystemByJson)){\r\n            return new virtualSystemByJson();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    \r\n    // static\r\n    /**\r\n     * 初期表示用サンプルデータ(ETAT)を自動生成する\r\n     * \r\n     * @memberof Simulator.VirtualSystemByJson\r\n     * @param {String}\r\n     *            [jsonText] シミュレーション条件JSONテキスト\r\n     * @return {ETAT} 終了時刻のTAT（応答時間）時系列データ [{x:終了時刻(UNIX時刻の経過時間(秒)),\r\n     *         y:レスポンス(秒)}]\r\n     */\r\n    // CreateSampleTatLog\r\n    virtualSystemByJson.Execute = function(jsonText){ // #53\r\n        \"use strict\";\r\n        var vSys = {};\r\n        // parse\r\n        var json = JSON.parse(jsonText)\r\n        // virtual system と resources の設定\r\n        var log = (json.log !== undefined) ? json.log : false; // #59\r\n        var start = (json.start !== undefined) \r\n                    ? __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"i\" /* S2D */](json.start) : new Date(1970,1,2);\r\n        var end = start + __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](json.end, \"24*h\");\r\n        var resources = json.resources;\r\n        for (var i = 0; i < resources.length; i++) {\r\n            resources[i].timeout = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](resources[i].timeout, \"10*sec\");\r\n            resources[i].qWait = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](resources[i].qWait, \"10*sec\");\r\n        }\r\n        vSys = Object(__WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__[\"a\" /* default */])(start, end, json.resources, log);\r\n        // model の取得\r\n        var models = json.models;\r\n        for (var i = 0; i < models.length; i++) {\r\n            var model = models[i];\r\n            var name = Object.keys(model)[0]; // モデルの名称\r\n            var m = model[name]; // モデル\r\n            var baseModel = m.baseModel; // baseModel\r\n            for (var j = 0; j < m.sequence.length; j++) {\r\n                // 時間指定文字列を、ミリ秒数値に変換する（例：\"3*sec\"->3000)\r\n                m.sequence[j].tatMin = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](m.sequence[j].tatMin);\r\n                m.sequence[j].tat = __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](m.sequence[j].tat);\r\n            }\r\n            // sequenceに、baseModelを展開し、未開放リソースの開放処理を登録する\r\n            models[name] = __WEBPACK_IMPORTED_MODULE_0__simulator_VirtualSystem_js__[\"a\" /* default */].getModel(\r\n                        baseModel.holds, \r\n                        __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](baseModel.tatMin), __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](baseModel.tat),\r\n                        m.sequence, \r\n                        (typeof(m.times) === \"number\") ? m.times : 1, // #61\r\n                        __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](m.thinkTimeMin), __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](m.thinkTime)); \r\n        }\r\n        // client の設定\r\n        var clients = json.clients;\r\n        for (var i = 0; i < clients.length; i++) {\r\n            var c = clients[i];\r\n            var cStart = start + __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](c.start, 0);\r\n            var cEnd   = start + __WEBPACK_IMPORTED_MODULE_1__util_util_js__[\"j\" /* S2N */](c.end, 24*60*60*1000);\r\n            vSys.setClients(c.user, c.message, c.num, cStart, cEnd, models[c.model]);\r\n        }\r\n        if (log) console.log(vSys); // #59\r\n        return vSys.execute();\r\n    }\r\n\r\n    /**\r\n     * シミュレーション条件JSONテキストを作成する\r\n     * \r\n     * @memberof Simulator.VirtualSystemByJson\r\n     * @param {Number}\r\n     *            [n = 0] シナリオ番号\r\n     * @return {String} シミュレーション条件JSONテキスト\r\n     */\r\n    // CreateSampleTatLogJson\r\n    virtualSystemByJson.GetJsonConfig = function(n){ // #53\r\n        \"use strict\";\r\n        n = (typeof(n) !== \"undefined\") ? n : 0;\r\n        var jsonText = \"\";\r\n        if (n === 0) {\r\n            jsonText =  '{\\n'\r\n                + '\"log\" : 1,\\n'\r\n                + '\"start\" : \"2017/01/02 00:00:00.000\",\\n'\r\n                + '\"end\"   : \"17.0*h\",\\n'\r\n                + '\"resources\" : [\\n'\r\n                + '  {\"type\" :\"WEB\", \"thread\":1024,\"timeout\":\"300*sec\", \"q\":1280, \"qWait\":0},\\n'\r\n                + '  {\"type\" :\"AP\",  \"thread\":20,  \"timeout\":\"300*sec\", \"q\":1280, \"qWait\":0},\\n'\r\n                + '  {\"type\" :\"DB\",  \"thread\":10,  \"timeout\": \"10*sec\", \"q\":10,  \"qWait\":\"10*sec\"}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"models\" : [\\n' // 取引モデル一覧\r\n                + '  { \"ON-1\" : {\\n' // オンライン取引1\r\n                + '    \"times\": 60, \"thinkTimeMin\":\"3*sec\", \"thinkTime\": \"10*sec\",\\n'\r\n                + '    \"baseModel\":  {\"holds\": [\"WEB\",\"AP\",\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":30, \"tat\":50, \"note\":\"select A\"},\\n'\r\n                + '      {\"tatMin\":50, \"tat\":50, \"note\":\"updateB\", \"hold\":\"TBL_B\"},\\n'\r\n                + '      {\"tatMin\":80, \"tat\":100,\"note\":\"updateC\", \"hold\":\"TBL_C\"}\\n'\r\n                + '    ]}},\\n'\r\n                + ' { \"ON-2\" : {\\n' // オンライン取引2\r\n                + '    \"times\": 60, \"thinkTimeMin\":\"500*ms\", \"thinkTime\": \"1*sec\",\\n'\r\n                + '    \"baseModel\":  {\"holds\": [\"WEB\",\"AP\",\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":\"100*ms\", \"tat\":\"500*ms\", \"hold\":\"\"}\\n'\r\n                + '    ]}},\\n'\r\n                + ' { \"BATCH-1\" : {\\n' // バッチ取引3\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":\"2*sec\",\"tat\":\"5*sec\",\"note\":\"updateB\",\"hold\":\"TBL_B\"}\\n'\r\n                + '    ]}}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"clients\" : [\\n' // ユーザ作成条件\r\n                + '  {\"num\":100,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"ON-1\",  \"user\" :\"userU\", \"message\":\"select A update B,C\"},\\n'\r\n                + '  {\"num\": 20,\"start\":\"16.5*h\", \"end\":\"16.6*h\", \"model\":\"ON-1\",  \"user\" :\"userT\", \"message\":\"select A update B,C 【増】\"},\\n'\r\n                + '  {\"num\":100,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"ON-2\",  \"user\" :\"userS\", \"message\":\"排他なし(WEBのみ)\"},\\n'\r\n                + '  {\"num\": 20,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"BATCH-1\",\"user\":\"userB\", \"message\":\"バッチ処理 update B＊＊＊＊＊\"}\\n'\r\n                + ']\\n'\r\n                + '}\\n';\r\n        } else if (n === 1) {\r\n            // test用\r\n            jsonText =  '{\\n'\r\n                + '\"//\" : \"log（任意、デフォルト3）:詳細ログ出力指定(0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)\",\\n'\r\n                + '\"//\" : \"start/end:シミュレーション開始時刻/終了時刻\",\\n'\r\n                + '\"log\" : 1,\\n'\r\n                + '\"start\" : \"1970/01/02 00:00:00.000\",\\n'\r\n                + '\"end\"   : \"30.0*sec\",\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"resources:sequenceのhold/freeで指定するリソース名の定義\",\\n'\r\n                + '\"//\" : \"type:リソース名、thread:最大同時hold数、timeout：holdタイムアウト時間\",\\n'\r\n                + '\"//\" : \"　　　　　　　　　　　q:最大hold待ち数、qWait:最大hold待ち時間\",\\n'\r\n                + '\"resources\" : [\\n'\r\n                + '  {\"type\" :\"DB\",  \"thread\":2,  \"timeout\": \"5*sec\", \"q\":1,  \"qWait\":\"2*sec\"}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"models:clientsで指定するモデル名(model)の定義、以下modelsで指定できる項目\",\\n'\r\n                + '\"//\" : \"baseModel:複数リソースのsequenceをまとめて宣言できる、sequenceに展開した後処理される、任意指定\",\\n'\r\n                + '\"//\" : \"sequence:指定された順にリソースを取得する、配列内に複数指定可、sequenceも複数指定可\",\\n'\r\n                + '\"//\" : \"hold：リソース名、holds(baseModelのみ指定可）：リソース一覧、各々にtat/tatMinが適用される\",\\n'\r\n                + '\"//\" : \"tat/tatMin：リソースの取得に要する平均/最小時間、tatMinのデフォルトはtat\",\\n'\r\n                + '\"//\" : \"　　　　　　★注：tatはリソースの使用時間ではない、リソース使用時間を指定す場合はfreeで指定\",\\n'\r\n                + '\"//\" : \"数値はミリ秒単位、*ms,*sec,*min,*h,*day 指定可\",\\n'\r\n                + '\"//\" : \"times：繰返し回数\",\\n'\r\n                + '\"//\" : \"thinkTime/thinkTimeMin：繰返し時の間隔の平均/最小時間、thinkTimeMinのデフォルトはthinkTime\",\\n'\r\n                + '\"//\" : \"free：[リソース名の配列]、指定リソースを開放する、free指定の無いリソースはシーケンスの最後にfreeされる\",\\n'\r\n                + '\"models\" : [\\n' // 取引モデル一覧\r\n                + ' { \"TEST-AB\" : {\\n' // テスト取引\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"2*ms\"},\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_A\", \"tatMin\":\"1*sec\", \"tat\":\"1*sec\"}],\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_B\", \"tatMin\":\"3*sec\", \"tat\":\"3*sec\"}],\\n'\r\n                + '    \"times\": 2, \"thinkTimeMin\":\"1*sec\", \"thinkTime\": \"1*sec\"}},\\n'\r\n                + ' { \"TEST-BA\" : {\\n' // テスト取引\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"2*ms\"},\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_B\", \"tatMin\":\"1*sec\", \"tat\":\"1*sec\"}],\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_A\", \"tatMin\":\"3*sec\", \"tat\":\"3*sec\"}],\\n'\r\n                + '    \"times\": 2, \"thinkTimeMin\":\"1*sec\", \"thinkTime\": \"1*sec\"}}\\n'\r\n                + '    ],\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"clients：仮想アプリケーションの起動クライアントの定義\",\\n'\r\n                + '\"//\" : \"num:作成クライアント数、start～endの間で、ランダム（指数分布）に指定回数起動する\",\\n'\r\n                + '\"//\" : \"start/end:仮想クライアント作成/終了時刻、先頭で宣言したstartからの相対時刻\",\\n'\r\n                + '\"//\" : \"model:modelsで宣言したモデル名\",\\n'\r\n                + '\"//\" : \"user:user+通番 のユーザ名で仮想クライアントが作成される\",\\n'\r\n                + '\"clients\" : [\\n' // ユーザ作成条件\r\n                + '  {\"num\": 1,\"start\":\"0*sec\", \"end\":\"0*sec\", \"model\":\"TEST-AB\",\"user\" :\"testAB1\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"1*sec\", \"end\":\"1*sec\", \"model\":\"TEST-AB\",\"user\" :\"testAB2\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"3*sec\", \"end\":\"3*sec\", \"model\":\"TEST-BA\",\"user\" :\"testBA3\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"4*sec\", \"end\":\"4*sec\", \"model\":\"TEST-BA\",\"user\" :\"testBA4\"}\\n'\r\n                + ' ]\\n'\r\n                + '}\\n';\r\n        }\r\n\r\n        return jsonText; \r\n    }\r\n\r\n    /* new */\r\n    return virtualSystemByJson;\r\n}());\n\n/***/ }),\n/* 35 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Init_js__ = __webpack_require__(3);\n\r\n\r\n\r\n/**\r\n * @memberOf Simulator\r\n * @class MenuConfig\r\n * @classdesc シミュレータ用メニューHTML定義\r\n * \r\n */\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() { // #74\r\n    // Simulator Config用関数定義(radio用） #53\r\n    var func_S_SIMU_000 = function(){ Object(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Init_js__[\"a\" /* CreateSampleTatLogAndChartShow */])(0); };\r\n    var func_S_SIMU_001 = function(){ Object(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_tatLogDiver_Init_js__[\"a\" /* CreateSampleTatLogAndChartShow */])(1); };\r\n    // Simulator Config設定画面定義 #53\r\n    var env = \"Simulator\"\r\n        // this[\"_config_\" + env] = Util.Config(env) // #53\r\n    HJN.Config[env] = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"a\" /* Config */](env)\r\n         .n(\"<br>\")\r\n         .label(null,\" If you change the scenario below,\").n()\r\n         .label(null,\"JSON is initialized and re-simulated.\").n()\r\n         .n(\"<br>\")\r\n         .name(\"S_SIMU\")\r\n             .radio(\"S_SIMU_000\", null, \r\n                       \"1 hour with table(B) lock.<br>\"\r\n                     + \"- online[100-500ms 2-5tps]<br>\" \r\n                     + \"- batch[2-5sec evry3min]\",\r\n                     true ,null, func_S_SIMU_000).n()\r\n             .radio(\"S_SIMU_001\", null, \"for test\", \r\n                     false ,null, func_S_SIMU_001).n()\r\n     ;\r\n});\n\n/***/ }),\n/* 36 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Menu;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__simulator_simulator_js__ = __webpack_require__(1);\n\r\n\r\n/**\r\n * tatLogDiverのメニューを追加する\r\n * \r\n * @memberof tatLogDiver\r\n */\r\nfunction Menu(that) {\r\n    \"use strict\";\r\n    // メニュー用のエレメントを取得する\r\n    var divMenuId = that.chartIdName + \"_menu\";\r\n    var divMenu = document.getElementById(divMenuId);\r\n    // menu用divがないとき、chartの直前に追加する #13\r\n    if (!divMenu) {\r\n        var div = document.createElement('div');\r\n        div.id = divMenuId;\r\n        div.className = \"menuBar\";\r\n        divMenu = that.chartId.parentNode.insertBefore(div, that.chartId);\r\n    }\r\n    // メニューボタン定義を登録する\r\n    var g = that.globalName;\r\n    // 上下段共通ボタンの定義(Download Menu)\r\n    var menuDownloadImg = { // getATag\r\n        menuLabel : \"graph image(.png)\",\r\n        funcName : g + \".menuDownloadImg\",\r\n        menuId : divMenuId + \"_DownloadImg\",\r\n        fileName : \"graph.png\"\r\n    };\r\n    var menuDownloadCsv = { // getATag\r\n        menuLabel : \"graph data(.csv)\",\r\n        funcName : g + \".menuDownloadCsv\",\r\n        menuId : divMenuId + \"_DownloadCsv\",\r\n        fileName : \"graph.csv\"\r\n    };\r\n    var menuDownloadLog = { // getATag\r\n        menuLabel : \"graph log records(.csv)\",\r\n        funcName : g + \".menuDownloadLog\",\r\n        menuId : divMenuId + \"_DownloadLog\",\r\n        fileName : \"tatlog.csv\"\r\n    };\r\n    var menuDownloadConc = { // getATag\r\n        menuLabel : \"conc log records(.csv)\",\r\n        funcName : g + \".menuDownloadConc\",\r\n        menuId : divMenuId + \"_DownloadConc\",\r\n        fileName : \"conclog.csv\"\r\n    };\r\n\r\n    // メニューを追加する\r\n    var accordion = document.createElement('div'); // 要素の作成\r\n    var _id = 0;\r\n    if (HJN.chart.chartId === that.chartId) { // 上段グラフ用機能のメニュー追加\r\n        // File Menu\r\n        var menuOpenCsv = { // getInputTag\r\n            menuLabel : \"Open csv data file\",\r\n            funcName : g + \".menuOpenCsv\",\r\n            menuId : divMenuId + \"_OpenCsv \"\r\n        };\r\n        var menuSaveConfig = { // getATag\r\n            menuLabel : \"save format (.json)\",\r\n            funcName : g + \".menuSaveConfig\",\r\n            menuId : divMenuId + \"_SaveCongig\",\r\n            fileName : \"hjnconfig.json\"\r\n        };\r\n        var menuLoadConfig = { // getInputTag #10\r\n            menuLabel : \"load format (.json)\",\r\n            funcName : g + \".menuLoadConfig\",\r\n            menuId : divMenuId + \"_LoadCongig\"\r\n        };\r\n        accordion.innerHTML = '<li class=\"hjnMenuLv1\">'\r\n                + getAccordionTag(that, ++_id, \"File\")\r\n                + '<ul class=\"hjnMenuLv2\">' + getInputTag(menuOpenCsv)\r\n//                + that.fileParser.getConfigHtml(\"File\") // #24\r\n                + HJN.Config.File.getHtml() // #74\r\n                + getATag(menuSaveConfig) + getInputTag(menuLoadConfig) // #10\r\n                + '</ul>' + '</li>';\r\n\r\n        // Filter Menu #34\r\n        var menuFilterApply = { // getFuncTag #34\r\n            menuLabel : \"Apply filter & reload\",\r\n            funcName : g + \".menuFilterApply\",\r\n            menuId : divMenuId + \"_FilterApply\"\r\n        };\r\n        var menuFilterClear = { // getFuncTag #34\r\n            menuLabel : \"Clear filter condition\",\r\n            funcName : g + \".menuFilterClear\",\r\n            menuId : divMenuId + \"_FilterClear\"\r\n        };\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Filter\">'\r\n                + getAccordionTag(that, ++_id, \"Filter\")\r\n                + '<ul class=\"hjnMenuLv2\">'\r\n//                + that.fileParser.getConfigHtml(\"Filter\") // #24\r\n                + HJN.Config.Filter.getHtml() // #74\r\n                + getFuncTag(menuFilterApply) + getFuncTag(menuFilterClear)\r\n                + '</ul>' + '</li>';\r\n\r\n        // Simulator Menu #53\r\n        __WEBPACK_IMPORTED_MODULE_0__simulator_simulator_js__[\"a\" /* MenuConfig */](); // #74\r\n        var menuSimulatorSimulate = {\r\n            menuLabel : \"Simulate\",\r\n            funcName : g + \".menuSimulatorSimulate\",\r\n            menuId : divMenuId + \"_SimulatorSimulate\"\r\n        };\r\n        var menuSimulatorEditor = {\r\n            menuLabel : \"JSON Editor(Open/Close)\",\r\n            funcName : g + \".menuSimulatorEditor\",\r\n            menuId : divMenuId + \"_SimulatorEditor\"\r\n        };\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Simulator\">'\r\n                + getAccordionTag(that, ++_id, \"Simulator\")\r\n                + '<ul class=\"hjnMenuLv2\">' + getFuncTag(menuSimulatorSimulate)\r\n                + getFuncTag(menuSimulatorEditor)\r\n                + HJN.Config.Simulator.getHtml() // #74\r\n                + '</ul>' + '</li>';\r\n        // シミュレーション条件JSON Editエリアを設定する\r\n        var divSimulator = document.getElementById(\"Simulator\");\r\n        var jsonEditor = document.createElement('div'); // 要素の作成\r\n        jsonEditor.innerHTML = '<textarea id=\"SimulatorEditor\" '\r\n                + 'style=\"width:99%;border:none;resize:none;background:rgba(255,255,255,0.5);height:500px;\">'\r\n        divSimulator.appendChild(jsonEditor);\r\n        var divSimulatorEditor = document.getElementById(\"SimulatorEditor\");\r\n        // divSimulatorEditor.readOnly = true; // #22\r\n        divSimulatorEditor.value = __WEBPACK_IMPORTED_MODULE_0__simulator_simulator_js__[\"d\" /* virtualSystemByJson */]\r\n                .GetJsonConfig(); // デフォルトJSON\r\n\r\n        // View Menu\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_View\">'\r\n                + getAccordionTag(that, ++_id, \"View\", true)\r\n                + '<ul class=\"hjnMenuLv2\">' // \r\n                + '<li><div id=\"' + that.chartIdName + '_legend\"></div></li>'\r\n                + '</ul>' + '</li>';\r\n\r\n        // Download Menu\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Download\">'\r\n                + getAccordionTag(that, ++_id, \"Download\")\r\n                + '<ul class=\"hjnMenuLv2\">' //\r\n                + getATag(menuDownloadImg, \"Upper \")\r\n                + getATag(menuDownloadCsv, \"Upper \")\r\n                + getATag(menuDownloadLog, \"Upper \") + '</ul>' + '</li>';\r\n\r\n        // メニュー登録\r\n        divMenu.appendChild(accordion);\r\n        // イベントリスナー登録\r\n        document.getElementById(menuOpenCsv.menuId).addEventListener('change',\r\n                that.menuOpenCsv.bind(that), false); // File Open用\r\n        document.getElementById(menuLoadConfig.menuId).addEventListener(\r\n                'change', that.menuLoadConfig.bind(that), false); // LoadConfig用\r\n\r\n    } else { // 下段用グラフ機能のメニュー追加\r\n        _id += 100;\r\n        // Download Menu\r\n        var chartDownloadUl = document.createElement('ul');\r\n        chartDownloadUl.className = \"hjnMenuLv2\";\r\n        chartDownloadUl.innerHTML = '' //\r\n                + getATag(menuDownloadImg, \"Detail \")\r\n                + getATag(menuDownloadCsv, \"Detail \")\r\n                + getATag(menuDownloadLog, \"Detail \")\r\n                + getATag(menuDownloadConc, \"Detail \");\r\n        var chartDownload = document.getElementById(\"menu_Download\");\r\n        chartDownload.appendChild(chartDownloadUl);\r\n\r\n        // View Menu\r\n        var chartViewUl = document.createElement('ul');\r\n        chartViewUl.className = \"hjnMenuLv2\";\r\n        chartViewUl.innerHTML = '<li><div id=\"' + that.chartIdName\r\n                + '_legend\"></div></li>';\r\n        var chartView = document.getElementById(\"menu_View\");\r\n        chartView.appendChild(chartViewUl);\r\n\r\n        // \"Bottom detail graph\" Menu\r\n        accordion.innerHTML = '<li class=\"hjnMenuLv1\">'\r\n                + getAccordionTag(that, ++_id, \"Bottom detail graph\", true)\r\n                + '<ul class=\"hjnMenuLv2\">' //\r\n                + '<ol><div id=\"detailTimeRange\">' + getDetailTimeRangeTag()\r\n                + '</div></ol>' // #51\r\n                + '<li><div id=\"chartPlots\"></div></li>' //\r\n                + '</ul>' + '</li>';\r\n\r\n        // Help Menu\r\n        var menuHelpAbout = { // getAlertTag\r\n            menuLabel : \"about TAT log diver\",\r\n            menuId : divMenuId + \"_HelpAbout\",\r\n            strFuncName : \"HJN.init.Copyright()\"\r\n        };\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\">'\r\n                + getAccordionTag(that, ++_id, \"Help\")\r\n                + '<ul class=\"hjnMenuLv2\" style=\"width: 100%;\">' //\r\n                + getAlertTag(menuHelpAbout) + '</ul>' + '</li>';\r\n\r\n        // メニュー登録\r\n        divMenu.appendChild(accordion);\r\n    }\r\n\r\n    // アコーディオンラベル用<input><label>タグ編集（内部関数宣言） #31\r\n    // idは、ユニークな英数字なら何でもよい（ラベル押下時のアコーディオン開閉ラジオボタン連動用の接尾語）\r\n    function getAccordionTag(that, id, labelText, isChecked) {\r\n        var isAccordion = true, // true:アコーディオン型 false:折りたたみ型 #21\r\n        typeStr = isAccordion ? ' type=\"checkbox\" name=\"accordion\" '\r\n                : ' type=\"radio\" name=\"accordion\" ', //\r\n        checkedStr = ' checked=\"checked\" ';\r\n        return '' + '<input id=\"ac-' + that.chartIdName + id + '\"' + typeStr\r\n                + (isChecked ? checkedStr : '') + '\">' + '<label for=\"ac-'\r\n                + that.chartIdName + id + '\">' + labelText + '</label>';\r\n    }\r\n\r\n    // File Open用<input>タグ編集（内部関数宣言）\r\n    // '<ol><a><label>Child Menu<input type=\"file\" id=\"xxx\"\r\n    // multiple/></label></a></ol>\r\n    function getInputTag(arg) {\r\n        return '' + '<ol><a><label class=\"hjnButton4Input\">' + arg.menuLabel // #51\r\n                + '<input type=\"file\" id=\"' + arg.menuId + '\"  multiple />'\r\n                + '</label></a></ol>';\r\n    }\r\n\r\n    // ダウンロード用<A>タグ編集（内部関数宣言）\r\n    // '<li><a id=\"xxx\" href=\"#\">Child Menu</a><li/>'\r\n    function getATag(arg, preLabel) {\r\n        preLabel = preLabel || \"\";\r\n        return '' + '<li><a id=\"' + arg.menuId + '\" '\r\n                + 'class=\"hjnButton4Input\" href=\"#\" ' // #51\r\n                + 'download=\"' + arg.fileName + '\" ' //\r\n                + 'onclick=\"' + arg.funcName + '(' + \"'\" + arg.menuId + \"', '\"\r\n                + arg.fileName + \"'\" + ')\" ' + '>' + preLabel + arg.menuLabel\r\n                + '</a></li>';\r\n    }\r\n\r\n    // グローバルメソッド呼出用<A>タグ編集（内部関数宣言） #34\r\n    // '<li><a id=\"xxx\" href=\"#\">Child Menu</a></li>'\r\n    function getFuncTag(arg, preLabel) {\r\n        preLabel = preLabel || \"\";\r\n        return '' + '<li><a id=\"' + arg.menuId + ' \"'\r\n                + 'class=\"hjnButton4Input\" href=\"#\" ' // #51\r\n                + 'onclick=\"' + arg.funcName + '()\">' //\r\n                + preLabel + arg.menuLabel + '</a></li>';\r\n    }\r\n\r\n    // Alert用<A>タグ編集（内部関数宣言）\r\n    // '<a id=\"xxx\" onclick=Alert(\"xxx\")>Child Menu</a>'\r\n    function getAlertTag(arg) {\r\n        return '' + '<ol><a id=\"' + arg.menuId + '\"'\r\n                + 'class=\"hjnButton4Input\" ' // #51\r\n                + ' onclick=\"alert(' + arg.strFuncName + \")\" + '\"' + '>' //\r\n                + '<label>' + arg.menuLabel + '</label></a></ol>';\r\n    }\r\n\r\n    // 下段表示幅指定用<div>タグ編集\r\n    function getDetailTimeRangeTag() {\r\n        var UNIT_RANGE= [ // #48\r\n            { label: \"sec\",    val: \"1000\" },\r\n            { label: \"10sec\",  val: \"10000\", selected: \"selected\" },\r\n            { label: \"min\",    val: \"60000\" },\r\n            { label: \"10min\",  val: \"600000\" }, \r\n            { label: \"hour\",   val: \"3600000\" },\r\n            { label: \"6hours\", val: \"21600000\" },\r\n            { label: \"day\",    val: \"86400000\" }, \r\n            { label: \"year\",   val: \"31536000000\" } ];\r\n\r\n        var initPlus = 1, initMinus = 2; // #3\r\n        return 'Range: '\r\n                + '- <input type=\"number\" id=\"DetailRangeMinus\" min=\"0\" step=\"1\"'\r\n                + 'value=\"'\r\n                + initPlus\r\n                + '\" style=\"width:40px; \"  onchange=\"HJN.init.setDetailRange()\"> '\r\n                + '+ <input type=\"number\" id=\"DetailRangePlus\" min=\"0\" step=\"1\"'\r\n                + 'value=\"'\r\n                + initMinus\r\n                + '\" style=\"width:40px; \"  onchange=\"HJN.init.setDetailRange()\"> '\r\n                + '<select id=\"DetailRangeUnit\" class=\"hjnLabel4Input\" onchange=\"HJN.init.setDetailRange()\">' // #48\r\n                + UNIT_RANGE.reduce(function (prev, e, i, a) {\r\n                    return prev + '<option value=\"' + e.val + '\" '\r\n                            + (e.selected || \"\") + '>' + e.label // #53\r\n                            + '</option>';\r\n                }, '') + '</select>';\r\n    }\r\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Copyright; });\nvar Copyright = {\r\n    Version : \"b18.02.09\",\r\n    text : \"&copy; 2017-2018 Junichiroh Hirose\\n\" +\r\n                \"https://github.com/hirosejn/HJN\"\r\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export default */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__ = __webpack_require__(4);\n\r\n\r\n\r\n\r\n/**\r\n * グラフの点をクリックした際に決まる下段グラフの表示条件\r\n * \r\n * @namespace Plot\r\n */\r\nfunction Plot(){};\r\n__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot = Plot;\r\n\r\n/**\r\n * Plotの一覧\r\n * \r\n * @type array.<String, Boolean, Boolean, index, xMs, Number, Number, Number>\r\n * @prop {String} label Plot一覧に表示する文字列\r\n * @prop {Boolean} ckBox チェックボックスの選択状態<br>\r\n *       （選択後すぐに削除されるのでtrueとなることはない）\r\n * @prop {Boolean} radio ラジオボタンの選択状態\r\n * @prop {index} n グラフ番号\r\n * @prop {xMs} x xの値\r\n * @prop {Number} y yの値\r\n * @prop {Number} rangeMinus 表示幅時間マイナス（秒）\r\n * @prop {Number} rangePlus 表示幅時間プラス（秒）\r\n * @prop {Number} rangeUnit 表示幅時間 単位（sec:1/min:60/hour:3600/day:86400)\r\n * \r\n */\r\n__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List = [];\r\n\r\n/**\r\n * point/baloonクリック時呼出し用関数<br>\r\n * 詳細グラフを描画し、Plotを更新する\r\n * \r\n * @param {Objcet}\r\n *            point dygraph の point\r\n */\r\nPlot.PointClickCallback = function(point) {\r\n    \"use strict\";\r\n    __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"f\" /* Logger */].ShowLogText(\"[0:PointClickCallback]start---------------\",\"calc\");\r\n    var n = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].seriesConfig.findIndex(function(e){ return e.key === point.name; }),// シリーズ番号\r\n        x = point.xval, // ミリ秒\r\n        y = point.yval; // 秒\r\n\r\n    // ETPS,EMPS,EAPSのとき、TATが幅に含まれるよう、幅(range)を拡大する #57\r\n    var rangeTagUnit = document.getElementById(\"DetailRangeUnit\");\r\n    var rangeUnit  = rangeTagUnit  ? +rangeTagUnit.value : __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"d\" /* Tat */].CYCLE;\r\n    if ((n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].ETPS.N || n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].EMPS.N || n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].EAPS.N) \r\n            && rangeUnit < __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"d\" /* Tat */].CYCLE) {\r\n        rangeUnit = __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"d\" /* Tat */].CYCLE;\r\n        __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].detailRangeUnit = rangeUnit;\r\n        // selectリストの選択を、rangeUnitに合わせる #57\r\n        for (var i = 0; i < rangeTagUnit.length; i++) {\r\n            if(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].detailRangeUnit <= rangeTagUnit[i].value){\r\n                rangeTagUnit[i].selected = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // グラフの日時で、詳細グラフを再作成する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.SetDetailDateTime(x);\r\n    var tat = new __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"d\" /* Tat */](__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.GetSliderRangedEtat()); // #57\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.setSeriesSet(tat); // #75\r\n    \r\n    // 下段の残処理終了後、下段データを登録描画する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.graph.ready(function(){ __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.update(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.seriesSet, n); }); // #57\r\n    // Hover表示しているplotを、Plot.Listに登録し、plotsアイコンを再描画する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.Add(n, x, y);\r\n    // Balloonを再描画する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.ShowBalloon();\r\n    // タッチデバイスでないとき、lineViewerに表示をクリップボードにコピーする\r\n    if (!__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"k\" /* TouchPanel */].isTouchableDevice()) { // #22\r\n        __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"b\" /* CopyToClipboard */](\"lineViewer\"); // #61\r\n    }\r\n};\r\n\r\n/**\r\n * point/baloonダブルクリック時呼出し用関数<br>\r\n * Plotを削除する\r\n * \r\n * @param {object}\r\n *            plot dygraphのpoint\r\n */\r\nPlot.PointDblClickCallback = function(point) {\r\n    \"use strict\";\r\n    // 指定plotを削除する\r\n    var n = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].seriesConfig.findIndex(function(e){ return e.key === point.name; }),\r\n        x = point.xval, // ミリ秒\r\n        i = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.findIndex(function(p){\r\n                return(p.n === n && p.x === x) ||   // 完全一致\r\n                        (\"tpsPlot\" in p &&          // 詳細一致\r\n                        p.tpsPlot.n === n && p.tpsPlot.x === x); });\r\n    if(0 <= i) __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.splice(i, 1);\r\n    \r\n    Plot.Render();\r\n    // グラフ内の吹き出しを再表示する\r\n    Plot.ShowBalloon();\r\n};\r\n\r\n/**\r\n * クリック時のHoverからPlot.Listを設定する\r\n * \r\n * @param {index}\r\n *            n グラフのシリーズ番号\r\n * @param {xMs}\r\n *            x マウスクリック時のxの値（ミリ秒）\r\n * @param {Number}\r\n *            y マウスクリック時のyの値\r\n * @return {index} i plots内のplotの位置\r\n */\r\nPlot.Add=function(n, x, y) {\r\n    \"use strict\";\r\n    // 各plotを非選択状態とする\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.forEach(function(e){e.radio = false;});\r\n    // ラベルフォーマットの設定\r\n    var format = (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].ETPS.N || n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].CTPS.N) ? \"hh:mm:ss\" : \"hh:mm:ss.ppp\",\r\n        label = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](x, format, true) + \" \" + // #61\r\n                __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].seriesConfig[n].label.replace(\"%N\",__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"g\" /* N2S */](y));\r\n    // 幅(range)を取り込む（秒）\r\n    var rangePlusTag  =  document.getElementById(\"DetailRangePlus\"),\r\n        rangeMinusTag =  document.getElementById(\"DetailRangeMinus\"),\r\n        rangeUnitTag  =  document.getElementById(\"DetailRangeUnit\"), // #48\r\n        rangeUnit  = rangeUnitTag  ? +rangeUnitTag.value : __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"d\" /* Tat */].CYCLE, // #57\r\n        rangePlus  = rangePlusTag  ? +rangePlusTag.value  : 1,  // 幅\r\n        rangeMinus = rangeMinusTag ? +rangeMinusTag.value : 1;\r\n\r\n    // 既存Poltを検索する\r\n    var i = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.findIndex(function(p){\r\n                return(p.n === n && p.x === x) ||   // 完全一致\r\n                        (\"tpsPlot\" in p &&          // 詳細一致\r\n                        p.tpsPlot.n === n && p.tpsPlot.x === x); });\r\n    // Plotを設定する\r\n    var plot;\r\n    if(0 <= i){ // 既存Plotsにある時、選択状態とし、rangeを再設定する\r\n        plot = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List[i];\r\n        plot.radio = true;\r\n        plot.rangePlus  = rangePlus; // 秒\r\n        plot.rangeMinus = rangeMinus;\r\n        plot.rangeUnit  = rangeUnit; // #48\r\n    }else{      // 既存に無いときPlotを追加する\r\n        // ETAT,STATのとき、TATが幅に含まれるよう、幅(range)を拡大する #30 #48 #57\r\n        if (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].ETAT.N){\r\n            rangeMinus = Math.max(rangeMinus, \r\n                    Math.floor(x / rangeUnit) - Math.floor((x - y) / rangeUnit)); // #48\r\n            document.getElementById(\"DetailRangeMinus\").value = rangeMinus; \r\n        }else if (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].STAT.N){\r\n            rangePlus = Math.max(rangePlus,\r\n                    Math.floor((x + y) / rangeUnit)) - Math.floor(x / rangeUnit) ; // #48\r\n            document.getElementById(\"DetailRangePlus\").value = rangePlus;\r\n        }\r\n        // Plotを追加する\r\n        plot = {label: label, ckBox:false,\r\n                 radio:true, n: n, x: x, y: y, \r\n                 rangePlus: rangePlus, rangeMinus: rangeMinus, rangeUnit: rangeUnit };\r\n        if (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].CTPS.N){          // CTPSのとき秒内最大CONCとして登録する\r\n            adjustPlotToY(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.conc, x, x + __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.cTpsUnit.unit, y, \r\n                    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].CONC.N, plot, rangePlus, rangeMinus, rangeUnit);\r\n        }else if (n === __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].EMPS.N){    // EMPSのとき秒内最大ETATとして登録する\r\n            adjustPlotToY(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.eTat, x, x + __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"d\" /* Tat */].CYCLE, y, \r\n                    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].ETAT.N, plot, rangePlus, rangeMinus, rangeUnit);\r\n        }else { // CTPS,EMPS以外の時、選択Plotを追加する\r\n            __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.push(plot);\r\n        }\r\n        // Plotsを時刻順にソートする\r\n        __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.sort(\r\n                function(a, b) { return a.x - b.x; });\r\n        i = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.findIndex(\r\n                function(p){ return(p.n === n && p.x === x); });\r\n    }\r\n    Plot.Render();\r\n    return i;   // plots内のplotの位置\r\n\r\n    \r\n    // 内部関数：プロット位置を、指定秒から詳細グラフの最大時刻に変更する #19\r\n    function adjustPlotToY(conc, x, toX, y, n, plot, rangePlus, rangeMinus, rangeUnit){\r\n        if (!conc) return;\r\n        var maxTime = 0,\r\n            concMax = 0,\r\n            i = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"l\" /* binarySearch */](x, conc, function(e){ return e.x; });\r\n        for (; i < conc.length && conc[i].x < toX; i++){    // #26\r\n            if (concMax <= conc[i].y){\r\n                    maxTime = conc[i].x;\r\n                    concMax = conc[i].y;\r\n            }\r\n        }\r\n        if (concMax === y) { // 補正すべき時刻が求まったときCONC,ETATを追加する #23\r\n            x = maxTime;\r\n            format = \"hh:mm:ss.ppp\";\r\n            label = __WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"c\" /* D2S */](x, format, true) + \" \" + // #61\r\n                    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].seriesConfig[n].label.replace(\"%N\",__WEBPACK_IMPORTED_MODULE_0__util_util_js__[\"g\" /* N2S */](y));\r\n            __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.push( {label: label, ckBox:false,\r\n                 radio:true, n: n, x: x, y: y, \r\n                 rangePlus: rangePlus , rangeMinus: rangeMinus, rangeUnit: rangeUnit,\r\n                 tpsPlot: plot} );  // 詳細plotには、tpsのplot情報も保持する\r\n        } else { // 補正すべき時刻がない場合、元のPlotを追加する\r\n            __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.push(plot);\r\n        }\r\n\r\n    }\r\n};\r\n\r\n/**\r\n * Plot.Listを再表示する\r\n */\r\nPlot.Render = function() {\r\n    \"use strict\";\r\n    var divCheckedPlots =  document.getElementById(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartName + \"Plots\");\r\n    // 既存のアイコンを削除する\r\n    while (divCheckedPlots.firstChild){\r\n        divCheckedPlots.removeChild(divCheckedPlots.firstChild);\r\n    }\r\n    // 登録されているplots分のアイコンを追加する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.forEach( function(e, i){\r\n        var div = document.createElement('div'),        // 要素の作成\r\n            radio = e.radio ? 'checked=\"checked\"' : '', // radio選択指定\r\n            ckBox = e.ckBox ? 'checked=\"checked\"' : ''; // check boxのチェック指定\r\n        div.className = \"hjnPlot\";\r\n        div.innerHTML =\r\n            '<input type=\"checkbox\" value=\"' + e.x + '\" id=\"checkBox_' + i + '\" ' + ckBox +\r\n                    ' title=\"delete\" onclick=\"HJN.Plot.CheckBox(' + i + ')\">' +\r\n            '<label for=\"checkBox_' + i + '\"></label>' +\r\n            '<input type=\"radio\" name=\"CheckedPlot\" id=\"SaveTime_' + i + '\" ' + radio +\r\n                    ' onclick=\"HJN.Plot.CheckRadio(' + i + ')\">' +\r\n            '<label for=\"SaveTime_' + i + '\">' + e.label + '</label>';\r\n        divCheckedPlots.appendChild(div);\r\n    } );\r\n};\r\n/**\r\n * PlotのChekBox変更時呼出用関数<br>\r\n * 指定Plotを削除し、PlotsとBaloonを再描画する\r\n * \r\n * @param {index}\r\n *            i 削除対象plotの、plots内位置\r\n */\r\nPlot.CheckBox = function(i) {\r\n    \"use strict\";\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.splice(i,1);      // checkされたplotを削除する\r\n    Plot.Render();          // Plotsを再描画する\r\n    Plot.ShowBalloon();     // グラフのBalloonを再描画する\r\n};\r\n/**\r\n * PlotのRadioボタン変更時呼出用関数<br>\r\n * radio選択時に下段グラフを更新する\r\n * \r\n * @param {index}\r\n *            i 選択されたplotの、plots内位置\r\n */\r\nPlot.CheckRadio = function(i) {\r\n    \"use strict\";\r\n    // Plot.Listにradioの状態を反映する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List.forEach(function(e){ e.radio = false; });\r\n    var plot = __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].Plot.List[i];\r\n    plot.radio = true;\r\n    // グラフの日時で、詳細グラフを再作成する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.SetDetailDateTime(plot.x); // 中心時刻に設定する\r\n    document.getElementById(\"DetailRangePlus\").value = plot.rangePlus;  // 幅を設定する\r\n    document.getElementById(\"DetailRangeMinus\").value = plot.rangeMinus;\r\n    document.getElementById(\"DetailRangeUnit\").value = plot.rangeUnit; // #48\r\n    var n = plot.tpsPlot ? plot.tpsPlot.n : plot.n; // #61\r\n    var tat = new __WEBPACK_IMPORTED_MODULE_2__timeSeries_timeSeries_js__[\"d\" /* Tat */](__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].init.GetSliderRangedEtat()); // #75\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.setSeriesSet(tat); // #57\r\n    // 下段データを登録描画する\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.update(__WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.seriesSet, n); // #57\r\n    // Balloonを再描画する\r\n    Plot.ShowBalloon();\r\n};\r\n/**\r\n * Balloonを再描画する\r\n */\r\nPlot.ShowBalloon =function(){\r\n    \"use strict\";\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chart.showBalloon();\r\n    __WEBPACK_IMPORTED_MODULE_1__tatLogDiver_HJN_js__[\"a\" /* HJN */].chartD.showBalloon();\r\n};\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// tatLogDiver.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d707cee15d90ed7c7b39","import TouchPanel         from './util-TouchPanel.js';\r\nimport {DateToString, S2D, D2S, N2S, S2N} from './util-string.js';\r\nimport Random             from './util-Random.js';\r\nimport addEventListener   from './util-addEventListener.js';\r\nimport setZeroTimeout     from './util-setZeroTimeout.js';\r\nimport Logger             from './util-Logger.js';\r\nimport CopyToClipboard    from './util-copyToClipboard.js';\r\nimport binarySearch       from './util-binarySearch.js';\r\nimport Heap               from './util-Heap.js';\r\nimport {Config}           from './config/config.js';\r\n\r\n/** @namespace Util */\r\nexport {\r\n    TouchPanel,\r\n    S2D,\r\n    DateToString,\r\n    D2S,\r\n    N2S,\r\n    S2N,\r\n    Random,\r\n    addEventListener,\r\n    setZeroTimeout,\r\n    Logger,\r\n    CopyToClipboard,\r\n    binarySearch,\r\n    Heap,\r\n    Config\r\n};\r\n\r\n\r\n/** ie11 互換用 * */\r\nif(!Number.MAX_SAFE_INTEGER) Number.MAX_SAFE_INTEGER = 9007199254740991; // #59\r\nif(!Number.MIN_SAFE_INTEGER) Number.MIN_SAFE_INTEGER = -9007199254740991;\r\n\r\nif(!Uint8Array.prototype.indexOf){\r\n    Uint8Array.prototype.indexOf = function(target,index){\r\n        \"use strict\";\r\n        index = (index === undefined) ? 0 : index;  // #29\r\n        for(var i = index, last = index + 4096; i < last; i++){ // 暫定：1レコード4KBまでチェック\r\n            if(this[i] === target) return i; \r\n        }\r\n        return -1;\r\n    };\r\n}\r\nif (!Uint8Array.prototype.slice) {  // #29\r\n    Uint8Array.prototype.slice = function(begin, end) {\r\n        \"use strict\";\r\n        return this.subarray(begin, end);\r\n    };\r\n}\r\n// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\r\nif (!Array.prototype.findIndex) {\r\n    Array.prototype.findIndex = function(predicate) {\r\n          \"use strict\";\r\n      if (this === null) throw new TypeError('Array.prototype.findIndex called on null or undefined');\r\n      if (typeof predicate !== 'function') throw new TypeError('predicate must be a function');\r\n      var list = Object(this), length = list.length >>> 0, thisArg = arguments[1], value;\r\n      for (var i = 0; i < length; i++) {\r\n        value = list[i];\r\n        if (predicate.call(thisArg, value, i, list)) return i;\r\n      }\r\n      return -1;\r\n    };\r\n  }\r\n// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\nif (!Array.prototype.find) {\r\n    Array.prototype.find = function(predicate) {\r\n        \"use strict\";\r\n      if (this === null) throw new TypeError('Array.prototype.find called on null or undefined');\r\n      if (typeof predicate !== 'function')  throw new TypeError('predicate must be a function');\r\n      var list = Object(this), length = list.length >>> 0, thisArg = arguments[1], value;\r\n      for (var i = 0; i < length; i++) {\r\n        value = list[i];\r\n        if (predicate.call(thisArg, value, i, list))  return value;\r\n      }\r\n      return undefined;\r\n    };\r\n  }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util.js\n// module id = 0\n// module chunks = 0","/* ******1*********2*********3*********4*********5*********6*********7****** */\r\nimport * as Util from '../util/util.js';\r\n\r\n/** @namespace */\r\nexport var HJN = {};\r\nwindow.HJN = HJN; // #67\r\n\r\nHJN.init = {}; // 初期登録処理関連\r\n\r\nHJN.chart = HJN.chartD = null;\r\nHJN.chartName = \"chart\";\r\n\r\nHJN.CONC = {\r\n    key : 'conc',\r\n    name : '多重度（詳細）',\r\n    label : 'conc:%N',\r\n    N : 0,\r\n    scale : 0,\r\n    color : 'rgba(  0,  0,127, 0.3)',\r\n    tpsN : 1\r\n}; // #7\r\nHJN.CTPS = {\r\n    key : 'cTps',\r\n    name : '多重度（区間最大）',\r\n    label : 'conc(max):%N',\r\n    N : 1,\r\n    scale : 0,\r\n    color : 'rgba(  0,  0,127, 0.1)',\r\n    detailN : 0\r\n};\r\nHJN.ETPS = {\r\n    key : 'eTps',\r\n    name : 'average tps / min (end) [line]', // #57\r\n    label : 'end:%Ntps',\r\n    N : 2,\r\n    scale : 0,\r\n    color : 'rgba(  0, 127, 127, 0.3)'\r\n};\r\nHJN.STAT = {\r\n    key : 'sTat',\r\n    name : 'response by start time [Y2軸:plot]',\r\n    label : 'start:%Nms',\r\n    N : 3,\r\n    scale : 1,\r\n    color : 'rgba(127, 127, 0, 0.3)'\r\n};\r\nHJN.ETAT = {\r\n    key : 'eTat',\r\n    name : 'response by end time   [Y2軸:plot]',\r\n    label : 'end:%Nms',\r\n    N : 4,\r\n    scale : 1,\r\n    color : 'rgba(127,  0,  0, 0.3)'\r\n};\r\nHJN.EMPS = {\r\n    key : 'eMps',\r\n    name : 'max response / min (end) [Y2軸:line]', // #57\r\n    label : 'max:%Nms',\r\n    N : 5,\r\n    scale : 1,\r\n    color : 'rgba(127,   0,  64, 0.3)'\r\n};\r\nHJN.EAPS = {\r\n    key : 'eAps',\r\n    name : 'average response / min (end) [Y2軸:line]', // #57\r\n    label : 'ave:%Nms',\r\n    N : 6,\r\n    scale : 1,\r\n    color : 'rgba(127,   0,  64, 0.1)'\r\n};\r\n// グラフ定数\r\nHJN.seriesConfig = [ HJN.CONC, HJN.CTPS, HJN.ETPS, HJN.STAT, HJN.ETAT,\r\n        HJN.EMPS, HJN.EAPS ];\r\n\r\nHJN.detailDateTime = new Date(); // 下段表示時刻\r\nHJN.detailRangePlus = 1.0; // 下段表示範囲（＋秒）\r\nHJN.detailRangeMinus = 1.0; // 下段表示範囲（－秒）\r\n\r\nHJN.files = [];\r\nHJN.filesArrayBuffer = [];\r\n\r\nHJN.timer = {};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-HJN.js\n// module id = 2\n// module chunks = 0","\"use strict\";\r\nimport * as Util from '../util/util.js';\r\nimport * as TimeSeries from '../timeSeries/timeSeries.js';\r\nimport * as Simulator from '../simulator/simulator.js';\r\nimport {HJN} from './tatLogDiver-HJN.js';\r\nimport {Copyright} from \"./tatLogDiver-Copyright.js\";\r\nimport Graph from './tatLogDiver-Graph.js';\r\nimport Plot  from './tatLogDiver-Plot.js';\r\n\r\n\r\n/* *****1*********2*********3*********4*********5*********6*********7******* */\r\n/**\r\n * HTMLから呼び出すAPI\r\n * \r\n * @memberof Init\r\n * @param {string}\r\n *            [chartName=HJN.chartName=\"chart\"] グラフを作成するHTMLタグ名\r\n * @return {ETAT} 終了時刻のTAT（応答時間）時系列データ\r\n * @example <!doctype html> <html> <head> <meta charset=\"UTF-8\"> <link\r\n *          type=\"text/css\" rel=\"stylesheet\" href=\"../libs/dygraph.css\"> <link\r\n *          type=\"text/css\" rel=\"stylesheet\" href=\"./tatLogDiver.css\"> </head>\r\n *          <body> <div id=\"hjn_chart\"></div> <script src=\"../libs/dygraph.js\"></script>\r\n *          <script src=\"../libs/extras/synchronizer.js\"></script> <script\r\n *          type=\"module\"> import {HJN_init_ChartRegist} from\r\n *          \"./tatLogDiver-Init.js\";\r\n *          window.addEventListener(\"DOMContentLoaded\",function(eve){\r\n *          Bundle(\"chart\"); // チャートを作成する }); </script> </body> </html>\r\n */\r\nexport default function Init(chartName){ // #70\r\n\r\n\t\"use strict\";\r\n\t// 引数１ ：デフォルトHJN.chartName(\"chart\")\r\n\tHJN.chartName = chartName = chartName || HJN.chartName;\r\n\t// タイトルを設定する #57\r\n\tdocument.title = \"tat log diver \" + Copyright.Version; \r\n\t// htmlを作成する #52\r\n\tvar html_chart = document.getElementById(\"hjn_\" + chartName) || document.body;\r\n\thtml_chart.innerHTML = ''\r\n\t    + '<div id=\"' + chartName + '\"></div>'\r\n        + '<div id=\"' + chartName + 'D\"></div>'\r\n        + '<textarea id=\"lineViewer\" class=\"lineViewer\">logdata</textarea>';\r\n\t// 手前にメニュ－用htmlを作成する #52\r\n\tvar html_nav = document.createElement('nav');\r\n\thtml_nav.innerHTML = ''\r\n\t    + '<header>'\r\n        + '<div id=\"Simulator\"></div>' // #53\r\n        + '<div class=\"statusbar\">'\r\n        + '  <iframe id=\"fileInfo\"></iframe>'\r\n        + '</div>'\r\n        + '<div class=\"hjnBurgerTray\">'\r\n        + '  <input id=\"hjnBoxBuger\" type=\"checkbox\" class=\"hjnBurger hjnResize\" checked=\"checked\" />'\r\n        + '    <label for=\"hjnBoxBuger\" class=\"hjnCtrlBox\"><span></span></label>'\r\n        + '  <div class=\"hjnBurgerTitle\">'\r\n        + '    <input id=\"hjnBoxPlaceOn\" type=\"checkbox\" class=\"hjnBoxSwitch hjnResize\" />'\r\n        + '      <label for=\"hjnBoxPlaceOn\" class=\"hjnCtrlBox\"><span></span></label>'\r\n        + '    <p>'\r\n        + '      <a class=\"hjnLabel4Input\" href=\"../jsdoc/index.html\"'\r\n        + '                target=”_hirosejnJSDoc3”>TAT log diver</a><BR>'\r\n        + '      <a class=\"hjnLabel4Input\" href=\"https://github.com/hirosejn/\"'\r\n        + '                target=”_hirosejnGit”>&copy;2017 Junichiroh Hirose</a>'\r\n        + '    </p>'\r\n        + '  </div>'\r\n        + '  <div class=\"hjnBurgerWrap\">'\r\n        + '    <div class=\"hjnAccordion\">'\r\n        + '      <div id=\"' + chartName + '_menu\"></div>'\r\n        + '      <div id=\"' + chartName + 'D_menu\"></div>'\r\n        + '    </div>'\r\n        + '  </div>'\r\n        + '</div>'\r\n        + '</header>';\r\n\thtml_chart.parentNode.insertBefore(html_nav, html_chart);\r\n\t\r\n\tvar dropFieldName = chartName;\t// ファイルドロップを受け付けるタグ名\r\n\tUtil.Logger.ShowLogTextInit(); // 処理時間計測の初期化\r\n\r\n\t// グラフのインスタンスを作成し初期化する\r\n\tHJN.chart = new Graph(chartName, \"HJN.chart\");\r\n\tHJN.chart.init();\r\n\tHJN.chartD = new Graph(chartName + \"D\", \"HJN.chartD\");\r\n\tHJN.chartD.init();\r\n\t// ドロップフィールドに、処理を登録する(注：dygraphはイベントリスナーを登録しないとクリック時にエラーが出る）\r\n\tInit.DropField(dropFieldName);\r\n\tInit.DropField(dropFieldName+ \"D\");\r\n\r\n\t// 初期表示データを自動生成する // #53\r\n\tUtil.Config.GetConfig(\"Simulator\").getFunctionByKey(\"S_SIMU\")(); // #53\r\n}\r\n\r\n/**\r\n * データを自動生成し表示する\r\n * \r\n * @memberof Init\r\n * @param {String|Number}\r\n *            [json = Simulator.virtualSystemByJson.GetJsonConfig(0)]\r\n *            シミュレーション条件JSONテキスト、もしくはサンプルJSON番号\r\n */\r\nexport function CreateSampleTatLogAndChartShow(json){ // #53\r\n    \"use strict\";\r\n    var jsonText;\r\n    if (typeof(json) === \"number\") { // #53\r\n        jsonText = Simulator.virtualSystemByJson.GetJsonConfig(json);\r\n    } else{\r\n        jsonText = json || Simulator.virtualSystemByJson.GetJsonConfig(0);\r\n    }\r\n    // JSON Editorを更新する\r\n    document.getElementById(\"SimulatorEditor\").value = jsonText;\r\n    // 初期表示データを自動生成する\r\n    HJN.chart.eTatOriginal = Simulator.virtualSystemByJson.Execute(jsonText);\r\n    // データを表示する\r\n    Init.ChartShow(HJN.chart.eTatOriginal);\r\n}\r\n\r\n/**\r\n * 終了時刻とtatの配列をグラフ表示する（Menuイベントから呼び出される）\r\n * \r\n * @memberof Init\r\n * @param {ETAT}\r\n *            HJN.chart.eTatOriginal 終了時刻とtatを含む配列\r\n */\r\nHJN.init.ChartShow = Init.ChartShow = function(eTatOriginal){\r\n    // フィルタしたeTatを取得する #34\r\n    var eTat = HJN.chart.fileParser.createFilter().filter(eTatOriginal);\r\n    \r\n    // グラフを初期表示する\r\n    HJN.Plot.List = []; // #53\r\n    // 上段\r\n    if (eTat.length === 0) eTat = [{x:0, y:0}]; // #72\r\n    var tat = new TimeSeries.Tat(eTat); // #75\r\n    HJN.chart.setSeriesSet(tat);\r\n    HJN.chart.update();\r\n    var text = \"上段表示 [\" + HJN.chart.eTat.length + \"]\";\r\n    Util.Logger.ShowLogText(text, \"elaps\");       // 処理時間ログ出力\r\n\r\n    // 下段(非同期）\r\n   Util.setZeroTimeout( function(){\r\n       HJN.chartD.update(Init.ChartRegistDetail(HJN.chart.cTps));\r\n       HJN.chart.showBalloon();    // 上段のBalloonを描画する\r\n       if (HJN.chartD.eTat){\r\n           var text = \"下段表示 [\" + HJN.chartD.eTat.length + \"]\";\r\n           Util.Logger.ShowLogText(text, \"elaps\");\r\n           text = \"<mark>Simulated data</mark>[\"\r\n                + HJN.chart.eTat.length.toString()\r\n                    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') + \"]\"; // 整数文字列のカンマ編集\r\n           Util.Logger.ShowLogText(text, \"msg\");\r\n           \r\n       } else { // #72\r\n           Util.Logger.ShowLogText(\"<mark>表示データがありません</mark>\", \"msg\");                        \r\n       }\r\n       // 上下段のマウス操作同期設定 #49\r\n       var sync = Dygraph.synchronize(\r\n                 [ HJN.chart.graph, HJN.chartD.graph ],\r\n                 {selection: true, zoom: false});\r\n    });\r\n}\r\n\r\n/**\r\n * HTMLタグに、CSVファイルのドロップを受付けイベントを登録する\r\n * \r\n * @memberof Init\r\n * @param {string}\r\n *            dropFieldName ファイルのドロップイベントを受けるフィールド名\r\n */\r\nInit.DropField = function (dropFieldName) {\r\n\t\"use strict\";\r\n\t// 第一引数で指定された名前の ID 属性のエレメントを取得する\r\n\tvar element = document.getElementById(dropFieldName);\r\n\t\r\n\t// ドラッグ操作中に実行されるイベント（マウスカーソルが要素内に滞在中）\r\n\telement.addEventListener(\"dragover\" , function (e){\r\n\t\te.preventDefault();   // ドロップを許可し受け入れを表明\r\n\t});\r\n\t\r\n\t// ドロップ時に実行されるイベント\r\n\telement.addEventListener(\"drop\", function (e){\r\n\t\t\tvar data_transfer = e.dataTransfer;\t\t// DataTransfer オブジェクトを取得する\r\n\t\t\tif(!data_transfer.types) return;\t\t// ファイルのコンテンツタイプを取得できたことを確認する\r\n\t\t\tvar files = data_transfer.files;\t// ファイルのリストを取得する\r\n\t\t\tInit.FileReader(files);\r\n\t\t\te.preventDefault();\t\t// デフォルトのドロップ機能を無効化\r\n\t});\r\n};\r\n\r\n/**\r\n * 指定されたファイルを読込んで処理する\r\n * \r\n * @memberof Init\r\n * @param {Object}\r\n *            files ファイルハンドラ\r\n */\r\nHJN.init.FileReader = Init.FileReader = function (files){  // #15\r\n\t\"use strict\";\r\n\tfor(var i = 0; i < files.length; i++){\t// データを順番に取得する\r\n\t\ttry{\r\n\t\t\t// ファイルを取得する\r\n\t\t\tvar file = files[i];\r\n\t\t\t// ログ出力用にファイル名（サイズ）を編集する\r\n\t\t\tvar textArray =\t\"<BR><mark><b>\" + file.name + \"</b></mark> \" +\r\n\t\t\t\t\t\t\t\"[\"+ file.size + \"byte] \" + \r\n\t\t\t\t\t\t\tfile.lastModifiedDate.toLocaleString() +\"<BR>\";\r\n\t\t\t// ファイルの読み込みに成功したら、その内容をドロップエリアに追記して表示する\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.onloadend = funcOnloadend.bind(this, files[i], i);\r\n\t\t\t// ファイルにArrayBufferで参照を取得する（loadイベントを起こす）\r\n\t\t    reader.readAsArrayBuffer(files[i]);\r\n\t\t}catch(e){\r\n\t\t\t// 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n\t\t\tvar msg = \"The \" + i + \"th dropped object is not a file\";\r\n\t\t\tUtil.Logger.ShowText( [\"<mark>\"+msg+\"</mark>\"] );\r\n\t\t\tconsole.error(\"[%o]%o\",msg,e );\r\n\t\t}\r\n\t}\r\n\r\n\t// 内部関数：ファイルを読み込みｸﾞﾗﾌを表示する（指定ファイルを読み込んだ後に呼び出される） #23\r\n    function funcOnloadend(file, i, evt) {\r\n        if (evt.target.readyState === FileReader.DONE) { // DONE == 2\r\n            var filesIdx = HJN.files.length;\r\n            // ファイルの先頭2行をログ表示する\r\n            HJN.filesArrayBuffer[filesIdx] = evt.target.result;\r\n            Util.Logger.ShowLogTextInit();              // 情報表示 : 初期化\r\n            Util.Logger.ShowLogText(textArray, \"msg\");  // 情報表示：ドロップファイル情報\r\n            // 指定ファイルを読み込む\r\n            // CSVファイルを上段用eTatに展開する[{x:, y:,pos:,len:},...] 全件展開する\r\n            if (i === 0 && HJN.chart.fileParser.isNewETAT()){\r\n                // 新規モードかつ、同時複数ファイル指定時の最初のファイルのとき、新たに作成する\r\n                HJN.files = [file];\r\n                HJN.chart.eTatOriginal = getTatLogArray(HJN.filesArrayBuffer, filesIdx);\r\n            } else { // 2件目以降のファイルのとき、もしくは、追加モード\"ADDDATA\"のとき、追加する\r\n                HJN.files.push(file);\r\n                HJN.chart.eTatOriginal = HJN.chart.eTatOriginal.concat(\r\n                        getTatLogArray(HJN.filesArrayBuffer, filesIdx));\r\n            }\r\n            \r\n            // 全ファイルを読み込んだらグラフを描画する\r\n            if (HJN.files[HJN.files.length - 1] === file){ // 指定ファイル群の最後のファイルを処理しているとき\r\n                // フィルタしたeTatを取得する #34\r\n                var eTat = HJN.chart.fileParser.createFilter().filter(HJN.chart.eTatOriginal);\r\n\r\n                // 上段グラフを描画する（ eTatから上段用 時系列分析データ(seriesSet)を展開する）\r\n                if (eTat.length === 0) eTat = [{x:0, y:0}]; // #72\r\n                var tat = new TimeSeries.Tat(eTat); // #75\r\n                HJN.chart.setSeriesSet(tat);\r\n                HJN.chart.update();\r\n                Util.Logger.ShowLogText(\"上段表示\", \"elaps\");\r\n\r\n                // 下段用データの展開とグラフ描画（非同期処理）\r\n                HJN.Plot.List = [];\r\n                Util.setZeroTimeout(function(){\r\n                    if (HJN.chart.cTps) {\r\n                        // 下段グラフを描画する（下段用 時系列分析データ(seriesSet)を展開する）\r\n                        HJN.chartD.update(Init.ChartRegistDetail(HJN.chart.cTps));\r\n                        // 上段のBalloonを描画する(上段update時にはplots登録されていないので、ここで処理）\r\n                        HJN.chart.showBalloon();\r\n                        Util.Logger.ShowLogText(\"下段表示\", \"elaps\");\r\n                        Util.Logger.ShowLogText(\"<mark>\"+ HJN.files[0].name +\r\n                                \"[\"+ HJN.chart.eTat.length +\r\n                                \"]を表示しました</mark>\", \"msg\");\r\n                    } else { // #72\r\n                        Util.Logger.ShowLogText(\"<mark>表示データがありません</mark>\", \"msg\");                        \r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\t// 内部関数： 指定ファイルの先頭ｎ行を、改行文字<BR> のテキストに変換してリターンする\r\n\tfunction topLines(file, n) {\r\n\t    var fileInfo = \"\",\r\n\t        line;\r\n\t    try{    // 先頭からnレコード取得\r\n\t        var getterOfLine = HJN.chart.fileParser.createGetterOfLine(file);\r\n\t        for (var i = 0; i < n; i++) {\r\n\t            line = getterOfLine.next();\r\n\t            fileInfo += line.str + \"<BR>\";\r\n\t        }\r\n\t    }catch (e) {\r\n\t        alert(\"[Init.DropField 改行コードの無いファイルは扱えません]\");\r\n\t        console.error(e);\r\n\t    }\r\n\t    return fileInfo;\r\n\t}\r\n\r\n    // 内部関数： CSVファイルを読み込み、TatLog用アレイ[{x:日時, y:値, pos:レコード開始位置,\r\n    // len:レコード長},...]に展開する\r\n\tfunction getTatLogArray(files, idx) { // arg0:csvﾌｧｲﾙのファイルﾊﾟｽ\r\n\t    Util.Logger.ShowLogText(\"----- read file -----------------------------\",\"calc\");\r\n\t    var file = files[idx], // #23\r\n\t        eTat = [],\r\n\t        xy = {date: 0, value: 0, isError: false },\r\n\t        i = 0,  // timelog用\r\n\t        getterOfLine = HJN.chart.fileParser.createGetterOfLine(file),\r\n\t        getterOfXY = HJN.chart.fileParser.createGetterOfXY(),\r\n\t        line = getterOfLine.next();     // 先頭行の初期処理\r\n\t    while (!line.isEoF) {               // 以降最終行まで処理する\r\n\t        try {\r\n\t            Util.Logger.ByInterval(i++, line); // 一定時刻毎に進捗を出力する\r\n\t            xy = getterOfXY.parse(line);\r\n\t            if(!xy.isError){\r\n\t                eTat.push( {x: xy.x, y: xy.y, fileIdx: idx, // #23\r\n\t                    pos: line.pos, len: line.array.byteLength, sTatIdx: 0} );\r\n\t            }\r\n\t            line = getterOfLine.next(); // #24\r\n\t        } catch (e) {   /* 改行だけレコードをスキップ */\r\n\t            console.error(e);\r\n\t            console.err(\"err: %o\",e);\r\n\t        }\r\n\t    }\r\n\t    Util.Logger.ShowLogText(\"[0:file readed & got eTat]---------------\",\"calc\");\r\n\t    return eTat;\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * 詳細グラフ用機能： 表示対象期間のcTpsから、eTps範囲を取得し、詳細Seriesを生成する。併せてPlotsを登録する。\r\n * \r\n * @memberof Init\r\n * @param {xMs}\r\n *            cTps 日時（ミリ秒単位）\r\n * @return {seriesSet} dygraph用時系列データ配列\r\n */\r\nInit.ChartRegistDetail = function(cTps){\r\n\t\"use strict\";\r\n\t// CTPSの最大値となるplotを取得する\r\n\tvar maxY =Number.MIN_VALUE,\r\n\t\tmaxYIdx = -1;\r\n\tcTps.forEach(function(c, i){\r\n\t\tif (maxY < c.y){\r\n\t\t\tmaxY = c.y;\r\n\t\t\tmaxYIdx = i;\r\n\t\t}\r\n\t});\r\n\tif(0 <= maxYIdx){\t// #26\r\n\t\t// 秒単位より大きいとき、最大値を含む時刻(秒)に補正する #38\r\n\t\tvar x = cTps[maxYIdx].x;\r\n\t\tif(HJN.chart.cTpsUnit.unit >= 1000){\r\n\t\t\tvar cTpsIdx = HJN.chart.conc.findIndex(function(e,i){return e.y === cTps[maxYIdx].y;});\r\n\t\t\tx = HJN.chart.conc[cTpsIdx].x;\r\n\t\t}\r\n\t\t// slider rangeに、下段の表示時刻を設定する\r\n\t\tHJN.init.SetDetailDateTime(x);\r\n\t\t// eTpsの範囲を取得し、詳細用seriesSet(HJN.chartD.seriesSet）を設定する\r\n\t    var tat = new TimeSeries.Tat(HJN.init.GetSliderRangedEtat()); // #75\r\n\t    HJN.chartD.setSeriesSet(tat);\r\n\t\t// plotsアイコン用 HJN.Plot.Listに、下段表示したplotを登録する\r\n\t\tHJN.Plot.Add(HJN.CTPS.N, cTps[maxYIdx].x, cTps[maxYIdx].y);\r\n\t}\r\n\tUtil.Logger.ShowLogText(\"[6:Plot added] \" + HJN.Plot.List.length + \" plots\",\"calc\");\r\n\r\n\treturn HJN.chartD.seriesSet;\r\n};\r\n/**\r\n * 詳細グラフ用機能： sliderRangeで指定された範囲のeTatを返却する（グラフの点クリックイベント時に呼び出される）\r\n * \r\n * @memberof Init\r\n * @return {ETAT} 詳細グラフ用eTat\r\n */\r\nHJN.init.GetSliderRangedEtat = function() {\r\n\t\"use strict\";\r\n\t// 指定時刻（ｄｔ ± range）を取得する\r\n\tvar rangeTagPlus  = document.getElementById(\"DetailRangePlus\");\r\n\tvar\trangeTagMinus = document.getElementById(\"DetailRangeMinus\");\r\n    var rangeTagUnit  = document.getElementById(\"DetailRangeUnit\"); // #48\r\n\tvar\trangeCycle = HJN.chart.cTpsUnit.unit / 1000; // #38\r\n    // HJNグローバル変数に退避する\r\n    HJN.detailRangePlus  = rangeTagPlus  ? +rangeTagPlus.value  : 1 + rangeCycle; // 幅（秒）\r\n    HJN.detailRangeMinus = rangeTagMinus ? +rangeTagMinus.value : rangeCycle;     // 幅（秒）\r\n    HJN.detailRangeUnit  = rangeTagUnit  ? +rangeTagUnit.value  : TimeSeries.Tat.CYCLE; // #48\r\n\r\n    var eTatDetail = (new TimeSeries.ETat(HJN.chart.eTat)).sliceByRangeUnit(HJN.detailDateTime, \r\n                        HJN.detailRangeMinus, HJN.detailRangePlus, HJN.detailRangeUnit); // #75\r\n\r\n\tUtil.Logger.ShowLogText(\"[0:HJN.init.GetSliderRangedEtat] \",\"calc\");\r\n\treturn eTatDetail;\t// 詳細グラフ用eTatを返却する\r\n\r\n};\r\n/**\r\n * 詳細グラフ用機能： 表示期間変更時に、Detailを再描画する（onChangeイベント時に呼び出される）\r\n * \r\n * @memberof Init\r\n */\r\nHJN.init.setDetailRange = function(){\r\n    \"use strict\";\r\n    clearTimeout(HJN.timer);\r\n    HJN.timer = setTimeout(function(){\r\n            Util.Logger.ShowLogTextInit(\"[-:HJN.init.setDetailRange]start---------------\",\"calc\");\r\n            // 表示中Plotsのrangeを更新する #30\r\n            var i = HJN.Plot.List.findIndex(function(e){ return (e.radio === true); });\r\n            var plot = HJN.Plot.List[i];\r\n            plot.rangePlus  = document.getElementById(\"DetailRangePlus\").value;\r\n            plot.rangeMinus = document.getElementById(\"DetailRangeMinus\").value;\r\n            var rangeTagUnit = document.getElementById(\"DetailRangeUnit\"); // #48\r\n            HJN.detailRangeUnit  = rangeTagUnit  ? +rangeTagUnit.value  : TimeSeries.Tat.CYCLE; // #57\r\n            plot.rangeUnit  = HJN.detailRangeUnit; // #48\r\n\r\n            // 下段データを登録する\r\n            var tat = new TimeSeries.Tat(HJN.init.GetSliderRangedEtat()); // #75\r\n            HJN.chartD.setSeriesSet(tat);\r\n            // 下段グラフを描画する\r\n            Graph.prototype.update.call(HJN.chartD, HJN.chartD.seriesSet);\r\n        }, 750);    // 750ms 値の変更がなかった時に、処理を開始する\r\n};\r\n/**\r\n * 詳細グラフ用機能： 指定日時を秒単位に丸めて、FORMのslider Rangeに設定する（Plotから呼び出される）\r\n * \r\n * @memberof Init\r\n * @param {xMs}\r\n *            date 日時（ミリ秒単位）\r\n */\r\nHJN.init.SetDetailDateTime=function(date) {\r\n    \"use strict\";\r\n    HJN.detailDateTime = Math.floor(date / 1000) * 1000;    // 秒単位に丸める\r\n};\r\n\r\n\r\n/**\r\n * 著作権表記文字を取得する（Menuイベントから呼び出される）\r\n * \r\n * @memberof Init\r\n * @return {String} str 著作権表記文字\r\n */\r\nHJN.init.Copyright=function(){\r\n    \"use strict\";\r\n    return Copyright.text;\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Init.js\n// module id = 3\n// module chunks = 0","\"use strict\";\r\nimport * as Util from '../util/util.js';\r\nimport * as Simulator from '../simulator/simulator.js';\r\nimport Menu from'./tatLogDiver-Menu.js';\r\nimport {CreateSampleTatLogAndChartShow} from'./tatLogDiver-Init.js';\r\nimport * as TimeSeries from '../timeSeries/timeSeries.js';\r\n\r\n\r\n/* ******1*********2*********3*********4*********5*********6*********7****** */\r\n\r\n/**\r\n * インスタンス内の定数を設定する。併せて性能対策として頻繁に使うDOM要素を取り込む\r\n * \r\n * @memberof tatLogDiver\r\n * @class Graph\r\n * @classdesc TAT(Turnaround time)ログ分析用グラフ\r\n * @param {string}\r\n *            chartIdName グラフを作成するHTML要素のID\r\n * @param {string}\r\n *            [globalName=\"HJN.chartD\"] グラフのID\r\n * @param {Object}\r\n *            [config] グラフの設定\r\n * @example HJN.chart = new HJN(chartName, \"HJN.chart\"); HJN.chart.init();\r\n *          HJN.chartD = new HJN(chartName + \"Detail\", \"HJN.chartD\");\r\n *          HJN.chartD.init();\r\n */\r\nexport default function Graph(chartIdName, globalName, config) {\r\n    \"use strict\";\r\n    /* メンバ変数 */\r\n    this.seriesSet = [];\r\n    this.chartIdName = chartIdName; // arg0 \"chart\",\"chartD\"\r\n    this.globalName = globalName || \"HJN.chartD\"; // arg1\r\n    if (!config) { // arg2\r\n        var isMain = (globalName === \"HJN.chart\") ? true : false;\r\n        config = {\r\n            SERIESES: [ \r\n                { n: HJN.CONC.N, process: !isMain, visiblity: !isMain, renderer: 'area' },\r\n                { n: HJN.CTPS.N, process: true,    visiblity: true,    renderer: isMain ? 'scatterplot' : 'bar' },\r\n                { n: HJN.ETPS.N, process: true,    visiblity: isMain,  renderer: 'line' },\r\n                { n: HJN.STAT.N, process: !isMain, visiblity: !isMain, renderer: 'scatterplot' },\r\n                { n: HJN.ETAT.N, process: !isMain, visiblity: !isMain, renderer: 'scatterplot' },\r\n                { n: HJN.EMPS.N, process: true,    visiblity: true,    renderer: 'line' }, \r\n                { n: HJN.EAPS.N, process: true,    visiblity: isMain,  renderer: 'line' } ],\r\n            height : 0.40,\r\n            isVisiblity : true\r\n        };\r\n    }\r\n\r\n    // File.Parserを設定する\r\n    this.fileParser = TimeSeries.FileParser(); // #24\r\n    TimeSeries.MenuConfig(); // #74\r\n    \r\n    // グラフ定義領域の宣言\r\n    this.windowId = document.getElementById(\"hjn_chart\");\r\n    this.menuId = document.getElementById(\"hjnBoxBuger\");\r\n    this.menuPlaceOnId = document.getElementById(\"hjnBoxPlaceOn\");\r\n    this.chartId = document.getElementById(this.chartIdName);\r\n    this.dyData = [];\r\n    this.dySeries = {};\r\n\r\n    this.scale = [ null, null ];\r\n    this.graph = null;\r\n    this.cTpsUnit = TimeSeries.Tat.UNIT_CTPS[0]; // #75\r\n\r\n    // グラフの設定(処理対象データの設定のみ this.SERIESES[] に取り込む）\r\n    this.SERIESES = [];\r\n    this.labels = [ 'Date' ];\r\n    for (var i = 0, j = 0; i < config.SERIESES.length; i++) {\r\n        if (config.SERIESES[i].process === true) {\r\n            this.SERIESES[j] = {\r\n                key : '',\r\n                name : '',\r\n                visiblity : false,\r\n                renderer : '',\r\n                order : 0,\r\n                scale : 0,\r\n                color : ''\r\n            };\r\n            // 定数(HJN.seriesConfig)指定項目を設定する\r\n            for ( var attr in HJN.seriesConfig[i]) {\r\n                this.SERIESES[j][attr] = HJN.seriesConfig[i][attr];\r\n            }\r\n            // 引数(config)指定項目を設定する\r\n            this.SERIESES[j].visiblity = config.SERIESES[i].visiblity;\r\n            this.SERIESES[j].renderer = config.SERIESES[i].renderer;\r\n\r\n            var renderer = config.SERIESES[i].renderer;\r\n            if (renderer === 'scatterplot') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    drawPoints : true\r\n                };\r\n            } else if (renderer === 'line') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 2.0,\r\n                    connectSeparatedPoints : true,\r\n                    stepPlot : true\r\n                };\r\n            } else if (renderer === 'area') {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    stepPlot : true,\r\n                    fillGraph : true\r\n                };\r\n            } else { // if (renderer === 'bar' ) {\r\n                this.dySeries[this.SERIESES[j].key] = {\r\n                    strokeWidth : 0.0,\r\n                    connectSeparatedPoints : true,\r\n                    stepPlot : true,\r\n                    fillGraph : true\r\n                };\r\n            }\r\n            this.dySeries[this.SERIESES[j].key].color = this.SERIESES[j].color;\r\n\r\n            if (this.SERIESES[j].scale === 1) {\r\n                this.dySeries[this.SERIESES[j].key].axis = 'y2';\r\n            }\r\n\r\n            this.labels.push(this.SERIESES[j].key);\r\n            j++;\r\n        }\r\n    }\r\n\r\n    this.height = config.height;\r\n    this.isVisiblity = config.isVisiblity;\r\n};\r\n\r\n/**\r\n * クラス定数\r\n */\r\n// Graph.prototype = {};\r\n\r\n/**\r\n * クラスメソッド：menuのFilterのｘｙ幅指定エリアにグラフのｘｙ幅を設定する<br>\r\n * dygraphのdrawCallbackに設定する関数<br>\r\n * menuのRadio(F_SYNC)選択時に呼び出す関数（このためにクラスメソッド）\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.DrawCallback = function (g, is_initial) { // #50 #51\r\n    // 初期表示時は、メニューを設定しない\r\n    if (is_initial)\r\n        return;\r\n    // Filterメニューで指定されている F_SYNC の状態を取得する\r\n    var syncMode = Util.Config(\"Filter\").getValueByKey(\"F_SYNC\"); // #59\r\n    // \"F_SYNC_UPPER\"かつ上段グラフ もしくは、\"F_SYNC_DETAIL\"かつ下段グラフのとき処理する\r\n    if ((syncMode === \"F_SYNC_UPPER\" && g.HJN === HJN.chart)\r\n            || (syncMode === \"F_SYNC_DETAIL\" && g.HJN === HJN.chartD)) {\r\n        // ｘ軸の幅をFilterメニューフェールドに反映する\r\n        setText(\"Filter.F_TIME_FROM\", Util.D2S(g.xAxisRange()[0],\r\n                \"yyyy/MM/dd hh:mm:ss.ppp\", true));\r\n        setText(\"Filter.F_TIME_TO\", Util.D2S(g.xAxisRange()[1],\r\n                \"yyyy/MM/dd hh:mm:ss.ppp\", true));\r\n        // ｙ軸(右)の幅をFilterメニューフェールドに反映する\r\n        setText(\"Filter.F_TAT_FROM\", +(g.yAxisRange(1)[0].toPrecision(4)));\r\n        setText(\"Filter.F_TAT_TO\", +(g.yAxisRange(1)[1].toPrecision(4)));\r\n    }\r\n\r\n    function setText(id, val) {\r\n        document.getElementById(id).value = val;\r\n        document.getElementById(id).onchange();\r\n    }\r\n};\r\n\r\n/**\r\n * グラフを初期化する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.init = function () {\r\n    \"use strict\";\r\n    // メニューを作成する\r\n    Menu(this);\r\n    // 凡例を作成する\r\n    if (this.isVisiblity)\r\n        addLegend(this);\r\n    // 既にグラフがあるときは削除する\r\n    if (this.graph) {\r\n        this.graph.HJN = null; // （注：循環参照対策\r\n        this.graph.destroy();\r\n    }\r\n    // ウィンドウ枠に合わせて描画領域をリサイズするイベントを登録し、リサイズする\r\n    window.addEventListener(\"resize\", this.resize.bind(this));\r\n    // tablet回転時も、リサイズする #22\r\n    window.addEventListener(\"orientationchange\", this.resize.bind(this));\r\n    var resizes = document.getElementsByClassName(\"hjnResize\");\r\n    for (var i = 0; i < resizes.length; i++) {\r\n        resizes[i].addEventListener(\"change\", this.resize.bind(this)); // メニュ－の開閉\r\n        // #31\r\n    }\r\n\r\n    // legendを追加する（内部関数）\r\n    function addLegend(that) { // arg0 : this\r\n        var chartIdName = that.chartIdName;\r\n        var serieses = that.SERIESES;\r\n        var divLegend = document.getElementById(chartIdName + \"_legend\");\r\n        var formName = chartIdName + \"_LegendForm\";\r\n        var htmlText = '<form name=\"' + formName + '\">';\r\n        for (var i = 0; i < serieses.length; i++) {\r\n            var ckBox = serieses[i].visiblity ? 'checked=\"checked\"' : '';\r\n            htmlText += '<label class=\"legend\" style=\"background:'\r\n                        + serieses[i].color + ';\">' \r\n                    + '<input type=\"checkbox\" '\r\n                        + 'name=\"' + serieses[i].key + '\"' + 'onclick=\"'\r\n                        + that.globalName + '.onClickSetVisibility(' + i + ');\" '\r\n                        + ckBox + '>' \r\n                    + serieses[i].name \r\n                    + '</label><BR>';\r\n        }\r\n        htmlText += '</form>';\r\n        divLegend.innerHTML = htmlText;\r\n    }\r\n};\r\n\r\n/**\r\n * legendの表示指定をグラフに反映する(onclick呼出用）\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {index}\r\n *            i seriesSet配列の設定変更するグラフのインデックス\r\n */\r\nGraph.prototype.onClickSetVisibility = function (i) { //\r\n    \"use strict\";\r\n    var formName = this.chartIdName + \"_LegendForm\";\r\n    var ck = document[formName].elements[i].checked;\r\n    this.graph.setVisibility(i, ck);\r\n};\r\n\r\n/**\r\n * ウィンドウ枠に合わせて描画領域をリサイズする（dygraphは幅は自動、高さは指定）\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.resize = function () {\r\n    \"use strict\";\r\n    // 幅（メニューの状態に合わせて計算） #31\r\n    var dWidth = 0;\r\n    if (this.menuId.checked && !this.menuPlaceOnId.checked) {\r\n        dWidth = this.menuId.parentNode.clientWidth;\r\n    }\r\n    var width = window.innerWidth - dWidth;\r\n    this.windowId.style.width = width + \"px\";\r\n    // 高さ（ウィンドウサイズの比率(this.height)をかけて算出）\r\n    var height = Math.floor(window.innerHeight * this.height);\r\n    this.chartId.style.height = height + \"px\";\r\n\r\n    if (this.graph)\r\n        this.graph.resize(width, height);\r\n    return height;\r\n};\r\n\r\n/**\r\n * seriesSetを取り込む\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Obcjet}\r\n *            [tat] 応答時間(Turnaround time)の時系列データ管理クラス\r\n * @param {array}\r\n *            [seriesSet] tat内の応答時間の時系列データ管理配列\r\n */\r\nGraph.prototype.setSeriesSet = function (tat, seriesSet) { // #30\r\n\r\n    if(tat) {\r\n        this.seriesSet = tat.getSeriesSet();\r\n        this.cTpsUnit = tat.getCTpsUnit(); // #75\r\n    }\r\n    if(seriesSet){\r\n        this.seriesSet = seriesSet;\r\n    }\r\n    HJN.seriesConfig.forEach(function (e) {\r\n        this[e.key] = this.seriesSet[e.N];\r\n    }, this);\r\n};\r\n\r\n\r\n/**\r\n * データを変更し描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {seriesSet}\r\n *            seriesSet dygraph用時系列データ配列\r\n * @param {Integer}\r\n *            n 選択されたグラフのseriesSet配列位置\r\n */\r\nGraph.prototype.update = function (seriesSet, n) {\r\n    \"use strict\";\r\n    // 指定データがあるとき取り込む\r\n    if (seriesSet) this.setSeriesSet(undefined, seriesSet);\r\n    // dygraph用表示データを作成する\r\n    var xy = [[{x:0,y:0}],[{x:0,y:0}],[{x:0,y:0}],[{x:0,y:0}]], // グラフデータの一覧（グラフ１本が配列要素）\r\n        idx = [], // グラフデータの処理中配列位置を保有する配列\r\n        x = [], // グラフデータの処理中配列のｘ(時刻)の値を保有する配列\r\n        row = [], // dygraph１レコードワーク配列：（[x,y0,y1...]の配列）の一レコード分を保持する配列\r\n        minX = 0,\r\n        i = 0; // グラフ番号用ワーク\r\n    // 表示対象データがないとき空データのdygraphを表示する #72\r\n    if (this.seriesSet.length === 0) {\r\n        var cols = [0]; // 日時（ミリ秒）\r\n        for (i = 0; i < this.SERIESES.length; i++) cols[i+1] = null;\r\n        this.dyData = [cols];\r\n        if (this.graph) {\r\n            // 既にグラフがあるときはデータのみ変更する（注：ここでdestroy()すると下段のpointClickCallback時にエラー）\r\n            this.graph.updateOptions( {\r\n                file : this.dyData\r\n            } );\r\n            this.graph.resetZoom(); // #51\r\n        }\r\n        return;\r\n    }\r\n    \r\n    \r\n    // xy[] に処理対象seriesを指定する\r\n    for (i = 0; i < this.SERIESES.length; i++) {\r\n        xy[i] = this.seriesSet[this.SERIESES[i].N];\r\n        idx[i] = 0;\r\n    }\r\n    // dygraph表示時間帯を設定する（上段グラフは全期間が処理対象）\r\n    var xRangeMin = Number.MIN_VALUE,\r\n        xRangeMax = Number.MAX_VALUE,\r\n        xRangeUnit = HJN.detailRangeUnit; // #61\r\n    if (HJN.chartD === this) { // 詳細（下段グラフ）のとき画面で指定された期間を設定する // ミリ秒\r\n        if ((n === HJN.ETPS.N || n === HJN.EMPS.N || n === HJN.EAPS.N)  // #57\r\n                && xRangeUnit < TimeSeries.Tat.CYCLE){ // #61\r\n            var dt = Math.floor(+HJN.detailDateTime / TimeSeries.Tat.CYCLE) * TimeSeries.Tat.CYCLE;\r\n            xRangeMin = dt - HJN.detailRangeMinus * HJN.detailRangeUnit;\r\n            xRangeMax = dt + HJN.detailRangePlus * HJN.detailRangeUnit;\r\n        } else { // undefined, HJN.CTPS.N, HJN.CONC.N, HJN.STAT.N, HJN.ETAT.N\r\n            var dt = Math.floor(+HJN.detailDateTime / xRangeUnit) * xRangeUnit; // #61\r\n            xRangeMin = dt - HJN.detailRangeMinus * HJN.detailRangeUnit; // #48\r\n            xRangeMax = dt + HJN.detailRangePlus * HJN.detailRangeUnit; // #48\r\n        }\r\n    }\r\n\r\n    // dygraph用arrayを空にする\r\n    this.dyData = [];\r\n\r\n    // 指定範囲の先頭が秒単位の端数のとき、dygraph用arrayに、先頭ワークデータを登録する #3\r\n    var xVal = Math.floor(xRangeMin / 1000) * 1000;\r\n    if (Number.MIN_VALUE < xRangeMin && xRangeMin !== xVal) { // 範囲指定（＝下段）\r\n        var firstRow = [ xRangeMin ]; // 先頭はx（時刻）\r\n        xy.forEach(function (xyData, i) {\r\n            // 秒間最大値系のyは最大値or０を、他はnullを設定する\r\n            var yVal = null;\r\n            if (this.SERIESES[i].key === HJN.CTPS.key) {\r\n                // 始端時刻を含む秒の値（最大値）を、始端時刻にセットする\r\n                var j = Util.binarySearch(xVal, xyData, function (e) {\r\n                    return e.x;\r\n                });\r\n                yVal = (0 <= j) ? xyData[j].y : 0;\r\n            }\r\n            firstRow.push(yVal);\r\n        }, this);\r\n        this.dyData.push(firstRow);\r\n    }\r\n\r\n    // dygraph用arrayに表示データを登録する\r\n    while (xy.some(function (e, i) {\r\n        return (idx[i] < e.length);\r\n    })) {\r\n        // dygraph１レコードワーク配列 を空にする\r\n        row = [];\r\n        // dygraph１レコードワーク配列 の先頭に、次に追加するｘ（時刻＝各ｘｙ処理位置が持つｘの最小値）を設定する\r\n        xy.forEach(function (e, i) {\r\n            x[i] = (idx[i] < e.length) ? e[idx[i]].x : Number.MAX_VALUE;\r\n        });\r\n        minX = x[0]; // minX = Math.min.apply(null, x);\r\n        for (i = 1; i < x.length; i++) {\r\n            if (x[i] < minX)\r\n                minX = x[i];\r\n        }\r\n        row.push(minX); // ミリ秒\r\n        // dygraph１レコードワーク配列 の２番目以降に、各ｘｙのｘを設定する\r\n        xy.forEach(function (e, i) {\r\n            if (e.length <= idx[i]) {\r\n                row.push(null); // 末尾を過ぎたｘｙのyはnull\r\n            } else if (e[idx[i]].x === minX) {\r\n                // ｘｙのｘ(e[idx[i]].x)が、出力するｘ(minX)と同じとき、ｙを設定し、ｘｙの処理位置(idx[i])を次に進める\r\n                row.push(e[idx[i]].y);\r\n                idx[i]++;\r\n            } else {\r\n                row.push(null); // xと ｘｙのｘが異なる場合 null\r\n            }\r\n        });\r\n        // dygraph用arrayに、編集したdygraph１レコードワーク配列 を登録する\r\n        if (xRangeMin <= minX && minX <= xRangeMax) {\r\n            this.dyData.push(row);\r\n        }\r\n    }\r\n    // 指定範囲の先頭が秒単位の端数のとき、dygraph用arrayに、末尾ワークデータを登録する #3\r\n    if (xRangeMax < Number.MAX_VALUE && // 範囲指定（＝下段）\r\n    xRangeMax !== Math.floor(xRangeMax / 1000) * 1000) {\r\n        var lastRow = [ xRangeMax ]; // 先頭はx（時刻）\r\n        xy.forEach(function (e, i) { // 秒間最大値系のyは始端：最大値、終端：０を、他はnullを設定\r\n            lastRow.push((this.SERIESES[i].key === HJN.CTPS.key) ? 0 : null);\r\n        }, this);\r\n        this.dyData.push(lastRow);\r\n    }\r\n\r\n    Util.Logger.ShowLogText(\"[7:dygraph data created] \"\r\n            + this.dyData.length + \" rows\", \"calc\");\r\n\r\n    // グラフの設定\r\n    var visibility = [];\r\n    if (this.isVisiblity) {\r\n        // visiblity指定できるとき画面の表示指定を取り込む\r\n        var inputs = document[this.chartIdName + \"_LegendForm\"];\r\n        for (i = 0; i < this.SERIESES.length; i++) {\r\n            visibility.push(inputs[this.SERIESES[i].key].checked);\r\n        }\r\n    } else {\r\n        // visiblity指定できないとき、デフォルト設定を取り込む\r\n        for (i = 0; i < this.SERIESES.length; i++) {\r\n            visibility.push(this.SERIESES[i].visiblity);\r\n        }\r\n    }\r\n\r\n    // グラフの作成\r\n    if (this.graph) {\r\n        // 既にグラフがあるときはデータのみ変更する（注：ここでdestroy()すると下段のpointClickCallback時にエラー）\r\n        this.graph.updateOptions( {\r\n            file : this.dyData\r\n        } );\r\n        this.graph.resetZoom(); // #51\r\n    } else {\r\n        // グラフが無いときは新規作成する\r\n        this.graph = new Dygraph(this.chartId, this.dyData, {\r\n            height : this.resize(),\r\n            labels : this.labels,\r\n            title : this === HJN.chart ? '' : '', // タイトル\r\n            titleHeight : 10, // タイトルの高さ＆フォントサイズ（デフォルト18px)\r\n            legend : 'always', // 'follow', //\r\n            showLabelsOnHighlight : false, // 効果不明\r\n            // labelsDiv : document.getElementById(HJN.chartName + 'Labels'), //\r\n            // ラベル表示先の変更\r\n            labelsSeparateLines : false,\r\n            // legendFormatter: this.legendFormatter, // コメントアウトでlegendが非表示\r\n            axes : {  // 軸の設定\r\n                x : { // X軸の設定\r\n                    axisLabelFormatter : xAxisLabelFormatter, // ラベル表示文字列編集関数\r\n                    axisLabelWidth : 100        // X軸ラベルの表示幅（幅が不足すると文字が切れる）\r\n                },\r\n                y : { // Y2（左）軸の設定\r\n                    independentTicks : true,    // 目盛合わせ（falseはY2軸に合わせる）\r\n                    axisLabelWidth : 40,        // ラベル表示幅\r\n                    // axisLineColor : 'rgb(0,0,0)',// 軸の色\r\n                    // axisLabelFontSize : 14, // ラベルのフォントサイズ(デフォルト:14)\r\n                    logscale : false            // 対数軸\r\n                },\r\n                y2 : { // Y2（右）軸の設定\r\n                    axisLabelFormatter : yAxisLabelFormatter, // ラベル表示文字列編集関数\r\n                    independentTicks : true,    // 目盛合わせ（falseはY1軸に合わせる）\r\n                    axisLabelWidth : 65,        // ラベル表示幅\r\n                    drawGrid : true,            // 横罫線\r\n                    gridLinePattern : [ 1, 2 ], // 罫線形状（破線）\r\n                    logscale : false            // 対数軸\r\n                }\r\n            },\r\n            includeZero : true,\r\n            // axisLabelFontSize: 10,\r\n            axisLineColor : 'rgba(0, 0, 0, 0.2)',\r\n            gridLineColor : 'rgba(0, 0, 0, 0.2)',\r\n            strokeWidth : 2,\r\n            pointSize : 3,\r\n            ylabel: 'Number of transactions',\r\n            y2label : 'Sec', // this === HJN.chart ? '' : 'Sec',\r\n            // rollPeriod: 7,\r\n            // errorBars: true,\r\n            // showRangeSelector: true\r\n            // drawPointCallback: drawPointCallback,\r\n            drawHighlightPointCallback : drawHighlightPointCallback,\r\n            highlightCircleSize : 3,\r\n            highlightCallback : highlightCallback,\r\n            pointClickCallback : pointClickCallback,\r\n            annotationClickHandler : annotationClickHandler,\r\n            annotationDblClickHandler : annotationDblClickHandler,\r\n            // clickCallback: clickCallback,\r\n            drawCallback : Graph.DrawCallback, // #50 #51\r\n            highlightSeriesOpts : {\r\n            // strokeWidth: 3,\r\n            // strokeBorderWidth: 1,\r\n            // highlightCircleSize: 5\r\n            },\r\n            series : this.dySeries,\r\n            labelsKMB : true,\r\n            visibility : visibility,\r\n            interactionModel: { // #22\r\n                mousedown: Dygraph.defaultInteractionModel.mousedown,\r\n                willDestroyContextMyself: true,\r\n                // touchstart: function(){}, 空functionと未登録は同じ効果\r\n                // touchmove: function(){},\r\n                // touchend: function(){},\r\n                dblclick: Dygraph.defaultInteractionModel.dblclick\r\n            },\r\n            animatedZooms : true, // ズームするときのアニメーション有無（デフォルト:false）\r\n            connectSeparatedPoints : true\r\n        });\r\n        // dygraphイベント処理でHJJを取れるように（注：循環参照）\r\n        this.graph.HJN = this;\r\n        // スマフォ対応 #22\r\n        Util.TouchPanel.DispatchEventTouchToMouse(this.graph.canvas_);\r\n        Util.TouchPanel.DispatchEventTouchToMouse(this.graph.canvas_ctx_.canvas);\r\n    }\r\n    // zoom reset ボタン追加 #22\r\n    this.addIcon_ZoomReset();\r\n    Util.Logger.ShowLogText(\"[8:dygraph showen] \", \"calc\");\r\n\r\n    // 初期表示の不活性グラフの設定\r\n    function xAxisLabelFormatter(d, gran, opts) {\r\n        // return Dygraph.dateAxisLabelFormatter(new Date(d), gran, opts); #63\r\n        var isTop = (this.xAxisRange()[0] === d);\r\n        var format = \"\";\r\n        var diffTime = this.xAxisRange()[1] - this.xAxisRange()[0];\r\n        if (diffTime < 60000) { \r\n            format = isTop ? \"hh:mm:ss.ppp\" : \"ss.ppp\";\r\n        } else if (diffTime < 86400000) { // 1日未満\r\n            format = \"hh:mm:ss\";\r\n        } else if (diffTime < 31536000000) { // 365日未満\r\n            format = isTop ? \"yyyy/MM/dd\": \"MM/dd hh\";\r\n        } else { // 365日以上\r\n            format = \"yyyy/MM/dd\";\r\n        }\r\n        return Util.D2S(d,format,true);\r\n    }\r\n    function yAxisLabelFormatter(d, gran, opts) { // #63\r\n        var range = this.yAxisRanges()[1];\r\n        var format = \"\";\r\n        var diff = range[1] - range[0];\r\n        if (diff < 300000) { // 300秒未満\r\n            return \"\" + d / 1000;\r\n        } else if (diff < 86400000) { // 1日未満\r\n            return Util.D2S(d, \"hh:mm:ss\", true);\r\n        } else if (diff < 172800000) { // 2日未満\r\n            var hours = Math.ceil(d / 3600000) + \":\";\r\n            return hours + Util.D2S(d, \"mm:ss\", true);\r\n        } else { // 2日以上\r\n            var days = Math.ceil(d / 86400000) + \" days+\";\r\n            var time = Util.D2S(d, \" hh:mm:ss\", false);\r\n            return (d < 172800000) ? time : days; // 2日未満？\r\n        }\r\n    }\r\n\r\n    // 再描画する\r\n    this.showBalloon();\r\n    Util.Logger.ShowLogText(\"[9:balloon showen] \", \"calc\");\r\n\r\n    // updateメソッド内部関数宣言\r\n    // 点がハイライトになったときの描画処理（内部関数宣言） g:{dygraph} HJN.chartD.graph\r\n    function drawHighlightPointCallback(g, name, ctx, cx, cy, color, r, idx) {\r\n        // file dropのとき、新グラフデータに更新後に、旧グラフのidx値が引き渡されたとき 処理しない #12\r\n        if (!g.rawData_ || g.rawData_.length - 1 < idx)\r\n            return;\r\n        var x = g.rawData_[idx][HJN.CONC.N]; // 選択されている点(時刻)のCONCのxの値（無いときundefined)\r\n        var eTat = HJN.chart.eTat;\r\n        var sTat = HJN.chart.sTat;\r\n        var n = 0;\r\n\r\n        // ETAT,STATのときlogレコードを表示する #28\r\n        if ((name === HJN.STAT.key || name === HJN.ETAT.key)\r\n                && typeof x != 'undefined') { // #41\r\n            // eTatの配列位置をを求める\r\n            if (name === HJN.ETAT.key) {\r\n                // ETATのとき、終了時刻(x)からeTatの配列位置(n)を検索する\r\n                n = Util.binarySearch(x, eTat, \r\n                                    function (e) { return e.x; });\r\n            } else {\r\n                // STATのとき、開始時刻(x)からsTatの配列位置(sTatN)を検索し、sTatからeTatの配列位置を取得する\r\n                var sTatN = Util.binarySearch(x, sTat, \r\n                                    function (e) { return e.x; });\r\n                n = sTat[sTatN].eTatIdx;\r\n            }\r\n            // ログデータを表示し、線を引く\r\n            if (0 <= n) {\r\n                var e = eTat[n];\r\n                // ログデータを表示する\r\n                document.getElementById(\"lineViewer\").innerHTML =\r\n                            this.HJN.fileParser.getRecordAsText(e); // #62\r\n                // 線を引く #30\r\n                drawTatLine(ctx, e.x, e.y, 2, color);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n\r\n        // CONCのとき同時処理の線を引く\r\n        if (name === HJN.CONC.key && typeof eTat.tatMap != 'undefined') { // #17\r\n            // #41\r\n            // 指定時刻に動いているeTatの一覧(trans)を取得する\r\n            var trans = eTat.tatMap.search(x, x, 1000); // #18\r\n            // 以前に選択した線を消す\r\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            // 同時処理の線を引く\r\n            if (0 <= i && 0 < trans.length) {\r\n                // TRANS分の線を引く\r\n                trans.forEach(function (e) {\r\n                    drawTatLine(ctx, e.x, e.y, 1, HJN.CONC.color);\r\n                });\r\n            }\r\n            ctx.stroke();\r\n        }\r\n\r\n        // 選択点の点と数値を表示する\r\n        var val = \"\";\r\n        var time = \"\";\r\n        if (0 <= idx) {\r\n            time = g.rawData_[idx][0]; // #60\r\n            val = name ? g.rawData_[idx][g.setIndexByName_[name]] : \"\";\r\n            // valが時間のとき、 時間表記に文字列編集する\r\n            if (name === HJN.STAT.key || name === HJN.ETAT.key \r\n                    || name === HJN.EMPS.key || name === HJN.EAPS.key) {\r\n                val = Util.D2S(val);\r\n            }\r\n        }\r\n        drawPoint(ctx, cx, cy, r, color, val, time);\r\n        // 縦線を引く\r\n        drawLine(ctx, [ {\r\n            x : cx,\r\n            y : 0\r\n        }, {\r\n            x : cx,\r\n            y : ctx.canvas.height\r\n        } ], 1, \"rgba(127,127,127,0.5)\", [ 1, 2 ]);\r\n\r\n        // drawHighlightPointCallback 内部関数宣言\r\n        // TAT線を表示する（内部関数）\r\n        function drawTatLine(ctx, x, y, heigth, color) {\r\n            // isXend指定の始点(false)／終点（true)に合わせて、線の座標を求める\r\n            var tXs = g.toDomXCoord(x - y), // ミリ秒\r\n            tXe = g.toDomXCoord(x), // ミリ秒\r\n            tY = g.toDomYCoord(y, 1); // 第二軸:1\r\n            drawLine(ctx, [ {\r\n                x : tXs,\r\n                y : tY\r\n            }, {\r\n                x : tXe,\r\n                y : tY\r\n            } ], heigth, color);\r\n            drawPoint(ctx, tXs, tY, r, HJN.STAT.color);\r\n            drawPoint(ctx, tXe, tY, r, HJN.ETAT.color);\r\n        }\r\n\r\n        // 線を表示する（内部関数）\r\n        function drawLine(ctx, plots, r, color, lineDashSegments) {\r\n            ctx.beginPath();\r\n            ctx.lineWidth = r;\r\n            ctx.lineCap = \"round\";\r\n            ctx.strokeStyle = color;\r\n            if (lineDashSegments)\r\n                ctx.setLineDash(lineDashSegments); // lineDashは[num]\r\n            ctx.moveTo(plots[0].x, plots[0].y);\r\n            plots.forEach(function (p) {\r\n                ctx.lineTo(p.x, p.y);\r\n            });\r\n            ctx.stroke();\r\n        }\r\n\r\n        // 点を表示する（内部関数）\r\n        function drawPoint(ctx, cx, cy, r, color, val, time) {\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = color;\r\n            ctx.fillStyle = color;\r\n            ctx.arc(cx, cy, r, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            var text = \"\";\r\n            if (val || time) {\r\n                if (typeof(val) === \"number\") {\r\n                    text += Math.round(val * 10) / 10;\r\n                } else if (typeof(val) === \"string\") { // #60\r\n                    text += val;\r\n                }\r\n                if (val && time) text += \" \";\r\n                if (time) text += \"[\" + Util.D2S(time, \"hh:mm:ss.ppp\", true) + \"]\"; // #60\r\n                ctx.beginPath();\r\n                ctx.fillStyle = color.replace(/\\,[\\s\\.0-9]*\\)/,\",1)\"); // #60\r\n                ctx.textAlign = \"left\"; // \"rigth\" \"center\" #60\r\n                ctx.fillText(text, cx, cy - 12);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 点がハイライトになったときの処理（内部関数宣言）\r\n    function highlightCallback(e, x, pts, row, seriesName) {\r\n        // マウスクリック用に座標をHJN.hoverXYに退避する\r\n        HJN.hoverXY = {\r\n            x : x,\r\n            pts : pts,\r\n            row : row,\r\n            seriesName : seriesName\r\n        };\r\n    }\r\n\r\n    // 点をクリックしたときの処理(内部関数宣言）\r\n    function pointClickCallback(event, p) {\r\n        if (!p.annotation)\r\n            HJN.Plot.PointClickCallback(p);\r\n    }\r\n\r\n    // アノテーション（グラフ中の吹出し）をクリックしたときの処理(内部関数宣言）\r\n    function annotationClickHandler() { // annotation, p, dygraph, event\r\n        HJN.Plot.PointClickCallback(arguments[1]);\r\n    }\r\n\r\n    // アノテーション（グラフ中の吹出し）をダブルクリックしたときの処理(内部関数宣言）\r\n    function annotationDblClickHandler() { // annotation, p, dygraph, event\r\n        // 指定ポイントを削除する\r\n        HJN.Plot.PointDblClickCallback(arguments[1]);\r\n    }\r\n\r\n    // グラフをクリックしたときの処理(内部関数宣言）\r\n    // function clickCallback(e, x, pts) {}\r\n};\r\n\r\n/**\r\n * dygraphのBalloonを再描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.showBalloon = function () {\r\n    \"use strict\";\r\n    if (this.cTps.length === 0)\r\n        return; // ctpsが空の時何もしない\r\n\r\n    var ann = {\r\n        series : \"\",\r\n        xval : 0,\r\n        shortText : \"\",\r\n        text : \"\"\r\n    }, anns = [];\r\n    // 表示時間帯を求める\r\n    var ctps = this.cTps, minX = ctps[0].x, maxX = ctps[ctps.length - 1].x;\r\n    // アノテーションをdygparhに追加する\r\n    HJN.Plot.List.forEach(function (e) {\r\n        if (minX <= e.x && e.x <= maxX) {\r\n            ann = {\r\n                series : HJN.seriesConfig[e.n].key,\r\n                xval : e.x, // ミリ秒\r\n                shortText : e.y,\r\n                text : e.label\r\n            };\r\n            anns.push(ann);\r\n            // 詳細Plot＆詳細グラフデータが無いとき、詳細Plot内のTPS Plotを追加する #7\r\n            if (\"tpsPlot\" in e) { // 詳細plotのとき\r\n                if (this.SERIESES.findIndex(function (s) {\r\n                    return s.N === e.n;\r\n                }) < 0) { // 詳細グラフデータが無いとき\r\n                    ann = {\r\n                        series : HJN.seriesConfig[e.tpsPlot.n].key,\r\n                        xval : e.tpsPlot.x, // ミリ秒\r\n                        shortText : e.tpsPlot.y,\r\n                        text : e.tpsPlot.label\r\n                    };\r\n                    anns.push(ann);\r\n                }\r\n            }\r\n        }\r\n    }, this);\r\n    // dygraphの残描画処理が完了してからアノテーションをセットする\r\n    this.graph.ready(function () {\r\n        this.setAnnotations(anns);\r\n    });\r\n};\r\n\r\n/**\r\n * dygraphのlegendを編集する(dygraph オプション登録用関数）\r\n * {@link http://dygraphs.com/options.html#legendFormatter}\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {ETAT}\r\n *            data [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]\r\n * @return {string} dygraphのlegendに表示する文字（HTML)\r\n */\r\nGraph.prototype.legendFormatter = function (data) {\r\n    \"use strict\";\r\n    // legend: 'always'指定のとき、マウスがグラフ外にあると dataに値が設定されていなことを考慮\r\n    var html = (typeof data.x === \"undefined\") ? '' : Util.DateToString(\r\n            new Date(data.xHTML), \"yyyy/MM/dd hh:mm:ss.ppp\");\r\n    html = '<label class=\"datetime\">' + html + '</label>';\r\n    data.series\r\n            .forEach(function (series) {\r\n                if (!series.isVisible)\r\n                    return;\r\n                var val = (typeof series.yHTML === \"undefined\") ? \"\"\r\n                        : series.yHTML, text = '<label '\r\n                        + getStyle(series.label)\r\n                        + '\">'\r\n                        + \"&nbsp;\"\r\n                        + series.labelHTML\r\n                        + ':'\r\n                        + ('####' + val.replace(/\\.[0-9]*/, \"\")).slice(-4)\r\n                                .replace(/#/g, \"&nbsp;\") + '</label>';\r\n                html += series.isHighlighted ? '<b>' + text + '</b>' : text;\r\n                html += '&nbsp;';\r\n            });\r\n    return html;\r\n    // keyに設定された色指定するstyle文字列を取得する（legendFormatter内部関数宣言）\r\n    function getStyle(key) {\r\n        var i = HJN.seriesConfig.findIndex(function (e) {\r\n            return (e.key === key);\r\n        });\r\n        return 'style=\"background:' + HJN.seriesConfig[i].color + ';';\r\n    }\r\n};\r\n\r\n\r\n\r\n/**\r\n * メニュー機能：CSVデータファイルを開く\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {evt}\r\n *            evt ファイルオープンイペント\r\n */\r\nGraph.prototype.menuOpenCsv = function (evt) {\r\n    \"use strict\";\r\n    var file_list = evt.target.files;\r\n    // 指定されたファイルを処理する\r\n    HJN.init.FileReader(file_list);\r\n};\r\n\r\n/**\r\n * メニュー機能：画面設定をJSON形式のセーブファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuSaveConfig = function (menuId, fileName) {\r\n    \"use strict\";\r\n    // plotsをjsonに変換する\r\n    var save = {\r\n        \"HJN.Plot.List\" : HJN.Plot.List,\r\n        \"HJN.chart.fileParser\" : HJN.chart.fileParser._config_File.__config,\r\n        \"HJN.chartD.fileParser\" : HJN.chartD.fileParser._config_File.__config\r\n    };\r\n    var json = JSON.stringify(save, null, 4);\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(this.menuBuffToBlob(json), menuId, fileName);\r\n};\r\n/**\r\n * メニュー機能：JSON形式の画面設定ファイルをロードし画面表示に反映する TODO\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ？\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名 ？\r\n */\r\nGraph.prototype.menuLoadConfig = function (evt) { // #10\r\n    \"use strict\";\r\n    // 指定されたファイルを開く\r\n    var files = evt.target.files;\r\n    for (var i = 0; i < files.length; i++) { // データを順番に取得する\r\n        try {\r\n            // ファイルを取得する\r\n            var file = files[i];\r\n            // ログ出力用にファイル名（サイズ）を編集する\r\n            if (10000 < file.size) {\r\n                var msg = \"Too large(>10KB) \" + file.name + \" [\" + file.size\r\n                        + \"byte]\";\r\n                Util.Logger.ShowText([ \"<mark>\" + msg + \"</mark>\" ]);\r\n                return;\r\n            }\r\n            // ファイルの読み込みに成功したら、その内容をドロップエリアに追記して表示する\r\n            var reader = new FileReader();\r\n            reader.onloadend = funcOnloadend.bind(this, files[i], i);\r\n            // ファイルにArrayBufferで参照を取得する（onloadendイベントを起こす）\r\n            reader.readAsArrayBuffer(files[i]);\r\n        } catch (e) {\r\n            // 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n            var msg = \"The \" + i + \"th dropped object is not a file\";\r\n            Util.Logger.ShowText([ \"<mark>\" + msg + \"</mark>\" ]);\r\n            console.error(\"[%o]%o\", msg, e);\r\n        }\r\n    }\r\n\r\n    // 内部関数：ファイルを読み込み後の処理（指定ファイルを読み込んだ後に呼び出される）\r\n    function funcOnloadend(file, i, evt) {\r\n        if (evt.target.readyState === FileReader.DONE) {\r\n            // ファイルからjsonを読み込む\r\n            var filesArrayBuffer = evt.target.result;\r\n            var buf = new Uint8Array(filesArrayBuffer);\r\n            var json = String.fromCharCode.apply(null, buf);\r\n            alert(json);\r\n            var jsonObj = JSON.parse(json);\r\n\r\n            // jsonからHJN.chartD.fileParserに登録されているConfig の定義を作成する\r\n            var conf = jsonObj[\"HJN.chart.fileParser\"];\r\n            HJN.chart.fileParser._config_File.__config = conf;\r\n            var confD = jsonObj[\"HJN.chartD.fileParser\"];\r\n            HJN.chartD.fileParser._config_File.__config = confD;\r\n\r\n            // jsonからHJN.Plot.Listを作成する\r\n            var tmpPlots = jsonObj[\"HJN.Plot.List\"];\r\n            var plots = [];\r\n            // フォーマットに合致する項目のみ抽出する\r\n            if (isSameType([], tmpPlots)) { // 最上位が配列\r\n                tmpPlots.forEach(function (e) { // 2層目がオブジェクト\r\n                    if (isSameType(0, e.x))\r\n                        plots.push(e);\r\n                });\r\n            }\r\n            if (0 < plots.length) {\r\n                HJN.Plot.List = plots;\r\n            }\r\n            HJN.Plot.Render();\r\n            // グラフ内の吹き出しを再表示する\r\n            HJN.Plot.ShowBalloon();\r\n\r\n            // 型判定\r\n            function isSameType(sample, obj) {\r\n                var clas0 = Object.prototype.toString.call(sample);\r\n                var clas1 = Object.prototype.toString.call(obj);\r\n                return clas0 === clas1;\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * メニュー機能：メニューで指定されたフィルタの条件で再描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuFilterApply = function () { // #34\r\n    \"use strict\";\r\n    if (HJN.files && HJN.files.length === 0) {\r\n        // 自動生成データのグラフを表示しているとき\r\n        HJN.init.ChartShow(HJN.chart.eTatOriginal)\r\n    } else {\r\n        // ファイル指定のグラフを表示しているとき\r\n        HJN.init.FileReader(HJN.files);\r\n    }\r\n};\r\n/**\r\n * メニュー機能：フィルタ条件を初期値にし、再描画する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuFilterClear = function () { // #34\r\n    \"use strict\";\r\n    // メニュー画面おフィルタ条件に、初期値を設定する\r\n    setText(\"Filter.F_TIME_FROM\", null);\r\n    setText(\"Filter.F_TIME_FROM\", null);\r\n    setText(\"Filter.F_TIME_TO\", null);\r\n    setText(\"Filter.F_TAT_FROM\", 0);\r\n    setText(\"Filter.F_TAT_TO\", null);\r\n    setSelector(\"Filter.F_TEXT_NON\");\r\n    setText(\"Filter.F_TEXT_LEN\", null);\r\n    setText(\"Filter.F_TEXT_POS\", 1);\r\n    setText(\"Filter.F_TEXT_COL\", 3);\r\n    setText(\"Filter.F_TEXT_REG\", null);\r\n\r\n    function setText(id, val) {\r\n        document.getElementById(id).value = val;\r\n        document.getElementById(id).onchange();\r\n    }\r\n    function setSelector(id) {\r\n        document.getElementById(id).checked = true;\r\n        document.getElementById(id).onchange();\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー機能：シミュレータ 指定JSONでシミュレートする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.menuSimulatorSimulate = function () { // #53\r\n    \"use strict\";\r\n    // グラフを再生成する\r\n    var json = document.getElementById(\"SimulatorEditor\").value;\r\n    HJN.files = []; // #61\r\n    HJN.Plot.List = [];\r\n    CreateSampleTatLogAndChartShow(json);\r\n\r\n};\r\n/**\r\n * メニュー機能：シミュレータ JSON入力エリアを広げる\r\n * \r\n */\r\nGraph.prototype.menuSimulatorEditor = function () { // #53\r\n    \"use strict\";\r\n    var divSimulator = document.getElementById(\"Simulator\");\r\n    var divSimulatorEditor = document.getElementById(\"SimulatorEditor\");\r\n    if (divSimulator.style.height === \"100%\") { // #60\r\n        // 開いているとき、textareaの親を閉じる\r\n        divSimulator.style.height = \"0\";\r\n        divSimulator.style.width = \"190px\";\r\n    } else{ // 閉じているとき\r\n        // textareaを一度閉じる（textareaが大きいとき親が大きくなりスクロールが出るため）\r\n        divSimulatorEditor.style.height = \"0\";\r\n        // textareaの親を開く\r\n        divSimulator.style.height = \"100%\";\r\n        divSimulator.style.width = \"70%\";\r\n        divSimulatorEditor.style.height = (divSimulator.scrollHeight - 10) + \"px\";\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * メニュー機能：canvas画像をファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadImg = function (menuId, fileName) {\r\n    \"use strict\";\r\n    var type = 'image/png';\r\n    // canvas から DataURL で画像を出力\r\n    var canvas = this.chartId.getElementsByTagName('canvas')[0], dataurl = canvas\r\n            .toDataURL(type);\r\n    // DataURL のデータ部分を抜き出し、Base64からバイナリに変換\r\n    var bin = atob(dataurl.split(',')[1]);\r\n    // Uint8Array ビューに 1 バイトずつ値を埋める\r\n    var buffer = new Uint8Array(bin.length);\r\n    for (var i = 0; i < bin.length; i++) {\r\n        buffer[i] = bin.charCodeAt(i);\r\n    }\r\n    // Uint8Array ビューのバッファーを抜き出し、それを元に Blob を作る\r\n    var blob = new Blob([ buffer.buffer ], {\r\n        type : type\r\n    });\r\n    // var url = window.URL.createObjectURL(blob);\r\n\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(blob, menuId, fileName);\r\n};\r\n\r\n/**\r\n * メニュー機能：グラフ全データをCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadCsv = function (menuId, fileName) {\r\n    \"use strict\";\r\n    var bom = new Uint8Array([ 0xEF, 0xBB, 0xBF ]), // Excel対応UTF8のBOMコード指定\r\n    csv = this.labels.join(','); // csvヘッダ行の作成\r\n    this.dyData.forEach(function (e) {\r\n        csv += \"\\r\\n\" + e.join(',');\r\n    }); // csvデータ展開\r\n    var blob = new Blob([ bom, csv ], {\r\n        \"type\" : \"text/csv\"\r\n    }); // blob変換\r\n    // ダウンロードする\r\n    this.menuDownloadBlob(blob, menuId, fileName);\r\n};\r\n\r\n/**\r\n * メニュー機能：グラフ全データの編集元に該当するTATログの該当行をCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadLog = function (menuId, fileName) {\r\n    \"use strict\";\r\n    var eTat = this.eTat;\r\n    if (0 < eTat.length) { // 出力対象データがあるとき\r\n        if (typeof eTat[0].pos === \"undefined\") { // 生成データのとき\r\n            // 生成データをCSVに編集する\r\n            var eTatCsv = \"\";\r\n            var delimiter = '\"';\r\n            var separator = delimiter + HJN.chart.fileParser.getValue(\"SEP\") + delimiter;\r\n            eTat.forEach(function (e) {\r\n                eTatCsv += delimiter + Util.D2S(e.x, 'yyyy/MM/dd hh:mm:ss.ppp') + separator\r\n                        + e.y + separator + e.message + delimiter + '\\r\\n'; // #61\r\n            });\r\n            // ダウンロードする\r\n            this.menuDownloadBlob(this.menuBuffToBlob(eTatCsv), menuId,\r\n                    fileName);\r\n        } else { // ファイル読込のとき\r\n            // 出力データを元ファイルのpos順にソートする（改行コードのないファイル末尾レコートがある場合も最後に来るように） #45\r\n            eTat.sort(function (a, b) {\r\n                return a.pos - b.pos;\r\n            });\r\n            // 最大作業領域として元ファイルサイズの合計分のメモリを確保する #23\r\n            var maxSize = HJN.filesArrayBuffer.reduce(function (p, c) {\r\n                return p + c.byteLength + 2;\r\n            }, 0);\r\n            var buff = new Uint8Array(maxSize), offset = 0;\r\n            // ファイルの該当行を Uint8Arrayに登録する\r\n            eTat.forEach(function (e) {\r\n                buff.set(new Uint8Array(HJN.filesArrayBuffer[e.fileIdx], e.pos,\r\n                        Math.min(e.len + 2,\r\n                                HJN.filesArrayBuffer[e.fileIdx].byteLength\r\n                                        - e.pos)), offset);\r\n                offset += (e.len + 2);\r\n            });\r\n            // 未使用作業領域を削除する\r\n            var buff2 = new Uint8Array(buff.slice(0, offset));\r\n            // ダウンロードする\r\n            this.menuDownloadBlob(this.menuBuffToBlob(buff2), menuId, fileName);\r\n        }\r\n    } else { // 出力対象データがないとき\r\n        var str = \"No log in the time.\";\r\n        // ダウンロードする\r\n        this.menuDownloadBlob(this.menuBuffToBlob(str), menuId, fileName);\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー機能：plotsでconcが選択されているとき、同時処理に該当するTATログの該当行をCSVファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadConc = function (menuId, fileName) {\r\n    \"use strict\";\r\n    var plot = HJN.Plot.List.find(function (e) {\r\n        return e.radio;\r\n    });\r\n    if (plot.n === HJN.CONC.N || plot.n === HJN.STAT.N || plot.n === HJN.ETAT.N) {\r\n        // CONC|STAT|ETATが選択されているとき\r\n        var trans = this.eTat.tatMap.search(plot.x); // #18\r\n        if (0 < trans.length) { // 出力テキストを編集する\r\n            if (typeof trans[0].pos === \"undefined\") {\r\n                // 初期表示データのとき、CSVを編集する\r\n                // 生成データをCSVに編集する\r\n                var csv = \"\";\r\n                trans.forEach(function (e) {\r\n                    csv += Util.D2S(e.x, \"yyyy/MM/dd hh:mm:ss.ppp\") + \",\"\r\n                            + e.y + \"\\r\\n\";\r\n                });\r\n                // ダウンロードする\r\n                this.menuDownloadBlob(this.menuBuffToBlob(csv), menuId,\r\n                        fileName);\r\n            } else {\r\n                // ファイル読み込みの時、対象レコードを表示する\r\n                // 出力データを元ファイルのpos順にソートする（改行コードのないファイル末尾レコートがある場合も最後に来るように） #45\r\n                trans.sort(function (a, b) {\r\n                    return a.pos - b.pos;\r\n                });\r\n                // 最大作業領域として元ファイルサイズの合計分のメモリを確保する #23\r\n                var maxSize = HJN.filesArrayBuffer.reduce(function (p, c) {\r\n                    return p + c.byteLength + 2;\r\n                }, 0);\r\n                var buff = new Uint8Array(maxSize), offset = 0;\r\n                // ファイルの該当行を Uint8Arrayに登録する\r\n                trans.forEach(function (e) {\r\n                    buff.set(new Uint8Array(HJN.filesArrayBuffer[e.fileIdx],\r\n                            e.pos, Math.min(e.len + 2,\r\n                                    HJN.filesArrayBuffer[e.fileIdx].byteLength\r\n                                            - e.pos)), offset);\r\n                    offset += (e.len + 2);\r\n                });\r\n                // 未使用作業領域を削除する\r\n                var buff2 = new Uint8Array(buff.slice(0, offset));\r\n                // ダウンロードする\r\n                this.menuDownloadBlob(this.menuBuffToBlob(buff2), menuId,\r\n                        fileName);\r\n            }\r\n        }\r\n\r\n    } else { // CONCが選択されていないとき\r\n        var msg = \"抽出対象データがありません。空データがダウンロードされます\\r\\n\"\r\n                + \"conc：多重度（詳細）の点を選択した状態で行ってください\";\r\n        alert(msg);\r\n        this.menuDownloadBlob(this.menuBuffToBlob(msg), menuId, fileName);\r\n    }\r\n};\r\n\r\n/**\r\n * メニュー共通機能：BinaryString, UintXXArray, ArrayBuffer をBlobに変換する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Object}\r\n *            arrayBuffer 変換元\r\n * @param {Blob} -\r\n *            変換後\r\n */\r\nGraph.prototype.menuBuffToBlob = function (arrayBuffer) {\r\n    \"use strict\";\r\n    return new Blob([ arrayBuffer ], {\r\n        type : \"application/octet-stream\"\r\n    });\r\n};\r\n\r\n/**\r\n * メニュー共通機能：指定blobをファイルとしてダウンロードする\r\n * \r\n * @memberof tatLogDiver.Graph\r\n * @param {Objcet}\r\n *            blob ダウンロードさせるblogデータ\r\n * @param {String}\r\n *            menuId Chrome, FireFoxのときに使用：ダウンロードファイルの一時作成に使うHTMLタグ\r\n * @param {String}\r\n *            fileName ie11以降のときに使用：ダウンロードファイル名\r\n */\r\nGraph.prototype.menuDownloadBlob = function (blob, menuId, fileName) {\r\n    \"use strict\";\r\n    if (window.navigator.msSaveBlob) { // ie11以降のとき\r\n        window.navigator.msSaveBlob(blob, fileName);\r\n        // msSaveOrOpenBlobの場合はファイルを保存せずに開ける\r\n        window.navigator.msSaveOrOpenBlob(blob, fileName);\r\n    } else { // Chrome, FireFoxのとき\r\n        document.getElementById(menuId).href = window.URL.createObjectURL(blob);\r\n    }\r\n};\r\n\r\n/**\r\n * Zoomリセットアイコンを追加する\r\n * \r\n * @memberof tatLogDiver.Graph\r\n */\r\nGraph.prototype.addIcon_ZoomReset = function () {\r\n    \"use strict\";\r\n    var divChart = this.chartId; // document.getElementById(\"Icons\");\r\n    var idName = this.chartIdName + \"Zoom\";\r\n    var input = document.getElementById(idName);\r\n    if (input !== null) { // 既にある場合削除する\r\n        var div = input.parentElement;\r\n        div.parentElement.removeChild(div);\r\n    }\r\n\r\n    if (divChart) {\r\n        var div = document.createElement('div');\r\n        var htmlText = '<input id=\"' + idName + '\" type=\"buttom\" class=\"hjnBoxSwitch hjnResize\" '\r\n                                + 'onClick=\"HJN.' + this.chartIdName + '.graph.resetZoom()\">'\r\n                     + '<label for=\"' + idName + '\" class=\"hjnCtrlBox\"><span></span></label>';\r\n        div.innerHTML = htmlText;\r\n        divChart.insertBefore(div, divChart.firstChild);\r\n    }\r\n    \r\n    // divIcons.appendChild(div);\r\n\r\n    // div.id = id;\r\n    // div.className = \"menuBar\";\r\n    // div = element.parentElement;\r\n    /*\r\n     * var divIcons = document.getElementById(\"Icons\"); var idName =\r\n     * this.chartIdName + \"Zoom\"; if (divIcons) { var div =\r\n     * document.createElement('div'); var htmlText = '<input id=\"' + idName + '\"\r\n     * type=\"buttom\" class=\"hjnBoxSwitch hjnResize\" ' + 'onClick=\"HJN.' +\r\n     * this.chartIdName + '.graph.resetZoom()\">' + '<label for=\"' + idName + '\"\r\n     * class=\"hjnCtrlBox\"><span></span></label>'; div.innerHTML = htmlText;\r\n     * divIcons.appendChild(div); }\r\n     */\r\n\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Graph.js\n// module id = 5\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 6\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 7\n// module chunks = 0","/**\r\n * @memberOf timeSeries\r\n * @class MappedETat\r\n * @classdesc 期間指定eTat取得用Map\r\n *            <p>\r\n *            指定期間に動いているeTatの一覧を、高速に取得するマップ\r\n * @param {ETAT}\r\n *            eTat インデックスを追加するETAT\r\n * @example eTat.tatMap = new HJN_util.MappedETat(eTat); var trans =\r\n *          eTat.tatMap.search(x, x, 1000);\r\n */\r\nexport default (function() { // #18\r\n    \"use strict\";\r\n    /** @static */\r\n    MappedETat.prototype = {\r\n            _abscissa: [],\r\n            _conf :[{ms:      10, step:5, label:\"0_10ms_\"},\r\n                    {ms:      50, step:2, label:\"1_50ms_\"},\r\n                    {ms:     100, step:5, label:\"2_100ms_\"},\r\n                    {ms:     500, step:2, label:\"3_500ms_\"},\r\n                    {ms:    1000, step:5, label:\"4_1sec_\"},\r\n                    {ms:    5000, step:4, label:\"5_5sec_\"},\r\n                    {ms:   20000, step:3, label:\"6_20sec_\"},\r\n                    {ms:   60000, step:5, label:\"7_1min_\"},\r\n                    {ms:  300000, step:4, label:\"8_5min_\"},\r\n                    {ms: 1200000, step:3, label:\"9_20min_\"},\r\n                    {ms: 3600000, step:6, label:\"10_1h_\"},\r\n                    {ms:21600000, step:4, label:\"11_6h_\"},\r\n                    {ms:Number.MAX_VALUE, step:1, label:\"12_overDay_\"}] // 最後はstep:１\r\n        };\r\n    /** @constructor */\r\n    function MappedETat(eTat){\r\n        if(!(this instanceof MappedETat)) return new MappedETat(eTat);\r\n        // MappedArrayを作成する\r\n        this._tatMap = new MappedArray(eTat, this._getKey, true);\r\n    }\r\n\r\n    /** @private */\r\n    MappedETat.prototype._row = function(label, step) {return label + step;};\r\n\r\n    /** @private */\r\n    // MapKey取得関数\r\n    MappedETat.prototype._getKey = function(e, i) {        // MapedMap用Key配列関数\r\n        var start = e.x - e.y,      // x,yはミリ秒\r\n            end = e.x,\r\n            _conf = MappedETat.prototype._conf,\r\n            _row = MappedETat.prototype._row,\r\n            term = _conf[0].ms,\r\n            rowLv = 0;\r\n        if(Math.ceil(end / term) - 1 === Math.floor(start / term)){ // 最小BOX\r\n            return [_row(_conf[0].label, 0),\r\n                    (Math.ceil(e.x / _conf[0].ms) - 1) * _conf[0].ms];\r\n        }\r\n        for (i = 1; i < _conf.length; i++) {                // 最下位から上に評価\r\n            term = _conf[i].ms;\r\n            if(Math.floor(end / term) === Math.floor(start / term) \r\n                    || end - start < term){                      // 上位BOXを起点\r\n                term = _conf[i-1].ms;   // ひとつ下位のBOX期間（下から評価したので二段下となることは無い\r\n                rowLv = Math.floor(end / term) - Math.floor(start / term);\r\n                return [_row(_conf[i-1].label, rowLv),\r\n                        (Math.ceil(e.x / _conf[i-1].ms) - 1) * _conf[i-1].ms];\r\n            }\r\n        }\r\n        return \"error\";\r\n    };\r\n\r\n    // static メンバーの設定\r\n    // _confから_abscissa(横軸）を生成する\r\n    var c = MappedETat.prototype._conf,\r\n        e2 = c[c.length - 2],\r\n        \r\n        e  = c[c.length - 1];\r\n    MappedETat.prototype._abscissa.push(\r\n            {label: MappedETat.prototype._row(e.label, e.step), ms: e.ms ,i: 1,\r\n                step: e.step, from: e2.ms * e2.step, to: e.ms} );   // 末尾を先頭に追加\r\n    for (var j = c.length - 1; 0 <= j; j--){    // 降順に追加\r\n        e = c[j];\r\n        for (var i = e.step; 0 < i; i--){ // #39\r\n            MappedETat.prototype._abscissa.push(\r\n                    {label: MappedETat.prototype._row(e.label, i), ms: e.ms, i: i, \r\n                                step: e.step, from: e.ms * i, to: e.ms * (i + 1)} );\r\n        }\r\n    }\r\n    MappedETat.prototype._abscissa.push( \r\n            {label: MappedETat.prototype._row(c[0].label, 0), ms: c[0].ms, i: 0,\r\n                step: 0, from: 0, to: c[0].ms} );   // 先頭を末尾に追加\r\n\r\n    \r\n    // public\r\n    /**\r\n     * 指定期間に動いているeTatを検索する\r\n     * \r\n     * @memberOf Util.MappedETat\r\n     * @parm {Number} from 指定期間(from)\r\n     * @parm {Number} [to=from] 指定期間(to)\r\n     * @parm {Number} [cap] cap件数となったら抽出を終了する（指定なしの時：全件）\r\n     * @return {ETAT} eTatArr 指定期間内のeTat配列\r\n     */\r\n    MappedETat.prototype.search = function (from, to, cap) {\r\n        to = to || from;    // to省略時は時刻指定(from=to)\r\n        cap = cap || Number.MAX_VALUE; // 指定なしの時：全件\r\n        var map = this._tatMap._map,\r\n            eTat = this._tatMap._arr,\r\n            abscissa = this._abscissa,\r\n            eTatArr = [],\r\n            start = 0,\r\n            end = 0;\r\n        // 検索対象のBOX一覧を生成する\r\n        abscissa.forEach(function(e){   // 存在しうる横軸のうち（tatが長時間の方から）\r\n            if (map[e.label]){          // 横軸が存在するものについて\r\n                var boxNum = e.i + Math.ceil(to / e.ms) - Math.floor(from / e.ms), // #45\r\n                    key = Math.floor(from / e.ms) * e.ms;\r\n                // 存在しうるKey値を終了時間が早い方から集計する\r\n                for(var j = 0; j <= boxNum; j++){\r\n                    // Key値が存在するものみが集計対象\r\n                    if (map[e.label][key]){ \r\n                        // かつ、Keyが持っている要素(eTatへの参照:k)が集計対象\r\n                        map[e.label][key].forEach(function(k){\r\n                            // かつ、from-toの期間に動いている要素(eTatのindex)が集計対象\r\n                            start = eTat[k].x - eTat[k].y;\r\n                            end   = eTat[k].x;\r\n                            if((start <= to) && (from <= end)){\r\n                                // かつ、戻り値の配列要素数がcap未満の場合が集計対象\r\n                                if(eTatArr.length < cap){\r\n                                    // 集計対象条件に合致する要素を、戻り値の配列に追加する\r\n                                    eTatArr = eTatArr.concat(eTat[k]);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    key += e.ms;    // 次のKey値\r\n                }\r\n            }\r\n        }, this);\r\n        return eTatArr;\r\n    };\r\n    \r\n    // newの戻り値\r\n    return MappedETat;\r\n}());\r\n\r\n\r\n/**\r\n * @memberOf Util\r\n * @class MappedArray\r\n * @classdesc 配列位置逆引きマップ\r\n *            <p>\r\n *            配列に格納されているオブジェクトのx値で、配列位置を高速検索するマップ<br>\r\n *            指定関数の戻り値(x)をキーとするマップを作成する\r\n *            <p>\r\n *            参考 {@link http://qiita.com/alucky0707/items/10052866719ba5c5f5d7}\r\n * \r\n * @param {Array}\r\n *            arr インデクスをつける対象の配列\r\n * @param {String|function}\r\n *            [getKey=\"\"] MappedArrayのKey値の取得方法\r\n *            <p>\r\n *            String指定のとき（デフォルト\"\"を含む）、配列要素の値(valueOf)\r\n *            <p>\r\n *            注： 0,00,\"0\"は同値、1,01,\"1\"は同値 Stringのとき、 配列要素が持つ指定要素の値\r\n *            <p>\r\n *            functionのとき、配列要素に指定関数を適用した戻り値\r\n *            <p>\r\n *            関数の引数：(配列要素オブジェクト、配列のインデックス、作成中のMappedArrayへの参照）\r\n * @param {Boolean}\r\n *            [isMappedMap] getKeyが2段Map用の配列を返却する\r\n * @return {object} Index arrに対するインデックス（連想配列名で検索）\r\n * @example _tatMap = new HJN_util.MappedArray(eTat, this._getKey, true);\r\n */\r\nvar MappedArray = (function() {    // #18\r\n    /** @constructor */\r\n    function MappedArray(arr, getKey, isMappedMap){\r\n        if(!(this instanceof MappedArray)) return new MappedArray();\r\n        this._arr = arr;\r\n        // getKeyによりIndex作成関数を設定する\r\n        if(!getKey || getKey === \"\"){\r\n            // getKey指定がないとき、配列の値\r\n            this._getKey = function(e){ return e.valueOf(); };\r\n        }else if ((typeof(getKey) === \"string\") && (getKey !== \"\")){    // #29\r\n            // getKeyが文字列のとき、配列内オブジェクトのgetKey要素の値\r\n            this._getKey = function(e){ return e[getKey]; };\r\n        }else if (typeof(getKey) === \"function\" ){  // #29\r\n            // getKeyが関数のとき、配列内オブジェクトに関数を適用した戻り値\r\n            this._getKey = getKey;\r\n        }else{  // 以外のときエラーログを出力し、getKey指定なしと同様、配列の値\r\n            console.error(\"MappedArrayの第二引数エラー：[ %o ]を無視します \",getKey);\r\n            this._getKey = function(e){ return e.valueOf(); };\r\n        }\r\n        // MappedArrayを作成する\r\n        if(!isMappedMap){\r\n            this._createMappedArray();          \r\n        }else{\r\n            this._createMappedMappedArray();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    MappedArray.prototype._createMappedArray = function() {\r\n        var key = \"\"; \r\n        this._map = this._arr.reduce(function(m, a, i) {\r\n            key = this._getKey.call(a, a, i, m);\r\n            m[key] = (m[key] || []).concat(i);\r\n            return m;\r\n        }, {});\r\n    };\r\n    /** @private */\r\n    MappedArray.prototype._createMappedMappedArray = function() {\r\n        var keys = [],\r\n            key = \"\",\r\n            mKey = \"\",\r\n            _getKey = this._getKey;\r\n        this._map = this._arr.reduce(function(m, a, i) {\r\n            keys = _getKey.call(a, a, i, m);\r\n            key = keys[1] || \"error\";\r\n            mKey = keys[0] || \"error\";\r\n            if(m[mKey] === undefined) m[mKey] = {};\r\n            m[mKey][key] = (m[mKey][key] || []).concat(i);\r\n            return m;\r\n        }, {});\r\n    };\r\n\r\n    // public\r\n    /**\r\n     * 値の存在チェック\r\n     * \r\n     * @memberOf Util.MappedArray\r\n     */\r\n    MappedArray.prototype.has = function (keyValue) {\r\n        return keyValue in this._map;\r\n    };\r\n    /**\r\n     * 該当位置を配列で返す\r\n     * \r\n     * @memberOf Util.MappedArray\r\n     */\r\n    MappedArray.prototype.indexes = function (keyValue) {\r\n        return this._map[keyValue] || [];\r\n    };\r\n    /**\r\n     * 該当する要素を配列で返す\r\n     * \r\n     * @memberOf Util.MappedArray\r\n     */\r\n    MappedArray.prototype.search = function (keyValue) {    \r\n        var arr = this._arr;\r\n        return this.indexes(keyValue).reduce(function(m, i) {\r\n            m.push(arr[i]);\r\n            return m;\r\n        }, []);\r\n    };\r\n    /**\r\n     * Array.prototype.indexOf() 同等\r\n     * \r\n     * @memberOf Util.MappedArray\r\n     */\r\n    MappedArray.prototype.indexOf = function (keyValue) {\r\n        var idxArr = this._map[keyValue],\r\n            i = idxArr ? idxArr.length : -1;\r\n        return (0 < i) ? idxArr[0] : -1;\r\n    };\r\n    /**\r\n     * Array.prototype.lastIndexOf() 同等\r\n     * \r\n     * @memberOf Util.MappedArray\r\n     */\r\n    MappedArray.prototype.lastIndexOf = function (keyValue) {\r\n        var idxArr = this._map[keyValue],\r\n            i = idxArr ? idxArr.length : -1;\r\n        return (0 < i) ? idxArr[i-1] : -1;\r\n    };\r\n    \r\n    \r\n    return MappedArray;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-MappedETat.js\n// module id = 8\n// module chunks = 0","import MappedETat from './timeSeries-MappedETat.js';\r\nimport Cash from './timeSeries-Cash.js';\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class ETat\r\n * @extends Array\r\n * @classdesc eTat管理クラス、Arrayのメソッドを継承\r\n * @param {Array}\r\n *            [that] ETAT構造の配列\r\n */\r\nexport default function ETat(that) {\r\n    /** @private */\r\n    // cTpsのxからindexを引くMapを作成する #18\r\n    that.tatMap = new MappedETat(that);\r\n    // キャッシュを作成する\r\n    that.cash = Cash();\r\n\r\n    /**\r\n     * 指定期間のeTatを取得する<br>\r\n     * 性能対策としてキャッシュを持っている\r\n     * \r\n     * @memberof TimeSeries.ETat\r\n     * @param {Number}\r\n     *            [detailDateTime] 期間の基準時刻(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangeMinus] 抽出開始時刻を求める基準時刻から引く時間(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangePlus] 抽出終了時刻を求める基準時刻に足す時間(ミリ秒)\r\n     * @param {Number}\r\n     *            [detailRangeUnit] 抽出開始終了時刻を丸める時間の単位(ミリ秒)\r\n     * @return {ETAT} 指定期間のETAT配列\r\n     */\r\n    that.sliceByRangeUnit = function (detailDateTime, detailRangeMinus, detailRangePlus, detailRangeUnit){\r\n        var rangeUnit = detailRangeUnit || TimeSeries.Tat.CYCLE;\r\n        var dt = Math.floor(detailDateTime / rangeUnit) * rangeUnit; // 中央時刻(ミリ秒)\r\n        var from = dt - detailRangeMinus * rangeUnit;  // #48\r\n        var to = dt + detailRangePlus  * rangeUnit;  // 幅（ミリ秒）\r\n        var eTatDetail = [{x: 0, y: 0.001, sTatIdx: 0}];    // tatMapが無い場合の返却値\r\n        if (this.tatMap){ // #18\r\n            // eTatDetailがレンジキャッシュにあるか確認する #30\r\n            eTatDetail = this.cash.getRangedCash(from, to);\r\n            if(eTatDetail === undefined){\r\n                // キャッシュヒットしないとき、eTatDetailを抽出し、キャッシュにセットする\r\n                eTatDetail = this.tatMap.search(from,to);\r\n                this.cash.setRangedCash(eTatDetail, from, to);\r\n            }\r\n        }\r\n        return eTatDetail;\r\n    }\r\n\r\n    return that\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-ETat.js\n// module id = 9\n// module chunks = 0","/**\r\n * @memberOf timeSeries\r\n * @class Cash\r\n * @classdesc キャッシュ\r\n *            <p>\r\n *            キャッシュを保持させるオブジェクト\r\n * @param {Number}\r\n *            [size=10] キャッシュ最大件数（未対応機能、設定は無視される）\r\n */\r\nexport default (function() {\r\n    /** constructor */\r\n    function Cash(size){\r\n        size = size || 10;  // TODO 未使用\r\n        if(!(this instanceof Cash)) return new Cash(size);\r\n        // インスタンス変数\r\n        this._cash = {};    // キャッシュ {data:, count:, lastTime:}\r\n        this._ranges = [];  // RangedCash用 {key: ,from: , to:, }\r\n        this._size = size;  // キャッシュ最大件数\r\n    }\r\n    \r\n    /* method */\r\n    /**\r\n     * 第一引数のargumentsを配列に変換する<br>\r\n     * （注：引数が１つ以上あることを前提）\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            args 引数一覧（arguments）\r\n     * @return {Array} 引数の配列\r\n     */\r\n    Cash._arg2arr = function(args) {\r\n            return args.length === 1 ? [args[0]] : Array.apply(null, args);\r\n        };\r\n    /**\r\n     * cash判定Keyを取得する<br>\r\n     * （注：引数を'.'でつないだ文字列をkeyとするので、関数名長の上限を超える大きな配列は不可）\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            args 引数一覧（argumentsオブジェクト）\r\n     * @return {String} キャッシュキー用の文字列\r\n     */\r\n    Cash._getKey = function(args) {\r\n            var argsArr = this._arg2arr(args);\r\n            return argsArr.reduce(function(a,b){return a+'.'+b; });\r\n        };\r\n        \r\n    /* private */\r\n\r\n    /* public */\r\n    /**\r\n     * cashオブジェクトを、cashが無いときはundefinedを返却する<br>\r\n     * cashヒットした場合、cashの使用回数をカウントアップする\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            arguments 引数からキー文字列を定める\r\n     * @return {Number|undefined} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.getCash = function () {\r\n            if (arguments.length < 1) return undefined;\r\n            var args = Cash._arg2arr(arguments),\r\n                key = Cash._getKey(args);\r\n            if (key in this._cash){\r\n                var cash = this._cash[key];\r\n                cash.lastTime = new Date();\r\n                cash.count++;\r\n                return cash.data;\r\n            }else{\r\n                return undefined;\r\n            }\r\n        };\r\n    /**\r\n     * オブジェクトをcashする\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            cashVal キャッシュするオブジェクト\r\n     * @param {Object}\r\n     *            arguments 第二引数以降の、引数からキー文字列を定める\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.setCash = function () {\r\n            if (arguments.length < 2) return undefined;\r\n            var cashVal = arguments[0],\r\n                args = Cash._arg2arr(arguments).slice(1, arguments.length),\r\n                key = Cash._getKey(args);\r\n            this._cash[key] = {data: cashVal, count: 0, lastTime:new Date()};\r\n            return cashVal;\r\n        };\r\n\r\n    /**\r\n     * レンジキー(form,to)範囲内でキーマッチするcashを、cashが無いときはundefinedを返却する<br>\r\n     * キーは大小比較できる数値であることが前提\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Number}\r\n     *            from 抽出するキャッシュキー最小値\r\n     * @param {Number}\r\n     *            to 抽出するキャッシュキーの最大値\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.getRangedCash = function (from, to) {\r\n            var range = this._ranges.find(function(e){\r\n                    return (e.from <= from && to <= e.to);\r\n                });\r\n            return (range !== undefined) ? this.getCash(range.from,range.to) : undefined;\r\n        };\r\n    /**\r\n     * レンジキー(from,to)指定でキャッシュする<br>\r\n     * キーは大小比較できること（通常、数値）、from-to期間内の既存のキャッシュは削除される\r\n     * \r\n     * @memberof Util.Cash\r\n     * @param {Object}\r\n     *            cashVal キャッシュするオブジェクト\r\n     * @param {Number}\r\n     *            from 抽出するキャッシュキー最小値\r\n     * @param {Number}\r\n     *            to 抽出するキャッシュキーの最大値\r\n     * @return {Object} キャッシュデータ（デーがが無い場合は undefined)\r\n     */\r\n    Cash.prototype.setRangedCash = function (cashVal, from, to) {\r\n            if (arguments.length < 3) return undefined;\r\n            // 登録キー範囲に包含される既存キャッシュを削除する\r\n            var count = 0;\r\n            this._ranges = this._ranges.filter(function(e){\r\n                    if (from <= e.from && e.to <= to){\r\n                        // 登録キャッシュ範囲内のキャッシュを削除する\r\n                        count += this._cash[e.key].count;   // 削除分のカウンタ合算\r\n                        delete this._cash[e.key];\r\n                        return false;\r\n                    }else{  // 登録キャッシュの範囲外の一覧を返却する\r\n                        return true;\r\n                    }\r\n                }, this);\r\n            // 引数をキャッシュに登録する\r\n            var key = Cash._getKey([from, to]);\r\n            this._ranges.push( {from: from, to: to, key: key} );\r\n            this.setCash(cashVal, from, to);\r\n            this._cash[key].count= count + 1;   // 再作成時はカウンタ合算値\r\n            return cashVal;\r\n        };\r\n\r\n    // newの戻り値\r\n    return Cash;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-Cash.js\n// module id = 10\n// module chunks = 0","import {VirtualResource} from './simulator.js';\r\nimport {VirtualApp} from './simulator.js';\r\nimport * as Util from '../util/util.js';\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualSystem\r\n * @classdesc 仮想システム\r\n *            <p>\r\n *            Web3層(Web-AP-DB)をシミュレートしたWebのTATログ生成する\r\n *            <p>\r\n *            Webサーバ<br>\r\n *            最大スレッド数： Apache 2.4 [MaxClients = 1024]<br>\r\n *            JBossトランザクションタイムアウト [default-timeout = 300 秒]<br>\r\n *            キュー長 ： Apache 2.4 ListenBackLog (511) + Linux\r\n *            tcp_max_syn_backlog(769=1024*0.75+1)、タイムアウトなし<br>\r\n *            APサーバ<br>\r\n *            最大スレッド数(maxThreads)<br>\r\n *            JBossトランザクションタイムアウト [default-timeout=300 秒]<br>\r\n *            DBサーバ 最大コネクション数(max_connections)\r\n * \r\n * @param {Number}\r\n *            [start = 1970/01/02 00:00:00)] シミュレート開始時刻（UNIX日付（ミリ秒））\r\n * @param {Number}\r\n *            [end = startの24時間後] シミュレート終了時刻（UNIX日付（ミリ秒））\r\n * @param {String}\r\n *            [resourcesJson] リソース指定JSONテキスト\r\n * @param {Boolean}\r\n *            [log=false] 詳細ログ出力有無\r\n * @example sim = simulator.VirtualSystem()\r\n */\r\nexport default (function() { // #53　\r\n    \"use strict\";\r\n    /** @constructor */\r\n    function VirtualSystem(start, end, resourcesJson, log){\r\n        if(!(this instanceof VirtualSystem)){\r\n            return new VirtualSystem(start, end, resourcesJson, log);\r\n        }\r\n        if (!resourcesJson) {\r\n            var jsonText =  '['\r\n                +   '{\"type\" :\"WEB\",\"thread\":1024,\"timeout\":300000, \"q\":1280, \"qWait\":0},'\r\n                +   '{\"type\" :\"AP\", \"thread\":20,  \"timeout\":300000, \"q\":1280, \"qWait\":0},'\r\n                +   '{\"type\" :\"DB\", \"thread\":2,   \"timeout\": 10000, \"q\":1000, \"qWait\":10000}'\r\n                + ']';\r\n            resourcesJson = JSON.parse(jsonText);\r\n        }\r\n        this.eTat = []; // シミュレートにより生成するTATログ出力先\r\n        var _resources = resourcesJson;\r\n        this._log = log ? log : false; // #53\r\n        this._start = +start || new Date(1970, 1, 2);   // シミュレート開始時刻\r\n        this._end = end || this._start + 24*60*60*1000; // シミュレート終了時刻（デフォルト：24時間後)\r\n        this._simulator = Util.Heap(                // イベント予約スケジュール（ヒープ）\r\n                function(obj){ return obj.getTime(); }, // プライオリティの判定\r\n                function(obj){ return obj; });  // 削除対象の判定 #61\r\n        this._now = 0; // シミュレーション時の現在時刻\r\n        // リソースを設定する\r\n        this._resources = {}\r\n        for (var i = 0; i < _resources.length; i++) {\r\n            var e = _resources[i];\r\n            e.log = e.log ? e.log : this._log; // #53\r\n            this._resources[e.type] = VirtualResource(this, // #61\r\n                    e.type, e.thread, e.timeout, e.q, e.qWait, e.log);\r\n        };\r\n        VirtualSystem.debug = this; // ★\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * 仮想クライアントをスケジューラに登録する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {String}\r\n     *            [userName = \"Default_\"] ログに出力するユーザ名\r\n     * @param {String}\r\n     *            [message = \"\"] ログの末尾に出力するデータ\r\n     * @param {Number}\r\n     *            [num = 3] 期間内に生成する仮想クライアントの数\r\n     * @param {Number}\r\n     *            [start = Util.S2D(\"1970/01/02 00:00:00\")]\r\n     *            仮想クライアント生成開始時刻（UNIX時刻の数値、ミリ秒）\r\n     * @param {Number}\r\n     *            [end = startの0.1秒後] 仮想アプリケーション強制終了時刻（UNIX時刻の数値、ミリ秒）\r\n     * @param {Object}\r\n     *            model 仮想クライアントが実行する取引モデル\r\n     */\r\n    VirtualSystem.prototype.setClients = function(userName, message, num, start, end, model) {\r\n        userName = userName || \"Default_\";\r\n        message = message || \"\";\r\n        num = (typeof(num) === \"number\") ? num : 1; // #61\r\n        start = +start || Util.S2D(\"1970/01/02 00:00:00\");\r\n        end = +end || start + 100;\r\n        // baseModelが指定されているとき、modelに展開する\r\n        if (model.baseModel){\r\n            model = VirtualSystem.getModel(\r\n                model.baseModel.holds, model.baseModel.tatMin, model.baseModel.tat,\r\n                model.sequence, model.times, model.thinkTimeMin, model.thinkTime);\r\n        }\r\n        // modelにmessageを設定する\r\n        if (typeof(model.message) === \"string\") {\r\n            model.message += message;\r\n        } else {\r\n            model.message = message;\r\n        }\r\n        // 仮想APを登録する\r\n        var checkStart = start;\r\n        var r = Util.Random((end - start) / num);\r\n        var t = start;\r\n        for (var i = 0; i < num; i++) {\r\n            // 仮想APを作成する\r\n            var vApp = VirtualApp(userName + i, model);\r\n            // 仮想APに開始時刻（指数分布）を設定し、登録する\r\n            t += Math.round(r.exponential());\r\n            this.setEvent(vApp.start(t));\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * イベントをスケジューラに登録する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Object}\r\n     *            event 仮想クライアントもしくは仮想リソースのイベント\r\n     */\r\n    VirtualSystem.prototype.setEvent = function(event) {\r\n        this._simulator.push(event);\r\n    }\r\n\r\n    /**\r\n     * スケジューラからイベントを削除する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Object}\r\n     *            event 仮想クライアントもしくは仮想リソースのイベント\r\n     */\r\n    VirtualSystem.prototype.removeEvent = function(event) {\r\n        this._simulator.del(event);\r\n    }\r\n\r\n    /**\r\n     * シミュレーションを実行する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @return {eTat} シミュレート実行結果のログ（this.eTat）\r\n     */\r\n    VirtualSystem.prototype.execute = function() {\r\n        var event, events;\r\n        // 処理対象がなくなるか、シミュレート終了時刻になるまでシミュレートする\r\n        while(0 < this._simulator.size() &&\r\n                this._simulator.top().getTime() <= this._end ) {\r\n            // 次にイベントを迎える仮想APを取り出し、「次の処理」をシミュレートする\r\n            event = this._simulator.pop();\r\n            this._now = event.getTime(); // #59\r\n            events = event.next(this);\r\n            // 「次の処理」のシミュレートに伴い発生したイベントを、スケジュールする\r\n            while (events.length) {\r\n                this._simulator.push(events.pop());\r\n            }\r\n        }\r\n        // シミュレーション終了後処理（処理中のvAppを強制終了する） #59\r\n        while(0 < this._simulator.size()){\r\n            event = this._simulator.pop();\r\n            if (event._finish) {\r\n                event._finish(this, \"N_EoS\", \"\", this._end);\r\n            }\r\n        }\r\n        // シミュレーション終了後処理（リソース開放待ちのvAppを強制終了する） #59\r\n        for (var key in this._resources){\r\n            this._resources[key]._finish(this, \"N_EoS\", \"\", this._end);\r\n        }\r\n        \r\n        return this.eTat;\r\n    };\r\n\r\n    /**\r\n     * リソースを取得する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {String}\r\n     *            [name = \"unlimited\"] 仮想リソース名\r\n     * @return {Object} 仮想リソース（登録されていないときは、新たにholdCapacity=1の仮想リソースを登録）\r\n     */\r\n    VirtualSystem.prototype.getResouce = function(name) {\r\n        if (typeof(this._resources[name]) === \"undefined\") {\r\n            this._resources[name] = VirtualResource(this, name);\r\n        }\r\n        return this._resources[name];\r\n    };\r\n\r\n    /**\r\n     * シミュレーション現在時刻（処理中のイベントの時刻）を返却する\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualSystem.prototype.getTime = function() {\r\n        return this._now;\r\n    };\r\n\r\n\r\n    // Static Method\r\n    /**\r\n     * 取引モデルを取得する（ユーティリティ）\r\n     * \r\n     * @memberof Simulator.VirtualSystem\r\n     * @param {Array}\r\n     *            [baseModel = []] 使用リソースの一覧[\"WEB\",\"AP\",\"DB\"]\r\n     * @param {Number}\r\n     *            [tat = 5] 使用リソースの平均取得時間＆平均開放時間\r\n     * @param {Number}\r\n     *            [tatMin = 2] 使用リソースの最小取得時間＆最小開放時間\r\n     * @param {Array}\r\n     *            [sequence = []] イベントシーケンス\r\n     * @param {Number}\r\n     *            [times = undefined] イベントシーケンスの繰り返し回数（未指定時:1)\r\n     * @param {Number}\r\n     *            [thinkTime= undefined] イベントシーケンス終了時に再実行する場合の平均再開時間（未指定時:500)\r\n     * @param {Number}\r\n     *            [thinkTimeMin = undefined]\r\n     *            イベントシーケンス終了時に再実行する場合の最小再開時間（未指定時:thinkTimeと同じ）\r\n     * @param {String}\r\n     *            [message = \"\"] 自動生成ログの末尾に追加する文字列\r\n     * @return {Object} 取引モデル\r\n     */\r\n    VirtualSystem.getModel = function(baseModel, tatMin, tat, sequence, times, thinkTimeMin, thinkTime, message) {\r\n        baseModel = baseModel || [];\r\n        tatMin = tatMin || 2;\r\n        tat = tat || 5;\r\n        message = message || \"\";\r\n        sequence = sequence || [\r\n                {tatMin:6,   tat:15,  note:\"Req\",     hold:\"DB\",    free:[]},\r\n                {tatMin:70,  tat:100, note:\"selectA\", hold:\"TBL_A\", free:[\"TBL_A\"]},\r\n                {tatMin:150, tat:200, note:\"updateB\", hold:\"TBL_B\", free:[]},\r\n                {tatMin:30,   tat:50,  note:\"Res\",     hold:\"\",      free:[\"TBL_B\",\"DB\"]}\r\n            ];\r\n        var model = {sequence :[], message : message}; // 戻り値\r\n        if (typeof(times) === \"number\") model.times = times;\r\n        if (typeof(thinkTimeMin) === \"number\") model.thinkTimeMin = thinkTimeMin;\r\n        if (typeof(thinkTime) === \"number\") model.thinkTime = thinkTime;\r\n        \r\n        // baseModelを返却用シーケンスに展開する\r\n        baseModel.forEach( function(e) {\r\n            model.sequence.push({hold:e, tatMin:tatMin, tat:tat, free:[]});\r\n        });\r\n        // 指定シーケンスを返却用シーケンスに追加する\r\n        model.sequence = model.sequence.concat(sequence);\r\n\r\n        // 返却用シーケンスに、holdingを追加するとともにシーケンス終了時未開放リソースを取得する\r\n        var resources = []; // #61\r\n        var holding = []; // #59\r\n        model.sequence.forEach( function(tran) { // #61\r\n            // tatMinがtatより大きいとき、tatをtatMin一定とする #59\r\n            if (tran.tat < tran.tatMin) tran.tat = tran.tatMin;\r\n            // 処理開始時にholdしているリソース一覧をholdingに登録する #59\r\n            tran.holding = [];\r\n            resources.forEach(function(r) {tran.holding.push(r)});\r\n            // 未開放リソース一覧を更新する\r\n            if (typeof(tran.hold) !== \"undefined\" && tran.hold !== \"\") {\r\n                resources.push(tran.hold);                \r\n            }\r\n            if (tran.free) {\r\n                tran.free.forEach( function(free){\r\n                    resources.some( function(r, i){\r\n                        if (r == free) {\r\n                            resources.splice(i,1);\r\n                            return true;\r\n                        }\r\n                    })    \r\n                })\r\n            }\r\n        }, this);\r\n        // シーケンス終了時未開放リソースが残っているとき、返却用シーケンスにリソース開放処理を追加する\r\n        if (0 < resources.length){\r\n            model.sequence = model.sequence.concat(\r\n                    [{hold: \"\", tatMin: tatMin * baseModel.length, tat: tat * baseModel.length,\r\n                        free: resources.reverse()}]);\r\n        }\r\n        return model;\r\n    };\r\n    \r\n    /* new */\r\n    return VirtualSystem;\r\n}());\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-VirtualSystem.js\n// module id = 11\n// module chunks = 0","import * as Util from '../util/util.js';\r\n\r\n/**\r\n * @memberOf timeSeries\r\n * @class MenuConfig\r\n * @classdesc FileParser用メニューHTML定義\r\n * \r\n */\r\nexport default function() { // #76\r\n    // 内部関数：keyを定義する\r\n    function def(key, val, onFunc) {\r\n        var _keyConf = FileParser.prototype.__keyConfig[key] = {};\r\n        _keyConf.value = (val === undefined) ? key : val; // getValueByKeyの返却値（デフォルト：keyと同じ文字列）\r\n        _keyConf.getValue = function () { return (val === undefined) ? key : val; };\r\n        _keyConf.onFunc = onFunc || null;   // onイベント時に実行する処理（メニューのa属性などで利用）\r\n        return key;\r\n    };\r\n    function v(key, fieldId) { // fieldIdの値を返却値とする(デフォルト： key+\".v\")\r\n        var _keyConf = FileParser.prototype.__keyConfig[key] = {};\r\n        _keyConf.value = key;           // getValueByKeyの返却値（デフォルト：keyと同じ文字列）\r\n        _keyConf.getValue = function () {\r\n                return Util.Config(\"m\").getValueByKey(fieldId || key + \".v\"); // TODO:mの指定\r\n            };\r\n        return key;\r\n    };\r\n\r\n\r\n    // 名称と挙動の定義\r\n    var env = \"File\";\r\n        // this[\"_config_\" + env] = Util.Config(env) // #53\r\n    HJN.Config[env] = Util.Config(env)\r\n        // File Format Config設定画面定義 #51\r\n        .name(\"NEWFILE\").label(null,\"Registered \") // #23\r\n            .radio(\"NEWDATA\", null, \"newly\", true)\r\n            .radio(\"ADDDATA\", null, \"additionally\").n()\r\n        .label(null,\"----- File format definition --------\").n()\r\n        .n(\"<br>\")\r\n        .name(\"LF\").label(null, \"[Line feed code]\").n()\r\n        .radio(v(\"LF_FIX\"), null, \"Fixed Length\")\r\n            .number(\"LF_FIX.v\",  null, \"byte\",\"80\",'style=\"width:60px;\"').n()\r\n        .radio(def(\"LF_WIN\",  13), null, \"Windows:CR(13)+LF(10)\", true).n()\r\n        .radio(def(\"LF_UNIX\", 10), null, \"Unix/Linux:LF(10)\").n()\r\n        .radio(def(\"LF_ZOS\",  15), null, \"zOS:NEL(15)\").n()\r\n        .radio(def(\"LF_MAC\",  13), null, \"Mac:CR(13)\").n()\r\n        .radio(v(\"LF_ELSE\"), null, \"other charcode\")\r\n            .number(\"LF_ELSE.v\", \"(\", \")\", \"10\", 'style=\"width:40px;\"').n()\r\n        .n(\"<br>\")\r\n        .name(\"SEP\").label(null,\"[CSV delimiter]\").n()\r\n        .radio(def(\"SEP_COMMA\", ','), null, \"comma\", true)\r\n        .radio(def(\"SEP_TAB\", '\\t'),   null,\"tab\")\r\n        .radio(v(\"SEP_ELSE\"), null, \"other\")\r\n            .text(\"SEP_ELSE.v\", '\"', '\"', ',', 'size=\"2\" placeholder=\",\"').n()\r\n        .n(\"<br>\")\r\n        .name(\"TIME\").label(null, \"[Timestamp field]\").n()\r\n        .number(\"TIME_COL\", \"\", \"th column of CSV\", \"1\", 'style=\"width:40px;\"').n()\r\n        .name(\"TIME_POS\")\r\n            .number(\"TIME_POS\", \"Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n            .number(\"TIME_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .name(\"TIME_FORM\").label(null,\"Format:\").n()\r\n            .radio(\"TIME_FORM_YMD\", \"text\", null, true)\r\n                .text(\"TIME_YMD\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"').n()\r\n            .radio(\"TIME_FORM_TEXT\", \"(num)\", \"text\")\r\n            .radio(\"TIME_FORM_LONG\", null, \"long\").n()\r\n            .nDown()\r\n            .name(\"TIME_UNIT\").label(null, \"Units of numbers:\")\r\n                .radio(def(\"TIME_UNIT_MS\", 1), null, \"msec\")\r\n                .radio(def(\"TIME_UNIT_SEC\", 1000), null, \"sec\", true)\r\n            .nUp()\r\n        .n(\"<br>\")\r\n        .name(\"TAT\").label(null,\"[Turnaround time(TAT) field]\").n()\r\n        .number(\"TAT_COL\", \"\", \"th column of CSV\", \"2\", 'style=\"width:40px;\"').n()\r\n        .name(\"TAT_POS\")\r\n            .number(\"TAT_POS\", \"Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n            .number(\"TAT_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n        .name(\"TAT_UNIT\").label(null, \"Units of numbers:\")\r\n                .radio(def(\"TAT_UNIT_MS\", 1), null, \"msec\")\r\n                .radio(def(\"TAT_UNIT_SEC\", 1000), null, \"sec\", true).n()\r\n        .name(\"TAT_FORM\").label(null,\"Format: \")\r\n            .radio(\"TAT_FORM_TEXT\", null, \"text\", true)\r\n            .radio(\"TAT_FORM_LONG\", null, \"long\").n()\r\n            .nDown()\r\n            .name(\"ENDIAN\").label(null, \"for long Endian: \")\r\n                .radio(def(\"ENDIAN_LIL\", true), null, \"little\", true)\r\n                .radio(def(\"ENDIAN_BIG\", false), null, \"big\")\r\n            .nUp()\r\n        .n(\"<br>\")\r\n    ;\r\n\r\n    // Filter Config用関数定義(radio用） #51\r\n    var func_F_SYNC_UPPER = function(){ Graph.DrawCallback(HJN.chart.graph); };\r\n    var func_F_SYNC_DETAIL = function(){ Graph.DrawCallback(HJN.chartD.graph); };\r\n    // Filter Config設定画面定義 #51\r\n    env = \"Filter\";\r\n        // this[\"_config_\" + env] = Util.Config(env) // #53\r\n    HJN.Config[env] = Util.Config(env)\r\n        .name(\"F_SYNC\").label(null,\"Sync\") // #50\r\n            .radio(\"F_SYNC_UPPER\", null, \"Upper\", false ,null, func_F_SYNC_UPPER) // #51\r\n            .radio(\"F_SYNC_DETAIL\", null, \"Detail\", false, null, func_F_SYNC_DETAIL)\r\n            .radio(\"F_ASYNC\", null, \"Async\", true).n()\r\n        .label(null,\"----- Data filter condition--------\").n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TIME\").label(null, \"[Date filter]\").n()\r\n            .label(null,\"Include if end time is between\").n()\r\n                .text(\"F_TIME_FROM\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"')\r\n                .label(null,\"and\").n()\r\n                .text(\"F_TIME_TO\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TAT\").label(null,\"[Turnaround time(TAT) filter]\").n()\r\n            .label(null,\"Include if TAT is between\").n()\r\n                .number(\"F_TAT_FROM\", null, null, \"0\", 'style=\"width:80px;\"')\r\n                .number(\"F_TAT_TO\", \"and\", null, null, 'style=\"width:80px;\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"F_TEXT\").label(null,\"[Text filter]\")\r\n                .radio(\"F_TEXT_NON\", null, \"Don't use.\", true).n()\r\n                .radio(\"F_TEXT_INCLUDE\", null, \"Include \")\r\n                .radio(\"F_TEXT_EXCLUDE\", null, \"Exclude \").n()\r\n                .number(\"F_TEXT_LEN\", \"if \", \" bytes\", null, 'style=\"width:40px;\"')\r\n                .number(\"F_TEXT_POS\", \"from the \", \"th byte\", \"1\", 'style=\"width:40px;\"').n()\r\n                .number(\"F_TEXT_COL\", \"from head of the\", \"th column of CSV\", \"3\", 'style=\"width:40px;\"').n()\r\n                .text(\"F_TEXT_REG\", \"match the regular expression\", null, null, 'size=\"7\" placeholder=\".*\"').n()\r\n            .n(\"<br>\")\r\n    ;\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-MenuConfig.js\n// module id = 12\n// module chunks = 0","import css from '../../libs/dygraph.css';\r\nimport css from './tatLogDiver.css';\r\nimport Init from \"./tatLogDiver-Init.js\";\r\nimport {HJN} from \"./tatLogDiver-HJN.js\";\r\nimport Graph from \"./tatLogDiver-Graph.js\";\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\",function(eve){\r\n    Init(\"chart\");      // チャートを作成する\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver.js\n// module id = 13\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!./dygraph.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./dygraph.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./dygraph.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/dygraph.css\n// module id = 14\n// module chunks = 0","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * Default styles for the dygraphs charting library.\\n */\\n\\n.dygraph-legend {\\n  position: absolute;\\n  font-size: 14px;\\n  z-index: 10;\\n  width: 250px;  /* labelsDivWidth */\\n  /*\\n  dygraphs determines these based on the presence of chart labels.\\n  It might make more sense to create a wrapper div around the chart proper.\\n  top: 0px;\\n  right: 2px;\\n  */\\n  background: white;\\n  line-height: normal;\\n  text-align: left;\\n  overflow: hidden;\\n}\\n\\n/* styles for a solid line in the legend */\\n.dygraph-legend-line {\\n  display: inline-block;\\n  position: relative;\\n  bottom: .5ex;\\n  padding-left: 1em;\\n  height: 1px;\\n  border-bottom-width: 2px;\\n  border-bottom-style: solid;\\n  /* border-bottom-color is set based on the series color */\\n}\\n\\n/* styles for a dashed line in the legend, e.g. when strokePattern is set */\\n.dygraph-legend-dash {\\n  display: inline-block;\\n  position: relative;\\n  bottom: .5ex;\\n  height: 1px;\\n  border-bottom-width: 2px;\\n  border-bottom-style: solid;\\n  /* border-bottom-color is set based on the series color */\\n  /* margin-right is set based on the stroke pattern */\\n  /* padding-left is set based on the stroke pattern */\\n}\\n\\n.dygraph-roller {\\n  position: absolute;\\n  z-index: 10;\\n}\\n\\n/* This class is shared by all annotations, including those with icons */\\n.dygraph-annotation {\\n  position: absolute;\\n  z-index: 10;\\n  overflow: hidden;\\n}\\n\\n/* This class only applies to annotations without icons */\\n/* Old class name: .dygraphDefaultAnnotation */\\n.dygraph-default-annotation {\\n  border: 1px solid black;\\n  background-color: white;\\n  text-align: center;\\n}\\n\\n.dygraph-axis-label {\\n  /* position: absolute; */\\n  /* font-size: 14px; */\\n  z-index: 10;\\n  line-height: normal;\\n  overflow: hidden;\\n  color: black;  /* replaces old axisLabelColor option */\\n}\\n\\n.dygraph-axis-label-x {\\n}\\n\\n.dygraph-axis-label-y {\\n}\\n\\n.dygraph-axis-label-y2 {\\n}\\n\\n.dygraph-title {\\n  font-weight: bold;\\n  z-index: 10;\\n  text-align: center;\\n  /* font-size: based on titleHeight option */\\n}\\n\\n.dygraph-xlabel {\\n  text-align: center;\\n  /* font-size: based on xLabelHeight option */\\n}\\n\\n/* For y-axis label */\\n.dygraph-label-rotate-left {\\n  text-align: center;\\n  /* See http://caniuse.com/#feat=transforms2d */\\n  transform: rotate(90deg);\\n  -webkit-transform: rotate(90deg);\\n  -moz-transform: rotate(90deg);\\n  -o-transform: rotate(90deg);\\n  -ms-transform: rotate(90deg);\\n}\\n\\n/* For y2-axis label */\\n.dygraph-label-rotate-right {\\n  text-align: center;\\n  /* See http://caniuse.com/#feat=transforms2d */\\n  transform: rotate(-90deg);\\n  -webkit-transform: rotate(-90deg);\\n  -moz-transform: rotate(-90deg);\\n  -o-transform: rotate(-90deg);\\n  -ms-transform: rotate(-90deg);\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./libs/dygraph.css\n// module id = 15\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 16\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./tatLogDiver.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver.css\n// module id = 17\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@CHARSET \\\"UTF-8\\\";\\r\\n/*   ****1**** ****2**** ****3**** ****4**** ****5**** ****6**** ****7***** */\\r\\n/* リセットCSS */\\r\\nhtml, body, h1, h2, h3, h4, ul, ol, dl, li, dt, dd, p, div, span, img, a, table, tr, th, td, selector{\\r\\nmargin: 0; padding: 0; border: 0; font-weight: normal; font-size: 100%; vertical-align:baseline;\\r\\n-webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }\\r\\narticle, header, footer, aside, figure, figcaption, nav, section { display:block; }\\r\\nbody { line-height: 1; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; }\\r\\nol, ul { list-style: none; list-style-type: none; }\\r\\n*:focus { outline: 0; }\\r\\n\\r\\n/* TAT log diver */\\r\\nbody\\t{ font-size: 12px; margin: 0;\\r\\n\\tfont-family:\\\"\\\\30E1\\\\30A4\\\\30EA\\\\30AA\\\",\\\"Meiriyo\\\",\\\"\\\\30D2\\\\30E9\\\\30AE\\\\30CE\\\\89D2\\\\30B4   ProN W3\\\",\\\"Hiragino Kaku Gothic ProN\\\",\\\"sans-serif\\\"; }\\r\\nnav \\t{ height: 36px }\\r\\ninput\\t{ border-width: 1px; font-size: 12px; }\\r\\nselect  { background: #eee;}\\r\\n#Simulator {overflow: auto; resize: both; position: absolute; z-index: 100;\\r\\n\\t\\t\\ttop: 0px; left: 0px; height: 0; width: 190px; background: rgba(255,255,255,0.5); }\\r\\n.statusbar\\t{ overflow: auto; resize: both; position: absolute; z-index: 99;\\r\\n\\t\\t\\ttop: 0px; left: 200px; height: 20px; width: 200px; background: #fff; }\\r\\n.statusbar > iframe { overflow: hidden; width: 95%; height: 100%; }\\r\\n.lineViewer { width: 100%; height: 42px; margin: 25px 0px; padding: 0px; border: 1px #cccccc dotted; }\\r\\nfooter { position: fixed; bottom: 0%; text-align: right; font-size: smaller; }\\r\\n\\r\\n/* ハンバーガーメニュー */\\r\\n.hjnBurgerTray { position :fixed; display: inline-block; visibility: hidden; z-index: 96;\\r\\n\\ttop :0; right :0; width :305px; height:100%; padding :0; background :#fff; }\\r\\n/* ハンバーガーボタン */\\r\\n.hjnCtrlBox { position: relative; float: right; cursor: pointer; z-index: 98;\\r\\n\\twidth: 40px; height: 40px; background-color: #fff; visibility: visible;\\r\\n\\tborder: 1px solid #ccc; box-shadow:\\t1px 1px 1px #ccc; border-radius: 4px;\\r\\n\\tline-height: 12px; box-sizing: border-box;\\ttransition: all 0.1s; }\\r\\n.hjnCtrlBox:hover { border: #ccc; }\\r\\n.hjnCtrlBox:active { border: 1px solid #999;  }\\r\\n.hjnBurger { display: none; }\\r\\n.hjnBurger + label span { top: 17px; height: 4px; border-radius: 2px;\\r\\n\\tposition: absolute; left: 6px; width: 69%; background-color: #888; }\\r\\n.hjnBurger + label span::before, .hjnBurger + label span::after { border-radius: 2px;\\r\\n\\tposition: absolute; width: 26px; height: 4px; background: #888;\\r\\n\\tdisplay: block; content: ''; transition: transform 0.1s; }\\r\\n.hjnBurger + label span::before { top: -8px; }\\r\\n.hjnBurger + label span::after { top: 8px; }\\r\\n.hjnBurger:checked + label span { background: #fff; }\\r\\n.hjnBurger:checked + label span::before { transform: translateY(8px) rotate(-45deg); }\\r\\n.hjnBurger:checked + label span::after { transform: translateY(-8px) rotate(45deg); }\\r\\n\\r\\n/* メニュー 全体 */\\r\\n.hjnBurgerTitle { /* ハンバーガーメニューオープン時の見出し */\\r\\n\\tposition: absolute;\\tvisibility: visible; color: #999; background:#fff; width: 100%;\\r\\n\\tpadding: 0 40px 0 15px; opacity: 0; z-index: 97;\\r\\n\\ttransform: translate3d(0, -15px, 0); transition: transform 0.1s, opacity 0.5s; }\\r\\n.hjnBurgerTitle p { word-wrap: break-word; line-height: 18px; width: 160px; }\\r\\n.hjnBurger:checked ~ .hjnBurgerTitle { transform: none;  opacity: 1; }\\r\\n.hjnBurgerWrap { position: absolute;  visibility: visible; width :100%; height :100%;\\r\\n\\tbackground: #fff; opacity: 0.9;\\ttop: 0; right: -100%; transition: right 0.1s; \\r\\n\\tpadding: 40px 0 0 0; overflow: scroll;}\\r\\n.hjnBurger:checked ~ .hjnBurgerWrap { right: 0; }\\r\\n/* Copyright表示 */\\r\\n.hjnBurgerTitle a {\\r\\n    color: #4d4e53; text-decoration: none; border-bottom: 1px dotted #afafaf; }\\r\\n/* モードボタン */\\r\\n.hjnBoxSwitch { display: none; }\\r\\n.hjnBoxSwitch + label span::before, .hjnBoxSwitch + label span::after\\r\\n\\t\\t{ display: inline-block; text-align:center; transition: all 0.1s; width: 100%}\\r\\n.hjnBoxSwitch + label span::before, .hjnBoxSwitch:checked + label span::after\\r\\n\\t\\t{ color: #ddd; }\\r\\n.hjnBoxSwitch + label span::after, .hjnBoxSwitch:checked + label span::before \\r\\n\\t\\t{ color: #888; font-weight: bold; }\\r\\n\\r\\n#hjnBoxPlaceOn + label span::before { content: \\\"Place on\\\"; }\\r\\n#hjnBoxPlaceOn + label span::after  { content: \\\"side\\\"; }\\r\\n#chartZoom + label span::before, #chartDZoom + label span::before  { content: \\\"reset zoom\\\"; }\\r\\n/* スイッチラベル */\\r\\n.hjnBoxOn { display: none; }\\r\\n.hjnBoxOn + label { text-align:center; color: #ddd; }\\r\\n.hjnBoxOn:checked + label { color: #888; font-weight: bold;}\\r\\n\\r\\n /* アコーデオンメニュー */\\r\\n.hjnAccordion { list-style-type: none; margin: 0; padding: 0; }\\r\\n.hjnMenuLv1 { position:rerative; margin: 0 10px; }\\r\\n.hjnMenuLv1 > input { display: none;}\\r\\n\\r\\n.hjnMenuLv1 > label::after { position: absolute; content: \\\"\\\"; border-style: solid;\\r\\n\\t\\tborder-color: #888 transparent transparent transparent;\\r\\n\\t\\tborder-width: 8px 4px 0 4px; right: 40px; transition: 0.1s;}\\r\\n.hjnMenuLv1 > input:checked ~ label::after { transform: rotate(90deg); }\\r\\n\\r\\n.hjnMenuLv1 > label, .hjnMenuLv1 > a { display: block; cursor: pointer;\\r\\n\\t\\tpadding: 10px; border-bottom: 1px solid #fff; background: #eee; transition: all 0.1s; }\\r\\n.hjnMenuLv1 > label:hover { background: rgba(0,0,0,0.2); }\\r\\n.hjnMenuLv1 > label:active { background: #999;  }\\r\\n.hjnMenuLv1 > input:checked ~ .hjnMenuLv2 { height: auto; padding: 10px; }\\r\\n\\r\\n/* 詳細メニューリスト   */\\r\\n.hjnMenuLv2 { transition: 0.1s; height: 0; overflow: hidden; padding: 0 10px; background: #ddd; }\\r\\n.hjnMenuLv2 ol { display: block; margin: 2px 0; }\\r\\n.hjnMenuLv2 label { height: 12px; }\\r\\n.hjnLabel4Input:hover,  .hjnButton4Input:hover { background: rgba(0,0,0,0.2); }\\r\\n.hjnLabel4Input:active, .hjnButton4Input:active { background: #999; }\\r\\n/* 詳細メニューリスト  ボタン */\\r\\n.hjnMenuLv2 .hjnButton4Input label, .hjnMenuLv2 label.hjnButton4Input, .hjnPlot \\r\\n\\t\\t{ display: block; padding: 8px 12px 8px 22px;}\\r\\n.hjnButton4Input { position: relative; display: block; overflow: hidden; transition: all 0.1s;  \\r\\n\\t\\ttext-decoration: none; color: #000; border: outset #fff; border-radius: 14px; }\\r\\n.hjnButton4Input:active { border: inset #fff; }\\r\\n.hjnMenuLv2 li .hjnButton4Input { padding: 8px 12px 8px 22px; } /* Download用 */\\r\\n.hjnMenuLv2 .hjnButton4Input input[type=\\\"file\\\"] { display: none; } /* File Open用 */\\r\\n/* 詳細メニューリスト  文字 */\\r\\n.hjnMenuLv2 .hjnLabel4Input { display: inline-block; position: relative;\\r\\n\\t\\t border-radius: 14px; padding-left: 1em; cursor: pointer; transition: all 0.1s; }\\r\\n.hjnMenuLv2 input { height: 12px; text-align: right; border-radius: 5px; }\\r\\n.hjnMenuLv2 .hjnLabel4Input input[type=\\\"radio\\\"] { position: absolute;\\r\\n\\t\\t top: 0; bottom: 0; left: 0; margin: auto;  cursor: pointer; }\\r\\n.hjnMenuLv2 select.hjnLabel4Input  {padding-left: 0; }\\r\\n/* 詳細メニューリスト  Legend */\\r\\n.hjnMenuLv2 .legend {cursor: pointer; width:206px; height: auto;\\r\\n \\t\\tdisplay: inline-block; padding: 8px 12px 8px 22px; border-radius: 14px;}\\r\\n.hjnMenuLv2 .legend > input { display: inline; cursor: pointer; margin: auto -15px; }\\r\\n.hjnMenuLv1 > input:checked ~ .hjnMenuLv2 .legend > input { position: absolute; }\\r\\n.hjnMenuLv2 .legend:hover { font-style: oblique; } \\r\\n\\r\\n/* dygraph用設定 */\\r\\n.item.active{ background: rgba(0,0,0,0.2) !important; border: rgba(0,0,0,0.2) !important; }\\r\\n.column { display: inline-block; }\\r\\n.dygraph-annotation { color: rgba(0,0,0,0.8) !important;\\r\\n\\t\\tbackground-color: rgba(256,256,256,0.2) !important; width: 40px !important; }\\r\\n\\r\\n/* Bottom detail graph用設定 */\\r\\n#detailTimeRange { padding: 8px; }\\r\\n#chartPlots div { float: left; padding: 2px 0;}\\r\\n.hjnPlot { margin: 2px 0; width:250px; }\\r\\n.hjnPlot > label { position:relative; margin: 2px 0px; background-color: #eee;\\r\\n\\t\\tpadding: 0px 5px; cursor: pointer; border-radius: 5px; }\\r\\n.hjnPlot > input[type=checkbox] { /* 削除アイコン */\\r\\n\\t\\tvisibility: hidden; z-index: 98; float: left; margin: -2px 0 0 0; \\r\\n\\t\\tbackground-color: #fff; box-shadow: 1px 1px 1px #ccc; height: 16px; width: 16px; }\\r\\n.hjnPlot > input[type=checkbox] + label{ /* 削除アイコンの横棒*/\\r\\n\\t\\tvisibility: hidden; z-index: 97; float: left; left: -13px; top: 2px;\\r\\n\\t\\tbackground: #aaa; height: 3px; width: 9px; padding: 0; border-radius: 2px;}\\r\\n.hjnPlot:hover > input[type=checkbox], .hjnPlot:hover > input[type=checkbox] + label \\r\\n\\t\\t{ visibility: visible; cursor: pointer; }\\r\\n.hjnPlot > input[type=radio] { display:none; }\\r\\n.hjnPlot > input[type=radio]:checked + label { background-color: #ccc; }\\r\\n.hjnPlot:hover { font-weight: bold; }\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./src/tatLogDiver/tatLogDiver.css\n// module id = 18\n// module chunks = 0","import {Logger} from './util.js';\r\n\r\n/**\r\n * @memberOf Util\r\n * @class TouchPanel\r\n * @classdesc タッチパネル用ツール\r\n *            <p>\r\n *            参考 {@https://code.i-harness.com/ja/q/4f2389}\r\n * \r\n * @param {Number}\r\n *            [average=0.5] 平均値\r\n * @example var r = HJN_util.TouchPanel(10), val = r.exponential();\r\n */\r\nexport default (function() { // #56\r\n    \"use strict\";\r\n    /** @constructor */\r\n    function TouchPanel(average){\r\n        if(!(this instanceof TouchPanel)) return new TouchPanel(average);\r\n        this._average = average || 0.5;\r\n    }\r\n    /** @private */\r\n    \r\n    // public\r\n    /**\r\n     * タッチデバイスか判定する\r\n     * <p>\r\n     * クラスロード後、touchstart と mouosemove の初回のイベントがどちらが先に発生したかにより判定する 参考\r\n     * {@link https://lab.syncer.jp/Web/JavaScript/Snippet/44/}\r\n     * \r\n     * @memberof TouchPanel\r\n     * @return {String} 先に検出したイベントがマウス移動のとき false、以外のときtrue\r\n     * \r\n     */\r\n    TouchPanel.isTouchableDevice = function() {\r\n        Logger.ShowText([TouchPanel._deviceType]);\r\n        return true; // (TouchPanel._deviceType === \"MOUSE\") ? false : true;\r\n    }\r\n    // タッチデバイスか判定する（クラス定数）\r\n    TouchPanel._deviceType = \"SHIMULATED_TOUCH\";\r\n    function detectDeviceType(event) {\r\n        TouchPanel._deviceType = event.changedTouches ? \"TOUCH\" : \"MOUSE\" ;\r\n        document.removeEventListener(\"touchstart\", detectDeviceType) ;\r\n        document.removeEventListener(\"mousemove\", detectDeviceType) ;\r\n    }\r\n    document.addEventListener(\"touchstart\", detectDeviceType) ;\r\n    document.addEventListener(\"mousemove\", detectDeviceType) ;\r\n\r\n    /**\r\n     * タッチパネル操作をマウス操作に転送する\r\n     * <p>\r\n     * 参考 {@link https://code.i-harness.com/ja/q/4f2389}\r\n     * \r\n     * @memberof Util.TouchPanel\r\n     * @param {Object}\r\n     *            element 対象dom要素\r\n     * @param {Boolean}\r\n     *            [isStopTouch=false] 元のタッチのデフォルトイベントを消すか（個別に登録されているリスナーには無関係）\r\n     * \r\n     * @example HJN_util.DispatchEventTouchToMouse();\r\n     */\r\n    TouchPanel.DispatchEventTouchToMouse = function(element, isStopTouch) { // #22\r\n        \"use strict\";\r\n        element.addEventListener(\"touchstart\", touchHandler, true);\r\n        element.addEventListener(\"touchmove\", touchHandler, true);\r\n        element.addEventListener(\"touchend\", touchHandler, true);\r\n        element.addEventListener(\"touchcancel\", touchHandler, true);\r\n        return;\r\n\r\n        function touchHandler(ev) {\r\n            var bIgnoreChilds = false;\r\n            if( !window.__TOUCH_TYPES ) {\r\n                window.__TOUCH_TYPES  = { touchstart:'mousedown', touchmove:'mousemove', touchend:'mouseup' };\r\n                window.__TOUCH_INPUTS = { INPUT: 1, TEXTAREA: 1, SELECT: 1, OPTION: 1,\r\n                                         'input':1,'textarea':1,'select':1,'option':1 };\r\n            }\r\n            var bSame = (ev.target == this);\r\n            if (bIgnoreChilds && !bSame) { return; }\r\n            // Get if object is already tested or input type\r\n            var b = (!bSame && ev.target.__ajqmeclk);\r\n            // allow multi-touch gestures to work\r\n            if (b === true || !ev.touches || ev.touches.length > 1 || !window.__TOUCH_TYPES[ev.type]) { return; }\r\n\r\n            var oEv = (!bSame && typeof b != 'boolean') ? ev.target.getAttribute('events') : false;\r\n            var b = (!bSame)\r\n                  ? (ev.target.__ajqmeclk = oEv\r\n                      ? (oEv['click'] || oEv['mousedown'] || oEv['mouseup'] || oEv['mousemove']) \r\n                      : false )\r\n                  :false;\r\n            // allow default clicks to work (and on inputs)\r\n            if (b || window.__TOUCH_INPUTS[ev.target.tagName]) { return; } \r\n\r\n            var touch = ev.changedTouches[0];\r\n            var tmpClientX = touch.clientX;\r\n            var tmpClientY = touch.clientY;\r\n            // クリックに変換するタップ誤差範囲\r\n            var CLICK_MARGIN = 20; // px\r\n            var CLICK_DELAY = 1000; // ms\r\n\r\n            // 前回touchstart時の座標と時刻が一定範囲内の時、dygraphがクリックと判定するよう補正する\r\n            if ((ev.type === \"touchstart\" || ev.type === \"touchend\") &&\r\n                    this.startTouch &&\r\n                    Math.abs(this.startTouch.x - touch.clientX) < CLICK_MARGIN && // タッチ補正幅(px)\r\n                    Math.abs(this.startTouch.y - touch.clientY) < CLICK_MARGIN &&\r\n                    +new Date() - this.startTouch.t < CLICK_DELAY) { // タッチ時間(ms)\r\n                // 位置補正\r\n                tmpClientX = this.startTouch.x;\r\n                tmpClientY = this.startTouch.y;\r\n            } else if (ev.type === \"touchstart\"){\r\n                // touchstart時の座標と時刻を退避する\r\n                this.startTouch = {x: touch.clientX, y: touch.clientY, t: +new Date()};\r\n            } else if (ev.type === \"touchend\") {  \r\n                // touchstart時の座標と時刻を初期化する\r\n                this.startTouch = {};\r\n            }\r\n            // マウスイベントを発生させる\r\n            var newEvent = document.createEvent(\"MouseEvent\");\r\n            newEvent.initMouseEvent(\r\n                window.__TOUCH_TYPES[ev.type],    // type\r\n                true,             // bubbles\r\n                true,             // cancelable\r\n                window,           // view\r\n                1,                // detail\r\n                touch.screenX,    // screenX スクリーンサイズ\r\n                touch.screenY,    // screenY\r\n                tmpClientX,       // clientX タッチ座標\r\n                tmpClientY,       // clientY\r\n                false,            // ctrlKey\r\n                false,            // altKey\r\n                false,            // shiftKey\r\n                false,            // metaKey\r\n                0,                // button\r\n                null              // relatedTarget\r\n              );\r\n            touch.target.dispatchEvent(newEvent);\r\n            \r\n            // タッチイベントを止める #22\r\n            if(isStopTouch) {\r\n                ev.stopImmediatePropagation();\r\n                ev.stopPropagation();\r\n                ev.preventDefault();\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n\r\n    /* new */\r\n    return TouchPanel;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-TouchPanel.js\n// module id = 19\n// module chunks = 0","/**\r\n * 日時(Date)から、ローカル時刻に基づく、指定フォーマットの文字列を取得する\r\n * \r\n * @memberOf Util\r\n * @param {Date}\r\n *            dt Date型（内部実装はミリ秒単位）\r\n * @param {String}\r\n *            str フォーマット yyyy-MM-dd hh:mm:ss.ppp （戻り値で上書きされる）\r\n * @return {String} str 編集後文字列\r\n */\r\nexport var DateToString = function() {\r\n    \"use strict\";\r\n    var dt = arguments[0],  // arg0\r\n        str = arguments[1]; // arg1\r\n    // if (typeof(dt) === \"number\") dt = new Date(dt);\r\n    str = str.replace(/yyyy/, dt.getFullYear() );\r\n    str = str.replace(/MM/, ('0' + (dt.getMonth() + 1) ).slice(-2) );\r\n    str = str.replace(/dd/, ('0' + dt.getDate()).slice(-2) );\r\n    str = str.replace(/hh/, ('0' + dt.getHours()).slice(-2) );\r\n    str = str.replace(/mm/, ('0' + dt.getMinutes()).slice(-2) );\r\n    str = str.replace(/ss/, ('0' + dt.getSeconds()).slice(-2) );\r\n    str = str.replace(/ppp/,('00' + dt.getMilliseconds()).slice(-3) ); // #60\r\n    // str = str.replace(/ppp/,('00' + Math.floor(dt % 1000)).slice(-3) );\r\n\r\n    return str;\r\n};\r\n\r\n/**\r\n * 日時文字列を指定フォーマットでパースして数値(ミリ秒単位）を取得する\r\n * @memberOf Util\r\n * @param {String}\r\n *            str\r\n * @param {Object|String}\r\n *            [conf={YYYY: 0, MM: 5, DD: 8, hh: 11, mm: 14, ss: 17, ppp: 20}]\r\n *            Object指定のとき：年月日時分秒ミリ秒の先頭位置を示す構造体オブジェクト<br>\r\n *            String指定とき：フォーマットを示す文字列<br>\r\n *            デフォルト値は、\"YYYY/MM/DD hh:mm:ss.ppp\"相当\r\n * @return {Number} timeNum 日時（１ミリ秒を１とする数値、エラーのときNumber.NaN）\r\n */\r\nexport var S2D = function(str, conf){ // #34\r\n    \"use strict\";\r\n    if(!str) return Number.NaN;\r\n    \r\n    if(typeof(conf) === \"Object\"){\r\n        // confが\"Object\"のとき、指定された構造体オブジェクトの条件でパースする（最も高速な処理）\r\n        return parse(str, conf);\r\n    } else if (typeof(conf) === \"string\") {\r\n        // confが\"String\"のとき、指定された文字列フォーマットから構造体オブジェクトを作成し、パースする（準高速処理）\r\n        var config = {  // YYYY/MM/DD hh:mm:dd.ss.ppp #41\r\n                YYYY: conf.indexOf(\"YYYY\"),\r\n                MM: conf.indexOf(\"MM\"),\r\n                DD: conf.indexOf(\"DD\"),\r\n                hh: conf.indexOf(\"hh\"),\r\n                mm: conf.indexOf(\"mm\"),\r\n                ss: conf.indexOf(\"ss\"),\r\n                ppp: conf.indexOf(\"p\")};\r\n        return parse(str, config);\r\n    } else {\r\n        // confが指定されていないとき、デフォルト条件でパースする（汎用処理）\r\n        // デフォルトフォーマット：\"YYYY/MM/DD hh:mm:dd.ss.ppp\" #42\r\n        var config = {YYYY: 0, MM: 5, DD: 8, hh: 11, mm: 14, ss: 17, ppp: 20};\r\n        return parse(str, config);\r\n    }\r\n\r\n    // 内部関数：構造体オブジェクトで指定された条件でパースする\r\n    function parse(str, conf){\r\n        var y   = (0 <= conf.YYYY) ? parseInt( str.substr( conf.YYYY, 4), 10) : 1970,\r\n                m   = (0 <= conf.MM)   ? parseInt( str.substr( conf.MM, 2), 10) - 1 : 0, // デフォルト1月\r\n                // 1970/1/1だと時差でマイナスになることがあるので日付のデフォルトは2日\r\n                d   = (0 <= conf.DD)   ? parseInt( str.substr( conf.DD, 2), 10) : 2,\r\n                h   = (0 <= conf.hh)   ? parseInt( str.substr( conf.hh, 2), 10) : 0,\r\n                min = (0 <= conf.mm)   ? parseInt( str.substr( conf.mm, 2), 10) : 0,\r\n                sec = (0 <= conf.ss)   ? parseInt( str.substr( conf.ss, 2), 10) : 0,\r\n                // ミリ秒以下を指定すると丸め誤差が生じるため、秒以下のミリ秒は個別に加算\r\n                p   = (0 <= conf.ppp)  \r\n                    ? (\"0.\" + str.substr( conf.ppp).match(/[0-9]*/)[0]) * 1000.0 \r\n                    : 0;\r\n        return +(new Date( y, m, d, h, min, sec )) + p;  // #14\r\n    }\r\n};\r\n\r\n/**\r\n * 日時(ミリ秒：Ｘ軸用）から、時差補正のない、指定フォーマットの文字列を取得する\r\n * \r\n * @memberOf Util\r\n * @param {Number|Date}\r\n *            ds 時刻をUNIX経過時間（ミリ秒）で表した数値、もしくはDate(日付）\r\n * @param {String}\r\n *            [str=自動] フォーマット yyyy-MM-dd hh:mm:ss.ppp （戻り値で上書きされる）<br>\r\n *            自動のとき 日数+ hh:mm:ss.ppp 表示単位に至らない単位は表示しない、ミリ秒は分単位以下の時表示<br>\r\n *            例： 日数表示：\"1 02:03:04\",時表示\"02:03:04\" 分表示\"0:03:04.567\" 秒表示\"04.567\"\r\n * @param {Boolean}\r\n *            [isLocal=false] trueのとき時差補正をしない\r\n * @return {String} str 編集後文字列\r\n */\r\nexport var D2S = function(ds, str, isLocal){ // #60\r\n    \"use strict\";\r\n    var minus = \"\";\r\n    var ret = \"\";\r\n    if (ds < 0) {\r\n        minus = \"-\";\r\n        ds = -1 * ds;\r\n    }\r\n    var datetime = new Date(ds);\r\n    if (!isLocal) { // #60\r\n        datetime = new Date(+datetime + 60000 * datetime.getTimezoneOffset()); // 環境タイムゾーンの補正\r\n    }\r\n    if(str){ // フォーマット指定があるとき\r\n        ret = DateToString(datetime, str);\r\n    } else if (ds < 1000) { // 自動で1秒(1000)未満のとき\r\n        ret = \"0.\" + Math.round(ds);\r\n    } else if (ds < 60000) { // 自動で1分(1*60*1000)未満のとき\r\n        ret = DateToString(datetime, \"ss.ppp\");\r\n    } else if (ds < 3600000) { // 自動で1分以上、1時間(1*60*60*1000)未満のとき\r\n        ret = \"0:\" + DateToString(datetime, \"mm:ss.ppp\");\r\n    } else if (ds < 86400000) { // 自動で1時間以上、1日(1*24*60*60*1000)未満のとき\r\n        ret = DateToString(datetime, \"hh:mm:ss\");\r\n    } else { // 自動で1日以上のとき\r\n        ret = Math.floor(ds / 86400000) + \" \";\r\n        ret += DateToString(datetime, \"hh:mm:ss\");\r\n    }\r\n    return minus + ret;\r\n};\r\n\r\n/**\r\n * 数値(Ｙ軸用）から、誤差のない表示用文字列を取得する<br>\r\n * （hover、legendなどでY軸の値を使うときに使用する）\r\n * \r\n * @memberOf Util\r\n * @param {Number|Date}\r\n *            y 時刻をUNIX経過時間（ミリ秒）で表した数値、もしくはDate(日付）\r\n * @return {String} str 編集後文字列\r\n *         {@linkhttps://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat}\r\n */\r\nexport var N2S = function(y){\r\n    \"use strict\";\r\n    return Intl.NumberFormat('en-IN').format(y);\r\n};\r\n\r\n/**\r\n * 文字列を数値に変換する\r\n * \r\n * @memberOf Util\r\n * @param {String|Number}\r\n *            [str = sub] 計算式（日時分秒ミリ秒(d,h,mim,sec,ms)の文字は、ミリ秒に変換する）\r\n * @param {String|Number}\r\n *            [sub] 第一引数が指定されていない(undefined)ときの代用\r\n * @return {Number} n eval(str||sub)で取得した数値\r\n * \r\n */\r\nexport var S2N = function(str, sub){ // #53\r\n    \"use strict\";\r\n    var s = (typeof(str) !== \"undefined\") ? str : sub;\r\n    var h = 3600000; // 1時間（ミリ秒）\r\n    var min = 60000; // 1分（ミリ秒）\r\n    var sec =  1000; // 1秒（ミリ秒）\r\n    var ms =      1; // 1ミリ秒\r\n\r\n    return eval(s);\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-string.js\n// module id = 20\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class Random\r\n * @classdesc Random 乱数取得\r\n *            <p>\r\n *            ある事象の単位時間あたりの発生回数がポアソン分布, その発生間隔が指数分布に従う<br>\r\n *            M/M/1モデルは、到着がポアソン過程となり、(したがって到着間隔は指数分布に従う)、サービス時間が指数分布に従う\r\n *            <p>\r\n *            参考 {@link http://www.ishikawa-lab.com/montecarlo/4shou.html}\r\n * \r\n * @param {Number}\r\n *            [average=0.5] 平均値\r\n * @example var r = HJN_util.Random(10), val = r.exponential();\r\n */\r\nexport default (function() { // #56\r\n    \"use strict\";\r\n    /** @constructor */\r\n    function Random(average){\r\n        if(!(this instanceof Random)) return new Random(average);\r\n        this._average = average || 0.5;\r\n    }\r\n\r\n    /** @private */\r\n    \r\n    // public\r\n    /**\r\n     * 一様分布となる乱数を返却する\r\n     * \r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.uniform = function(average) {\r\n        average = average || this._average;\r\n        return  2.0 * average * Math.random();\r\n    };\r\n\r\n    /**\r\n     * 指数分布となる乱数を返却する(lambda = 1/average)\r\n     * \r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値=1/λ、分散=1/(λ^2)<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.exponential = function(average) {\r\n        average = average || this._average;\r\n        return (-1.0 * average) * Math.log(1.0 - Math.random());\r\n    };\r\n    \r\n    /**\r\n     * ポアソン分布となる乱数を返却する(lambda = average)\r\n     * \r\n     * @memberof Util.Random\r\n     * @param {Number}\r\n     *            [average=this._average] 平均値=分散=λ<br>\r\n     * @return {Number} 乱数\r\n     */\r\n    Random.prototype.poisson = function(average) {\r\n        var lambda = average || this._average;\r\n        var xp = Math.random();\r\n        var k = 0;\r\n        while (xp >= Math.exp(-lambda)) {\r\n            xp = xp * Math.random();\r\n            k = k + 1;\r\n        }\r\n        return (k);\r\n    };\r\n    \r\n    /* new */\r\n    return Random;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-Random.js\n// module id = 21\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class setZeroTimeout\r\n * 非同期化\r\n * \r\n * @param {function}\r\n *            global 非同期化して実行する関数\r\n *            <p>\r\n *            参考 {@link https://jsfiddle.net/kou/j73tLum4/8/}\r\n *            {@link https://gist.github.com/mathiasbynens/579895}\r\n *            {@link http://dbaron.org/log/20100309-faster-timeouts}\r\n */\r\nexport default (function(global) {\r\n    \"use strict\";\r\n    var timeouts = [], \r\n        messageName = \"zero-timeout-message\";\r\n    function handleMessage(event) {\r\n        if (event.source === global && event.data === messageName) {\r\n            if (event.stopPropagation)  event.stopPropagation();\r\n            if (timeouts.length) timeouts.shift()();\r\n        }\r\n    }\r\n    if (global.postMessage) {\r\n        if (global.addEventListener) {\r\n            global.addEventListener(\"message\", handleMessage, true); \r\n        }else if (global.attachEvent) {\r\n            global.attachEvent(\"onmessage\", handleMessage); \r\n        }\r\n        return function (fn) { timeouts.push(fn); global.postMessage(messageName, \"*\"); };\r\n    } \r\n    else {\r\n        return function (fn) { setTimeout(fn, 0); }; \r\n    }\r\n}(window));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-setZeroTimeout.js\n// module id = 23\n// module chunks = 0","import {D2S} from './util.js';\r\n\r\n/**\r\n * @memberOf Util\r\n * @class Logger\r\n * @classdesc ロガー\r\n *            <p>\r\n *            モードに応じたログを出力する。画面ログ表示領域、コンソールログへの出力に対応\r\n * \r\n * @param {String}\r\n *            [mode=0] ログ出力モード\r\n */\r\nexport default (function() { // #27\r\n    \"use strict\";\r\n    /** @static */\r\n    Logger.prototype = {\r\n            _logText: [],\r\n            _timestamp : new Date(),\r\n            _logtime : new Date()\r\n        };\r\n    /** @constructor */\r\n    function Logger(mode){\r\n        if(!(this instanceof Logger)) return new Logger(mode);\r\n        this._mode = mode || 0;\r\n        // getKeyによりIndex作成関数を設定する\r\n    }\r\n    /**\r\n     * 一定時間（１分）経過後、最初に本メソッドが呼ばれたときのみログ出力する（ループ用）\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {Number}\r\n     *            i 参考番号<br>\r\n     *            経過時間内のループ回数などの表示に使用することを想定\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     */\r\n    Logger.ByInterval = function(i, text) {\r\n        var ts = new Date(),\r\n            freq = 60000;   // 1分毎\r\n        if (freq < ts - Logger._logtime){\r\n            var t = D2S(ts, \"hh:mm:ss.ppp\"); // #60\r\n            console.log(t + \"[\" + i + \"]~~~~\" + text);\r\n            Logger._logtime = ts;\r\n        }\r\n    };\r\n    /**\r\n     * ログ出力： ログテキストを初期化する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     * @param {String}\r\n     *            [type] ログ区分（\"calc\"：計算用ログ、\"msg\"：メッセージのみ（タイムスタンプなし））\r\n     */\r\n    Logger.ShowLogTextInit=function(text, type) {\r\n        Logger._timestamp = new Date();\r\n        Logger._logText = [];\r\n        if(text) Logger.ShowLogText(text, type);\r\n    };\r\n    /**\r\n     * ログ出力： ログテキストをテキストアレイに追記し、表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            text ログ出力文字列\r\n     * @param {String}\r\n     *            [type] ログ区分（\"calc\"：計算用ログ、\"msg\"：メッセージのみ（タイムスタンプなし））\r\n     */\r\n    Logger.ShowLogText=function(text, type) {\r\n        if (type === \"calc\") return; // 集計時評価用ログ出力抑止\r\n        // \"msg\"指定のときは経過時間を取らずに、ログのみ出力する\r\n        if (type !== \"msg\"){\r\n            // 処理時間情報を追加する\r\n            var lastTimestamp = Logger._timestamp;\r\n            Logger._timestamp = new Date();\r\n            text = (Math.round( Logger._timestamp - lastTimestamp ) / 1000.0)\r\n                    + \"s \" + text;\r\n            // 数値のカンマ編集（小数部もカンマが入る）\r\n            text = text.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n            text = D2S(Logger._timestamp, \"hh:mm:ss.ppp     \")\r\n                    + text; // #60\r\n        }\r\n        Logger._logText.push(text);\r\n        Logger.ShowText(Logger._logText);\r\n        if(true) console.log(text);\r\n    };\r\n    /**\r\n     * 第一引数のテキストアレイの内容を#fileInfoのiframeに表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            textArray 出力するログ（配列１行がログ１件）\r\n     */\r\n    Logger.ShowText=function(textArray) {\r\n        var iHtmlBody = \"\";\r\n        for (var i = textArray.length - 1; 0 <= i; i--){\r\n            iHtmlBody += textArray[i] + \"<BR>\"; \r\n        }\r\n        Logger.ShowIHtmlBody('fileInfo',iHtmlBody);\r\n    };\r\n    /**\r\n     * 第一引数のID名のiframeに、第二引数のログ（HTML化）を表示する\r\n     * \r\n     * @memberof Util.Logger\r\n     * @param {String}\r\n     *            elementId iframeのID名\r\n     * @param {String}\r\n     *            iHtmlBody ログ（HTML化）\r\n     */\r\n    Logger.ShowIHtmlBody=function(elementId, iHtmlBody){\r\n        var body = document.createElement('body');\r\n        body.innerHTML = \"\"\r\n            + \"<style>body{font-size: 10px; margin: 1px; }</style>\"\r\n            + \"<body id='iHtmlBody'>\" + iHtmlBody + \"</body>\";\r\n        var iframe = document.getElementById(elementId);\r\n        iframe.contentDocument.body = body;\r\n    };\r\n    \r\n    // newの戻り値\r\n    return Logger;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-Logger.js\n// module id = 24\n// module chunks = 0","/**\r\n * 指定されたtextareaを使って、クリップボードにコピーする\r\n * \r\n * @memberof Util\r\n * @param {Object}\r\n *            elementID textareaのID名\r\n */\r\nexport default function(elementId) { // #61\r\n    \"usestrict\";\r\n    // textareaをクリップボードにコピーする\r\n    var area = document.getElementById(elementId);\r\n    area.select();\r\n    document.execCommand(\"copy\");\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-copyToClipboard.js\n// module id = 25\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class binarySearch\r\n * @classdesc 配列二分木検索\r\n * \r\n * @param {Number}\r\n *            val 検索する値\r\n * @param {Array}\r\n *            arr 検索対象の配列\r\n * @param {Function}\r\n *            [func=function(val){return val.valueOf();}] 配列要素に対して、値を取得する関数\r\n * @param {Index}\r\n *            [low=0] 配列の検査範囲の下限\r\n * @param {Index}\r\n *            [high=arr.length-1] 配列の下限検査範囲の上限\r\n * @param {Boolean}\r\n *            [isEqual=false] 完全一致しないときのリターン値：trueのとき-1、falseのとき値との差が最も少ない位置\r\n * @example i=Util.binarySearch(x,arrXY,function(e){return e.x;});\r\n */\r\nexport default function (val, arr, func, low, high, isEqual) {\r\n    \"use strict\";\r\n    func = func || function(val){ return val.valueOf(); };\r\n    low = low || 0;\r\n    if (!arr) return -1;\r\n    high = high || arr.length - 1;\r\n    isEqual = isEqual || false;\r\n    var middle,\r\n        valMiddle;\r\n    while( low <= high ){\r\n        middle = Math.floor(low + high) / 2 | 0;\r\n        valMiddle = func(arr[middle]);\r\n        if(valMiddle === val) return middle;\r\n        else if(val < valMiddle) high = middle - 1;\r\n        else low = middle + 1;\r\n    }\r\n    // 値が完全一致する要素がなかった場合の戻り値を編集する\r\n    if (isEqual){\r\n        return -1;  // 完全一致指定のとき(-1)をリターンする\r\n    } else {        // 完全一致指定でないとき、値との差が最も少ない位置をリターンする #46\r\n        // low,middle,high を補正する\r\n        low = Math.min(Math.max(0, low), arr.length - 1);\r\n        high = Math.max(0, Math.min(high, arr.length - 1));\r\n        middle = Math.max(low, Math.min(middle, high));\r\n        if(high < low){\r\n            var tmp = high;\r\n            high= low;\r\n            low = tmp;\r\n        }\r\n        // low,middle,high のうち、値との差が最も少ない位置をリターンする\r\n        if(func(arr[middle]) < val){\r\n            if (val - func(arr[middle]) < func(arr[high]) - val) {\r\n                return middle;\r\n            } else {\r\n                return high;\r\n            }\r\n        }else{\r\n            if (func(arr[high]) <= val && val < func(arr[middle])){\r\n                return high;\r\n            } else if (val - func(arr[low]) < func(arr[middle]) - val){\r\n                return low;\r\n            } else {\r\n                return middle;\r\n            }\r\n        }\r\n        return -1;  // 指定範囲外\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-binarySearch.js\n// module id = 26\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class Heap\r\n * @classdesc Heap ヒープ(二分ヒープ)\r\n *            <p>\r\n *            最小値(最大値)を効率よく取り出すことができるデータ構造\r\n *            <p>\r\n *            参考 {@link http://d.hatena.ne.jp/otaks/20121220/1355993039}\r\n * \r\n * @param {Function}\r\n *            [func=function(obj){ return +obj; }]\r\n *            pushで登録するオブジェクトからヒープの大小比較判定値を取り出す関数\r\n * @param {Function}\r\n *            [delFunc=function(obj){ return obj; }] 削除対象ノードを特定する関数<br>\r\n *            「delの引数オブジェクト === delFunc(heapのノードのオブジェクト)」 で判定する\r\n * \r\n * @example h = HJN_util.Heap( function(obj){ return +obj; } );<br>\r\n *          h.push(\"12.34\") // データを登録する ;<br>\r\n *          h.push(0.12) // ;<br>\r\n *          h.pop() // => 0.12 最小値のオブジェクトを取り出す ;<br>\r\n *          h.pop() // => \"12.34\" ;<br>\r\n *          h.top() // =>undefined 最小値のオブジェクト ;<br>\r\n *          h.size() // =>0 登録オブジェクト数\r\n */\r\nexport default (function() { // #55\r\n    \"use strict\";\r\n    /** @constructor */\r\n    function Heap(func, delFunc){ \r\n        if(!(this instanceof Heap)) return new Heap(func, delFunc);\r\n        \r\n        this._func = (typeof(func) === \"function\")\r\n                ? func\r\n                : function(node){\r\n                    if (typeof(node.val) === \"undefined\") { return node }\r\n                    else { return node.val}; \r\n                  };\r\n        this._delFunc = (typeof(delFunc) === \"function\")\r\n                ? delFunc\r\n                : function(node){\r\n                    if(typeof(node.obj) === \"undefined\"){ return node }\r\n                    else { return node.obj};\r\n                  };\r\n        this._heap = []; // Heap構造体（大小比較数値用）\r\n    }\r\n\r\n    //\r\n    /**\r\n     * upheap：root方向へheapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     */\r\n    Heap.prototype._upHeap = function(k) {\r\n        // 指定位置のオブジェクトとその値の控えを取る\r\n        var obj = this._heap[k];\r\n        var val = this._func(obj);\r\n        while( 0 < k ) {\r\n            // 親ノードの配列位置を求める\r\n            var p = Math.floor( (k - 1) / 2 );\r\n            // 逆転していなければ処理終了\r\n            if( this._func(this._heap[p]) <= val ) break;\r\n            // 親ノードと処理対象を入れ替える\r\n            this._heap[k] = this._heap[p];\r\n            this._heap[p] = obj;\r\n            k = p;\r\n        }\r\n    };\r\n    /**\r\n     * downheap：reaf方向へheapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     */\r\n    Heap.prototype._downHeap = function(k) {\r\n        // 指定位置のオブジェクトとその値を控えを取る\r\n        var obj = this._heap[k];\r\n        var val = this._func(obj);\r\n        var size = this._heap.length;\r\n        // 子ノードが無くなるまで繰り返す\r\n        while( k * 2 + 1 < size) {\r\n            var a = k * 2 + 1;  // 子ノード（左）\r\n            var b = a + 1;      // 子ノード（右）\r\n            // aが大小比較対象先となる小さい子ノードを指すようにする\r\n            if( b < size && this._func(this._heap[a]) > this._func(this._heap[b]) ) a = b;\r\n            // 逆転していなければ処理終了\r\n            if( val < this._func(this._heap[a]) ) break;\r\n            // 子ノード（比較対象）と処理対象を入れ替える\r\n            this._heap[k] = this._heap[a];\r\n            this._heap[a] = obj;\r\n            k = a;\r\n        }\r\n    };\r\n    /**\r\n     * _heapのk番目を削除し、_heapを再構築する\r\n     * \r\n     * @private\r\n     * @param {Number}\r\n     *            k 起点の_heap配列位置\r\n     * @return {object|undefined} 削除したオブジェクト（削除対象が無いとき undefined）\r\n     */\r\n    Heap.prototype._del = function(k) {\r\n        if (this._heap.length <= k) return undefined; // ヒープ外を指定したとき\r\n\r\n        var ret = this._heap[k]; // 削除したオブジェクト\r\n        var obj = this._heap.pop(); // 末尾ノードを取り出す\r\n        var size = this._heap.length;\r\n        if (k === size) return ret; // 末尾ノードを削除したとき再構築不要\r\n\r\n        this._heap[k] = obj; // 末尾ノードを指定位置に移動する\r\n        if (size === 1) return ret; // ヒープが１個のとき、再構築不要\r\n\r\n        // upHeapの判定\r\n        var val = this._func(obj); // 末尾ノードにあったオブジェクトの値\r\n        var p = Math.floor( (k - 1) / 2 );\r\n        if (0 < k && val < this._func(this._heap[p])) {\r\n            // 親ノードより小さいときupheapする\r\n            this._upHeap(k);\r\n        } else {\r\n            var a = k * 2 + 1;  // 子ノード（左）\r\n            var b = a + 1;      // 子ノード（右）\r\n            if (a < size) { // 子ノードがあるとき（末端の枝葉でないとき）のみdownHeapする\r\n                // aに、子ノードの小さい方のノードを設定する\r\n                if( b < size && (this._func(this._heap[a]) > this._func(this._heap[b])) ) a = b;\r\n                // 自分より小さい子ノードがあるとき、downheapする\r\n                if( this._func(this._heap[a]) < val ) this._downHeap(k);\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    // public\r\n    /**\r\n     * データを追加する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @param {Object}\r\n     *            obj 登録オブジェクト\r\n     */\r\n    Heap.prototype.push = function(obj) {\r\n        // 末尾に追加し、upHeapする\r\n        this._heap.push(obj);\r\n        this._upHeap(this._heap.length - 1);\r\n        if (this._deletable) {\r\n            this._deleteMap = {};\r\n        }\r\n    };\r\n    /**\r\n     * 最小値のデータを取り出す\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Object|undefined} 最小値\r\n     */\r\n    Heap.prototype.pop = function() {\r\n        // 先頭ノードを戻り値用に退避する\r\n        var ret = this._heap[0];\r\n        // 末尾ノードを退避し削除する\r\n        var obj = this._heap.pop();\r\n        if(0 < this._heap.length){\r\n            // ヒープが空でないとき、末尾ノードを先頭に移動し、downHeapする\r\n            this._heap[0] = obj;\r\n            this._downHeap(0);\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * 指定データを削除する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @param {Object}\r\n     *            obj 削除対象と同一オブジェクト(=== で判定)\r\n     * @return {Object|undefined} 削除したオブジェクト（undefined：合致するオブジェクトが無いとき）\r\n     */\r\n    Heap.prototype.del = function(obj) { // #59\r\n        // 削除対象オブジェクトのHeap配列位置を取得する\r\n        var k = -1;\r\n        if (this._heap.some(find, this)){\r\n            // 合致するオブジェクトのノードを削除し、合致ノードをリターンする\r\n            return this._del(k);\r\n        }\r\n        // 合致するオブジェクトが無いとき\r\n        return undefined;\r\n        \r\n        function find(e, i) {\r\n            if(this._delFunc(e) === obj){\r\n                k = i;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * 最小値を返却する（登録データは変更しない）\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Object|undefined} 最小値\r\n     */\r\n    Heap.prototype.top = function() {\r\n        return this._heap[0];\r\n    };\r\n    /**\r\n     * ヒープのサイズを返却する\r\n     * \r\n     * @memberOf Util.Heap\r\n     * @return {Number} ヒープサイズ（0以上）\r\n     */\r\n    Heap.prototype.size = function() {\r\n        return this._heap.length;\r\n    };\r\n    \r\n    /* new */\r\n    return Heap;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/util-Heap.js\n// module id = 27\n// module chunks = 0","/**\r\n * @memberOf Util\r\n * @class Config\r\n * @classdesc 定数設定機能（設定HTML作成機能付き）\r\n *            <p>\r\n *            日時、TATフォーマット指定機能追加用に作成\r\n * \r\n * @param {String}\r\n *            [prefix=''] 定数の名前空間を一位に指定する文字列、指定しない場合グローバル\r\n * @param {String}\r\n *            [ol='ol'] インデント(.nDown() .nUp())に使うHTMLタグ\r\n * @param {String}\r\n *            [globalName='HJN'] Configを登録するグローバル変数(window)の変数名\r\n * @example this._config = HjnConfig(\"m\") // config設定画面定義\r\n *          .label(null,\"------\").n() // ラベルを表示し、改行\r\n *          .name(\"ENDIAN\").label(null,\"[endian(long field)]\") //key:ENDIAN\r\n *          .radio(def(\"ENDIAN_LIL\", true), null, \"little\", true) //表示ラベルと選択時設定値\r\n *          .radio(def(\"ENDIAN_BIG\", false), null, \"big\");\r\n */\r\nexport default (function() { // #24\r\n    \"use strict\";\r\n    /** @static */\r\n    Config.prototype.__config = {};   // config設定コンテナ\r\n    Config.prototype.__config._onFunctions = {}; // 関数登録用\r\n\r\n    /** @constructor */\r\n    function Config(prefix, ol, globalName){ \r\n        if(!(this instanceof Config)) return new Config(prefix, ol, globalName);\r\n        \r\n        this._pre = (prefix || '') + \".\"; // 各フィールド、要素の名称のプレフィックス(区切り文字\".\")\r\n        this._ols = ol ? '<' + ol + '>' : '<ol>';   // リストに使用する要素（初期値 ol )\r\n        this._ole = ol ? '</' + ol + '>' : '</ol>';\r\n        this._html = this._ols; // config設定画面のHtml\r\n        this._nameHtml = '';    // HTMLタグの name属性指定\r\n        this._name = '';        // radioのConfig.get用\r\n        this._addEventList = []; // HTMLに設定するイベント一覧{id,func,type} #74\r\n\r\n        // グローバル変数(window)にConfigを登録する #74\r\n        this._globalName = globalName || \"HJN\";\r\n        if (window[this._globalName].Config === undefined){\r\n            window[this._globalName].Config = Config;\r\n        }\r\n        window[this._globalName].Config[prefix] = this;\r\n    }\r\n\r\n    /**\r\n     * HTML要素の値が変更した時に、configに当該要素を登録する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.on = function(t) {\r\n        if (t.type === \"radio\") { // radioのとき、nameに対して、選択されたキー値（idからprefixを削除した値）を登録\r\n            this.prototype.__config[t.name] = t.id.substr(t.id.indexOf(\".\") + 1);\r\n            // on呼出し関数が登録されているとき、登録関数を呼び出す #51\r\n            var func = Config.GetConfig().getFunctionById(t.id); // #59\r\n            if(typeof(func) === \"function\") func();\r\n        }else if (t.type === \"number\") {    // numberのとき、idに対する、value(入力値)を数値として登録\r\n            this.prototype.__config[t.id] = +t.value;\r\n        } else {                            // textのとき、idに対する、value(入力値)を登録\r\n            this.prototype.__config[t.id] = t.value;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Configリポジトリ管理インスタンスを取得する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.GetConfig = function(prefix) { // #59\r\n        return new Config(prefix);\r\n    }\r\n    \r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * configに登録されているid(=prefix+key)の設定値を取得する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.getObjctById = function(id) {\r\n        // return this.__config[id];\r\n        return Config.prototype.__config[id];\r\n    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の関数を取得する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.getFunctionByKey = function(key) { // #59\r\n        return Config.prototype.__config\r\n                ._onFunctions[this._pre + this.getValueByKey(key)];\r\n    };\r\n    /**\r\n     * configの指定Idに登録されている関数を取得する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.getFunctionById = function(id) { // #53\r\n        return Config.prototype.__config._onFunctions[id];\r\n    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の設定値を取得する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.getValueByKey = function(key) { \r\n        return this.getObjctById(this._pre + key);\r\n    };\r\n    /**\r\n     * config設定用HTMLテキストを取得する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.getHtml = function() { \r\n        return this._html + this._ole;\r\n    };\r\n    /**\r\n     * keyに値を設定する\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.set = function(key, val) { \r\n        this.value[this._pre + key] = val;\r\n    };\r\n    \r\n    // config作成用 メソッド\r\n    /**\r\n     * 定義＆設定画面作成用機能： 改行\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.n = function (str) {\r\n        str = str || \"\";\r\n        this._html += this._ole + str + this._ols;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ネスト一つ下げ\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.nDown = function () {\r\n        this._html += this._ols;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ネスト一つ上げ\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.nUp = function () {\r\n        this._html += this._ole;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： nameを変更する（radio等の先頭で指定）\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.name = function (str) {\r\n        this._nameHtml = str ? 'name=\"' + this._pre + str + '\" ' : '';\r\n        this._name = str;\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラベル要素(prefix+keyで関連付けるformのid属性となる)\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.label = function (key, str, attribute) {\r\n        this._html += '<label ' +\r\n                        (key ? 'for=\"' + this._pre + key + '\" ': '') +\r\n                        (attribute || '') + '>' +\r\n                        (str || '') +\r\n                        '</label>\\n'; // #51\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラベル付された各種入力フォーム\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.labeledForm = function (key, type, typedAttribute,\r\n                                pLabel, sLabel, val, attribute, check, cssClass) {\r\n        var classStr = (cssClass) ? ' class=\"' + cssClass + '\"' : ''; // #51\r\n        this._html += '<label' + classStr + '>' + // #51\r\n                    (pLabel ? pLabel : '') +\r\n                    '<input type=\"' +type + '\" ' +\r\n                        (typedAttribute || '') + \r\n                        this._nameHtml +\r\n                        'id=\"' + this._pre + key + '\" '+ // idがユニークになるようkeyにprefixを付与\r\n                        'onchange=\"' + this._globalName + '.Config.on(this);\" ' + // #74\r\n                        (val ? 'value=\"' + val + '\" ' : '') +   // val は、キー値のまま\r\n                        (attribute || '') + \r\n                        (check ? ' checked=\"checked;\"' : '') +\r\n                    '>' +\r\n                    (sLabel ? sLabel : '') +\r\n                    '</label>\\n'; // #51\r\n        // デフォルト指定があるとき configにデフォルト値を設定する\r\n        if (type === \"radio\" && check) {    // radioのとき、nameに対して、選択状態のkeyを登録\r\n            Config.prototype.__config[this._pre + this._name] = key;\r\n        } else if (type === \"number\") { // numberradioのとき、keyに対する、val(入力値)を数値として登録\r\n            Config.prototype.__config[this._pre + key] = +val;\r\n        } else {    // text,numberのとき、keyに対する、val(入力値)を登録\r\n            Config.prototype.__config[this._pre + key] = val;\r\n        }\r\n        // HTML生成時に設定するイベントを退避する #74\r\n        this._addEventList.push({\r\n            id: this._pre + key,\r\n            func: Config.on,\r\n            type: \"click\"});\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： テキストボックス要素で、文字列を設定\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.number = function (key, pLabel, sLabel, val, attribute) {\r\n        Config.prototype.labeledForm.call(this, key, \"number\", \"\", \r\n                                pLabel, sLabel, val, attribute);\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： テキストボックス要素で、数値を設定\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.text = function (key, pLabel, sLabel, val, attribute) {\r\n        Config.prototype.labeledForm.call(this, key, \"text\", \"\", \r\n                                pLabel, sLabel, val, attribute);\r\n        return this;\r\n    };\r\n    /**\r\n     * 定義＆設定画面作成用機能： ラジオボタン要素で、選択肢の一つを設定\r\n     * \r\n     * @memberof Config\r\n     */\r\n    Config.prototype.radio = function (key, pLabel, sLabel, check, attribute, func) {\r\n        Config.prototype.labeledForm.call(this, key, \"radio\", (check ? 'checked=\"checked;\"' : ''),\r\n                                pLabel, sLabel, \"\", attribute, check, \"hjnLabel4Input\");\r\n        // 関数登録指定時、attributeを関数名として、指定関数を登録する #51\r\n        if (func){\r\n            Config.prototype.__config._onFunctions[this._pre + key] = func;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /* new */\r\n    return Config;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/config/util-Config.js\n// module id = 29\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport MappedETat from './timeSeries-MappedETat.js';\r\nimport ETat from './timeSeries-ETat.js';\r\nimport Cash from './timeSeries-Cash.js';\r\n\r\n\r\n/**\r\n * @memberOf TimeSeries\r\n * @class Tat\r\n * @classdesc Tat 応答時間(Turnaround time)の時系列データ管理クラス\r\n * @param {ETAT}\r\n *            [eTat] [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]<br>\r\n *            eTatが指定されているとき、this.seriesSet を設定する\r\n */\r\nexport default function Tat(eTat) {\r\n    \r\n    this.cTpsUnit = Tat.UNIT_CTPS[0];\r\n    this.seriesSet = [];\r\n\r\n    if (eTat){\r\n        this.createSeries(eTat);\r\n    }\r\n}\r\n\r\n/**\r\n * クラス定数\r\n */\r\nTat.UNIT_CTPS = [\r\n        { label: \"/sec\",   unit: 1000 },\r\n        { label: \"/min\",   unit: 60000 },\r\n        { label: \"/hour\",  unit: 3600000 },\r\n        { label: \"/day\",   unit: 86400000 }];\r\nTat.CYCLE = 60000;  // ミリ秒 #57\r\n\r\n/**\r\n * 終了時刻のTAT時系列データ(eTat)から、描画用時系列データ配列を作成する\r\n * \r\n * @memberOf TimeSeries\r\n * @param {ETAT}\r\n *            eTat [[終了時刻(ms), 処理時間(sec), （任意）ログレコード等], ...]\r\n * @return {seriesSet} dygraph用時系列データ配列\r\n */\r\nTat.prototype.createSeries = function (eTat) {\r\n    // 時系列データを初期化する\r\n    var conc = [], cTps = [], eTps = [], sTat = [], eMps = [], eAps = [];\r\n\r\n    // 集計対象データがないとき\r\n    if (eTat.length === 0)\r\n        return [ conc, cTps, eTps, sTat, eTat, eMps, eAps ];\r\n\r\n    /** eTatをソートする * */\r\n    // 開始時刻でソートする #35\r\n    eTat.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    Util.Logger.ShowLogText(\"[1:eTat sorten ] \" + eTat.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** eTps(時間あたり処理件数),eMps,eAps(時間あたり最大/平均応答時間)時系列データを作成する * */\r\n    var dFrom = Math.floor(eTat[0].x / Tat.CYCLE) * Tat.CYCLE,\r\n        dTo = dFrom + Tat.CYCLE,\r\n        num = 0, // #39\r\n        maxTat = 0.0, // #19\r\n        aveTmp = 0.0;\r\n    eTat.forEach(function (e) {\r\n        if (e.x < dTo) {\r\n            num += 1;\r\n            if (maxTat < e.y) maxTat = e.y; // #19\r\n            aveTmp += e.y;\r\n        } else {\r\n            eTps.push({x : dFrom, y : num * 1000 / Tat.CYCLE}); // #57\r\n            eMps.push({x : dFrom, y : maxTat}); // #19\r\n            eAps.push({x : dFrom, y : aveTmp / num});\r\n            dFrom = Math.floor(e.x / Tat.CYCLE) * Tat.CYCLE;\r\n            dTo = dFrom + Tat.CYCLE;\r\n            num = 1;\r\n            maxTat = e.y; // #19 #39\r\n            aveTmp = e.y; // #39\r\n        }\r\n    }, this);\r\n    eTps.push({x : dFrom,             y : num * 1000 / Tat.CYCLE}); // #57\r\n    eTps.push({x : dFrom + Tat.CYCLE, y : num * 1000 / Tat.CYCLE}); // #57\r\n    eMps.push({x : dFrom,             y : maxTat}); // #19\r\n    eMps.push({x : dFrom + Tat.CYCLE, y : maxTat}); // #57\r\n    eAps.push({x : dFrom,             y : aveTmp / num});\r\n    eAps.push({x : dFrom + Tat.CYCLE, y : aveTmp / num}); // #57\r\n    \r\n    Util.Logger.ShowLogText(\"[3:eTps,eMps,eAps created] \" + eTps.length\r\n            + \" plots\", \"calc\");\r\n\r\n    /** sTat（開始時間）時系列データを作成する,同時に入力eTatを補正する * */\r\n    // eTatからsTatを登録する\r\n    eTat.forEach(function (e, i) {\r\n        // 処理時間=0 のとき、1マイクロ秒とみなす(有効桁0.2マイクロ秒に切上される）\r\n        if (e.y === 0) {\r\n            e.y = 0.001;\r\n            e.x += e.y;\r\n        } // ミリ秒\r\n        // sTatにeTatデータを登録する\r\n        sTat.push({\r\n            x : e.x - e.y,\r\n            y : e.y,\r\n            eTatIdx : i\r\n        });\r\n    });\r\n    // 開始時刻でソートする\r\n    sTat.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    // eTatにsTatの位置を設定する\r\n    sTat.forEach(function (s, i) {\r\n        eTat[s.eTatIdx].sTatIdx = i;\r\n    });\r\n    Util.Logger.ShowLogText(\"[2:sTat created] \" + sTat.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** CONC(多重度)時系列データを作成する * */\r\n    var concTmp = [];\r\n    // eTatから、多重度が変化した時刻の一覧を作成する\r\n    eTat.map(function (e, i) {\r\n        // 開始時刻にカウントアップ情報を追加する\r\n        concTmp.push({x : e.x - e.y, y : 1});\r\n        // 終了時刻をカウントダウン情報を追加する\r\n        concTmp.push({x : e.x, y : -1});\r\n    });\r\n    // concを変化した時刻（開始or終了）でソートする\r\n    concTmp.sort(function (a, b) {\r\n        return a.x - b.x;\r\n    });\r\n    // concに同時取引数を設定する\r\n    var concNum = 0;\r\n    concTmp.forEach(function (c, i, a) {\r\n        // 重複削除用フラグを立てる #23\r\n        if (i > 0 && c.x === a[i - 1].x) {\r\n            a[i - 1].del = true;\r\n        }\r\n        // 同時取引数を集計する(前提：c.y に、開始なら1、終了なら(-1)が設定されている)\r\n        concNum += c.y;\r\n        c.y = concNum;\r\n    });\r\n    // concの同じ時刻の点を削除する #23\r\n    conc = concTmp.filter(function (c) {\r\n        return !c.del;\r\n    });\r\n    Util.Logger.ShowLogText(\"[4:conc created] \" + conc.length + \" plots\",\r\n            \"calc\");\r\n\r\n    /** cTPS秒間同時処理件数（concurrent transactions/sec）時系列データを作成する #18 * */\r\n    var XSec = floorTime(conc[0].x, Tat.CYCLE), // ミリ秒\r\n    YMax = conc[0].y, YNext = conc[0].y;\r\n    // concの先頭と末尾の時刻(x)の差よりPlot数を求め、Plot数が規定数(8000個)を超えたら、桁上げする #38\r\n    var cTpsMaxPlots = 8000, // 桁上げするPlot数\r\n    cTpsUnits = Tat.UNIT_CTPS, // #48\r\n    concTerm = conc[conc.length - 1].x - conc[0].x, // ミリ秒\r\n    cTpsIdx = 0;\r\n    while (cTpsIdx < cTpsUnits.length\r\n            && concTerm / cTpsUnits[cTpsIdx].unit > cTpsMaxPlots) {\r\n        cTpsIdx++;\r\n    }\r\n    cTpsIdx = (cTpsUnits.length > cTpsIdx) ? cTpsIdx : cTpsUnits.length - 1;\r\n    this.cTpsUnit = cTpsUnits[cTpsIdx];\r\n    // メニューのViewのcTPSのラベルに単位を追加する\r\n    var pos = (this === HJN.chart) ? 0 : 1;\r\n    document.getElementsByName(\"cTps\")[pos]\r\n                .parentNode.lastChild.data = HJN.CTPS.name + this.cTpsUnit.label;\r\n\r\n    // 規定時間単位の最大同時処理数cTPSを作成する\r\n    conc.forEach(function (c) {\r\n        if (floorTime(c.x, this.cTpsUnit.unit) === XSec) { // c.xは ミリ秒\r\n            YMax = Math.max(YMax, c.y);\r\n        } else {\r\n            cTps.push({x : XSec, y : Math.max(YMax, YNext)});\r\n            for (var t = XSec + this.cTpsUnit.unit;\r\n                    t < floorTime(c.x, this.cTpsUnit.unit);\r\n                    t += this.cTpsUnit.unit) { // c.xはミリ秒\r\n                        cTps.push({x : t, y : YNext});\r\n                if (YNext === 0) break;\r\n            }\r\n            XSec = floorTime(c.x, this.cTpsUnit.unit);\r\n            YMax = Math.max(YNext, c.y);\r\n        }\r\n        YNext = c.y;\r\n    }, this);\r\n    cTps.push({x : XSec, y : YMax});\r\n    cTps.push({x : XSec + this.cTpsUnit.unit, y : YNext});\r\n\r\n    // Util.Logger.ShowLogText(\"[5-1:cTps created] \" + cTps.length + \"\r\n    // plots\",\"calc\");\r\n\r\n    // cTpsのxからindexを引くMapを作成する #18\r\n    eTat = new ETat(eTat); // #75\r\n    Util.Logger.ShowLogText(\"[5:cTps created] \" + cTps.length + \" plots(\"\r\n            + +Math.floor(concTerm / 1000) + \"sec\" + cTpsUnits[cTpsIdx].label\r\n            + \")\", \"calc\");\r\n\r\n    // 集計結果をHJN.Graphに設定する 注）this.SERIESESと同じ順番にすること\r\n    this.seriesSet = [ conc, cTps, eTps, sTat, eTat, eMps, eAps ];\r\n\r\n    return this;\r\n\r\n    \r\n    // 時刻を指定ミリ秒間隔で切り捨てる（内部関数）\r\n    function floorTime(t, cycle) {\r\n        return Math.floor(Math.floor(t / cycle) * cycle);\r\n    }\r\n};\r\n\r\n/**\r\n * cTpsの集計単位を取得する\r\n * \r\n * @memberOf TimeSeries\r\n * @return {object} 単位構造体 { label: \"/sec\", unit: 1000 }\r\n */\r\nTat.prototype.getCTpsUnit = function () {\r\n    return this.cTpsUnit;\r\n}\r\n\r\n/**\r\n * seriesSetを取得する\r\n * \r\n * @memberOf TimeSeries\r\n * @return {array} seriesSet\r\n */\r\nTat.prototype.getSeriesSet = function () {\r\n    return this.seriesSet;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-Tat.js\n// module id = 30\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport {HJN} from '../tatLogDiver/tatLogDiver-HJN.js';\r\nimport Graph from '../tatLogDiver/tatLogDiver-Graph.js';\r\nimport MenuConfig from './timeSeries-MenuConfig.js';\r\n\r\n/**\r\n * @memberof File\r\n * @class FileParser\r\n * @classdesc ファイルをパースして読み込む\r\n *            <p>\r\n *            パース条件指定画面生成つき\r\n */\r\nexport default (function() {\r\n    \"use strict\";\r\n    /** @static */\r\n    FileParser.prototype.__keyConfig = {};  // configで使用する値の定義\r\n\r\n    /** constructor */\r\n    function FileParser(){\r\n        if(!(this instanceof FileParser)) return new FileParser();\r\n\r\n/*        this.configId = \"_config_\" + \"File\"; // #53\r\n\r\n        // コンストラクタ内部関数：keyを定義する\r\n        var def = function(key, val, onFunc) {\r\n                    var _keyConf = FileParser.prototype.__keyConfig[key] = {};\r\n                    _keyConf.value = (val === undefined) ? key : val; // getValueByKeyの返却値（デフォルト：keyと同じ文字列）\r\n                    _keyConf.getValue = function () { return (val === undefined) ? key : val; };\r\n                    _keyConf.onFunc = onFunc || null;   // onイベント時に実行する処理（メニューのa属性などで利用）\r\n                    return key;\r\n                };\r\n        var v = function(key, fieldId) { // fieldIdの値を返却値とする(デフォルト： key+\".v\")\r\n                    var _keyConf = FileParser.prototype.__keyConfig[key] = {};\r\n                    _keyConf.value = key;           // getValueByKeyの返却値（デフォルト：keyと同じ文字列）\r\n                    _keyConf.getValue = function () {\r\n                            return Util.Config(\"m\").getValueByKey(fieldId || key + \".v\"); // TODO:mの指定\r\n                        };\r\n                    return key;\r\n                };\r\n\r\n        // 名称と挙動の定義\r\n        var env = \"File\";\r\n        HJN.Config = {}; \r\n        HJN.Config[env] = this[\"_config_\" + env] = Util.Config(env) // #53\r\n            // File Format Config設定画面定義 #51\r\n            .name(\"NEWFILE\").label(null,\"Registered \") // #23\r\n                .radio(\"NEWDATA\", null, \"newly\", true)\r\n                .radio(\"ADDDATA\", null, \"additionally\").n()\r\n            .label(null,\"----- File format definition --------\").n()\r\n            .n(\"<br>\")\r\n            .name(\"LF\").label(null, \"[Line feed code]\").n()\r\n            .radio(v(\"LF_FIX\"), null, \"Fixed Length\")\r\n                .number(\"LF_FIX.v\",  null, \"byte\",\"80\",'style=\"width:60px;\"').n()\r\n            .radio(def(\"LF_WIN\",  13), null, \"Windows:CR(13)+LF(10)\", true).n()\r\n            .radio(def(\"LF_UNIX\", 10), null, \"Unix/Linux:LF(10)\").n()\r\n            .radio(def(\"LF_ZOS\",  15), null, \"zOS:NEL(15)\").n()\r\n            .radio(def(\"LF_MAC\",  13), null, \"Mac:CR(13)\").n()\r\n            .radio(v(\"LF_ELSE\"), null, \"other charcode\")\r\n                .number(\"LF_ELSE.v\", \"(\", \")\", \"10\", 'style=\"width:40px;\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"SEP\").label(null,\"[CSV delimiter]\").n()\r\n            .radio(def(\"SEP_COMMA\", ','), null, \"comma\", true)\r\n            .radio(def(\"SEP_TAB\", '\\t'),   null,\"tab\")\r\n            .radio(v(\"SEP_ELSE\"), null, \"other\")\r\n                .text(\"SEP_ELSE.v\", '\"', '\"', ',', 'size=\"2\" placeholder=\",\"').n()\r\n            .n(\"<br>\")\r\n            .name(\"TIME\").label(null, \"[Timestamp field]\").n()\r\n            .number(\"TIME_COL\", \"\", \"th column of CSV\", \"1\", 'style=\"width:40px;\"').n()\r\n            .name(\"TIME_POS\")\r\n                .number(\"TIME_POS\", \"Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n                .number(\"TIME_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n            .name(\"TIME_FORM\").label(null,\"Format:\").n()\r\n                .radio(\"TIME_FORM_YMD\", \"text\", null, true)\r\n                    .text(\"TIME_YMD\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"').n()\r\n                .radio(\"TIME_FORM_TEXT\", \"(num)\", \"text\")\r\n                .radio(\"TIME_FORM_LONG\", null, \"long\").n()\r\n                .nDown()\r\n                .name(\"TIME_UNIT\").label(null, \"Units of numbers:\")\r\n                    .radio(def(\"TIME_UNIT_MS\", 1), null, \"msec\")\r\n                    .radio(def(\"TIME_UNIT_SEC\", 1000), null, \"sec\", true)\r\n                .nUp()\r\n            .n(\"<br>\")\r\n            .name(\"TAT\").label(null,\"[Turnaround time(TAT) field]\").n()\r\n            .number(\"TAT_COL\", \"\", \"th column of CSV\", \"2\", 'style=\"width:40px;\"').n()\r\n            .name(\"TAT_POS\")\r\n                .number(\"TAT_POS\", \"Position(byte): from\", null, \"1\", 'style=\"width:40px;\"')\r\n                .number(\"TAT_LEN\", \"length\", null, null, 'style=\"width:40px;\"').n()\r\n            .name(\"TAT_UNIT\").label(null, \"Units of numbers:\")\r\n                    .radio(def(\"TAT_UNIT_MS\", 1), null, \"msec\")\r\n                    .radio(def(\"TAT_UNIT_SEC\", 1000), null, \"sec\", true).n()\r\n            .name(\"TAT_FORM\").label(null,\"Format: \")\r\n                .radio(\"TAT_FORM_TEXT\", null, \"text\", true)\r\n                .radio(\"TAT_FORM_LONG\", null, \"long\").n()\r\n                .nDown()\r\n                .name(\"ENDIAN\").label(null, \"for long Endian: \")\r\n                    .radio(def(\"ENDIAN_LIL\", true), null, \"little\", true)\r\n                    .radio(def(\"ENDIAN_BIG\", false), null, \"big\")\r\n                .nUp()\r\n            .n(\"<br>\")\r\n        ;\r\n\r\n        // Filter Config用関数定義(radio用） #51\r\n        env = \"Filter\"\r\n        var func_F_SYNC_UPPER = function(){ Graph.DrawCallback(HJN.chart.graph); },\r\n            func_F_SYNC_DETAIL = function(){ Graph.DrawCallback(HJN.chartD.graph); };\r\n        // Filter Config設定画面定義 #51\r\n        HJN.Config[env] = this[\"_config_\" + env] = Util.Config(env) // #53\r\n            .name(\"F_SYNC\").label(null,\"Sync\") // #50\r\n                .radio(\"F_SYNC_UPPER\", null, \"Upper\", false ,null, func_F_SYNC_UPPER) // #51\r\n                .radio(\"F_SYNC_DETAIL\", null, \"Detail\", false, null, func_F_SYNC_DETAIL)\r\n                .radio(\"F_ASYNC\", null, \"Async\", true).n()\r\n            .label(null,\"----- Data filter condition--------\").n()\r\n                .n(\"<br>\")\r\n                .name(\"F_TIME\").label(null, \"[Date filter]\").n()\r\n                .label(null,\"Include if end time is between\").n()\r\n                    .text(\"F_TIME_FROM\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"')\r\n                    .label(null,\"and\").n()\r\n                    .text(\"F_TIME_TO\", null, null, null, 'size=\"23\" placeholder=\"YYYY/MM/DD hh.mm.ss.ppp\"').n()\r\n                .n(\"<br>\")\r\n                .name(\"F_TAT\").label(null,\"[Turnaround time(TAT) filter]\").n()\r\n                .label(null,\"Include if TAT is between\").n()\r\n                    .number(\"F_TAT_FROM\", null, null, \"0\", 'style=\"width:80px;\"')\r\n                    .number(\"F_TAT_TO\", \"and\", null, null, 'style=\"width:80px;\"').n()\r\n                .n(\"<br>\")\r\n                .name(\"F_TEXT\").label(null,\"[Text filter]\")\r\n                    .radio(\"F_TEXT_NON\", null, \"Don't use.\", true).n()\r\n                    .radio(\"F_TEXT_INCLUDE\", null, \"Include \")\r\n                    .radio(\"F_TEXT_EXCLUDE\", null, \"Exclude \").n()\r\n                    .number(\"F_TEXT_LEN\", \"if \", \" bytes\", null, 'style=\"width:40px;\"')\r\n                    .number(\"F_TEXT_POS\", \"from the \", \"th byte\", \"1\", 'style=\"width:40px;\"').n()\r\n                    .number(\"F_TEXT_COL\", \"from head of the\", \"th column of CSV\", \"3\", 'style=\"width:40px;\"').n()\r\n                    .text(\"F_TEXT_REG\", \"match the regular expression\", null, null, 'size=\"7\" placeholder=\".*\"').n()\r\n                .n(\"<br>\")\r\n        ; */\r\n    }\r\n\r\n    // class method\r\n    /**\r\n     * ファイルリーダのプロパティ管理インスタンスを取得する\r\n     * \r\n     * @memberof tatLogDiver.FileParser\r\n     * @param {Object}\r\n     *            fileParser ファイルリーダ\r\n     * @param {String}\r\n     *            type プロパティ種別名（\"File\"|\"Filter\"|\"Simulator\")\r\n     * @return {Object} プロパティ\r\n     */\r\n    FileParser.Property = (function() {\r\n        \"use strict\";\r\n        /** @constructor */\r\n        function Property(fileParser, type){ \r\n            if(!(this instanceof Property)) return new Property(fileParser, type);\r\n            this._type = type || \"File\";\r\n            this._config     = fileParser[\"_config_\" + this._type];\r\n            this.__keyConfig = fileParser.__keyConfig;\r\n        }\r\n\r\n        // public\r\n        /**\r\n         * keyの値に指定されたvalue（なければkey値）を返却する\r\n         * \r\n         * @memberof tatLogDiver.FileParser.Property\r\n         * @param {String}\r\n         *            key Conginのキー値\r\n         */\r\n        Property.prototype.getValue = function(key) {\r\n            var cKey = this._config.getValueByKey(key);\r\n            if(!this.__keyConfig[cKey] || this.__keyConfig[cKey].value === undefined){\r\n                return cKey;    // valueが定義されていないとき、keyの設定値を返却\r\n            }else{\r\n                return this.__keyConfig[cKey].getValue(); // keyの設定値のvalueが定義されているとき\r\n            }\r\n        };\r\n        /**\r\n         * configに登録されているkey(prefix補填)の設定値を取得する\r\n         * \r\n         * @memberof tatLogDiver.FileParser.Property\r\n         */\r\n        Property.prototype.getValueByKey = function(key) {\r\n            return this._config.getValueByKey(key);\r\n        };\r\n    \r\n        /* new */\r\n        return Property;\r\n    }());\r\n    \r\n    /** @private */\r\n    //\r\n    // public\r\n\r\n\r\n    /**\r\n     * ファイルが新たに指定された時、eTatOriginalを再構築するか否（データを追加する）か\r\n     * \r\n     * @memberof tatLogDiver.FileParser\r\n     * @return {boolean} 再構築モードするときtrue、データを追加するときfalse\r\n     */\r\n    FileParser.prototype.isNewETAT = function() { // #23\r\n        return this.getValue(\"NEWFILE\") === \"NEWDATA\";\r\n    }\r\n    \r\n    /**\r\n     * 「ファイルから次の1レコードを取得するutil」 を取得する\r\n     * \r\n     * @memberof tatLogDiver.FileParser\r\n     */\r\n    FileParser.prototype.createGetterOfLine = function(file) {\r\n\r\n        /**\r\n         * @memberof tatLogDiver.FileParser\r\n         * @class GetterOfLine\r\n         * @classdesc ファイルから１レコード取得する\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持する改行コードを用いて、ファイルから１レコードを取得する\r\n         * \r\n         * @example try{ var getterOfLine =\r\n         *          HJN.chart.fileParser.createGetterOfLine(file), fileInfo;<br>\r\n         *          for(var i = 0; i < n; i++) { <br>\r\n         *          line = getterOfLine.next(); fileInfo += line.str + \"<BR>\"; }<br>\r\n         *          }catch (e) {<br>\r\n         *          console.error(\"改行コードの無いファイルは扱えません]%o\",e); }\r\n         */\r\n        function GetterOfLine(file, maxLength){ /* constructor */\r\n            if(!(this instanceof GetterOfLine)) return new GetterOfLine(file, maxLength);\r\n\r\n            this.file = file;\r\n            this.buf = new Uint8Array(file);\r\n            this.maxLength = maxLength || this.buf.length,\r\n            this.confLF = HJN.chart.fileParser.getValue(\"LF\");  // 改行コードor固定レコード長\r\n            this.from = 0;\r\n            this.to = 0;\r\n            this.len = 0;\r\n            this.line = {file: this.file, pos: 0, array: null, str: \"\", isEoF: false };\r\n        }\r\n        // public\r\n        /**\r\n         * 次の1レコードを取得する\r\n         * \r\n         * @memberof tatLogDiver.FileParser.GetterOfLine\r\n         * @name getValueByKey\r\n         */\r\n        if (HJN.chart.fileParser.getValueByKey(\"LF\") === \"LF_FIX\"){ // 固定長のとき\r\n            GetterOfLine.prototype.next = function () { // 次の1レコードを取得する\r\n                if(this.from >= this.maxLength ){   // ファイル末尾のとき\r\n                    this.line = {file: this.file, pos: this.maxLength, array: null, str: \"\", isEoF: true };\r\n                } else {\r\n                    this.len = Math.min(this.maxLength - this.from, this.confLF);\r\n                    var array = new Uint8Array(this.file, this.from, this.len);\r\n                    this.line = {\r\n                            file: this.file,\r\n                            pos: this.from,\r\n                            array: array,\r\n                            str: String.fromCharCode.apply(null, array),\r\n                            isEoF: false };\r\n                }\r\n                this.from += this.confLF;   // 次の行を指しておく\r\n                return this.line;\r\n            };\r\n        } else { // 可変長のとき\r\n            GetterOfLine.prototype.next = function () { // 次の1レコードを取得する\r\n                if(this.from >= this.maxLength ){   // ファイル末尾のとき\r\n                    this.line = {file: this.file, pos: this.maxLength, array: null, str: \"\", isEoF: true };\r\n                } else {\r\n                    this.to = this.buf.indexOf(this.confLF, this.from);\r\n                    if(this.to < 0) this.to = this.maxLength;   // 最終レコード（EOFで改行コードなし）のとき\r\n                    this.len = Math.min(this.to - this.from, 1024);\r\n                    var array = new Uint8Array(this.file, this.from, this.len);\r\n                    this.line = {\r\n                            file: this.file,\r\n                            pos: this.from,\r\n                            array: array,\r\n                            str: String.fromCharCode.apply(null, array),\r\n                            isEoF: false };\r\n                }\r\n                this.from = this.to + 2;    // 次の行を指しておく\r\n                return this.line;\r\n            };\r\n        }\r\n        return new GetterOfLine(file);\r\n    };\r\n    \r\n    \r\n    /**\r\n     * eTatのフィルター\r\n     * \r\n     * @memberof tatLogDiver.FileParser\r\n     */\r\n    FileParser.prototype.createFilter = function() { // #34\r\n       /**\r\n         * @memberof tatLogDiver.FileParser\r\n         * @class Filter\r\n         * @classdesc FileParserのフィルター\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持するフィルタ条件を用いるフィルターを取得する\r\n         * \r\n         */\r\n        function Filter(){ /* constructor */\r\n            if(!(this instanceof Filter)) return new Filter();\r\n            this._fileParser = HJN.chart.fileParser; // #62\r\n            var c = FileParser.Property(this._fileParser, \"Filter\");\r\n\r\n            this.confF_TIME_FROM = Util.S2D(c.getValue(\"F_TIME_FROM\"));    // 時刻(X)の最小値フィルター\r\n            this.confF_TIME_TO   = Util.S2D(c.getValue(\"F_TIME_TO\"));      // 時刻(X)の最大値フィルター\r\n            this.confF_TIME = (isNaN(this.confF_TIME_FROM) && isNaN(this.confF_TIME_TO))\r\n                            ? false : true; // 時刻(x）フィルター指定の有無\r\n            \r\n            this.confF_TAT_FROM = c.getValue(\"F_TAT_FROM\") || 0; // 時間(Y)の最小値フィルター\r\n            this.confF_TAT_TO   = c.getValue(\"F_TAT_TO\") || Number.MAX_VALUE; // 時間(Y)の最大値フィルター\r\n            this.confF_TAT = (this.confF_TAT_FROM === 0 && this.confF_TAT_TO === Number.MAX_VALUE)\r\n                            ? false : true; // 時間(ｙ）フィルター指定の有無\r\n\r\n            this.confF_TEXT = c.getValue(\"F_TEXT\") || null; // テキストフィルタの条件（使用しない、Include,Exclude\r\n            if (this.confF_TEXT === \"F_TEXT_INCLUDE\") {\r\n                this.confF_TEXT = true;\r\n            } else if (this.confF_TEXT === \"F_TEXT_EXCLUDE\") {\r\n                this.confF_TEXT = false;\r\n            } else { // \"F_TEXT_NON\"\r\n                this.confF_TEXT = null;\r\n            }\r\n            \r\n            this.confF_TEXT_LEN = c.getValue(\"F_TEXT_LEN\") || null;    // フィルタテキストのバイト長\r\n            this.confF_TEXT_POS = c.getValue(\"F_TEXT_POS\") || 0;       // フィルタテキストの先頭バイト位置\r\n            this.confF_TEXT_COL = (c.getValue(\"F_TEXT_COL\") || 3) - 1; // フィルタテキストのカラム位置（先頭：０）\r\n            this.confF_TEXT_REG = new RegExp(c.getValue(\"F_TEXT_REG\") || \".*\");    // フィルタテキストの正規表現\r\n            \r\n            this.confF_IS = (this.confF_TIME === true \r\n                            || this.confF_TAT === true || this.confF_TEXT != null)\r\n                          ? true : false; // フィルタ指定の有無\r\n            \r\n            c = FileParser.Property(HJN.chart.fileParser, \"File\");\r\n            this.confF_SEP = c.getValue(\"SEP\").charCodeAt(0);\r\n        }\r\n        \r\n        // class method\r\n        // private\r\n        /**\r\n         * フィルター条件で判定する\r\n         * \r\n         * @memberof tatLogDiver.FileParser.Filter\r\n         */\r\n        Filter.prototype._isIn = function (e) {\r\n            // フィルタ指定が無いときフィルタしない（初期表示時に無駄な処理をしない）\r\n            if (this.confF_IS === false) return true;\r\n            // 時刻（ｘ）フィルタの判定 （conf指定なしのとき NaNとの比較となりfalseとなる）\r\n            if (e.x < this.confF_TIME_FROM || this.confF_TIME_TO < e.x ) {\r\n                return false;\r\n            }\r\n            // 時間（ｙ）フィルタの判定\r\n            if (e.y < this.confF_TAT_FROM || this.confF_TAT_TO < e.y){\r\n                return false;\r\n            }\r\n            // テキストフィルタの判定\r\n            if (this.confF_TEXT === null) {\r\n                return true; // フィルタ指定なし\r\n            }\r\n            var text = \"\";\r\n            if (e.pos === undefined) { // テキスト読み込みでないとき（自動生成データのとき）\r\n                // レコードを取得する #62\r\n                text = this._fileParser.getRecordAsText(e); // #61\r\n                // 指定正規表現に合致するか判定し、Include/Exclude指定に応じてリターンする\r\n                return this.confF_TEXT === this.confF_TEXT_REG.test(text);\r\n            } else { // ファイル読み込みのとき\r\n                // レコードを取得する\r\n                var arr = new Uint8Array(HJN.filesArrayBuffer[e.fileIdx+1], e.pos, e.len);\r\n                // CSVレコードの指定カラムを取得する(arr)\r\n                var colPos = 0;\r\n                for (var i = 0; i < this.confF_TEXT_COL; i++) {\r\n                    colPos = arr.indexOf(this.confF_SEP,colPos + 1);\r\n                }\r\n                if (colPos === -1){\r\n                    // 指定数のカラムが無い場合、Includeは処理対象外、Excludeは処理対象\r\n                    return !this.confF_TEXT;\r\n                }\r\n                var col = arr.slice(colPos, arr.length);\r\n                // 判定用文字列を取得する\r\n                text = col.slice(this.confF_TEXT_POS, this.confF_TEXT_POS + this.confF_TEXT_LEN);\r\n                // 指定正規表現に合致するか判定し、Include/Exclude指定に応じてリターンする\r\n                return this.confF_TEXT === this.confF_TEXT_REG.test(String.fromCharCode.apply(null, text));\r\n            }\r\n            return true;\r\n        };\r\n        \r\n        // public\r\n        /**\r\n         * eTatをフィルターする\r\n         * \r\n         * @memberof tatLogDiver.FileParser.Filter\r\n         * @param {eTat}\r\n         *            eTat フィルター処理対象のeTat\r\n         * @return {eTat} eTat フィルターされたeTat\r\n         * \r\n         */\r\n        Filter.prototype.filter = function (eTat) {\r\n            if (!eTat) return [];\r\n            return eTat.filter(this._isIn, this);\r\n        };\r\n\r\n        return new Filter();\r\n    };\r\n\r\n\r\n    /**\r\n     * 「１レコードからx:時刻（数値：ミリ秒）,y:Tat(数値：秒)を取得するutil」を取得する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.Filter\r\n     */\r\n    FileParser.prototype.createGetterOfXY = function() {\r\n\r\n        /**\r\n         * @memberof tatLogDiver.FileParser.Filter\r\n         * @class GetterOfXY\r\n         * @classdesc １レコードをパースし、XとYをレコード取得する\r\n         *            <p>\r\n         *            ファクトリのFileParserが保持するレコードフォーマット情報を用いて、ファイルの指定レコードからＸ(data)とＹ(value)を取得する\r\n         */\r\n        function GetterOfXY(){ /* constructor */\r\n            if(!(this instanceof GetterOfXY)) return new GetterOfXY();\r\n\r\n            var c = HJN.chart.fileParser;\r\n            this.configId = \"_config_\" + \"Filter\"; // #53\r\n            this.confSEP = c.getValue(\"SEP\");   // セパレータ\r\n            \r\n            this.confTIME_COL = c.getValue(\"TIME_COL\") - 1 || 0;    // 時刻(X)のカラム位置\r\n            this.confTIME_POS = (c.getValue(\"TIME_POS\") || 1) - 1;  // 時刻(X)の先頭バイト位置\r\n            this.confTIME_LEN = (c.getValue(\"TIME_LEN\") || 0);      // 時刻(X)のバイト長\r\n            this.confTIME_FORM = c.getValue(\"TIME_FORM\");           // 時刻(X)の文字フォーマット指定\r\n            this.confTIME_YMD = (c.getValue(\"TIME_YMD\") || \"YYYY/MM/DD hh.mm.ss.ppp\"); // #42\r\n                                                                    // 時刻(X)のYMDフォーマット\r\n            this.paseDateConf = {  // YYYY/MM/DD hh:mm:dd.ss.ppp #41\r\n                YYYY: this.confTIME_YMD.indexOf(\"YYYY\"),\r\n                MM: this.confTIME_YMD.indexOf(\"MM\"),\r\n                DD: this.confTIME_YMD.indexOf(\"DD\"),\r\n                hh: this.confTIME_YMD.indexOf(\"hh\"),\r\n                mm: this.confTIME_YMD.indexOf(\"mm\"),\r\n                ss: this.confTIME_YMD.indexOf(\"ss\"),\r\n                ppp: this.confTIME_YMD.indexOf(\"p\"),\r\n            };\r\n            this.isYMD = (this.confTIME_FORM === \"TIME_FORM_YMD\");\r\n            // 時刻(X)の数値単位(1or1000,YMDのとき1)\r\n            this.confTIME_UNIT = this.isYMD? 1 : (c.getValue(\"TIME_UNIT\") || 1);\r\n            \r\n            \r\n            this.confTAT_COL = c.getValue(\"TAT_COL\") - 1 || 1;      // 時間(Y)のカラム位置\r\n            this.confTAT_POS = (c.getValue(\"TAT_POS\") || 1) - 1;    // 時間(Y)の先頭バイト位置\r\n            this.confTAT_LEN = (c.getValue(\"TAT_LEN\") || 0);        // 時間(Y)のバイト長\r\n            this.confTAT_FORM = c.getValue(\"TAT_FORM\");             // 時間(Y)のフォーマット指定\r\n            this.confTAT_UNIT = c.getValue(\"TAT_UNIT\") || 1;        // 時間(Y)の数値単位(1/1000)\r\n            this.confENDIAN =  c.getValue(\"ENDIAN\");    // リトルエンディアンはtrue、ビッグエンディアンはfalse\r\n            this.isLittle = (function(){\r\n                // long用に4バイト取得する\r\n                var buf = new ArrayBuffer(4);               \r\n                // true:bufに、リトルエンディアン指定で1を書き込む\r\n                new DataView(buf).setUint32(0, 1, true);\r\n                // プラットフォームのエンディアンを使用するUint32Arrayと比較する\r\n                return (new Uint32Array(buf)[0] === 1);     \r\n            }());\r\n            \r\n            this.dateAndValue = {date: 0, value: 0, isError: false };\r\n        }\r\n        \r\n        // class method\r\n        /**\r\n         * 数字をパースして数値（ミリ秒）を取得する<br>\r\n         * 例：\"-1:1:1.2 -> -3661200 ms = -1*(3600+60+1+0.2)*1000\r\n         * \r\n         * @memberof tatLogDiver.FileParser.GetterOfXY\r\n         */\r\n        GetterOfXY.parseNumber = function (){ // str, unit,\r\n            var str = arguments[0],\r\n                unit = arguments[1];\r\n            if(!str) {console.log(\"data Y parse error\"); return 0; }\r\n            var ds = (str.indexOf(\":\") < 0) ? [str] : str.split(\":\"),   // #40\r\n                pm = (0 <= ds[0]) ? 1 : -1,\r\n                sec = 0.0;\r\n            for(var i = 0; i < ds.length; i++){\r\n                sec += pm * Math.abs(ds[i]) * Math.pow(60, ds.length - i - 1);\r\n            }\r\n            return sec * (unit || 1);\r\n        };\r\n\r\n        /**\r\n         * Long(4バイトバイナリ）数字をパースして数値（ミリ秒）を取得する\r\n         * \r\n         * @private\r\n         */\r\n        GetterOfXY.prototype._parseLong = function (arr){\r\n            if (4 <= arr.length ) { // Long(4byte)以上のときunsigned longとして処理する\r\n                // bufの先頭4byteを、指定バイトオーダ(endian)で、符号無32bit intとして参照\r\n                return (new DataView(arr.buffer, 0 , 4)).getUint32(0, this.confENDIAN);\r\n            } else {\r\n                // Long(4バイト）より短いとき、Byte単位に処理する\r\n                if (this.confENDIAN) { // little endianのとき\r\n                    return arr.reduceRight(function(a, b){ return a*256 + b; });\r\n                } else {               // big endianのとき\r\n                    return arr.reduce(function(a, b){ return a*256 + b; });\r\n                }\r\n            }\r\n        };\r\n\r\n        // public\r\n        /**\r\n         * レコードからXとYを取得する\r\n         * \r\n         * @memberof tatLogDiver.FileParser.GetterOfXY\r\n         */\r\n        GetterOfXY.prototype.parse = function (line) {\r\n            // セパレータでカラム分割する\r\n            var posMax = Math.max(this.confTIME_COL, this.confTAT_COL),\r\n                sep = this.confSEP.charCodeAt(0),   // 区切り文字のUint値\r\n                pos = 0,\r\n                nextPos = line.array.indexOf(sep),  // 行末（次の区切り文字位置）\r\n                x = 0,\r\n                y = -1;\r\n            for (var i = 0; i <= posMax; i++) {\r\n                if (i === this.confTIME_COL){\r\n                    // パース対象フィールドを切り出す\r\n                    var posX =  pos + this.confTIME_POS;\r\n                    var arrX = (0 < this.confTIME_LEN) \r\n                             ? line.array.slice(posX, posX + this.confTIME_LEN)\r\n                             : line.array.slice(posX, nextPos);\r\n                    var strX = \"\";\r\n                    // フィールドをパースする\r\n                    if (this.isYMD){    // 年月日時分秒の文字列のとき\r\n                        strX = String.fromCharCode.apply(null,arrX);\r\n                        x = Util.S2D(strX, this.paseDateConf);\r\n                    } else if (this.confTIME_FORM === \"TIME_FORM_TEXT\"){    // テキスト数字のUNIX経過時間のとき\r\n                        strX = String.fromCharCode.apply(null,arrX);\r\n                        x = GetterOfXY.parseNumber(strX);\r\n                    } else{ // this.confTIME_FORM === \"TIME_FORM_LONG\"\r\n                            // longのUNIX経過時間のとき\r\n                        x = this._parseLong(arrX);\r\n                    }\r\n                    // 単位を補正する\r\n                    x *= this.confTIME_UNIT;\r\n                }\r\n                if (i === this.confTAT_COL){\r\n                    // パース対象フィールドを切り出す\r\n                    var posY =  pos + this.confTAT_POS;\r\n                    var arrY = (0 < this.confTAT_LEN) \r\n                             ? line.array.slice(posY, posY + this.confTAT_LEN)\r\n                             : line.array.slice(posY, nextPos);\r\n                    // フィールドをパースする\r\n                    if (this.confTAT_FORM === \"TAT_FORM_TEXT\"){\r\n                        // テキスト数字によるUNIX経過時間のとき\r\n                        var strY = String.fromCharCode.apply(null,arrY);\r\n                        y = GetterOfXY.parseNumber(strY);\r\n                    } else{\r\n                        // TAT_FORM_TEXT === \"TAT_FORM_LONG\" 数値によるUNIX経過時間のとき\r\n                        y = this._parseLong(arrY);\r\n                    }\r\n                    // 単位を補正する\r\n                    y *= this.confTAT_UNIT;\r\n                }\r\n                pos = nextPos + 1;\r\n                nextPos = line.array.indexOf(sep, pos);\r\n                if (nextPos < 0) nextPos = line.array.length;\r\n            }\r\n            \r\n            if(0 < x && 0 <= y){ // 正常時\r\n                return {x: x, y: y, isError: false };\r\n            } else {            // エラー時\r\n                return {x: x, y: y, isError: true };\r\n            }\r\n        };\r\n        \r\n        return new GetterOfXY();\r\n    };\r\n    \r\n    /**\r\n     * configに登録されているid(=prefix+key)の設定値を取得する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     */\r\n// #74   FileParser.prototype.getObjctById = function(id) {\r\n//        return this[this.configId].getObjctById(id);\r\n//    };\r\n    /**\r\n     * configに登録されているkey(prefix補填)の設定値を取得する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     */\r\n    FileParser.prototype.getValueByKey = function(key) {\r\n        return this[this.configId].getValueByKey(key);\r\n    };\r\n    /**\r\n     * 設定値を保有するオブジェクトを返却する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     */\r\n    FileParser.prototype.getConfig = function() {\r\n        return this[this.configId]._config;\r\n    };\r\n    /**\r\n     * HTML（config設定用）テキストを返却する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     */\r\n// #74    FileParser.prototype.getConfigHtml = function(type) {\r\n//        type = type || \"File\";\r\n//        return this[\"_config_\" + type].getHtml(); // #53\r\n//    };\r\n    /**\r\n     * keyの値に指定された関数（なければ何もしない関数）を返却する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     */\r\n    FileParser.prototype.getFunction = function(key) {\r\n        var cKey = this[this.configId].getValueByKey(key);\r\n        if(!this.__keyConfig[cKey] || !this.__keyConfig[cKey].func){\r\n            return function(){};    // funcが定義されていないとき、何もしない関数を返却する\r\n        }else{\r\n            return this.__keyConfig[cKey].func; // keyの設定値のfuncが定義されているとき\r\n        }\r\n    };\r\n    /**\r\n     * eTatの指定行の編集元レコードを、テキストフォーマットに変換して取得する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     * @param {Object}\r\n     *            e eTat[n]：eTatの指定行\r\n     * @return {String} eTatの指定行の表示用テキスト\r\n     */\r\n    FileParser.prototype.getRecordAsText = function (e) { // #62 ADD\r\n        if (!e) return \"\";\r\n        var text = \"\";\r\n        if (typeof e.pos === \"undefined\") { // 生成データのとき\r\n            // 生成データをCSVのログデータとして編集する #61\r\n            text = Util.D2S(e.x, \"yyyy/MM/dd hh:mm:ss.ppp\", true)\r\n                    + \", \" + e.y + \", \" + e.message; // #53\r\n            // 状態遷移履歴を追加する #62\r\n            if (e.history){\r\n                e.history.forEach(function(h){\r\n                    var timeStr = \"\";\r\n                    if (typeof(h.time) === \"number\") {\r\n                        timeStr = Util.D2S(h.time, \"mm:ss.ppp\", true) + \" seq:\"\r\n                    }\r\n                    text += \" [\" + h.sequenceIdx + \":\" + h.status + \"]\" // #61\r\n                        + timeStr + Util.D2S(h.sequenceTime, \"mm:ss.ppp\", true);\r\n                }, this);\r\n            }\r\n        } else { // ファイル読込のとき\r\n            // ファイルの該当行を Uint8Arrayに登録する\r\n            var buff = new Uint8Array(e.len + 2);\r\n            var file = HJN.filesArrayBuffer[e.fileIdx]; // #23\r\n            buff.set(new Uint8Array(file, e.pos,\r\n                    Math.min(e.len + 2, file.byteLength - e.pos)));\r\n            // ログデータを編集する\r\n            text = String.fromCharCode.apply(null, buff);\r\n        }\r\n        return text;\r\n        \r\n    };\r\n    /**\r\n     * keyの値に指定されたvalue（なければkey値）を返却する\r\n     * \r\n     * @memberof tatLogDiver.FileParser.GetterOfXY\r\n     * @param {String}\r\n     *            key Conginのキー値\r\n     */\r\n    FileParser.prototype.getValue = function(key) {\r\n        var cKey = this[this.configId].getValueByKey(key);\r\n        if(!this.__keyConfig[cKey] || this.__keyConfig[cKey].value === undefined){\r\n            return cKey;    // valueが定義されていないとき、keyの設定値を返却\r\n        }else{\r\n            return this.__keyConfig[cKey].getValue(); // keyの設定値のvalueが定義されているとき\r\n        }\r\n    };\r\n    \r\n    // new\r\n    return FileParser;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timeSeries/timeSeries-FileParser.js\n// module id = 31\n// module chunks = 0","import * as Util from '../util/util.js';\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualApp\r\n * @classdesc 仮想アプリケーション\r\n * \r\n * @param {String}\r\n *            [userName = \"dafault\"] ログに出力するユーザ名\r\n * @param {Array}\r\n *            [sequence = SQL３個のオン処理] 取引の処理シーケンスを格納した配列\r\n * @param {Number}\r\n *            [times = 2 回] 繰返し回数\r\n * @param {Number}\r\n *            [thinkTime = 300 ms] 繰返し時の次回処理開始までの平均時間(ミリ秒）\r\n */\r\nexport default (function() { // #53\r\n\"use strict\";\r\n    /** @constructor */\r\n    function VirtualApp(userName, model){\r\n        if(!(this instanceof VirtualApp)){\r\n            return new VirtualApp(userName, model);\r\n        }\r\n        this._userName = userName || \"default\"; // ログ出力テキスト\r\n        // 定数の設定\r\n        // イベントシーケンスを取得する\r\n        if (typeof(model) === \"undefined\") model = {}\r\n        model.baseModel = model.baseModel || {\"holds\": []};\r\n        this._sequence = model.sequence;\r\n        // イベントシーケンスの繰り返し回数\r\n        this._times = (typeof(model.times) !== \"undefined\") ? model.times : 1;\r\n        // イベントシーケンス終了時に再実行する場合の平均再開時間\r\n        this._thinkTime = Math.max(0,\r\n                (typeof(model.thinkTime) !== \"undefined\") ? model.thinkTime : 500);\r\n        // イベントシーケンス終了時に再実行する場合の最小再開時間\r\n        this._thinkTimeMin = Math.max(0,\r\n                (typeof(model.thinkTimeMin) !== \"undefined\") ? model.thinkTimeMin : 500);\r\n        // メッセージ（ログ末尾に付与する文字列）\r\n        this._baseMessage = model.message + \"\\n\";\r\n        this._message = \"\";\r\n        this._history = []; // #62\r\n\r\n        // 変数の設定\r\n        this._startTime = Number.MIN_SAFE_INTEGER; // イベントシーケンス開始時刻（UNIX時刻：ミリ秒）\r\n        this._sequenceTime = Number.MIN_SAFE_INTEGER; // シミュレータに登録したイベントの時刻（現在時刻）\r\n        this._sequenceIdx = 0;    // シミュレータに登録したイベントシーケンスの位置\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n\r\n    \r\n    /**\r\n     * シミュレータのログを出力する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            logLv ログレベル（isLog <= logLvのときログ出力する）<br>\r\n     *            (0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)\r\n     * @param {boolean}\r\n     *            isLog ログ出力レベル\r\n     * @param {Number}\r\n     *            time 日時を表す数値（ミリ秒）\r\n     * @param {Object}\r\n     *            vApp 仮想アプリ\r\n     * @param {Object}\r\n     *            resource リソース\r\n     * @param {String}\r\n     *            text ログテキスト\r\n     * @param {String}\r\n     *            highText 強調表示テキスト\r\n     */\r\n    VirtualApp.prototype.logger = function(logLv, isLog, time, vApp, resource, text, highText) {\r\n        // 0:なしの時\r\n        if (!isLog) return;\r\n        var errCode = 0;\r\n        if (resource && (resource._holdHeap.size() !== resource._holdingQty)) {\r\n            // エラー時★\r\n            errCode = 1;\r\n            highText = highText ? highText + \"　unkown error!!\" : \"　unkown error!!\";\r\n        } else if (logLv > +isLog) {\r\n            return; \r\n        }\r\n        \r\n        // エラーログ編集\r\n        var user = vApp ? \" \" + vApp._userName : \" \";\r\n        var resourceText = resource ? (\" [\" + resource._name + \" wait:\"\r\n                + resource._waitHeap.size() + \"hold:\"\r\n                + resource._holdHeap.size() + \"=\"\r\n                + resource._holdingQty + \" qty] \") : \" \";\r\n        text = text || \"\";\r\n        var logText = Util.D2S(this.getTime(),\"hh:mm:ss.ppp\",true) \r\n                    + user +\"(\" + this._times + \"-\" + this._sequenceIdx + \")\"\r\n                    + resourceText \r\n                    + text;\r\n        highText = highText || \"\";\r\n\r\n        // エラー時の強制補正★\r\n        var modify = \"\";\r\n        if (errCode === 1) { // リソースヒープもしくはリソース量を強制補正する\r\n            var deleted = undefined;\r\n            if (resource._holdHeap.size() < resource._holdingQty) {\r\n                deleted = resource._holdHeap.del(this);\r\n            }\r\n            if (deleted){\r\n                modify = \"FORCE★: holdHeap.del(\" + deleted.userName + \")\";\r\n            } else {\r\n                modify = \"FORCE★: holdingQty modified\"\r\n                    resource._holdingQty = resource._holdHeap.size();\r\n            }\r\n        }\r\n                \r\n        // エラーログ出力\r\n        if (highText || modify){\r\n            console.log(logText + \" %o\", highText + \" \" + modify);\r\n        } else {\r\n            console.log(logText);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取引を開始する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            startTime 開始時刻（UNIX時刻：ミリ秒）\r\n     * @return {Object}仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.start = function(startTime) {\r\n        this._times--; // イベントシーケンスの繰り返し回数を1減らす\r\n        this._sequenceIdx = 0;    // シミュレータに登録したイベントシーケンスの位置\r\n        this._startTime = startTime;      // イベントシーケンス開始時刻（UNIX時刻：ミリ秒）\r\n        this._sequenceTime = startTime;   // シミュレータに登録したイベントの時刻\r\n        this._message = this._baseMessage; // ログ末尾に出力する文字列の初期化\r\n        this._history = []; // ログ末尾に出力する状態遷移履歴情報の初期化 #62\r\n        this.addHistory(\"start\");\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * イベント時刻を返却する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualApp.prototype.getTime = function() {\r\n        return this._sequenceTime;\r\n    };\r\n\r\n    /**\r\n     * リソース使用量を返却する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            [resource| 指定なしのとき1.0を返却する] リソース\r\n     * @return {Number} リソース使用量\r\n     */\r\n    VirtualApp.prototype.getAmount = function(resource) {\r\n        return 1.0;\r\n    };\r\n\r\n    /**\r\n     * 次の状態に遷移する、シーケンス終了時TATログを出力する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualApp.prototype.next = function(system) {\r\n        this.logger(4, system._log, system.getTime(), this, undefined, 'NEXT', undefined);\r\n        var events = []; // 戻り値\r\n        var ret = {result: true, events: [this]};\r\n        \r\n        if (this._sequenceIdx < this._sequence.length) { // イベントシーケンス処理途中のとき\r\n            var seq = this._sequence[this._sequenceIdx]; // 現在の処理シーケンス位置\r\n            // holdリソースを取得する\r\n            if (seq.hold && seq.hold !== \"\") {\r\n                // holdリソースが指定されているとき、指定リソースを確保する（確保できたとき[this]が戻り値）\r\n                ret = system.getResouce(seq.hold).hold(system, this); // #61\r\n                events = ret.events;\r\n            } else {\r\n                // holdリソースが指定されていないとき、無条件に自身をスケジュール対象に加える\r\n                events = [this];\r\n            }\r\n            // リソースを確保できたとき、該当シーケンスを完了させる\r\n            if (0 < events.length && (0 <= this._times) && ret.result) { // #61\r\n                // 完了した処理の処理時間を加える\r\n                var tatAdd = Math.ceil(Util.Random().exponential(seq.tat - seq.tatMin));\r\n                this.setSequenceTime(this._sequenceTime += seq.tatMin + tatAdd, seq.hold); // #61\r\n                // シーケンスのfreeで指定されているリソースの解放\r\n                if (seq.free) {\r\n                    for (var i = 0; i < seq.free.length; i++) {\r\n                        events = events.concat(system.getResouce(seq.free[i]).free(this));\r\n                    }\r\n                }\r\n                // 次の処理を参照する（ シミュレータに登録したイベントシーケンスの位置）\r\n                this._sequenceIdx++;\r\n            }\r\n            return events;\r\n        }\r\n        \r\n        // イベントシーケンスを終えたときTATログを出力する(this._sequenceIdx >= this._sequence.length)\r\n        var vApp = this._finish(system, \"N_000\");\r\n        // シーケンスをstart状態に設定する\r\n        // this._sequenceTime = system.getTime(); はfinishで更新されるので不可\r\n        // this._startTime = this._sequenceTime; finishで設定する\r\n        // 繰返し処理を継続する場合、自アプリケーションを再スケジュールする\r\n        if (vApp) {\r\n            events.push(this);\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * Freeに伴い、次の状態に遷移する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Number}\r\n     *            [time | 変更しない} イベント時刻（UNIX時刻：ミリ秒）\r\n     * @param {String}\r\n     *            status ログに追記する時刻設定理由文字列\r\n     * @return {Object} 仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.setSequenceTime = function(time, status) {\r\n        status = status || \"\"; \r\n        // 解放された時刻をイベント時刻に設定する\r\n        this._sequenceTime = time;\r\n        // ログに状態遷移履歴を追記する\r\n        return this.addHistory(status);\r\n    };\r\n\r\n    /**\r\n     * ログにステータス変更履歴を追記する\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {String}\r\n     *            status ログに追記する状態遷移の理由文字列\r\n     * @param {Number}\r\n     *            time 状態遷移時刻（ミリ秒）\r\n     * @return {Object} 仮想アプリケーション(this)\r\n     */\r\n    VirtualApp.prototype.addHistory = function(status, time) {\r\n// var timeStr = \"\";\r\n// if (typeof(time) === \"number\") {\r\n// timeStr = Util.D2S(time, \"mm:ss.ppp\", true) + \" seq:\"\r\n// }\r\n// this._message += \" [\" + this._sequenceIdx + \":\" + status + \"]\" // #61\r\n// + timeStr + Util.D2S(this._sequenceTime, \"mm:ss.ppp\", true);\r\n        // 状態遷移履歴（ログ出力用）を追加する\r\n        this._history.push({ // #62\r\n            sequenceIdx : this._sequenceIdx,\r\n            status : status,\r\n            time : time,\r\n            sequenceTime : this._sequenceTime\r\n        });\r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * アベンド処理（holdしている可能性のあるリソースを解放し、イベントシーケンスを強制終了する）\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {Object}\r\n     *            holdedResource アベンドさせたVirtualResource\r\n     * @param {String}\r\n     *            [logID=\"E_600\"] ログID\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Boolean}\r\n     *            [isHolding=true] リソース(holdedResource)をholdしているか否か<br>\r\n     * @param {Number}\r\n     *            [abendTime=sytem.getTime()] abend時刻\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualApp.prototype.abend = function(system, holdedResource, \r\n                                    logID, logMesseage, isHolding, abendTime) {\r\n        logID = logID || \"E_600\";\r\n        abendTime = abendTime || system.getTime();\r\n        isHolding = (typeof(isHolding) === \"boolean\") ? isHolding : true; // #61\r\n        var events = []; // 戻り値\r\n        this.logger(3, system._log, this._sequenceTime, this, holdedResource, 'abend', undefined);\r\n        var seq = this._sequence[this._sequenceIdx];\r\n        // 現在のシーケンスでholdするリソースがあるとき、waitしている可能性があるため、waitから削除する\r\n        if (seq && seq.hold) { // #61\r\n            system._resources[seq.hold].release(this);\r\n        }\r\n        // holdingリソースを開放する\r\n        var holdings;\r\n        // シーケンスから、holdingリソース一覧を取得する #59\r\n        if (seq) holdings = seq.holding;\r\n        if (holdings) { // シーケンス上holdingリソースがあるとき(undefined対策） #61\r\n            for (var i = holdings.length - 1; 0 <= i; i--) { // #61\r\n                // holdedResourceは削除処理対象外（呼び出し元リソースは、呼び出し前に削除済なので）\r\n                if (holdings[i] !== holdedResource._name || isHolding){ // #61\r\n                    // holdingリソースを開放し、使用リソース減に伴って新たにスケジュールするvAppを取得 #59\r\n                    events = events.concat(system._resources[holdings[i]].free(this));\r\n                }\r\n            }\r\n        }\r\n        // イベントシーケンスを強制終了する\r\n        this.setSequenceTime(abendTime, logID); // #59\r\n        var vApp = this._finish(system, logID, logMesseage);\r\n        // 自vAppに継続処理があれば、自vAppをスケジュール対象に加える\r\n        if (vApp && (0 <= this._times)) { // #61\r\n            events = events.concat([vApp]);\r\n        }\r\n        return events;\r\n    };\r\n    \r\n    /**\r\n     * イベント終了時処理（ログ出力と、繰り返し判定）\r\n     * \r\n     * @memberof Simulator.VirtualApp\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {String}\r\n     *            [logID=\"N_000\"] ログID（ログメッセージの先頭文字）\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Number}\r\n     *            [forceTime] 強制終了時刻を指定する（ミシュレーション停止後のeTat強制出力用）\r\n     * @return {Object|undefined} 再スケジュールするときthis、再スケジュールしないときundefined\r\n     */\r\n    VirtualApp.prototype._finish = function(system, logID, logMesseage, forceTime) {\r\n        logID = logID || \"N__00\";\r\n        logMesseage = logMesseage || \"\";\r\n        var events = []; // 戻り値\r\n        var logText = logID + \" \" + this._userName + \" \" + logMesseage + \" \" + this._message;\r\n        var now = this._sequenceTime;\r\n\r\n        // 強制終了時（シミュレーション終了時刻到来時）、自APのシミュレーションを強制終了する\r\n        if (typeof(forceTime) === \"number\") {\r\n            // 起動済処理はTATログを出力する #59\r\n            if (this._startTime <= forceTime) { \r\n                // TATログを出力する\r\n                system.eTat.push( { x: forceTime, \r\n                                    y: Math.round(forceTime - this._startTime),\r\n                                    sTatIdx: 0,\r\n                                    message: logText,\r\n                                    history: this._history} ); // #62\r\n                this.logger(2, system._log, forceTime, this, undefined, 'finish() FORCE\"', logText);\r\n            }\r\n            this._sequenceIdx = this._sequence.length; // #61 処理完了状態にする\r\n            this._startTime = this._sequenceTime; // #61 念のため設定\r\n            return undefined;\r\n        }\r\n        \r\n        // 起動済処理はTATログを出力する #59\r\n        if (this._startTime <= now ) { // || this._sequenceIdx ===\r\n                                        // this._sequence.length) {\r\n            system.eTat.push( { x: now,\r\n                                y: Math.round(now - this._startTime),\r\n                                sTatIdx: 0,\r\n                                message: logText,\r\n                                history: this._history} ); // #62\r\n            this.logger(2, system._log, now, this, undefined, 'finish() \"', logText);\r\n        } else  {\r\n            this.logger(0, system._log, now, this, undefined,\r\n                    'finish() Unexpected error★ _startTime > _sequenceTime:'\r\n                    + Util.D2S(this._startTime, \"hh:mm:ss.ppp\", true)\r\n                            + \" \" + this._startTime + \" > \" + now\r\n                            + \" Idx:\" + this._sequenceIdx \r\n                    , logText);\r\n        }\r\n        this._message = this._baseMessage; // ログ末尾に追加するメッセージの初期化\r\n \r\n        // 継続判定\r\n        if (0 < this._times) { // イベントシーケンスを繰り返すとき\r\n            // イベント時刻にThink time（指数分布）を加える\r\n            var nextTime = this.getTime() + this._thinkTimeMin;\r\n            if (this._thinkTimeMin < this._thinkTime) {\r\n                nextTime += Math.ceil(Math.abs( // #61\r\n                        Util.Random().exponential(this._thinkTime - this._thinkTimeMin)));\r\n            }\r\n            // 処理の先頭に戻る\r\n            return this.start(nextTime);\r\n        }\r\n        // イベントシーケンスを継続しない時(this._times < 0)\r\n        this._times--;       // イベントシーケンスの繰り返し回数を1減らす\r\n        this._sequenceIdx = this._sequence.length; // #61 処理完了状態にする\r\n        this._startTime = this._sequenceTime; // #61\r\n        return undefined;\r\n    };\r\n\r\n    /* new */\r\n    return VirtualApp;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-VirtualApp.js\n// module id = 32\n// module chunks = 0","import * as Util from '../util/util.js';\r\n/**\r\n * @memberOf Simulator\r\n * @class VirtualResource\r\n * @classdesc 仮想リソース\r\n * \r\n * @param {Object}\r\n *            system 仮想システム（シミュレーション中の現在時刻取得等に用いる）\r\n * @param {String}\r\n *            [name = \"unlimited\"] リソース名（\"unlimited\"はリソース解放待ちを管理しない）\r\n * @param {Number}\r\n *            [holdCapacity = 1.0] 保有リソース総量（数）\r\n * @param {Number}\r\n *            [timeout = 10秒] 処理のタイムアウト時間（未使用）\r\n * @param {Number}\r\n *            [waitCapacity = Number.MAX_SAFE_INTEGER]\r\n *            リソース取得待ちキューの深さ（数）、キュー溢れ時は即時エラー終了しリソース処理しない\r\n * @param {Number}\r\n *            [queueWait = 10秒] 最大キュー滞留時間（リソース取得待ちタイムアウト時間）\r\n * @param {Boolean}\r\n *            [log=false] 詳細ログ出力有無\r\n */\r\nexport default (function() { // #53\r\n    \"use strict\";\r\n    /** @constructor */\r\n    function VirtualResource(system, name,\r\n                        holdCapacity, timeout, waitCapacity, queueWait, log){\r\n        if(!(this instanceof VirtualResource)){\r\n            return new VirtualResource(system, name,\r\n                        holdCapacity, timeout, waitCapacity, queueWait, log);\r\n        }\r\n        this._system = system;\r\n        this._name = name || \"unlimited\";\r\n        this._log = log ? +log : 0; // #59\r\n\r\n        // 処理待ち管理用\r\n        this._waitTimeout = (typeof(queueWait) !== \"undefined\")\r\n                                ? queueWait : 10000;   // キュー滞留時間上限\r\n        this._waitCapacity  = (typeof(waitCapacity) !== \"undefined\")\r\n                                ? waitCapacity : Number.MAX_SAFE_INTEGER; // キューの深さ\r\n        this._waitHeap = Util.Heap(    // リソース解放待ちキュー（登録時間順）\r\n                function(obj){ return obj.getTime(); });\r\n        \r\n        // リソース管理用\r\n        this._holdTimeout  = (typeof(timeout)  !== \"undefined\") \r\n                                ? timeout : 10000;   // 処理のタイムアウト時間\r\n        this._holdCapacity = (typeof(holdCapacity) !== \"undefined\")\r\n                                ? holdCapacity : 1.0;   // 保有リソース量（数）\r\n        this._holdingQty = 0;   // 使用リソース量\r\n        this._holdHeap = Util.Heap( // 処理のタイムアウト管理用ヒープ{obj:,val:} #59\r\n                 function(node){ return node.val; }, // valはタイムアウト時刻\r\n                 function(node){ return node.obj; }); // objはvApp\r\n        \r\n        // イベントスケジュール制御用\r\n        this._sequenceTime = 0;   // シミュレータに登録したイベントの時刻（タイムアウトチェック用）\r\n        this._isScheduled = false; // シミュレータにタイムアウトチェックイベントをスケジュールしたか\r\n        if (0 < this._waitTimeout && 0 < this._holdTimeout){ // スケジュール間隔 #61\r\n            this._interval = Math.min(this._waitTimeout, this._holdTimeout);\r\n        } else if (0 < this._waitTimeout) {\r\n            this._interval = this._waitTimeout;\r\n        } else if (0 < this._holdTimeout) {\r\n            this._interval = this._holdTimeout;\r\n        } else {\r\n            this._interval = 0;\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    /**\r\n     * リソースチェックイベント（タイムアウトチェック）を開始する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Number}\r\n     *            startTime 開始時刻（UNIX時刻：ミリ秒）\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Object} イベント(this)\r\n     */\r\n    VirtualResource.prototype.start = function(startTime, system) { // #59\r\n        this._sequenceTime = startTime + this._interval; // シミュレータに登録するイベントの時刻\r\n        system.setEvent(this);    // シミュレータにタイムアウトチェックイベントをスケジュールする\r\n        this._isScheduled = true; // 「シミュレータにタイムアウトチェックイベントをスケジュールしたかフラグ」をON\r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * イベント時刻を返却する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @return {Number} イベント時刻（UNIX時刻：ミリ秒）\r\n     */\r\n    VirtualResource.prototype.getTime = function() {\r\n        return this._sequenceTime;\r\n    };\r\n    \r\n    /**\r\n     * タイムアウトチェック用仮想イベント\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @return {Array}再スケジュールするイベント（仮想アプリケーションorリソース）の配列、登録処理完了時はthisを含まない\r\n     */\r\n    VirtualResource.prototype.next = function(system) {\r\n        var events = []; // 戻り値\r\n        var now = this.getTime();\r\n        // リソース解放待ち時間がタイムアウトしたappをタイムアウトさせる\r\n        var queuedTime = Number.MIN_SAFE_INTEGER; \r\n        while (0 < this._waitHeap.size() && this._waitTimeout <= now - queuedTime) {\r\n            queuedTime = this._waitHeap.top().getTime();\r\n            if (this._waitTimeout <= now - queuedTime) { // キューイング取引がタイムアウトしているとき\r\n                // リソース解放待ちHeapからfreeするappを取り出す\r\n                var app = this._waitHeap.pop();\r\n                // appをアベンドさせる(holdリソース解放なし）\r\n                var apps = app.abend(system, this, \"E_QTO\", this._name + \" queue timeout\",\r\n                        false, queuedTime + this._waitTimeout); // appにfree時刻をセットする\r\n                // appsをスケジュールイベント登録対象に加える\r\n                if (apps.length){\r\n                    events = events.concat(apps);\r\n                }\r\n            }\r\n        }\r\n        // リソース使用時間がタイムアウトしたappをタイムアウトさせる #59\r\n        var holdTimeoutTime = Number.MIN_SAFE_INTEGER;\r\n        while (0 < this._holdHeap.size() && holdTimeoutTime <= now) {\r\n            var top = this._holdHeap.top();\r\n            holdTimeoutTime = top.val;\r\n            if (holdTimeoutTime <= now) { // 処理中取引がタイムアウトしているとき #61\r\n                var app = top.obj;\r\n                // appがスケジュールされている場合削除する（スケジューラに登録されていない場合何も起きない）\r\n                system.removeEvent(app);\r\n                // appの使用時間がタイムアウトしたリソースを解放する（注：abendで解放させると永久ループする）\r\n                events = events.concat(this.free(app));                \r\n                // appをタイムアウト時刻にアベンドさせる(holdリソース解放を伴う）\r\n                events = events.concat(app.abend(system, this,\"E_HTO\", \r\n                            this._name + \" hold timeout\", false, holdTimeoutTime));\r\n            }\r\n        }\r\n        // 次回タイムアウトチェック時刻を設定する\r\n        if ((0 < this._waitHeap.size()) || (0 < this._holdHeap.size())) {\r\n            // タイムアウトの設定があるとき、 #61\r\n            // リソース解放待ちvAppがあるとき、(タイムアウトしていない)最古vAppのタイムアウト時刻\r\n            // リソース解放待ちvAppがないとき、現在からタイムアウト時刻後 にスケジュールする\r\n            var nextWaitTimeout = Number.MAX_SAFE_INTEGER;\r\n            if (0 < this._waitTimeout) {\r\n                if ( 0 < this._waitHeap.size() \r\n                        && now <= this._waitTimeout + this._waitHeap.top().getTime()) {\r\n                    nextWaitTimeout = this._waitHeap.top().getTime() + this._waitTimeout; \r\n                } else {\r\n                    nextWaitTimeout = now + this._waitTimeout;\r\n                }\r\n            }            \r\n            var nextHoldTimeout = Number.MAX_SAFE_INTEGER;\r\n            if (0 < this._holdTimeout) {\r\n                if(0 < this._holdHeap.size()) {\r\n                    nextHoldTimeout = this._holdHeap.top().val;\r\n                } else {\r\n                    nextHoldTimeout = now + this._holdTimeout;\r\n                }\r\n            }\r\n            this._sequenceTime = Math.min(nextWaitTimeout, nextHoldTimeout);\r\n            if (this._sequenceTime < Number.MAX_SAFE_INTEGER) {\r\n                events.push(this); // タイムアウトチェックイベントをケジュールイベント登録対象に加える\r\n            } else {\r\n                this._isScheduled = false;\r\n            }\r\n        } else { \r\n            // 以外のとき、シミュレータにタイムアウトチェックイベントを再スケジュールしない\r\n            this._isScheduled = false;\r\n        }\r\n        return events;\r\n    };\r\n\r\n    /**\r\n     * リソースを取得する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {Object}\r\n     *            vApp リソースにhold要求する仮想AP\r\n     * @return {Objcet} 処理結果{result:boolean, events:Array}<br>\r\n     *         {boolean} result :\r\n     *         true:正常（リソース取得、取得待ち、取得不要）、false:エラー（リソース枯渇E_QOF)）<br>\r\n     *         {Array} :events リソース取得後、スケジューラに登録するイベントの配列<br>\r\n     *         [vApp]： リソースを取得できたとき、もしくはリソース枯渇時でvApp再処理の場合、スケジュール対象の vApp\r\n     *         が登録された配列[vApp]を返却<br>\r\n     *         []： リソース待ちに登録されたとき、既にリソースが管理するスケジューラに登録さているので、空の配列[]を返却<br>\r\n     *         もしくはリソース枯渇時で繰返し完了時、再スケジュールしないので[]を返却\r\n     */\r\n    VirtualResource.prototype.hold = function(system, vApp) {\r\n        var ret = { result : true,\r\n                    events : [vApp] }; // 戻り値 #61\r\n        if (this._name === \"unlimited\") return ret; // [vApp] リソース解放待ちを管理しないとき\r\n        vApp.logger(4, this._log, vApp._sequenceTime, vApp, this, 'HOLD' , undefined);\r\n        // タイムアウトチェックイベントがスケジュールされていないとき、スケジュールする\r\n        if (!this._isScheduled && (0 < this._interval)) {\r\n            this.start(system.getTime(), system);\r\n        }\r\n        // リソースを取得できるとき、使用リソース量（数）を増やし、実行中処理管理ヒープに登録し、スケジュール対象とする\r\n        var amount = vApp.getAmount(this); // 消費リソース量(デフォルト1.0）\r\n        if (amount <= (this._holdCapacity - this._holdingQty)) {\r\n            // 使用リソースを増やす\r\n            this._holdingQty += amount;\r\n            // タイムアウト管理対象リソースのとき、vAppをタイムアウト管理対象に加える #59\r\n            if (0 < this._holdTimeout) {\r\n                this._holdHeap.push({obj: vApp, val: system.getTime() + this._holdTimeout});\r\n            }\r\n            vApp.logger(3, this._log, system.getTime(), vApp, this, 'hold' , undefined);\r\n            return ret; // [vApp]\r\n        }\r\n\r\n        // リソース解放待ちキューに空きがあるとき、vAppをリソース解放待ちに 登録する（スケジュールしない）\r\n        if ((this._waitHeap.size() < this._waitCapacity) && (0 < this._waitTimeout)){\r\n            // リソース解放待ちタイムアウト管理対象に加える\r\n            this._waitHeap.push(vApp);\r\n            vApp.addHistory(\"wait:\" + this._name, system.getTime()); // #61\r\n            vApp.logger(3, this._log, system.getTime(), vApp, this, 'wait' , undefined);\r\n            return { result: true, events: [] };\r\n        }\r\n        \r\n        // リソース解放待ちキューが溢れていた時、リソースを取得できずにアベンド（リソース解放なし、自AP継続の場合[vApp]をリターン） #61\r\n        var apps = vApp.abend(system, this, \"E_QOF\",\r\n                    \"[\" + this._name + \"] over flow\", false);\r\n        vApp.logger(3, this._log, system.getTime(), vApp, this, 'over' , undefined);\r\n        return { result: false, events: apps }; // #61\r\n    };\r\n\r\n    /**\r\n     * 引数vAppが使用していたリソースを解放する\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            vApp リソースにfree要求する仮想AP\r\n     * @param {Boolean}\r\n     *            [isHolding=true] 該当vAppが自リソースをholdしているか否か<br>\r\n     *            false指定時、指定vAppはリソースをholdしていない前提で、hold vApp一覧からの削除処理を行わない\r\n     * @return {Array} スケジューラに登録するイベントの配列([vApp] | [])\r\n     */\r\n    VirtualResource.prototype.free = function(vApp, isHolding) { // #59\r\n        vApp.logger(4, this._log, this._system.getTime(), vApp, this, 'FREE' , undefined);\r\n        isHolding = (typeof(isHolding) === \"boolean\") ? isHolding : true;\r\n        if (this._name === \"unlimited\") return []; // リソース解放待ちを管理しないとき\r\n        var vApps = []; // 戻り値\r\n        // 自リソースを使用している可能性があるとき、使用リソースを解放する\r\n        // 解放したvAppが使用していたリソース量(デフォルト1.0）を、使用リソース量（数）から減らす #59\r\n        if (isHolding === true) { // #61\r\n            this._holdingQty -= vApp.getAmount(this);\r\n            // タイムアウト管理対象リソースのとき、vAppをタイムアウト管理対象から削除する #61\r\n            if (0 < this._holdTimeout) { // #61\r\n                var app = this._holdHeap.del(vApp);\r\n            }\r\n            vApp.addHistory(\"free:\" + this._name, this._system.getTime());\r\n            vApp.logger(3, this._log, this._system.getTime(), vApp, this, 'del' , undefined);\r\n        }\r\n        // リソース解放待ちキューから、空きリソースで処理できるようになったvAppを取り出しスケジュールする #61\r\n        var marginQty = this._holdCapacity - this._holdingQty;\r\n        var addQty = this._waitHeap.top()\r\n                    ? this._waitHeap.top().getAmount(this) // 次のリソース解放待ちキューの使用量\r\n                    : Number.MAX_SAFE_INTEGER;\r\n        for (var i = this._waitHeap.size() && addQty <= marginQty; 0 < i; i--) {\r\n            // リソース解放待ちキューからfreeするappを取り出す\r\n            var app = this._waitHeap.pop();\r\n            // appにfree時刻をセットし、スケジュールイベント登録対象に加える\r\n            // (注：リソース取得はスケジュール後、E_HTOに伴う他のリソースの時刻は将来）\r\n            app.setSequenceTime(this._system.getTime(), \"release:\" + this._name);\r\n            vApps.push(app);\r\n            // 次のappのリソース量を加える\r\n            addQty += this._waitHeap.top() \r\n                    ? this._waitHeap.top().getAmount(this) // 次のリソース解放待ちキューの使用量\r\n                    : Number.MAX_SAFE_INTEGER;\r\n        }\r\n        return vApps;\r\n    };\r\n\r\n\r\n    /**\r\n     * 引数vAppをリソース開放待ちキューからリリースする\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            vApp リリースする仮想AP\r\n     * @return {Object | undefined} リリースした仮想AP\r\n     */\r\n    VirtualResource.prototype.release = function(vApp) { // #61\r\n        var app = this._waitHeap.del(vApp);\r\n        if (app) vApp.addHistory(\"release\", this._system.getTime());\r\n        return app;\r\n    }\r\n\r\n    \r\n    \r\n    /**\r\n     * イベント終了時処理（リソースが管理しているvAppをfinishさせる（強制終了させ処理中vAppはTATログ出力する）\r\n     * \r\n     * @memberof Simulator.VirtualResource\r\n     * @param {Object}\r\n     *            system VirtualSystem\r\n     * @param {String}\r\n     *            [logID=\"N_000\"] ログID（ログメッセージの先頭文字）\r\n     * @param {String}\r\n     *            [logMesseage=\"\"] ログメッセージ\r\n     * @param {Number}\r\n     *            forceTime 強制終了時刻を指定する（ミシュレーション停止後のeTat強制出力用）\r\n     * @return {null}\r\n     */\r\n    VirtualResource.prototype._finish = function(system, logID,\r\n                                        logMesseage, forceTime) { // #59\r\n        // シミュレーション終了後処理（処理中のvAppを強制終了する）\r\n        logID = logID || \"N_EoS\";\r\n        logMesseage = logMesseage || \"\";\r\n        while(0 < this._waitHeap.size()){\r\n            event = this._waitHeap.pop();\r\n            if (event._finish) {\r\n                event._finish(system, logID,\r\n                        \"[\" + this._name + \"] \" + logMesseage , forceTime);\r\n            }\r\n        }\r\n    }\r\n\r\n    /* new */\r\n    return VirtualResource;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-VirtualResource.js\n// module id = 33\n// module chunks = 0","import VirtualSystem from './simulator-VirtualSystem.js';\r\nimport * as Util from '../util/util.js';\r\n/**\r\n * @memberOf Simulator\r\n * @class virtualSystemByJson\r\n * @classdesc 仮想システム生成ツール(virtualSystemByJson)\r\n *            <p>\r\n *            Util管理用クラス（スタティックメソッドのみ）のためコンストラクタは使用しない\r\n */\r\nexport default (function() { // #53\r\n    \"use strict\";\r\n    /** @constructor */\r\n    function virtualSystemByJson(){\r\n        if(!(this instanceof virtualSystemByJson)){\r\n            return new virtualSystemByJson();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    //\r\n\r\n    // public\r\n    \r\n    // static\r\n    /**\r\n     * 初期表示用サンプルデータ(ETAT)を自動生成する\r\n     * \r\n     * @memberof Simulator.VirtualSystemByJson\r\n     * @param {String}\r\n     *            [jsonText] シミュレーション条件JSONテキスト\r\n     * @return {ETAT} 終了時刻のTAT（応答時間）時系列データ [{x:終了時刻(UNIX時刻の経過時間(秒)),\r\n     *         y:レスポンス(秒)}]\r\n     */\r\n    // CreateSampleTatLog\r\n    virtualSystemByJson.Execute = function(jsonText){ // #53\r\n        \"use strict\";\r\n        var vSys = {};\r\n        // parse\r\n        var json = JSON.parse(jsonText)\r\n        // virtual system と resources の設定\r\n        var log = (json.log !== undefined) ? json.log : false; // #59\r\n        var start = (json.start !== undefined) \r\n                    ? Util.S2D(json.start) : new Date(1970,1,2);\r\n        var end = start + Util.S2N(json.end, \"24*h\");\r\n        var resources = json.resources;\r\n        for (var i = 0; i < resources.length; i++) {\r\n            resources[i].timeout = Util.S2N(resources[i].timeout, \"10*sec\");\r\n            resources[i].qWait = Util.S2N(resources[i].qWait, \"10*sec\");\r\n        }\r\n        vSys = VirtualSystem(start, end, json.resources, log);\r\n        // model の取得\r\n        var models = json.models;\r\n        for (var i = 0; i < models.length; i++) {\r\n            var model = models[i];\r\n            var name = Object.keys(model)[0]; // モデルの名称\r\n            var m = model[name]; // モデル\r\n            var baseModel = m.baseModel; // baseModel\r\n            for (var j = 0; j < m.sequence.length; j++) {\r\n                // 時間指定文字列を、ミリ秒数値に変換する（例：\"3*sec\"->3000)\r\n                m.sequence[j].tatMin = Util.S2N(m.sequence[j].tatMin);\r\n                m.sequence[j].tat = Util.S2N(m.sequence[j].tat);\r\n            }\r\n            // sequenceに、baseModelを展開し、未開放リソースの開放処理を登録する\r\n            models[name] = VirtualSystem.getModel(\r\n                        baseModel.holds, \r\n                        Util.S2N(baseModel.tatMin), Util.S2N(baseModel.tat),\r\n                        m.sequence, \r\n                        (typeof(m.times) === \"number\") ? m.times : 1, // #61\r\n                        Util.S2N(m.thinkTimeMin), Util.S2N(m.thinkTime)); \r\n        }\r\n        // client の設定\r\n        var clients = json.clients;\r\n        for (var i = 0; i < clients.length; i++) {\r\n            var c = clients[i];\r\n            var cStart = start + Util.S2N(c.start, 0);\r\n            var cEnd   = start + Util.S2N(c.end, 24*60*60*1000);\r\n            vSys.setClients(c.user, c.message, c.num, cStart, cEnd, models[c.model]);\r\n        }\r\n        if (log) console.log(vSys); // #59\r\n        return vSys.execute();\r\n    }\r\n\r\n    /**\r\n     * シミュレーション条件JSONテキストを作成する\r\n     * \r\n     * @memberof Simulator.VirtualSystemByJson\r\n     * @param {Number}\r\n     *            [n = 0] シナリオ番号\r\n     * @return {String} シミュレーション条件JSONテキスト\r\n     */\r\n    // CreateSampleTatLogJson\r\n    virtualSystemByJson.GetJsonConfig = function(n){ // #53\r\n        \"use strict\";\r\n        n = (typeof(n) !== \"undefined\") ? n : 0;\r\n        var jsonText = \"\";\r\n        if (n === 0) {\r\n            jsonText =  '{\\n'\r\n                + '\"log\" : 1,\\n'\r\n                + '\"start\" : \"2017/01/02 00:00:00.000\",\\n'\r\n                + '\"end\"   : \"17.0*h\",\\n'\r\n                + '\"resources\" : [\\n'\r\n                + '  {\"type\" :\"WEB\", \"thread\":1024,\"timeout\":\"300*sec\", \"q\":1280, \"qWait\":0},\\n'\r\n                + '  {\"type\" :\"AP\",  \"thread\":20,  \"timeout\":\"300*sec\", \"q\":1280, \"qWait\":0},\\n'\r\n                + '  {\"type\" :\"DB\",  \"thread\":10,  \"timeout\": \"10*sec\", \"q\":10,  \"qWait\":\"10*sec\"}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"models\" : [\\n' // 取引モデル一覧\r\n                + '  { \"ON-1\" : {\\n' // オンライン取引1\r\n                + '    \"times\": 60, \"thinkTimeMin\":\"3*sec\", \"thinkTime\": \"10*sec\",\\n'\r\n                + '    \"baseModel\":  {\"holds\": [\"WEB\",\"AP\",\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":30, \"tat\":50, \"note\":\"select A\"},\\n'\r\n                + '      {\"tatMin\":50, \"tat\":50, \"note\":\"updateB\", \"hold\":\"TBL_B\"},\\n'\r\n                + '      {\"tatMin\":80, \"tat\":100,\"note\":\"updateC\", \"hold\":\"TBL_C\"}\\n'\r\n                + '    ]}},\\n'\r\n                + ' { \"ON-2\" : {\\n' // オンライン取引2\r\n                + '    \"times\": 60, \"thinkTimeMin\":\"500*ms\", \"thinkTime\": \"1*sec\",\\n'\r\n                + '    \"baseModel\":  {\"holds\": [\"WEB\",\"AP\",\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":\"100*ms\", \"tat\":\"500*ms\", \"hold\":\"\"}\\n'\r\n                + '    ]}},\\n'\r\n                + ' { \"BATCH-1\" : {\\n' // バッチ取引3\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"5*ms\"},\\n'\r\n                + '    \"sequence\": [\\n'\r\n                + '      {\"tatMin\":\"2*sec\",\"tat\":\"5*sec\",\"note\":\"updateB\",\"hold\":\"TBL_B\"}\\n'\r\n                + '    ]}}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"clients\" : [\\n' // ユーザ作成条件\r\n                + '  {\"num\":100,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"ON-1\",  \"user\" :\"userU\", \"message\":\"select A update B,C\"},\\n'\r\n                + '  {\"num\": 20,\"start\":\"16.5*h\", \"end\":\"16.6*h\", \"model\":\"ON-1\",  \"user\" :\"userT\", \"message\":\"select A update B,C 【増】\"},\\n'\r\n                + '  {\"num\":100,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"ON-2\",  \"user\" :\"userS\", \"message\":\"排他なし(WEBのみ)\"},\\n'\r\n                + '  {\"num\": 20,\"start\":\"16.0*h\", \"end\":\"17.0*h\", \"model\":\"BATCH-1\",\"user\":\"userB\", \"message\":\"バッチ処理 update B＊＊＊＊＊\"}\\n'\r\n                + ']\\n'\r\n                + '}\\n';\r\n        } else if (n === 1) {\r\n            // test用\r\n            jsonText =  '{\\n'\r\n                + '\"//\" : \"log（任意、デフォルト3）:詳細ログ出力指定(0:なし, 1:エラー時のみ, 2:+ETAT, 3:+push/pop, 4:+HOLD/FREE)\",\\n'\r\n                + '\"//\" : \"start/end:シミュレーション開始時刻/終了時刻\",\\n'\r\n                + '\"log\" : 1,\\n'\r\n                + '\"start\" : \"1970/01/02 00:00:00.000\",\\n'\r\n                + '\"end\"   : \"30.0*sec\",\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"resources:sequenceのhold/freeで指定するリソース名の定義\",\\n'\r\n                + '\"//\" : \"type:リソース名、thread:最大同時hold数、timeout：holdタイムアウト時間\",\\n'\r\n                + '\"//\" : \"　　　　　　　　　　　q:最大hold待ち数、qWait:最大hold待ち時間\",\\n'\r\n                + '\"resources\" : [\\n'\r\n                + '  {\"type\" :\"DB\",  \"thread\":2,  \"timeout\": \"5*sec\", \"q\":1,  \"qWait\":\"2*sec\"}\\n'\r\n                + '],\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"models:clientsで指定するモデル名(model)の定義、以下modelsで指定できる項目\",\\n'\r\n                + '\"//\" : \"baseModel:複数リソースのsequenceをまとめて宣言できる、sequenceに展開した後処理される、任意指定\",\\n'\r\n                + '\"//\" : \"sequence:指定された順にリソースを取得する、配列内に複数指定可、sequenceも複数指定可\",\\n'\r\n                + '\"//\" : \"hold：リソース名、holds(baseModelのみ指定可）：リソース一覧、各々にtat/tatMinが適用される\",\\n'\r\n                + '\"//\" : \"tat/tatMin：リソースの取得に要する平均/最小時間、tatMinのデフォルトはtat\",\\n'\r\n                + '\"//\" : \"　　　　　　★注：tatはリソースの使用時間ではない、リソース使用時間を指定す場合はfreeで指定\",\\n'\r\n                + '\"//\" : \"数値はミリ秒単位、*ms,*sec,*min,*h,*day 指定可\",\\n'\r\n                + '\"//\" : \"times：繰返し回数\",\\n'\r\n                + '\"//\" : \"thinkTime/thinkTimeMin：繰返し時の間隔の平均/最小時間、thinkTimeMinのデフォルトはthinkTime\",\\n'\r\n                + '\"//\" : \"free：[リソース名の配列]、指定リソースを開放する、free指定の無いリソースはシーケンスの最後にfreeされる\",\\n'\r\n                + '\"models\" : [\\n' // 取引モデル一覧\r\n                + ' { \"TEST-AB\" : {\\n' // テスト取引\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"2*ms\"},\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_A\", \"tatMin\":\"1*sec\", \"tat\":\"1*sec\"}],\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_B\", \"tatMin\":\"3*sec\", \"tat\":\"3*sec\"}],\\n'\r\n                + '    \"times\": 2, \"thinkTimeMin\":\"1*sec\", \"thinkTime\": \"1*sec\"}},\\n'\r\n                + ' { \"TEST-BA\" : {\\n' // テスト取引\r\n                + '    \"baseModel\":  {\"holds\": [\"DB\"], \"tatMin\": \"2*ms\", \"tat\":\"2*ms\"},\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_B\", \"tatMin\":\"1*sec\", \"tat\":\"1*sec\"}],\\n'\r\n                + '    \"sequence\": [{\"hold\":\"TBL_A\", \"tatMin\":\"3*sec\", \"tat\":\"3*sec\"}],\\n'\r\n                + '    \"times\": 2, \"thinkTimeMin\":\"1*sec\", \"thinkTime\": \"1*sec\"}}\\n'\r\n                + '    ],\\n'\r\n                + '\\n'\r\n                + '\"//\" : \"clients：仮想アプリケーションの起動クライアントの定義\",\\n'\r\n                + '\"//\" : \"num:作成クライアント数、start～endの間で、ランダム（指数分布）に指定回数起動する\",\\n'\r\n                + '\"//\" : \"start/end:仮想クライアント作成/終了時刻、先頭で宣言したstartからの相対時刻\",\\n'\r\n                + '\"//\" : \"model:modelsで宣言したモデル名\",\\n'\r\n                + '\"//\" : \"user:user+通番 のユーザ名で仮想クライアントが作成される\",\\n'\r\n                + '\"clients\" : [\\n' // ユーザ作成条件\r\n                + '  {\"num\": 1,\"start\":\"0*sec\", \"end\":\"0*sec\", \"model\":\"TEST-AB\",\"user\" :\"testAB1\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"1*sec\", \"end\":\"1*sec\", \"model\":\"TEST-AB\",\"user\" :\"testAB2\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"3*sec\", \"end\":\"3*sec\", \"model\":\"TEST-BA\",\"user\" :\"testBA3\"},\\n'\r\n                + '  {\"num\": 1,\"start\":\"4*sec\", \"end\":\"4*sec\", \"model\":\"TEST-BA\",\"user\" :\"testBA4\"}\\n'\r\n                + ' ]\\n'\r\n                + '}\\n';\r\n        }\r\n\r\n        return jsonText; \r\n    }\r\n\r\n    /* new */\r\n    return virtualSystemByJson;\r\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-VirtualSystemByJson.js\n// module id = 34\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport {CreateSampleTatLogAndChartShow} from '../tatLogDiver/tatLogDiver-Init.js';\r\n\r\n/**\r\n * @memberOf Simulator\r\n * @class MenuConfig\r\n * @classdesc シミュレータ用メニューHTML定義\r\n * \r\n */\r\nexport default function() { // #74\r\n    // Simulator Config用関数定義(radio用） #53\r\n    var func_S_SIMU_000 = function(){ CreateSampleTatLogAndChartShow(0); };\r\n    var func_S_SIMU_001 = function(){ CreateSampleTatLogAndChartShow(1); };\r\n    // Simulator Config設定画面定義 #53\r\n    var env = \"Simulator\"\r\n        // this[\"_config_\" + env] = Util.Config(env) // #53\r\n    HJN.Config[env] = Util.Config(env)\r\n         .n(\"<br>\")\r\n         .label(null,\" If you change the scenario below,\").n()\r\n         .label(null,\"JSON is initialized and re-simulated.\").n()\r\n         .n(\"<br>\")\r\n         .name(\"S_SIMU\")\r\n             .radio(\"S_SIMU_000\", null, \r\n                       \"1 hour with table(B) lock.<br>\"\r\n                     + \"- online[100-500ms 2-5tps]<br>\" \r\n                     + \"- batch[2-5sec evry3min]\",\r\n                     true ,null, func_S_SIMU_000).n()\r\n             .radio(\"S_SIMU_001\", null, \"for test\", \r\n                     false ,null, func_S_SIMU_001).n()\r\n     ;\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulator/simulator-MenuConfig.js\n// module id = 35\n// module chunks = 0","import * as Simulator from '../simulator/simulator.js';\r\n\r\n/**\r\n * tatLogDiverのメニューを追加する\r\n * \r\n * @memberof tatLogDiver\r\n */\r\nexport default function Menu(that) {\r\n    \"use strict\";\r\n    // メニュー用のエレメントを取得する\r\n    var divMenuId = that.chartIdName + \"_menu\";\r\n    var divMenu = document.getElementById(divMenuId);\r\n    // menu用divがないとき、chartの直前に追加する #13\r\n    if (!divMenu) {\r\n        var div = document.createElement('div');\r\n        div.id = divMenuId;\r\n        div.className = \"menuBar\";\r\n        divMenu = that.chartId.parentNode.insertBefore(div, that.chartId);\r\n    }\r\n    // メニューボタン定義を登録する\r\n    var g = that.globalName;\r\n    // 上下段共通ボタンの定義(Download Menu)\r\n    var menuDownloadImg = { // getATag\r\n        menuLabel : \"graph image(.png)\",\r\n        funcName : g + \".menuDownloadImg\",\r\n        menuId : divMenuId + \"_DownloadImg\",\r\n        fileName : \"graph.png\"\r\n    };\r\n    var menuDownloadCsv = { // getATag\r\n        menuLabel : \"graph data(.csv)\",\r\n        funcName : g + \".menuDownloadCsv\",\r\n        menuId : divMenuId + \"_DownloadCsv\",\r\n        fileName : \"graph.csv\"\r\n    };\r\n    var menuDownloadLog = { // getATag\r\n        menuLabel : \"graph log records(.csv)\",\r\n        funcName : g + \".menuDownloadLog\",\r\n        menuId : divMenuId + \"_DownloadLog\",\r\n        fileName : \"tatlog.csv\"\r\n    };\r\n    var menuDownloadConc = { // getATag\r\n        menuLabel : \"conc log records(.csv)\",\r\n        funcName : g + \".menuDownloadConc\",\r\n        menuId : divMenuId + \"_DownloadConc\",\r\n        fileName : \"conclog.csv\"\r\n    };\r\n\r\n    // メニューを追加する\r\n    var accordion = document.createElement('div'); // 要素の作成\r\n    var _id = 0;\r\n    if (HJN.chart.chartId === that.chartId) { // 上段グラフ用機能のメニュー追加\r\n        // File Menu\r\n        var menuOpenCsv = { // getInputTag\r\n            menuLabel : \"Open csv data file\",\r\n            funcName : g + \".menuOpenCsv\",\r\n            menuId : divMenuId + \"_OpenCsv \"\r\n        };\r\n        var menuSaveConfig = { // getATag\r\n            menuLabel : \"save format (.json)\",\r\n            funcName : g + \".menuSaveConfig\",\r\n            menuId : divMenuId + \"_SaveCongig\",\r\n            fileName : \"hjnconfig.json\"\r\n        };\r\n        var menuLoadConfig = { // getInputTag #10\r\n            menuLabel : \"load format (.json)\",\r\n            funcName : g + \".menuLoadConfig\",\r\n            menuId : divMenuId + \"_LoadCongig\"\r\n        };\r\n        accordion.innerHTML = '<li class=\"hjnMenuLv1\">'\r\n                + getAccordionTag(that, ++_id, \"File\")\r\n                + '<ul class=\"hjnMenuLv2\">' + getInputTag(menuOpenCsv)\r\n//                + that.fileParser.getConfigHtml(\"File\") // #24\r\n                + HJN.Config.File.getHtml() // #74\r\n                + getATag(menuSaveConfig) + getInputTag(menuLoadConfig) // #10\r\n                + '</ul>' + '</li>';\r\n\r\n        // Filter Menu #34\r\n        var menuFilterApply = { // getFuncTag #34\r\n            menuLabel : \"Apply filter & reload\",\r\n            funcName : g + \".menuFilterApply\",\r\n            menuId : divMenuId + \"_FilterApply\"\r\n        };\r\n        var menuFilterClear = { // getFuncTag #34\r\n            menuLabel : \"Clear filter condition\",\r\n            funcName : g + \".menuFilterClear\",\r\n            menuId : divMenuId + \"_FilterClear\"\r\n        };\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Filter\">'\r\n                + getAccordionTag(that, ++_id, \"Filter\")\r\n                + '<ul class=\"hjnMenuLv2\">'\r\n//                + that.fileParser.getConfigHtml(\"Filter\") // #24\r\n                + HJN.Config.Filter.getHtml() // #74\r\n                + getFuncTag(menuFilterApply) + getFuncTag(menuFilterClear)\r\n                + '</ul>' + '</li>';\r\n\r\n        // Simulator Menu #53\r\n        Simulator.MenuConfig(); // #74\r\n        var menuSimulatorSimulate = {\r\n            menuLabel : \"Simulate\",\r\n            funcName : g + \".menuSimulatorSimulate\",\r\n            menuId : divMenuId + \"_SimulatorSimulate\"\r\n        };\r\n        var menuSimulatorEditor = {\r\n            menuLabel : \"JSON Editor(Open/Close)\",\r\n            funcName : g + \".menuSimulatorEditor\",\r\n            menuId : divMenuId + \"_SimulatorEditor\"\r\n        };\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Simulator\">'\r\n                + getAccordionTag(that, ++_id, \"Simulator\")\r\n                + '<ul class=\"hjnMenuLv2\">' + getFuncTag(menuSimulatorSimulate)\r\n                + getFuncTag(menuSimulatorEditor)\r\n                + HJN.Config.Simulator.getHtml() // #74\r\n                + '</ul>' + '</li>';\r\n        // シミュレーション条件JSON Editエリアを設定する\r\n        var divSimulator = document.getElementById(\"Simulator\");\r\n        var jsonEditor = document.createElement('div'); // 要素の作成\r\n        jsonEditor.innerHTML = '<textarea id=\"SimulatorEditor\" '\r\n                + 'style=\"width:99%;border:none;resize:none;background:rgba(255,255,255,0.5);height:500px;\">'\r\n        divSimulator.appendChild(jsonEditor);\r\n        var divSimulatorEditor = document.getElementById(\"SimulatorEditor\");\r\n        // divSimulatorEditor.readOnly = true; // #22\r\n        divSimulatorEditor.value = Simulator.virtualSystemByJson\r\n                .GetJsonConfig(); // デフォルトJSON\r\n\r\n        // View Menu\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_View\">'\r\n                + getAccordionTag(that, ++_id, \"View\", true)\r\n                + '<ul class=\"hjnMenuLv2\">' // \r\n                + '<li><div id=\"' + that.chartIdName + '_legend\"></div></li>'\r\n                + '</ul>' + '</li>';\r\n\r\n        // Download Menu\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\" id=\"menu_Download\">'\r\n                + getAccordionTag(that, ++_id, \"Download\")\r\n                + '<ul class=\"hjnMenuLv2\">' //\r\n                + getATag(menuDownloadImg, \"Upper \")\r\n                + getATag(menuDownloadCsv, \"Upper \")\r\n                + getATag(menuDownloadLog, \"Upper \") + '</ul>' + '</li>';\r\n\r\n        // メニュー登録\r\n        divMenu.appendChild(accordion);\r\n        // イベントリスナー登録\r\n        document.getElementById(menuOpenCsv.menuId).addEventListener('change',\r\n                that.menuOpenCsv.bind(that), false); // File Open用\r\n        document.getElementById(menuLoadConfig.menuId).addEventListener(\r\n                'change', that.menuLoadConfig.bind(that), false); // LoadConfig用\r\n\r\n    } else { // 下段用グラフ機能のメニュー追加\r\n        _id += 100;\r\n        // Download Menu\r\n        var chartDownloadUl = document.createElement('ul');\r\n        chartDownloadUl.className = \"hjnMenuLv2\";\r\n        chartDownloadUl.innerHTML = '' //\r\n                + getATag(menuDownloadImg, \"Detail \")\r\n                + getATag(menuDownloadCsv, \"Detail \")\r\n                + getATag(menuDownloadLog, \"Detail \")\r\n                + getATag(menuDownloadConc, \"Detail \");\r\n        var chartDownload = document.getElementById(\"menu_Download\");\r\n        chartDownload.appendChild(chartDownloadUl);\r\n\r\n        // View Menu\r\n        var chartViewUl = document.createElement('ul');\r\n        chartViewUl.className = \"hjnMenuLv2\";\r\n        chartViewUl.innerHTML = '<li><div id=\"' + that.chartIdName\r\n                + '_legend\"></div></li>';\r\n        var chartView = document.getElementById(\"menu_View\");\r\n        chartView.appendChild(chartViewUl);\r\n\r\n        // \"Bottom detail graph\" Menu\r\n        accordion.innerHTML = '<li class=\"hjnMenuLv1\">'\r\n                + getAccordionTag(that, ++_id, \"Bottom detail graph\", true)\r\n                + '<ul class=\"hjnMenuLv2\">' //\r\n                + '<ol><div id=\"detailTimeRange\">' + getDetailTimeRangeTag()\r\n                + '</div></ol>' // #51\r\n                + '<li><div id=\"chartPlots\"></div></li>' //\r\n                + '</ul>' + '</li>';\r\n\r\n        // Help Menu\r\n        var menuHelpAbout = { // getAlertTag\r\n            menuLabel : \"about TAT log diver\",\r\n            menuId : divMenuId + \"_HelpAbout\",\r\n            strFuncName : \"HJN.init.Copyright()\"\r\n        };\r\n        accordion.innerHTML += '<li class=\"hjnMenuLv1\">'\r\n                + getAccordionTag(that, ++_id, \"Help\")\r\n                + '<ul class=\"hjnMenuLv2\" style=\"width: 100%;\">' //\r\n                + getAlertTag(menuHelpAbout) + '</ul>' + '</li>';\r\n\r\n        // メニュー登録\r\n        divMenu.appendChild(accordion);\r\n    }\r\n\r\n    // アコーディオンラベル用<input><label>タグ編集（内部関数宣言） #31\r\n    // idは、ユニークな英数字なら何でもよい（ラベル押下時のアコーディオン開閉ラジオボタン連動用の接尾語）\r\n    function getAccordionTag(that, id, labelText, isChecked) {\r\n        var isAccordion = true, // true:アコーディオン型 false:折りたたみ型 #21\r\n        typeStr = isAccordion ? ' type=\"checkbox\" name=\"accordion\" '\r\n                : ' type=\"radio\" name=\"accordion\" ', //\r\n        checkedStr = ' checked=\"checked\" ';\r\n        return '' + '<input id=\"ac-' + that.chartIdName + id + '\"' + typeStr\r\n                + (isChecked ? checkedStr : '') + '\">' + '<label for=\"ac-'\r\n                + that.chartIdName + id + '\">' + labelText + '</label>';\r\n    }\r\n\r\n    // File Open用<input>タグ編集（内部関数宣言）\r\n    // '<ol><a><label>Child Menu<input type=\"file\" id=\"xxx\"\r\n    // multiple/></label></a></ol>\r\n    function getInputTag(arg) {\r\n        return '' + '<ol><a><label class=\"hjnButton4Input\">' + arg.menuLabel // #51\r\n                + '<input type=\"file\" id=\"' + arg.menuId + '\"  multiple />'\r\n                + '</label></a></ol>';\r\n    }\r\n\r\n    // ダウンロード用<A>タグ編集（内部関数宣言）\r\n    // '<li><a id=\"xxx\" href=\"#\">Child Menu</a><li/>'\r\n    function getATag(arg, preLabel) {\r\n        preLabel = preLabel || \"\";\r\n        return '' + '<li><a id=\"' + arg.menuId + '\" '\r\n                + 'class=\"hjnButton4Input\" href=\"#\" ' // #51\r\n                + 'download=\"' + arg.fileName + '\" ' //\r\n                + 'onclick=\"' + arg.funcName + '(' + \"'\" + arg.menuId + \"', '\"\r\n                + arg.fileName + \"'\" + ')\" ' + '>' + preLabel + arg.menuLabel\r\n                + '</a></li>';\r\n    }\r\n\r\n    // グローバルメソッド呼出用<A>タグ編集（内部関数宣言） #34\r\n    // '<li><a id=\"xxx\" href=\"#\">Child Menu</a></li>'\r\n    function getFuncTag(arg, preLabel) {\r\n        preLabel = preLabel || \"\";\r\n        return '' + '<li><a id=\"' + arg.menuId + ' \"'\r\n                + 'class=\"hjnButton4Input\" href=\"#\" ' // #51\r\n                + 'onclick=\"' + arg.funcName + '()\">' //\r\n                + preLabel + arg.menuLabel + '</a></li>';\r\n    }\r\n\r\n    // Alert用<A>タグ編集（内部関数宣言）\r\n    // '<a id=\"xxx\" onclick=Alert(\"xxx\")>Child Menu</a>'\r\n    function getAlertTag(arg) {\r\n        return '' + '<ol><a id=\"' + arg.menuId + '\"'\r\n                + 'class=\"hjnButton4Input\" ' // #51\r\n                + ' onclick=\"alert(' + arg.strFuncName + \")\" + '\"' + '>' //\r\n                + '<label>' + arg.menuLabel + '</label></a></ol>';\r\n    }\r\n\r\n    // 下段表示幅指定用<div>タグ編集\r\n    function getDetailTimeRangeTag() {\r\n        var UNIT_RANGE= [ // #48\r\n            { label: \"sec\",    val: \"1000\" },\r\n            { label: \"10sec\",  val: \"10000\", selected: \"selected\" },\r\n            { label: \"min\",    val: \"60000\" },\r\n            { label: \"10min\",  val: \"600000\" }, \r\n            { label: \"hour\",   val: \"3600000\" },\r\n            { label: \"6hours\", val: \"21600000\" },\r\n            { label: \"day\",    val: \"86400000\" }, \r\n            { label: \"year\",   val: \"31536000000\" } ];\r\n\r\n        var initPlus = 1, initMinus = 2; // #3\r\n        return 'Range: '\r\n                + '- <input type=\"number\" id=\"DetailRangeMinus\" min=\"0\" step=\"1\"'\r\n                + 'value=\"'\r\n                + initPlus\r\n                + '\" style=\"width:40px; \"  onchange=\"HJN.init.setDetailRange()\"> '\r\n                + '+ <input type=\"number\" id=\"DetailRangePlus\" min=\"0\" step=\"1\"'\r\n                + 'value=\"'\r\n                + initMinus\r\n                + '\" style=\"width:40px; \"  onchange=\"HJN.init.setDetailRange()\"> '\r\n                + '<select id=\"DetailRangeUnit\" class=\"hjnLabel4Input\" onchange=\"HJN.init.setDetailRange()\">' // #48\r\n                + UNIT_RANGE.reduce(function (prev, e, i, a) {\r\n                    return prev + '<option value=\"' + e.val + '\" '\r\n                            + (e.selected || \"\") + '>' + e.label // #53\r\n                            + '</option>';\r\n                }, '') + '</select>';\r\n    }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Menu.js\n// module id = 36\n// module chunks = 0","export var Copyright = {\r\n    Version : \"b18.02.09\",\r\n    text : \"&copy; 2017-2018 Junichiroh Hirose\\n\" +\r\n                \"https://github.com/hirosejn/HJN\"\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Copyright.js\n// module id = 37\n// module chunks = 0","import * as Util from '../util/util.js';\r\nimport {HJN} from './tatLogDiver-HJN.js';\r\nimport * as TimeSeries from '../timeSeries/timeSeries.js';\r\n\r\n/**\r\n * グラフの点をクリックした際に決まる下段グラフの表示条件\r\n * \r\n * @namespace Plot\r\n */\r\nexport default function Plot(){};\r\nHJN.Plot = Plot;\r\n\r\n/**\r\n * Plotの一覧\r\n * \r\n * @type array.<String, Boolean, Boolean, index, xMs, Number, Number, Number>\r\n * @prop {String} label Plot一覧に表示する文字列\r\n * @prop {Boolean} ckBox チェックボックスの選択状態<br>\r\n *       （選択後すぐに削除されるのでtrueとなることはない）\r\n * @prop {Boolean} radio ラジオボタンの選択状態\r\n * @prop {index} n グラフ番号\r\n * @prop {xMs} x xの値\r\n * @prop {Number} y yの値\r\n * @prop {Number} rangeMinus 表示幅時間マイナス（秒）\r\n * @prop {Number} rangePlus 表示幅時間プラス（秒）\r\n * @prop {Number} rangeUnit 表示幅時間 単位（sec:1/min:60/hour:3600/day:86400)\r\n * \r\n */\r\nHJN.Plot.List = [];\r\n\r\n/**\r\n * point/baloonクリック時呼出し用関数<br>\r\n * 詳細グラフを描画し、Plotを更新する\r\n * \r\n * @param {Objcet}\r\n *            point dygraph の point\r\n */\r\nPlot.PointClickCallback = function(point) {\r\n    \"use strict\";\r\n    Util.Logger.ShowLogText(\"[0:PointClickCallback]start---------------\",\"calc\");\r\n    var n = HJN.seriesConfig.findIndex(function(e){ return e.key === point.name; }),// シリーズ番号\r\n        x = point.xval, // ミリ秒\r\n        y = point.yval; // 秒\r\n\r\n    // ETPS,EMPS,EAPSのとき、TATが幅に含まれるよう、幅(range)を拡大する #57\r\n    var rangeTagUnit = document.getElementById(\"DetailRangeUnit\");\r\n    var rangeUnit  = rangeTagUnit  ? +rangeTagUnit.value : TimeSeries.Tat.CYCLE;\r\n    if ((n === HJN.ETPS.N || n === HJN.EMPS.N || n === HJN.EAPS.N) \r\n            && rangeUnit < TimeSeries.Tat.CYCLE) {\r\n        rangeUnit = TimeSeries.Tat.CYCLE;\r\n        HJN.detailRangeUnit = rangeUnit;\r\n        // selectリストの選択を、rangeUnitに合わせる #57\r\n        for (var i = 0; i < rangeTagUnit.length; i++) {\r\n            if(HJN.detailRangeUnit <= rangeTagUnit[i].value){\r\n                rangeTagUnit[i].selected = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // グラフの日時で、詳細グラフを再作成する\r\n    HJN.init.SetDetailDateTime(x);\r\n    var tat = new TimeSeries.Tat(HJN.init.GetSliderRangedEtat()); // #57\r\n    HJN.chartD.setSeriesSet(tat); // #75\r\n    \r\n    // 下段の残処理終了後、下段データを登録描画する\r\n    HJN.chartD.graph.ready(function(){ HJN.chartD.update(HJN.chartD.seriesSet, n); }); // #57\r\n    // Hover表示しているplotを、Plot.Listに登録し、plotsアイコンを再描画する\r\n    HJN.Plot.Add(n, x, y);\r\n    // Balloonを再描画する\r\n    HJN.Plot.ShowBalloon();\r\n    // タッチデバイスでないとき、lineViewerに表示をクリップボードにコピーする\r\n    if (!Util.TouchPanel.isTouchableDevice()) { // #22\r\n        Util.CopyToClipboard(\"lineViewer\"); // #61\r\n    }\r\n};\r\n\r\n/**\r\n * point/baloonダブルクリック時呼出し用関数<br>\r\n * Plotを削除する\r\n * \r\n * @param {object}\r\n *            plot dygraphのpoint\r\n */\r\nPlot.PointDblClickCallback = function(point) {\r\n    \"use strict\";\r\n    // 指定plotを削除する\r\n    var n = HJN.seriesConfig.findIndex(function(e){ return e.key === point.name; }),\r\n        x = point.xval, // ミリ秒\r\n        i = HJN.Plot.List.findIndex(function(p){\r\n                return(p.n === n && p.x === x) ||   // 完全一致\r\n                        (\"tpsPlot\" in p &&          // 詳細一致\r\n                        p.tpsPlot.n === n && p.tpsPlot.x === x); });\r\n    if(0 <= i) HJN.Plot.List.splice(i, 1);\r\n    \r\n    Plot.Render();\r\n    // グラフ内の吹き出しを再表示する\r\n    Plot.ShowBalloon();\r\n};\r\n\r\n/**\r\n * クリック時のHoverからPlot.Listを設定する\r\n * \r\n * @param {index}\r\n *            n グラフのシリーズ番号\r\n * @param {xMs}\r\n *            x マウスクリック時のxの値（ミリ秒）\r\n * @param {Number}\r\n *            y マウスクリック時のyの値\r\n * @return {index} i plots内のplotの位置\r\n */\r\nPlot.Add=function(n, x, y) {\r\n    \"use strict\";\r\n    // 各plotを非選択状態とする\r\n    HJN.Plot.List.forEach(function(e){e.radio = false;});\r\n    // ラベルフォーマットの設定\r\n    var format = (n === HJN.ETPS.N || n === HJN.CTPS.N) ? \"hh:mm:ss\" : \"hh:mm:ss.ppp\",\r\n        label = Util.D2S(x, format, true) + \" \" + // #61\r\n                HJN.seriesConfig[n].label.replace(\"%N\",Util.N2S(y));\r\n    // 幅(range)を取り込む（秒）\r\n    var rangePlusTag  =  document.getElementById(\"DetailRangePlus\"),\r\n        rangeMinusTag =  document.getElementById(\"DetailRangeMinus\"),\r\n        rangeUnitTag  =  document.getElementById(\"DetailRangeUnit\"), // #48\r\n        rangeUnit  = rangeUnitTag  ? +rangeUnitTag.value : TimeSeries.Tat.CYCLE, // #57\r\n        rangePlus  = rangePlusTag  ? +rangePlusTag.value  : 1,  // 幅\r\n        rangeMinus = rangeMinusTag ? +rangeMinusTag.value : 1;\r\n\r\n    // 既存Poltを検索する\r\n    var i = HJN.Plot.List.findIndex(function(p){\r\n                return(p.n === n && p.x === x) ||   // 完全一致\r\n                        (\"tpsPlot\" in p &&          // 詳細一致\r\n                        p.tpsPlot.n === n && p.tpsPlot.x === x); });\r\n    // Plotを設定する\r\n    var plot;\r\n    if(0 <= i){ // 既存Plotsにある時、選択状態とし、rangeを再設定する\r\n        plot = HJN.Plot.List[i];\r\n        plot.radio = true;\r\n        plot.rangePlus  = rangePlus; // 秒\r\n        plot.rangeMinus = rangeMinus;\r\n        plot.rangeUnit  = rangeUnit; // #48\r\n    }else{      // 既存に無いときPlotを追加する\r\n        // ETAT,STATのとき、TATが幅に含まれるよう、幅(range)を拡大する #30 #48 #57\r\n        if (n === HJN.ETAT.N){\r\n            rangeMinus = Math.max(rangeMinus, \r\n                    Math.floor(x / rangeUnit) - Math.floor((x - y) / rangeUnit)); // #48\r\n            document.getElementById(\"DetailRangeMinus\").value = rangeMinus; \r\n        }else if (n === HJN.STAT.N){\r\n            rangePlus = Math.max(rangePlus,\r\n                    Math.floor((x + y) / rangeUnit)) - Math.floor(x / rangeUnit) ; // #48\r\n            document.getElementById(\"DetailRangePlus\").value = rangePlus;\r\n        }\r\n        // Plotを追加する\r\n        plot = {label: label, ckBox:false,\r\n                 radio:true, n: n, x: x, y: y, \r\n                 rangePlus: rangePlus, rangeMinus: rangeMinus, rangeUnit: rangeUnit };\r\n        if (n === HJN.CTPS.N){          // CTPSのとき秒内最大CONCとして登録する\r\n            adjustPlotToY(HJN.chartD.conc, x, x + HJN.chart.cTpsUnit.unit, y, \r\n                    HJN.CONC.N, plot, rangePlus, rangeMinus, rangeUnit);\r\n        }else if (n === HJN.EMPS.N){    // EMPSのとき秒内最大ETATとして登録する\r\n            adjustPlotToY(HJN.chartD.eTat, x, x + TimeSeries.Tat.CYCLE, y, \r\n                    HJN.ETAT.N, plot, rangePlus, rangeMinus, rangeUnit);\r\n        }else { // CTPS,EMPS以外の時、選択Plotを追加する\r\n            HJN.Plot.List.push(plot);\r\n        }\r\n        // Plotsを時刻順にソートする\r\n        HJN.Plot.List.sort(\r\n                function(a, b) { return a.x - b.x; });\r\n        i = HJN.Plot.List.findIndex(\r\n                function(p){ return(p.n === n && p.x === x); });\r\n    }\r\n    Plot.Render();\r\n    return i;   // plots内のplotの位置\r\n\r\n    \r\n    // 内部関数：プロット位置を、指定秒から詳細グラフの最大時刻に変更する #19\r\n    function adjustPlotToY(conc, x, toX, y, n, plot, rangePlus, rangeMinus, rangeUnit){\r\n        if (!conc) return;\r\n        var maxTime = 0,\r\n            concMax = 0,\r\n            i = Util.binarySearch(x, conc, function(e){ return e.x; });\r\n        for (; i < conc.length && conc[i].x < toX; i++){    // #26\r\n            if (concMax <= conc[i].y){\r\n                    maxTime = conc[i].x;\r\n                    concMax = conc[i].y;\r\n            }\r\n        }\r\n        if (concMax === y) { // 補正すべき時刻が求まったときCONC,ETATを追加する #23\r\n            x = maxTime;\r\n            format = \"hh:mm:ss.ppp\";\r\n            label = Util.D2S(x, format, true) + \" \" + // #61\r\n                    HJN.seriesConfig[n].label.replace(\"%N\",Util.N2S(y));\r\n            HJN.Plot.List.push( {label: label, ckBox:false,\r\n                 radio:true, n: n, x: x, y: y, \r\n                 rangePlus: rangePlus , rangeMinus: rangeMinus, rangeUnit: rangeUnit,\r\n                 tpsPlot: plot} );  // 詳細plotには、tpsのplot情報も保持する\r\n        } else { // 補正すべき時刻がない場合、元のPlotを追加する\r\n            HJN.Plot.List.push(plot);\r\n        }\r\n\r\n    }\r\n};\r\n\r\n/**\r\n * Plot.Listを再表示する\r\n */\r\nPlot.Render = function() {\r\n    \"use strict\";\r\n    var divCheckedPlots =  document.getElementById(HJN.chartName + \"Plots\");\r\n    // 既存のアイコンを削除する\r\n    while (divCheckedPlots.firstChild){\r\n        divCheckedPlots.removeChild(divCheckedPlots.firstChild);\r\n    }\r\n    // 登録されているplots分のアイコンを追加する\r\n    HJN.Plot.List.forEach( function(e, i){\r\n        var div = document.createElement('div'),        // 要素の作成\r\n            radio = e.radio ? 'checked=\"checked\"' : '', // radio選択指定\r\n            ckBox = e.ckBox ? 'checked=\"checked\"' : ''; // check boxのチェック指定\r\n        div.className = \"hjnPlot\";\r\n        div.innerHTML =\r\n            '<input type=\"checkbox\" value=\"' + e.x + '\" id=\"checkBox_' + i + '\" ' + ckBox +\r\n                    ' title=\"delete\" onclick=\"HJN.Plot.CheckBox(' + i + ')\">' +\r\n            '<label for=\"checkBox_' + i + '\"></label>' +\r\n            '<input type=\"radio\" name=\"CheckedPlot\" id=\"SaveTime_' + i + '\" ' + radio +\r\n                    ' onclick=\"HJN.Plot.CheckRadio(' + i + ')\">' +\r\n            '<label for=\"SaveTime_' + i + '\">' + e.label + '</label>';\r\n        divCheckedPlots.appendChild(div);\r\n    } );\r\n};\r\n/**\r\n * PlotのChekBox変更時呼出用関数<br>\r\n * 指定Plotを削除し、PlotsとBaloonを再描画する\r\n * \r\n * @param {index}\r\n *            i 削除対象plotの、plots内位置\r\n */\r\nPlot.CheckBox = function(i) {\r\n    \"use strict\";\r\n    HJN.Plot.List.splice(i,1);      // checkされたplotを削除する\r\n    Plot.Render();          // Plotsを再描画する\r\n    Plot.ShowBalloon();     // グラフのBalloonを再描画する\r\n};\r\n/**\r\n * PlotのRadioボタン変更時呼出用関数<br>\r\n * radio選択時に下段グラフを更新する\r\n * \r\n * @param {index}\r\n *            i 選択されたplotの、plots内位置\r\n */\r\nPlot.CheckRadio = function(i) {\r\n    \"use strict\";\r\n    // Plot.Listにradioの状態を反映する\r\n    HJN.Plot.List.forEach(function(e){ e.radio = false; });\r\n    var plot = HJN.Plot.List[i];\r\n    plot.radio = true;\r\n    // グラフの日時で、詳細グラフを再作成する\r\n    HJN.init.SetDetailDateTime(plot.x); // 中心時刻に設定する\r\n    document.getElementById(\"DetailRangePlus\").value = plot.rangePlus;  // 幅を設定する\r\n    document.getElementById(\"DetailRangeMinus\").value = plot.rangeMinus;\r\n    document.getElementById(\"DetailRangeUnit\").value = plot.rangeUnit; // #48\r\n    var n = plot.tpsPlot ? plot.tpsPlot.n : plot.n; // #61\r\n    var tat = new TimeSeries.Tat(HJN.init.GetSliderRangedEtat()); // #75\r\n    HJN.chartD.setSeriesSet(tat); // #57\r\n    // 下段データを登録描画する\r\n    HJN.chartD.update(HJN.chartD.seriesSet, n); // #57\r\n    // Balloonを再描画する\r\n    Plot.ShowBalloon();\r\n};\r\n/**\r\n * Balloonを再描画する\r\n */\r\nPlot.ShowBalloon =function(){\r\n    \"use strict\";\r\n    HJN.chart.showBalloon();\r\n    HJN.chartD.showBalloon();\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tatLogDiver/tatLogDiver-Plot.js\n// module id = 38\n// module chunks = 0"],"sourceRoot":""}